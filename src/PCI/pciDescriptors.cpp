#include "pci.h"
#include <types.h>
#include <cstr.h>

namespace PCI {
	const char* DeviceClasses[] {
		"Unclassified",
		"Mass Storage Controller",
		"Network Controller",
		"Display Controller",
		"Multimedia Controller",
		"Memory Controller",
		"Bridge Device",
		"Simple Communication Controller",
		"Base System Peripheral",
		"Input Device Controller",
		"Docking Station",
		"Processor",
		"Serial Bus Controller",
		"Wireless Controller",
		"Intelligent Controller",
		"Satellite Communication Controller",
		"Encryption Controller",
		"Signal Processing Controller",
		"Processing Accelerator",
		"Non Essential Instrumentation"
	};

	const char* GetVendorName(uint16_t vendorID) {
		switch (vendorID) {
			case 0x1: return "SafeNet (wrong ID)";
			case 0x10: return "Allied Telesis, Inc (Wrong ID)";
			case 0x14: return "Loongson Technology LLC";
			case 0x1c: return "PEAK-System Technik GmbH";
			case 0x3d: return "Lockheed Martin-Marietta Corp";
			case 0x59: return "Tiger Jet Network Inc. (Wrong ID)";
			case 0x70: return "Hauppauge computer works Inc.";
			case 0x71: return "Nebula Electronics Ltd.";
			case 0x95: return "Silicon Image, Inc. (Wrong ID)";
			case 0xa7: return "Teles AG (Wrong ID)";
			case 0x100: return "nCipher Security";
			case 0x123: return "General Dynamics";
			case 0x128: return "Dell (wrong ID)";
			case 0x18a: return "LevelOne";
			case 0x1de: return "Oxide Computer Company";
			case 0x200: return "Dell (wrong ID)";
			case 0x21b: return "Compaq Computer Corporation";
			case 0x270: return "Hauppauge computer works Inc. (Wrong ID)";
			case 0x291: return "Davicom Semiconductor, Inc. (Wrong ID)";
			case 0x2ac: return "SpeedStream";
			case 0x2e0: return "XFX Pine Group Inc. (Wrong ID)";
			case 0x303: return "Hewlett-Packard Company (Wrong ID)";
			case 0x308: return "ZyXEL Communications Corporation (Wrong ID)";
			case 0x315: return "SK-Electronics Co., Ltd.";
			case 0x357: return "TTTech Computertechnik AG (Wrong ID)";
			case 0x432: return "SCM Microsystems, Inc.";
			case 0x497: return "Dell Inc. (wrong ID)";
			case 0x675: return "Dynalink";
			case 0x721: return "Sapphire, Inc.";
			case 0x731: return "Jingjia Microelectronics Co Ltd";
			case 0x777: return "Ubiquiti Networks, Inc.";
			case 0x795: return "Wired Inc.";
			case 0x7d1: return "D-Link System Inc";
			case 0x824: return "T1042 [Freescale]";
			case 0x925: return "VIA Technologies, Inc. (Wrong ID)";
			case 0xa89: return "BREA Technologies Inc";
			case 0xb0b: return "Rhino Equipment Corp.";
			case 0xe11: return "Compaq Computer Corporation";
			case 0xe55: return "HaSoTec GmbH";
			case 0xeac: return "SHF Communication Technologies AG";
			case 0xf62: return "Acrox Technologies Co., Ltd.";
			case 0x1000: return "Broadcom / LSI";
			case 0x1001: return "Kolter Electronic";
			case 0x1002: return "Advanced Micro Devices, Inc. [AMD/ATI]";
			case 0x1003: return "ULSI Systems";
			case 0x1004: return "VLSI Technology Inc";
			case 0x1005: return "Avance Logic Inc. [ALI]";
			case 0x1006: return "Reply Group";
			case 0x1007: return "NetFrame Systems Inc";
			case 0x1008: return "Epson";
			case 0x100a: return "Phoenix Technologies";
			case 0x100b: return "National Semiconductor Corporation";
			case 0x100c: return "Tseng Labs Inc";
			case 0x100d: return "AST Research Inc";
			case 0x100e: return "Weitek";
			case 0x1010: return "Video Logic, Ltd.";
			case 0x1011: return "Digital Equipment Corporation";
			case 0x1012: return "Micronics Computers Inc";
			case 0x1013: return "Cirrus Logic";
			case 0x1014: return "IBM";
			case 0x1015: return "LSI Logic Corp of Canada";
			case 0x1016: return "ICL Personal Systems";
			case 0x1017: return "SPEA Software AG";
			case 0x1018: return "Unisys Systems";
			case 0x1019: return "Elitegroup Computer Systems";
			case 0x101a: return "AT&T GIS (NCR)";
			case 0x101b: return "Vitesse Semiconductor";
			case 0x101c: return "Western Digital";
			case 0x101d: return "Maxim Integrated Products";
			case 0x101e: return "American Megatrends Inc.";
			case 0x101f: return "PictureTel";
			case 0x1020: return "Hitachi Computer Products";
			case 0x1021: return "OKI Electric Industry Co. Ltd.";
			case 0x1022: return "Advanced Micro Devices, Inc. [AMD]";
			case 0x1023: return "Trident Microsystems";
			case 0x1024: return "Zenith Data Systems";
			case 0x1025: return "Acer Incorporated [ALI]";
			case 0x1028: return "Dell";
			case 0x1029: return "Siemens Nixdorf IS";
			case 0x102a: return "LSI Logic";
			case 0x102b: return "Matrox Electronics Systems Ltd.";
			case 0x102c: return "Chips and Technologies";
			case 0x102d: return "Wyse Technology Inc.";
			case 0x102e: return "Olivetti Advanced Technology";
			case 0x102f: return "Toshiba America";
			case 0x1030: return "TMC Research";
			case 0x1031: return "Miro Computer Products AG";
			case 0x1032: return "Compaq";
			case 0x1033: return "NEC Corporation";
			case 0x1034: return "Framatome Connectors USA Inc.";
			case 0x1035: return "Comp. & Comm. Research Lab";
			case 0x1036: return "Future Domain Corp.";
			case 0x1037: return "Hitachi Micro Systems";
			case 0x1038: return "AMP, Inc";
			case 0x1039: return "Silicon Integrated Systems [SiS]";
			case 0x103a: return "Seiko Epson Corporation";
			case 0x103b: return "Tatung Corp. Of America";
			case 0x103c: return "Hewlett-Packard Company";
			case 0x103e: return "Solliday Engineering";
			case 0x103f: return "Synopsys/Logic Modeling Group";
			case 0x1040: return "Accelgraphics Inc.";
			case 0x1041: return "Computrend";
			case 0x1042: return "Micron";
			case 0x1043: return "ASUSTeK Computer Inc.";
			case 0x1044: return "Adaptec (formerly DPT)";
			case 0x1045: return "OPTi Inc.";
			case 0x1046: return "IPC Corporation, Ltd.";
			case 0x1047: return "Genoa Systems Corp";
			case 0x1048: return "Elsa AG";
			case 0x1049: return "Fountain Technologies, Inc.";
			case 0x104a: return "STMicroelectronics";
			case 0x104b: return "BusLogic";
			case 0x104c: return "Texas Instruments";
			case 0x104d: return "Sony Corporation";
			case 0x104e: return "Oak Technology, Inc";
			case 0x104f: return "Co-time Computer Ltd";
			case 0x1050: return "Winbond Electronics Corp";
			case 0x1051: return "Anigma, Inc.";
			case 0x1052: return "?Young Micro Systems";
			case 0x1053: return "Young Micro Systems";
			case 0x1054: return "Hitachi, Ltd";
			case 0x1055: return "Microchip Technology / SMSC";
			case 0x1056: return "ICL";
			case 0x1057: return "Motorola";
			case 0x1058: return "Electronics & Telecommunications RSH";
			case 0x1059: return "Kontron";
			case 0x105a: return "Promise Technology, Inc.";
			case 0x105b: return "Foxconn International, Inc.";
			case 0x105c: return "Wipro Infotech Limited";
			case 0x105d: return "Number 9 Computer Company";
			case 0x105e: return "Vtech Computers Ltd";
			case 0x105f: return "Infotronic America Inc";
			case 0x1060: return "United Microelectronics [UMC]";
			case 0x1061: return "I.I.T.";
			case 0x1062: return "Maspar Computer Corp";
			case 0x1063: return "Ocean Office Automation";
			case 0x1064: return "Alcatel";
			case 0x1065: return "Texas Microsystems";
			case 0x1066: return "PicoPower Technology";
			case 0x1067: return "Mitsubishi Electric";
			case 0x1068: return "Diversified Technology";
			case 0x1069: return "Mylex Corporation";
			case 0x106a: return "Aten Research Inc";
			case 0x106b: return "Apple Inc.";
			case 0x106c: return "Hynix Semiconductor";
			case 0x106d: return "Sequent Computer Systems";
			case 0x106e: return "DFI, Inc";
			case 0x106f: return "City Gate Development Ltd";
			case 0x1070: return "Daewoo Telecom Ltd";
			case 0x1071: return "Mitac";
			case 0x1072: return "GIT Co Ltd";
			case 0x1073: return "Yamaha Corporation";
			case 0x1074: return "NexGen Microsystems";
			case 0x1075: return "Advanced Integrations Research";
			case 0x1076: return "Chaintech Computer Co. Ltd";
			case 0x1077: return "QLogic Corp.";
			case 0x1078: return "Cyrix Corporation";
			case 0x1079: return "I-Bus";
			case 0x107a: return "NetWorth";
			case 0x107b: return "Gateway, Inc.";
			case 0x107c: return "LG Electronics [Lucky Goldstar Co. Ltd]";
			case 0x107d: return "LeadTek Research Inc.";
			case 0x107e: return "Interphase Corporation";
			case 0x107f: return "Data Technology Corporation";
			case 0x1080: return "Contaq Microsystems";
			case 0x1081: return "Supermac Technology";
			case 0x1082: return "EFA Corporation of America";
			case 0x1083: return "Forex Computer Corporation";
			case 0x1084: return "Parador";
			case 0x1086: return "J. Bond Computer Systems";
			case 0x1087: return "Cache Computer";
			case 0x1088: return "Microcomputer Systems (M) Son";
			case 0x1089: return "Data General Corporation";
			case 0x108a: return "SBS Technologies";
			case 0x108c: return "Oakleigh Systems Inc.";
			case 0x108d: return "Olicom";
			case 0x108e: return "Oracle/SUN";
			case 0x108f: return "Systemsoft";
			case 0x1090: return "Compro Computer Services, Inc.";
			case 0x1091: return "Intergraph Corporation";
			case 0x1092: return "Diamond Multimedia Systems";
			case 0x1093: return "National Instruments";
			case 0x1094: return "First International Computers [FIC]";
			case 0x1095: return "Silicon Image, Inc.";
			case 0x1096: return "Alacron";
			case 0x1097: return "Appian Technology";
			case 0x1098: return "Quantum Designs (H.K.) Ltd";
			case 0x1099: return "Samsung Electronics Co., Ltd";
			case 0x109a: return "Packard Bell";
			case 0x109b: return "Gemlight Computer Ltd.";
			case 0x109c: return "Megachips Corporation";
			case 0x109d: return "Zida Technologies Ltd.";
			case 0x109e: return "Brooktree Corporation";
			case 0x109f: return "Trigem Computer Inc.";
			case 0x10a0: return "Meidensha Corporation";
			case 0x10a1: return "Juko Electronics Ind. Co. Ltd";
			case 0x10a2: return "Quantum Corporation";
			case 0x10a3: return "Everex Systems Inc";
			case 0x10a4: return "Globe Manufacturing Sales";
			case 0x10a5: return "Smart Link Ltd.";
			case 0x10a6: return "Informtech Industrial Ltd.";
			case 0x10a7: return "Benchmarq Microelectronics";
			case 0x10a8: return "Sierra Semiconductor";
			case 0x10a9: return "Silicon Graphics Intl. Corp.";
			case 0x10aa: return "ACC Microelectronics";
			case 0x10ab: return "Digicom";
			case 0x10ac: return "Honeywell IAC";
			case 0x10ad: return "Symphony Labs";
			case 0x10ae: return "Cornerstone Technology";
			case 0x10af: return "Micro Computer Systems Inc";
			case 0x10b0: return "CardExpert Technology";
			case 0x10b1: return "Cabletron Systems Inc";
			case 0x10b2: return "Raytheon Company";
			case 0x10b3: return "Databook Inc";
			case 0x10b4: return "STB Systems Inc";
			case 0x10b5: return "PLX Technology, Inc.";
			case 0x10b6: return "Madge Networks";
			case 0x10b7: return "3Com Corporation";
			case 0x10b8: return "Standard Microsystems Corp [SMC]";
			case 0x10b9: return "ULi Electronics Inc.";
			case 0x10ba: return "Mitsubishi Electric Corp.";
			case 0x10bb: return "Dapha Electronics Corporation";
			case 0x10bc: return "Advanced Logic Research";
			case 0x10bd: return "Surecom Technology";
			case 0x10be: return "Tseng Labs International Co.";
			case 0x10bf: return "Most Inc";
			case 0x10c0: return "Boca Research Inc.";
			case 0x10c1: return "ICM Co., Ltd.";
			case 0x10c2: return "Auspex Systems Inc.";
			case 0x10c3: return "Samsung Semiconductors, Inc.";
			case 0x10c4: return "Award Software International Inc.";
			case 0x10c5: return "Xerox Corporation";
			case 0x10c6: return "Rambus Inc.";
			case 0x10c7: return "Media Vision";
			case 0x10c8: return "Neomagic Corporation";
			case 0x10c9: return "Dataexpert Corporation";
			case 0x10ca: return "Fujitsu Microelectr., Inc.";
			case 0x10cb: return "Omron Corporation";
			case 0x10cc: return "Mai Logic Incorporated";
			case 0x10cd: return "Advanced System Products, Inc";
			case 0x10ce: return "Radius";
			case 0x10cf: return "Fujitsu Limited.";
			case 0x10d1: return "FuturePlus Systems Corp.";
			case 0x10d2: return "Molex Incorporated";
			case 0x10d3: return "Jabil Circuit Inc";
			case 0x10d4: return "Hualon Microelectronics";
			case 0x10d5: return "Autologic Inc.";
			case 0x10d6: return "Cetia";
			case 0x10d7: return "BCM Advanced Research";
			case 0x10d8: return "Advanced Peripherals Labs";
			case 0x10d9: return "Macronix, Inc. [MXIC]";
			case 0x10da: return "Compaq IPG-Austin";
			case 0x10db: return "Rohm LSI Systems, Inc.";
			case 0x10dc: return "CERN/ECP/EDU";
			case 0x10dd: return "Evans & Sutherland";
			case 0x10de: return "NVIDIA Corporation";
			case 0x10df: return "Emulex Corporation";
			case 0x10e0: return "Integrated Micro Solutions Inc.";
			case 0x10e1: return "Tekram Technology Co.,Ltd.";
			case 0x10e2: return "Aptix Corporation";
			case 0x10e3: return "Tundra Semiconductor Corp.";
			case 0x10e4: return "Tandem Computers";
			case 0x10e5: return "Micro Industries Corporation";
			case 0x10e6: return "Gainbery Computer Products Inc.";
			case 0x10e7: return "Vadem";
			case 0x10e8: return "Applied Micro Circuits Corp.";
			case 0x10e9: return "Alps Electric Co., Ltd.";
			case 0x10ea: return "Integraphics";
			case 0x10eb: return "Artists Graphics";
			case 0x10ec: return "Realtek Semiconductor Co., Ltd.";
			case 0x10ed: return "Ascii Corporation";
			case 0x10ee: return "Xilinx Corporation";
			case 0x10ef: return "Racore Computer Products, Inc.";
			case 0x10f0: return "Peritek Corporation";
			case 0x10f1: return "Tyan Computer";
			case 0x10f2: return "Achme Computer, Inc.";
			case 0x10f3: return "Alaris, Inc.";
			case 0x10f4: return "S-MOS Systems, Inc.";
			case 0x10f5: return "NKK Corporation";
			case 0x10f6: return "Creative Electronic Systems SA";
			case 0x10f7: return "Matsushita Electric Industrial Co., Ltd.";
			case 0x10f8: return "Altos India Ltd";
			case 0x10f9: return "PC Direct";
			case 0x10fa: return "Truevision";
			case 0x10fb: return "Thesys Gesellschaft fuer Mikroelektronik mbH";
			case 0x10fc: return "I-O Data Device, Inc.";
			case 0x10fd: return "Soyo Computer, Inc";
			case 0x10fe: return "Fast Multimedia AG";
			case 0x10ff: return "NCube";
			case 0x1100: return "Jazz Multimedia";
			case 0x1101: return "Initio Corporation";
			case 0x1102: return "Creative Labs";
			case 0x1103: return "HighPoint Technologies, Inc.";
			case 0x1104: return "RasterOps Corp.";
			case 0x1105: return "Sigma Designs, Inc.";
			case 0x1106: return "VIA Technologies, Inc.";
			case 0x1107: return "Stratus Computers";
			case 0x1108: return "Proteon, Inc.";
			case 0x1109: return "Cogent Data Technologies, Inc.";
			case 0x110a: return "Siemens AG";
			case 0x110b: return "Chromatic Research Inc.";
			case 0x110c: return "Mini-Max Technology, Inc.";
			case 0x110d: return "Znyx Advanced Systems";
			case 0x110e: return "CPU Technology";
			case 0x110f: return "Ross Technology";
			case 0x1110: return "Powerhouse Systems";
			case 0x1111: return "Santa Cruz Operation";
			case 0x1112: return "Osicom Technologies Inc";
			case 0x1113: return "Accton Technology Corporation";
			case 0x1114: return "Atmel Corporation";
			case 0x1115: return "3D Labs";
			case 0x1116: return "Data Translation";
			case 0x1117: return "Datacube, Inc";
			case 0x1118: return "Berg Electronics";
			case 0x1119: return "ICP Vortex Computersysteme GmbH";
			case 0x111a: return "Efficient Networks, Inc";
			case 0x111b: return "Teledyne Electronic Systems";
			case 0x111c: return "Tricord Systems Inc.";
			case 0x111d: return "Microsemi / PMC / IDT";
			case 0x111e: return "Eldec";
			case 0x111f: return "Precision Digital Images";
			case 0x1120: return "Dell EMC";
			case 0x1121: return "Zilog";
			case 0x1122: return "Multi-tech Systems, Inc.";
			case 0x1123: return "Excellent Design, Inc.";
			case 0x1124: return "Leutron Vision AG";
			case 0x1125: return "Eurocore";
			case 0x1126: return "Vigra";
			case 0x1127: return "FORE Systems Inc";
			case 0x1129: return "Firmworks";
			case 0x112a: return "Hermes Electronics Company, Ltd.";
			case 0x112b: return "Heidelberger Druckmaschinen AGHeidelberger Druckmaschinen AG";
			case 0x112c: return "Zenith Data Systems";
			case 0x112d: return "Ravicad";
			case 0x112e: return "Infomedia Microelectronics Inc.";
			case 0x112f: return "Dalsa Inc.";
			case 0x1130: return "Computervision";
			case 0x1131: return "Philips Semiconductors";
			case 0x1132: return "Mitel Corp.";
			case 0x1133: return "Dialogic Corporation";
			case 0x1134: return "Mercury Computer Systems";
			case 0x1135: return "FUJIFILM Business Innovation Corp.";
			case 0x1136: return "Momentum Data Systems";
			case 0x1137: return "Cisco Systems Inc";
			case 0x1138: return "Ziatech Corporation";
			case 0x1139: return "Dynamic Pictures, Inc";
			case 0x113a: return "FWB Inc";
			case 0x113b: return "Network Computing Devices";
			case 0x113c: return "Cyclone Microsystems, Inc.";
			case 0x113d: return "Leading Edge Products Inc";
			case 0x113e: return "Sanyo Electric Co - Computer Engineering Dept";
			case 0x113f: return "Equinox Systems, Inc.";
			case 0x1140: return "Intervoice Inc";
			case 0x1141: return "Crest Microsystem Inc";
			case 0x1142: return "Alliance Semiconductor Corporation";
			case 0x1143: return "NetPower, Inc";
			case 0x1144: return "Cincinnati Milacron";
			case 0x1145: return "Workbit Corporation";
			case 0x1146: return "Force Computers";
			case 0x1147: return "Interface Corp";
			case 0x1148: return "SysKonnect";
			case 0x1149: return "Win System Corporation";
			case 0x114a: return "VMIC";
			case 0x114b: return "Canopus Co., Ltd";
			case 0x114c: return "Annabooks";
			case 0x114d: return "IC Corporation";
			case 0x114e: return "Nikon Systems Inc";
			case 0x114f: return "Digi International";
			case 0x1150: return "Thinking Machines Corp";
			case 0x1151: return "JAE Electronics Inc.";
			case 0x1152: return "Megatek";
			case 0x1153: return "Land Win Electronic Corp";
			case 0x1154: return "Melco Inc";
			case 0x1155: return "Pine Technology Ltd";
			case 0x1156: return "Periscope Engineering";
			case 0x1157: return "Avsys Corporation";
			case 0x1158: return "Voarx R & D Inc";
			case 0x1159: return "MuTech Corporation";
			case 0x115a: return "Harlequin Ltd";
			case 0x115b: return "Parallax Graphics";
			case 0x115c: return "Photron Ltd.";
			case 0x115d: return "Xircom";
			case 0x115e: return "Peer Protocols Inc";
			case 0x115f: return "Maxtor Corporation";
			case 0x1160: return "Megasoft Inc";
			case 0x1161: return "PFU Limited";
			case 0x1162: return "OA Laboratory Co Ltd";
			case 0x1163: return "Rendition";
			case 0x1164: return "Advanced Peripherals Technologies";
			case 0x1165: return "Imagraph Corporation";
			case 0x1166: return "Broadcom";
			case 0x1167: return "Mutoh Industries Inc";
			case 0x1168: return "Thine Electronics Inc";
			case 0x1169: return "Centre for Development of Advanced Computing";
			case 0x116a: return "Luminex Software, Inc.";
			case 0x116b: return "Connectware Inc";
			case 0x116c: return "Intelligent Resources Integrated Systems";
			case 0x116d: return "Martin-Marietta";
			case 0x116e: return "Electronics for Imaging";
			case 0x116f: return "Workstation Technology";
			case 0x1170: return "Inventec Corporation";
			case 0x1171: return "Loughborough Sound Images Plc";
			case 0x1172: return "Altera Corporation";
			case 0x1173: return "Adobe Systems, Inc";
			case 0x1174: return "Bridgeport Machines";
			case 0x1175: return "Mitron Computer Inc.";
			case 0x1176: return "SBE Incorporated";
			case 0x1177: return "Silicon Engineering";
			case 0x1178: return "Alfa, Inc.";
			case 0x1179: return "Toshiba Corporation";
			case 0x117a: return "A-Trend Technology";
			case 0x117b: return "L G Electronics, Inc.";
			case 0x117c: return "ATTO Technology, Inc.";
			case 0x117d: return "Becton & Dickinson";
			case 0x117e: return "T/R Systems";
			case 0x117f: return "Integrated Circuit Systems";
			case 0x1180: return "Ricoh Co Ltd";
			case 0x1181: return "Telmatics International";
			case 0x1183: return "Fujikura Ltd";
			case 0x1184: return "Forks Inc";
			case 0x1185: return "Dataworld International Ltd";
			case 0x1186: return "D-Link System Inc";
			case 0x1187: return "Advanced Technology Laboratories, Inc.";
			case 0x1188: return "Shima Seiki Manufacturing Ltd.";
			case 0x1189: return "Matsushita Electronics Co Ltd";
			case 0x118a: return "Hilevel Technology";
			case 0x118b: return "Hypertec Pty Limited";
			case 0x118c: return "Corollary, Inc";
			case 0x118d: return "BitFlow Inc";
			case 0x118e: return "Hermstedt GmbH";
			case 0x118f: return "Green Logic";
			case 0x1190: return "Tripace";
			case 0x1191: return "Artop Electronic Corp";
			case 0x1192: return "Densan Company Ltd";
			case 0x1193: return "Zeitnet Inc.";
			case 0x1194: return "Toucan Technology";
			case 0x1195: return "Ratoc System Inc";
			case 0x1196: return "Hytec Electronics Ltd";
			case 0x1197: return "Gage Applied Sciences, Inc.";
			case 0x1198: return "Lambda Systems Inc";
			case 0x1199: return "Attachmate Corporation";
			case 0x119a: return "Mind Share, Inc.";
			case 0x119b: return "Omega Micro Inc.";
			case 0x119c: return "Information Technology Inst.";
			case 0x119d: return "Bug, Inc. Sapporo Japan";
			case 0x119e: return "Fujitsu Microelectronics Ltd.";
			case 0x119f: return "Bull HN Information Systems";
			case 0x11a0: return "Convex Computer Corporation";
			case 0x11a1: return "Hamamatsu Photonics K.K.";
			case 0x11a2: return "Sierra Research and Technology";
			case 0x11a3: return "Deuretzbacher GmbH & Co. Eng. KG";
			case 0x11a4: return "Barco Graphics NV";
			case 0x11a5: return "Microunity Systems Eng. Inc";
			case 0x11a6: return "Pure Data Ltd.";
			case 0x11a7: return "Power Computing Corp.";
			case 0x11a8: return "Systech Corp.";
			case 0x11a9: return "InnoSys Inc.";
			case 0x11aa: return "Actel";
			case 0x11ab: return "Marvell Technology Group Ltd.";
			case 0x11ac: return "Canon Information Systems Research Aust.";
			case 0x11ad: return "Lite-On Communications Inc";
			case 0x11ae: return "Aztech System Ltd";
			case 0x11af: return "Avid Technology Inc.";
			case 0x11b0: return "V3 Semiconductor Inc.";
			case 0x11b1: return "Apricot Computers";
			case 0x11b2: return "Eastman Kodak";
			case 0x11b3: return "Barr Systems Inc.";
			case 0x11b4: return "Leitch Technology International";
			case 0x11b5: return "Radstone Technology Plc";
			case 0x11b6: return "United Video Corp";
			case 0x11b7: return "Motorola";
			case 0x11b8: return "XPoint Technologies, Inc";
			case 0x11b9: return "Pathlight Technology Inc.";
			case 0x11ba: return "Videotron Corp";
			case 0x11bb: return "Pyramid Technology";
			case 0x11bc: return "Network Peripherals Inc";
			case 0x11bd: return "Pinnacle Systems Inc.";
			case 0x11be: return "International Microcircuits Inc";
			case 0x11bf: return "Astrodesign, Inc.";
			case 0x11c0: return "Hewlett Packard";
			case 0x11c1: return "LSI Corporation";
			case 0x11c2: return "Sand Microelectronics";
			case 0x11c3: return "NEC Corporation";
			case 0x11c4: return "Document Technologies, Inc";
			case 0x11c5: return "Shiva Corporation";
			case 0x11c6: return "Dainippon Screen Mfg. Co. Ltd";
			case 0x11c7: return "D.C.M. Data Systems";
			case 0x11c8: return "Dolphin Interconnect Solutions AS";
			case 0x11c9: return "Magma";
			case 0x11ca: return "LSI Systems, Inc";
			case 0x11cb: return "Specialix Research Ltd.";
			case 0x11cc: return "Michels & Kleberhoff Computer GmbH";
			case 0x11cd: return "HAL Computer Systems, Inc.";
			case 0x11ce: return "Netaccess";
			case 0x11cf: return "Pioneer Electronic Corporation";
			case 0x11d0: return "Lockheed Martin Federal Systems-Manassas";
			case 0x11d1: return "Auravision";
			case 0x11d2: return "Intercom Inc.";
			case 0x11d3: return "Trancell Systems Inc";
			case 0x11d4: return "Analog Devices";
			case 0x11d5: return "Ikon Corporation";
			case 0x11d6: return "Tekelec Telecom";
			case 0x11d7: return "Trenton Technology, Inc.";
			case 0x11d8: return "Image Technologies Development";
			case 0x11d9: return "TEC Corporation";
			case 0x11da: return "Novell";
			case 0x11db: return "Sega Enterprises Ltd";
			case 0x11dc: return "Questra Corporation";
			case 0x11dd: return "Crosfield Electronics Limited";
			case 0x11de: return "Zoran Corporation";
			case 0x11df: return "New Wave PDG";
			case 0x11e0: return "Cray Communications A/S";
			case 0x11e1: return "GEC Plessey Semi Inc.";
			case 0x11e2: return "Samsung Information Systems America";
			case 0x11e3: return "Quicklogic Corporation";
			case 0x11e4: return "Second Wave Inc";
			case 0x11e5: return "IIX Consulting";
			case 0x11e6: return "Mitsui-Zosen System Research";
			case 0x11e7: return "Toshiba America, Elec. Company";
			case 0x11e8: return "Digital Processing Systems Inc.";
			case 0x11e9: return "Highwater Designs Ltd.";
			case 0x11ea: return "Elsag Bailey";
			case 0x11eb: return "Formation Inc.";
			case 0x11ec: return "Coreco Inc";
			case 0x11ed: return "Mediamatics";
			case 0x11ee: return "Dome Imaging Systems Inc";
			case 0x11ef: return "Nicolet Technologies B.V.";
			case 0x11f0: return "Compu-Shack";
			case 0x11f1: return "Symbios Logic Inc";
			case 0x11f2: return "Picture Tel Japan K.K.";
			case 0x11f3: return "Keithley Metrabyte";
			case 0x11f4: return "Kinetic Systems Corporation";
			case 0x11f5: return "Computing Devices International";
			case 0x11f6: return "Compex";
			case 0x11f7: return "Scientific Atlanta";
			case 0x11f8: return "PMC-Sierra Inc.";
			case 0x11f9: return "I-Cube Inc";
			case 0x11fa: return "Kasan Electronics Company, Ltd.";
			case 0x11fb: return "Datel Inc";
			case 0x11fc: return "Silicon Magic";
			case 0x11fd: return "High Street Consultants";
			case 0x11fe: return "Pepperl+Fuchs";
			case 0x11ff: return "Scion Corporation";
			case 0x1200: return "CSS Corporation";
			case 0x1201: return "Vista Controls Corp";
			case 0x1202: return "Network General Corp.";
			case 0x1203: return "Bayer Corporation, Agfa Division";
			case 0x1204: return "Lattice Semiconductor Corporation";
			case 0x1205: return "Array Corporation";
			case 0x1206: return "Amdahl Corporation";
			case 0x1208: return "Parsytec GmbH";
			case 0x1209: return "SCI Systems Inc";
			case 0x120a: return "Synaptel";
			case 0x120b: return "Adaptive Solutions";
			case 0x120c: return "Technical Corp.";
			case 0x120d: return "Compression Labs, Inc.";
			case 0x120e: return "Cyclades Corporation";
			case 0x120f: return "Essential Communications";
			case 0x1210: return "Hyperparallel Technologies";
			case 0x1211: return "Braintech Inc";
			case 0x1213: return "Applied Intelligent Systems, Inc.";
			case 0x1214: return "Performance Technologies, Inc.";
			case 0x1215: return "Interware Co., Ltd";
			case 0x1216: return "Purup Prepress A/S";
			case 0x1217: return "O2 Micro, Inc.";
			case 0x1218: return "Hybricon Corp.";
			case 0x1219: return "First Virtual Corporation";
			case 0x121a: return "3Dfx Interactive, Inc.";
			case 0x121b: return "Advanced Telecommunications Modules";
			case 0x121c: return "Nippon Texaco., Ltd";
			case 0x121d: return "LiPPERT ADLINK Technology GmbH";
			case 0x121e: return "CSPI";
			case 0x121f: return "Arcus Technology, Inc.";
			case 0x1220: return "Ariel Corporation";
			case 0x1221: return "Contec Co., Ltd";
			case 0x1222: return "Ancor Communications, Inc.";
			case 0x1223: return "Artesyn Communication Products";
			case 0x1224: return "Interactive Images";
			case 0x1225: return "Power I/O, Inc.";
			case 0x1227: return "EIZO Rugged Solutions";
			case 0x1228: return "Norsk Elektro Optikk A/S";
			case 0x1229: return "Data Kinesis Inc.";
			case 0x122a: return "Integrated Telecom";
			case 0x122b: return "LG Industrial Systems Co., Ltd";
			case 0x122c: return "Sican GmbH";
			case 0x122d: return "Aztech System Ltd";
			case 0x122e: return "Xyratex";
			case 0x122f: return "Andrew Corporation";
			case 0x1230: return "Fishcamp Engineering";
			case 0x1231: return "Woodward McCoach, Inc.";
			case 0x1232: return "GPT Limited";
			case 0x1233: return "Bus-Tech, Inc.";
			case 0x1235: return "SMART Modular Technologies";
			case 0x1236: return "Sigma Designs Corporation";
			case 0x1237: return "Alta Technology Corporation";
			case 0x1238: return "Adtran";
			case 0x1239: return "3DO Company";
			case 0x123a: return "Visicom Laboratories, Inc.";
			case 0x123b: return "Seeq Technology, Inc.";
			case 0x123c: return "Century Systems, Inc.";
			case 0x123d: return "Engineering Design Team, Inc.";
			case 0x123e: return "Simutech, Inc.";
			case 0x123f: return "LSI Logic";
			case 0x1240: return "Marathon Technologies Corp.";
			case 0x1241: return "DSC Communications";
			case 0x1242: return "JNI Corporation";
			case 0x1243: return "Delphax";
			case 0x1244: return "AVM GmbH";
			case 0x1245: return "A.P.D., S.A.";
			case 0x1246: return "Dipix Technologies, Inc.";
			case 0x1247: return "Xylon Research, Inc.";
			case 0x1248: return "Central Data Corporation";
			case 0x1249: return "Samsung Electronics Co., Ltd.";
			case 0x124a: return "AEG Electrocom GmbH";
			case 0x124b: return "SBS/Greenspring Modular I/O";
			case 0x124c: return "Solitron Technologies, Inc.";
			case 0x124d: return "Stallion Technologies, Inc.";
			case 0x124e: return "Cylink";
			case 0x124f: return "Infortrend Technology, Inc.";
			case 0x1250: return "Hitachi Microcomputer System Ltd";
			case 0x1251: return "VLSI Solutions Oy";
			case 0x1253: return "Guzik Technical Enterprises";
			case 0x1254: return "Linear Systems Ltd.";
			case 0x1255: return "Optibase Ltd";
			case 0x1256: return "Perceptive Solutions, Inc.";
			case 0x1257: return "Vertex Networks, Inc.";
			case 0x1258: return "Gilbarco, Inc.";
			case 0x1259: return "Allied Telesis";
			case 0x125a: return "ABB Power Systems";
			case 0x125b: return "Asix Electronics Corporation";
			case 0x125c: return "Aurora Technologies, Inc.";
			case 0x125d: return "ESS Technology";
			case 0x125e: return "Specialvideo Engineering SRL";
			case 0x125f: return "Concurrent Technologies, Inc.";
			case 0x1260: return "Intersil Corporation";
			case 0x1261: return "Matsushita-Kotobuki Electronics Industries, Ltd.";
			case 0x1262: return "ES Computer Company, Ltd.";
			case 0x1263: return "Sonic Solutions";
			case 0x1264: return "Aval Nagasaki Corporation";
			case 0x1265: return "Casio Computer Co., Ltd.";
			case 0x1266: return "Microdyne Corporation";
			case 0x1267: return "S. A. Telecommunications";
			case 0x1268: return "Tektronix";
			case 0x1269: return "Thomson-CSF/TTM";
			case 0x126a: return "Lexmark International, Inc.";
			case 0x126b: return "Adax, Inc.";
			case 0x126c: return "Northern Telecom";
			case 0x126d: return "Splash Technology, Inc.";
			case 0x126e: return "Sumitomo Metal Industries, Ltd.";
			case 0x126f: return "Silicon Motion, Inc.";
			case 0x1270: return "Olympus Optical Co., Ltd.";
			case 0x1271: return "GW Instruments";
			case 0x1272: return "Telematics International";
			case 0x1273: return "Hughes Network Systems";
			case 0x1274: return "Ensoniq";
			case 0x1275: return "Network Appliance Corporation";
			case 0x1276: return "Switched Network Technologies, Inc.";
			case 0x1277: return "Comstream";
			case 0x1278: return "Transtech Parallel Systems Ltd.";
			case 0x1279: return "Transmeta Corporation";
			case 0x127a: return "Rockwell International";
			case 0x127b: return "Pixera Corporation";
			case 0x127c: return "Crosspoint Solutions, Inc.";
			case 0x127d: return "Vela Research";
			case 0x127e: return "Winnov, L.P.";
			case 0x127f: return "Fujifilm";
			case 0x1280: return "Photoscript Group Ltd.";
			case 0x1281: return "Yokogawa Electric Corporation";
			case 0x1282: return "Davicom Semiconductor, Inc.";
			case 0x1283: return "Integrated Technology Express, Inc.";
			case 0x1284: return "Sahara Networks, Inc.";
			case 0x1285: return "Platform Technologies, Inc.";
			case 0x1286: return "Mazet GmbH";
			case 0x1287: return "M-Pact, Inc.";
			case 0x1288: return "Timestep Corporation";
			case 0x1289: return "AVC Technology, Inc.";
			case 0x128a: return "Asante Technologies, Inc.";
			case 0x128b: return "Transwitch Corporation";
			case 0x128c: return "Retix Corporation";
			case 0x128d: return "G2 Networks, Inc.";
			case 0x128e: return "Hoontech Corporation/Samho Multi Tech Ltd.";
			case 0x128f: return "Tateno Dennou, Inc.";
			case 0x1290: return "Sord Computer Corporation";
			case 0x1291: return "NCS Computer Italia";
			case 0x1292: return "Tritech Microelectronics Inc";
			case 0x1293: return "Media Reality Technology";
			case 0x1294: return "Rhetorex, Inc.";
			case 0x1295: return "Imagenation Corporation";
			case 0x1296: return "Kofax Image Products";
			case 0x1297: return "Holco Enterprise Co, Ltd/Shuttle Computer";
			case 0x1298: return "Spellcaster Telecommunications Inc.";
			case 0x1299: return "Knowledge Technology Lab.";
			case 0x129a: return "VMetro, inc.";
			case 0x129b: return "Image Access";
			case 0x129c: return "Jaycor";
			case 0x129d: return "Compcore Multimedia, Inc.";
			case 0x129e: return "Victor Company of Japan, Ltd.";
			case 0x129f: return "OEC Medical Systems, Inc.";
			case 0x12a0: return "Allen-Bradley Company";
			case 0x12a1: return "Simpact Associates, Inc.";
			case 0x12a2: return "Newgen Systems Corporation";
			case 0x12a3: return "Lucent Technologies";
			case 0x12a4: return "NTT Electronics Corporation";
			case 0x12a5: return "Vision Dynamics Ltd.";
			case 0x12a6: return "Scalable Networks, Inc.";
			case 0x12a7: return "AMO GmbH";
			case 0x12a8: return "News Datacom";
			case 0x12a9: return "Xiotech Corporation";
			case 0x12aa: return "SDL Communications, Inc.";
			case 0x12ab: return "YUAN High-Tech Development Co., Ltd.";
			case 0x12ac: return "Measurex Corporation";
			case 0x12ad: return "Multidata GmbH";
			case 0x12ae: return "Alteon Networks Inc.";
			case 0x12af: return "TDK USA Corp";
			case 0x12b0: return "Jorge Scientific Corp";
			case 0x12b1: return "GammaLink";
			case 0x12b2: return "General Signal Networks";
			case 0x12b3: return "Inter-Face Co Ltd";
			case 0x12b4: return "FutureTel Inc";
			case 0x12b5: return "Granite Systems Inc.";
			case 0x12b6: return "Natural Microsystems";
			case 0x12b7: return "Cognex Corporation";
			case 0x12b8: return "Korg";
			case 0x12b9: return "3Com Corp, Modem Division";
			case 0x12ba: return "BittWare, Inc.";
			case 0x12bb: return "Nippon Unisoft Corporation";
			case 0x12bc: return "Array Microsystems";
			case 0x12bd: return "Computerm Corp.";
			case 0x12be: return "Anchor Chips Inc.";
			case 0x12bf: return "Fujifilm Microdevices";
			case 0x12c0: return "Infimed";
			case 0x12c1: return "GMM Research Corp";
			case 0x12c2: return "Mentec Limited";
			case 0x12c3: return "Holtek Microelectronics Inc";
			case 0x12c4: return "Connect Tech Inc";
			case 0x12c5: return "Picture Elements Incorporated";
			case 0x12c6: return "Mitani Corporation";
			case 0x12c7: return "Dialogic Corp";
			case 0x12c8: return "G Force Co, Ltd";
			case 0x12c9: return "Gigi Operations";
			case 0x12ca: return "Integrated Computing Engines";
			case 0x12cb: return "Antex Electronics Corporation";
			case 0x12cc: return "Pluto Technologies International";
			case 0x12cd: return "Aims Lab";
			case 0x12ce: return "Netspeed Inc.";
			case 0x12cf: return "Prophet Systems, Inc.";
			case 0x12d0: return "GDE Systems, Inc.";
			case 0x12d1: return "PSITech";
			case 0x12d2: return "NVidia / SGS Thomson (Joint Venture)";
			case 0x12d3: return "Vingmed Sound A/S";
			case 0x12d4: return "Ulticom (Formerly DGM&S)";
			case 0x12d5: return "Equator Technologies Inc";
			case 0x12d6: return "Analogic Corp";
			case 0x12d7: return "Biotronic SRL";
			case 0x12d8: return "Pericom Semiconductor";
			case 0x12d9: return "Aculab PLC";
			case 0x12da: return "True Time Inc.";
			case 0x12db: return "Annapolis Micro Systems, Inc";
			case 0x12dc: return "Symicron Computer Communication Ltd.";
			case 0x12dd: return "Management Graphics";
			case 0x12de: return "Rainbow Technologies";
			case 0x12df: return "SBS Technologies Inc";
			case 0x12e0: return "Chase Research";
			case 0x12e1: return "Nintendo Co, Ltd";
			case 0x12e2: return "Datum Inc. Bancomm-Timing Division";
			case 0x12e3: return "Imation Corp - Medical Imaging Systems";
			case 0x12e4: return "Brooktrout Technology Inc";
			case 0x12e5: return "Apex Semiconductor Inc";
			case 0x12e6: return "Cirel Systems";
			case 0x12e7: return "Sunsgroup Corporation";
			case 0x12e8: return "Crisc Corp";
			case 0x12e9: return "GE Spacenet";
			case 0x12ea: return "Zuken";
			case 0x12eb: return "Aureal Semiconductor";
			case 0x12ec: return "3A International, Inc.";
			case 0x12ed: return "Optivision Inc.";
			case 0x12ee: return "Orange Micro";
			case 0x12ef: return "Vienna Systems";
			case 0x12f0: return "Pentek";
			case 0x12f1: return "Sorenson Vision Inc";
			case 0x12f2: return "Gammagraphx, Inc.";
			case 0x12f3: return "Radstone Technology";
			case 0x12f4: return "Megatel";
			case 0x12f5: return "Forks";
			case 0x12f6: return "Dawson France";
			case 0x12f7: return "Cognex";
			case 0x12f8: return "Electronic Design GmbH";
			case 0x12f9: return "Four Fold Ltd";
			case 0x12fb: return "Spectrum Signal Processing";
			case 0x12fc: return "Capital Equipment Corp";
			case 0x12fd: return "I2S";
			case 0x12fe: return "ESD Electronic System Design GmbH";
			case 0x12ff: return "Lexicon";
			case 0x1300: return "Harman International Industries Inc";
			case 0x1302: return "Computer Sciences Corp";
			case 0x1303: return "Innovative Integration";
			case 0x1304: return "Juniper Networks";
			case 0x1305: return "Netphone, Inc";
			case 0x1306: return "Duet Technologies";
			case 0x1307: return "Measurement Computing";
			case 0x1308: return "Jato Technologies Inc.";
			case 0x1309: return "AB Semiconductor Ltd";
			case 0x130a: return "Mitsubishi Electric Microcomputer";
			case 0x130b: return "Colorgraphic Communications Corp";
			case 0x130c: return "Ambex Technologies, Inc";
			case 0x130d: return "Accelerix Inc";
			case 0x130e: return "Yamatake-Honeywell Co. Ltd";
			case 0x130f: return "Advanet Inc";
			case 0x1310: return "Gespac";
			case 0x1311: return "Videoserver, Inc";
			case 0x1312: return "Acuity Imaging, Inc";
			case 0x1313: return "Yaskawa Electric Co.";
			case 0x1315: return "Wavesat";
			case 0x1316: return "Teradyne Inc";
			case 0x1317: return "ADMtek";
			case 0x1318: return "Packet Engines Inc.";
			case 0x1319: return "Fortemedia, Inc";
			case 0x131a: return "Finisar Corp.";
			case 0x131c: return "Nippon Electro-Sensory Devices Corp";
			case 0x131d: return "Sysmic, Inc.";
			case 0x131e: return "Xinex Networks Inc";
			case 0x131f: return "Siig Inc";
			case 0x1320: return "Crypto AG";
			case 0x1321: return "Arcobel Graphics BV";
			case 0x1322: return "MTT Co., Ltd";
			case 0x1323: return "Dome Inc";
			case 0x1324: return "Sphere Communications";
			case 0x1325: return "Salix Technologies, Inc";
			case 0x1326: return "Seachange international";
			case 0x1327: return "Voss scientific";
			case 0x1328: return "quadrant international";
			case 0x1329: return "Productivity Enhancement";
			case 0x132a: return "Microcom Inc.";
			case 0x132b: return "Broadband Technologies";
			case 0x132c: return "Micrel Inc";
			case 0x132d: return "Integrated Silicon Solution, Inc.";
			case 0x1330: return "MMC Networks";
			case 0x1331: return "RadiSys Corporation";
			case 0x1332: return "Micro Memory";
			case 0x1334: return "Redcreek Communications, Inc";
			case 0x1335: return "Videomail, Inc";
			case 0x1337: return "Third Planet Publishing";
			case 0x1338: return "BT Electronics";
			case 0x133a: return "Vtel Corp";
			case 0x133b: return "Softcom Microsystems";
			case 0x133c: return "Holontech Corp";
			case 0x133d: return "SS Technologies";
			case 0x133e: return "Virtual Computer Corp";
			case 0x133f: return "SCM Microsystems";
			case 0x1340: return "Atalla Corp";
			case 0x1341: return "Kyoto Microcomputer Co";
			case 0x1342: return "Promax Systems Inc";
			case 0x1343: return "Phylon Communications Inc";
			case 0x1344: return "Micron Technology Inc";
			case 0x1345: return "Arescom Inc";
			case 0x1347: return "Odetics";
			case 0x1349: return "Sumitomo Electric Industries, Ltd.";
			case 0x134a: return "DTC Technology Corp.";
			case 0x134b: return "ARK Research Corp.";
			case 0x134c: return "Chori Joho System Co. Ltd";
			case 0x134d: return "PCTel Inc";
			case 0x134e: return "CSTI";
			case 0x134f: return "Algo System Co Ltd";
			case 0x1350: return "Systec Co. Ltd";
			case 0x1351: return "Sonix Inc";
			case 0x1353: return "dbeeSet Technology";
			case 0x1354: return "Dwave System Inc";
			case 0x1355: return "Kratos Analytical Ltd";
			case 0x1356: return "The Logical Co";
			case 0x1359: return "Prisa Networks";
			case 0x135a: return "Brain Boxes";
			case 0x135b: return "Giganet Inc";
			case 0x135c: return "Quatech Inc";
			case 0x135d: return "ABB Network Partner AB";
			case 0x135e: return "Sealevel Systems Inc";
			case 0x135f: return "I-Data International A-S";
			case 0x1360: return "Meinberg Funkuhren";
			case 0x1361: return "Soliton Systems K.K.";
			case 0x1362: return "Fujifacom Corporation";
			case 0x1363: return "Phoenix Technology Ltd";
			case 0x1364: return "ATM Communications Inc";
			case 0x1365: return "Hypercope GmbH";
			case 0x1366: return "Teijin Seiki Co. Ltd";
			case 0x1367: return "Hitachi Zosen Corporation";
			case 0x1368: return "Skyware Corporation";
			case 0x1369: return "Digigram";
			case 0x136a: return "High Soft Tech";
			case 0x136b: return "Kawasaki Steel Corporation";
			case 0x136c: return "Adtek System Science Co Ltd";
			case 0x136d: return "Gigalabs Inc";
			case 0x136f: return "Applied Magic Inc";
			case 0x1370: return "ATL Products";
			case 0x1371: return "CNet Technology Inc";
			case 0x1373: return "Silicon Vision Inc";
			case 0x1374: return "Silicom Ltd.";
			case 0x1375: return "Argosystems Inc";
			case 0x1376: return "LMC";
			case 0x1377: return "Electronic Equipment Production & Distribution GmbH";
			case 0x1378: return "Telemann Co. Ltd";
			case 0x1379: return "Asahi Kasei Microsystems Co Ltd";
			case 0x137a: return "Mark of the Unicorn Inc";
			case 0x137b: return "PPT Vision";
			case 0x137c: return "Iwatsu Electric Co Ltd";
			case 0x137d: return "Dynachip Corporation";
			case 0x137e: return "Patriot Scientific Corporation";
			case 0x137f: return "Japan Satellite Systems Inc";
			case 0x1380: return "Sanritz Automation Co Ltd";
			case 0x1381: return "Brains Co. Ltd";
			case 0x1382: return "Marian - Electronic & Software";
			case 0x1383: return "Controlnet Inc";
			case 0x1384: return "Reality Simulation Systems Inc";
			case 0x1385: return "Netgear";
			case 0x1386: return "Video Domain Technologies";
			case 0x1387: return "Systran Corp";
			case 0x1388: return "Hitachi Information Technology Co Ltd";
			case 0x1389: return "Applicom International";
			case 0x138a: return "Fusion Micromedia Corp";
			case 0x138b: return "Tokimec Inc";
			case 0x138c: return "Silicon Reality";
			case 0x138d: return "Future Techno Designs pte Ltd";
			case 0x138e: return "Basler GmbH";
			case 0x138f: return "Patapsco Designs Inc";
			case 0x1390: return "Concept Development Inc";
			case 0x1391: return "Development Concepts Inc";
			case 0x1392: return "Medialight Inc";
			case 0x1393: return "Moxa Technologies Co Ltd";
			case 0x1394: return "Level One Communications";
			case 0x1395: return "Ambicom Inc";
			case 0x1396: return "Cipher Systems Inc";
			case 0x1397: return "Cologne Chip Designs GmbH";
			case 0x1398: return "Clarion co. Ltd";
			case 0x1399: return "Rios systems Co Ltd";
			case 0x139a: return "Alacritech Inc";
			case 0x139b: return "Mediasonic Multimedia Systems Ltd";
			case 0x139c: return "Quantum 3d Inc";
			case 0x139d: return "EPL limited";
			case 0x139e: return "Media4";
			case 0x139f: return "Aethra s.r.l.";
			case 0x13a0: return "Crystal Group Inc";
			case 0x13a1: return "Kawasaki Heavy Industries Ltd";
			case 0x13a2: return "Ositech Communications Inc";
			case 0x13a3: return "Hifn Inc.";
			case 0x13a4: return "Rascom Inc";
			case 0x13a5: return "Audio Digital Imaging Inc";
			case 0x13a6: return "Videonics Inc";
			case 0x13a7: return "Teles AG";
			case 0x13a8: return "Exar Corp.";
			case 0x13a9: return "Siemens Medical Systems, Ultrasound Group";
			case 0x13aa: return "Broadband Networks Inc";
			case 0x13ab: return "Arcom Control Systems Ltd";
			case 0x13ac: return "Motion Media Technology Ltd";
			case 0x13ad: return "Nexus Inc";
			case 0x13ae: return "ALD Technology Ltd";
			case 0x13af: return "T.Sqware";
			case 0x13b0: return "Maxspeed Corp";
			case 0x13b1: return "Tamura corporation";
			case 0x13b2: return "Techno Chips Co. Ltd";
			case 0x13b3: return "Lanart Corporation";
			case 0x13b4: return "Wellbean Co Inc";
			case 0x13b5: return "ARM";
			case 0x13b6: return "Dlog GmbH";
			case 0x13b7: return "Logic Devices Inc";
			case 0x13b8: return "Nokia Telecommunications oy";
			case 0x13b9: return "Elecom Co Ltd";
			case 0x13ba: return "Oxford Instruments";
			case 0x13bb: return "Sanyo Technosound Co Ltd";
			case 0x13bc: return "Bitran Corporation";
			case 0x13bd: return "Sharp corporation";
			case 0x13be: return "Miroku Jyoho Service Co. Ltd";
			case 0x13bf: return "Sharewave Inc";
			case 0x13c0: return "Microgate Corporation";
			case 0x13c1: return "3ware Inc";
			case 0x13c2: return "Technotrend Systemtechnik GmbH";
			case 0x13c3: return "Janz Computer AG";
			case 0x13c4: return "Phase Metrics";
			case 0x13c5: return "Alphi Technology Corp";
			case 0x13c6: return "Condor Engineering Inc";
			case 0x13c7: return "Blue Chip Technology Ltd";
			case 0x13c8: return "Apptech Inc";
			case 0x13c9: return "Eaton Corporation";
			case 0x13ca: return "Iomega Corporation";
			case 0x13cb: return "Yano Electric Co Ltd";
			case 0x13cc: return "BARCO";
			case 0x13cd: return "Compatible Systems Corporation";
			case 0x13ce: return "Cocom A/S";
			case 0x13cf: return "Studio Audio & Video Ltd";
			case 0x13d0: return "Techsan Electronics Co Ltd";
			case 0x13d1: return "Abocom Systems Inc";
			case 0x13d2: return "Shark Multimedia Inc";
			case 0x13d4: return "Graphics Microsystems Inc";
			case 0x13d5: return "Media 100 Inc";
			case 0x13d6: return "K.I. Technology Co Ltd";
			case 0x13d7: return "Toshiba Engineering Corporation";
			case 0x13d8: return "Phobos corporation";
			case 0x13d9: return "Apex PC Solutions Inc";
			case 0x13da: return "Intresource Systems pte Ltd";
			case 0x13db: return "Janich & Klass Computertechnik GmbH";
			case 0x13dc: return "Netboost Corporation";
			case 0x13dd: return "Multimedia Bundle Inc";
			case 0x13de: return "ABB Robotics Products AB";
			case 0x13df: return "E-Tech Inc";
			case 0x13e0: return "GVC Corporation";
			case 0x13e1: return "Silicom Multimedia Systems Inc";
			case 0x13e2: return "Dynamics Research Corporation";
			case 0x13e3: return "Nest Inc";
			case 0x13e4: return "Calculex Inc";
			case 0x13e5: return "Telesoft Design Ltd";
			case 0x13e6: return "Argosy research Inc";
			case 0x13e7: return "NAC Incorporated";
			case 0x13e8: return "Chip Express Corporation";
			case 0x13e9: return "Intraserver Technology Inc";
			case 0x13ea: return "Dallas Semiconductor";
			case 0x13eb: return "Hauppauge Computer Works Inc";
			case 0x13ec: return "Zydacron Inc";
			case 0x13ed: return "Raytheion E-Systems";
			case 0x13ee: return "Hayes Microcomputer Products Inc";
			case 0x13ef: return "Coppercom Inc";
			case 0x13f0: return "Sundance Technology Inc / IC Plus Corp";
			case 0x13f1: return "Oce' - Technologies B.V.";
			case 0x13f2: return "Ford Microelectronics Inc";
			case 0x13f3: return "Mcdata Corporation";
			case 0x13f4: return "Troika Networks, Inc.";
			case 0x13f5: return "Kansai Electric Co. Ltd";
			case 0x13f6: return "C-Media Electronics Inc";
			case 0x13f7: return "Wildfire Communications";
			case 0x13f8: return "Ad Lib Multimedia Inc";
			case 0x13f9: return "NTT Advanced Technology Corp.";
			case 0x13fa: return "Pentland Systems Ltd";
			case 0x13fb: return "Aydin Corp";
			case 0x13fc: return "Computer Peripherals International";
			case 0x13fd: return "Micro Science Inc";
			case 0x13fe: return "Advantech Co. Ltd";
			case 0x13ff: return "Silicon Spice Inc";
			case 0x1400: return "Artx Inc";
			case 0x1401: return "CR-Systems A/S";
			case 0x1402: return "Meilhaus Electronic GmbH";
			case 0x1403: return "Ascor Inc";
			case 0x1404: return "Fundamental Software Inc";
			case 0x1405: return "Excalibur Systems Inc";
			case 0x1406: return "Oce' Printing Systems GmbH";
			case 0x1407: return "Lava Computer mfg Inc";
			case 0x1408: return "Aloka Co. Ltd";
			case 0x1409: return "Timedia Technology Co Ltd";
			case 0x140a: return "DSP Research Inc";
			case 0x140b: return "Abaco Systems, Inc.";
			case 0x140c: return "Elmic Systems Inc";
			case 0x140d: return "Matsushita Electric Works Ltd";
			case 0x140e: return "Goepel Electronic GmbH";
			case 0x140f: return "Salient Systems Corp";
			case 0x1410: return "Midas lab Inc";
			case 0x1411: return "Ikos Systems Inc";
			case 0x1412: return "VIA Technologies Inc.";
			case 0x1413: return "Addonics";
			case 0x1414: return "Microsoft Corporation";
			case 0x1415: return "Oxford Semiconductor Ltd";
			case 0x1416: return "Multiwave Innovation pte Ltd";
			case 0x1417: return "Convergenet Technologies Inc";
			case 0x1418: return "Kyushu electronics systems Inc";
			case 0x1419: return "Excel Switching Corp";
			case 0x141a: return "Apache Micro Peripherals Inc";
			case 0x141b: return "Zoom Telephonics Inc";
			case 0x141d: return "Digitan Systems Inc";
			case 0x141e: return "Fanuc Ltd";
			case 0x141f: return "Visiontech Ltd";
			case 0x1420: return "Psion Dacom plc";
			case 0x1421: return "Ads Technologies Inc";
			case 0x1422: return "Ygrec Systems Co Ltd";
			case 0x1423: return "Custom Technology Corp.";
			case 0x1424: return "Videoserver Connections";
			case 0x1425: return "Chelsio Communications Inc";
			case 0x1426: return "Storage Technology Corp.";
			case 0x1427: return "Better On-Line Solutions";
			case 0x1428: return "Edec Co Ltd";
			case 0x1429: return "Unex Technology Corp.";
			case 0x142a: return "Kingmax Technology Inc";
			case 0x142b: return "Radiolan";
			case 0x142c: return "Minton Optic Industry Co Ltd";
			case 0x142d: return "Pix stream Inc";
			case 0x142e: return "Vitec Multimedia";
			case 0x142f: return "Radicom Research Inc";
			case 0x1430: return "ITT Aerospace/Communications Division";
			case 0x1431: return "Gilat Satellite Networks";
			case 0x1432: return "Edimax Computer Co.";
			case 0x1433: return "Eltec Elektronik GmbH";
			case 0x1435: return "RTD Embedded Technologies, Inc.";
			case 0x1436: return "CIS Technology Inc";
			case 0x1437: return "Nissin Inc Co";
			case 0x1438: return "Atmel-dream";
			case 0x1439: return "Outsource Engineering & Mfg. Inc";
			case 0x143a: return "Stargate Solutions Inc";
			case 0x143b: return "Canon Research Center, America";
			case 0x143c: return "Amlogic Inc";
			case 0x143d: return "Tamarack Microelectronics Inc";
			case 0x143e: return "Jones Futurex Inc";
			case 0x143f: return "Lightwell Co Ltd - Zax Division";
			case 0x1440: return "ALGOL Corp.";
			case 0x1441: return "AGIE Ltd";
			case 0x1442: return "Phoenix Contact GmbH & Co.";
			case 0x1443: return "Unibrain S.A.";
			case 0x1444: return "TRW";
			case 0x1445: return "Logical DO Ltd";
			case 0x1446: return "Graphin Co Ltd";
			case 0x1447: return "AIM GmBH";
			case 0x1448: return "Alesis Studio Electronics";
			case 0x1449: return "TUT Systems Inc";
			case 0x144a: return "Adlink Technology";
			case 0x144b: return "Verint Systems Inc.";
			case 0x144c: return "Catalina Research Inc";
			case 0x144d: return "Samsung Electronics Co Ltd";
			case 0x144e: return "OLITEC";
			case 0x144f: return "Askey Computer Corp.";
			case 0x1450: return "Octave Communications Ind.";
			case 0x1451: return "SP3D Chip Design GmBH";
			case 0x1453: return "MYCOM Inc";
			case 0x1454: return "Altiga Networks";
			case 0x1455: return "Logic Plus Plus Inc";
			case 0x1456: return "Advanced Hardware Architectures";
			case 0x1457: return "Nuera Communications Inc";
			case 0x1458: return "Gigabyte Technology Co., Ltd";
			case 0x1459: return "DOOIN Electronics";
			case 0x145a: return "Escalate Networks Inc";
			case 0x145b: return "PRAIM SRL";
			case 0x145c: return "Cryptek";
			case 0x145d: return "Gallant Computer Inc";
			case 0x145e: return "Aashima Technology B.V.";
			case 0x145f: return "Baldor Electric Company";
			case 0x1460: return "DYNARC INC";
			case 0x1461: return "Avermedia Technologies Inc";
			case 0x1462: return "Micro-Star International Co., Ltd. [MSI]";
			case 0x1463: return "Fast Corporation";
			case 0x1464: return "Interactive Circuits & Systems Ltd";
			case 0x1465: return "GN NETTEST Telecom DIV.";
			case 0x1466: return "Designpro Inc.";
			case 0x1467: return "DIGICOM SPA";
			case 0x1468: return "AMBIT Microsystem Corp.";
			case 0x1469: return "Cleveland Motion Controls";
			case 0x146a: return "Aeroflex";
			case 0x146b: return "Parascan Technologies Ltd";
			case 0x146c: return "Ruby Tech Corp.";
			case 0x146d: return "Tachyon, INC.";
			case 0x146e: return "Williams Electronics Games, Inc.";
			case 0x146f: return "Multi Dimensional Consulting Inc";
			case 0x1470: return "Bay Networks";
			case 0x1471: return "Integrated Telecom Express Inc";
			case 0x1472: return "DAIKIN Industries, Ltd";
			case 0x1473: return "ZAPEX Technologies Inc";
			case 0x1474: return "Doug Carson & Associates";
			case 0x1475: return "PICAZO Communications";
			case 0x1476: return "MORTARA Instrument Inc";
			case 0x1477: return "Net Insight";
			case 0x1478: return "DIATREND Corporation";
			case 0x1479: return "TORAY Industries Inc";
			case 0x147a: return "FORMOSA Industrial Computing";
			case 0x147b: return "ABIT Computer Corp.";
			case 0x147c: return "AWARE, Inc.";
			case 0x147d: return "Interworks Computer Products";
			case 0x147e: return "Matsushita Graphic Communication Systems, Inc.";
			case 0x147f: return "NIHON UNISYS, Ltd.";
			case 0x1480: return "SCII Telecom";
			case 0x1481: return "BIOPAC Systems Inc";
			case 0x1482: return "ISYTEC - Integrierte Systemtechnik GmBH";
			case 0x1483: return "LABWAY Corporation";
			case 0x1484: return "Logic Corporation";
			case 0x1485: return "ERMA - Electronic GmBH";
			case 0x1486: return "L3 Communications Telemetry & Instrumentation";
			case 0x1487: return "MARQUETTE Medical Systems";
			case 0x1489: return "KYE Systems Corporation";
			case 0x148a: return "OPTO";
			case 0x148b: return "INNOMEDIALOGIC Inc.";
			case 0x148c: return "Tul Corporation / PowerColor";
			case 0x148d: return "DIGICOM Systems, Inc.";
			case 0x148e: return "OSI Plus Corporation";
			case 0x148f: return "Plant Equipment, Inc.";
			case 0x1490: return "Stone Microsystems PTY Ltd.";
			case 0x1491: return "ZEAL Corporation";
			case 0x1492: return "Time Logic Corporation";
			case 0x1493: return "MAKER Communications";
			case 0x1494: return "WINTOP Technology, Inc.";
			case 0x1495: return "TOKAI Communications Industry Co. Ltd";
			case 0x1496: return "JOYTECH Computer Co., Ltd.";
			case 0x1497: return "SMA Regelsysteme GmBH";
			case 0x1498: return "TEWS Technologies GmbH";
			case 0x1499: return "EMTEC CO., Ltd";
			case 0x149a: return "ANDOR Technology Ltd";
			case 0x149b: return "SEIKO Instruments Inc";
			case 0x149c: return "OVISLINK Corp.";
			case 0x149d: return "NEWTEK Inc";
			case 0x149e: return "Mapletree Networks Inc.";
			case 0x149f: return "LECTRON Co Ltd";
			case 0x14a0: return "SOFTING GmBH";
			case 0x14a1: return "Systembase Co Ltd";
			case 0x14a2: return "Millennium Engineering Inc";
			case 0x14a3: return "Maverick Networks";
			case 0x14a4: return "Lite-On Technology Corporation";
			case 0x14a5: return "XIONICS Document Technologies Inc";
			case 0x14a6: return "INOVA Computers GmBH & Co KG";
			case 0x14a7: return "MYTHOS Systems Inc";
			case 0x14a8: return "FEATRON Technologies Corporation";
			case 0x14a9: return "HIVERTEC Inc";
			case 0x14aa: return "Advanced MOS Technology Inc";
			case 0x14ab: return "Siemens Industry Software Inc.";
			case 0x14ac: return "Novaweb Technologies Inc";
			case 0x14ad: return "Time Space Radio AB";
			case 0x14ae: return "CTI, Inc";
			case 0x14af: return "Guillemot Corporation";
			case 0x14b0: return "BST Communication Technology Ltd";
			case 0x14b1: return "Nextcom K.K.";
			case 0x14b2: return "ENNOVATE Networks Inc";
			case 0x14b3: return "XPEED Inc";
			case 0x14b4: return "PHILIPS Business Electronics B.V.";
			case 0x14b5: return "Creamware GmBH";
			case 0x14b6: return "Quantum Data Corp.";
			case 0x14b7: return "PROXIM Inc";
			case 0x14b8: return "Techsoft Technology Co Ltd";
			case 0x14b9: return "Cisco Aironet Wireless Communications";
			case 0x14ba: return "INTERNIX Inc.";
			case 0x14bb: return "SEMTECH Corporation";
			case 0x14bc: return "Globespan Semiconductor Inc.";
			case 0x14bd: return "CARDIO Control N.V.";
			case 0x14be: return "L3 Communications";
			case 0x14bf: return "SPIDER Communications Inc.";
			case 0x14c0: return "COMPAL Electronics Inc";
			case 0x14c1: return "MYRICOM Inc.";
			case 0x14c2: return "DTK Computer";
			case 0x14c3: return "MEDIATEK Corp.";
			case 0x14c4: return "IWASAKI Information Systems Co Ltd";
			case 0x14c5: return "Automation Products AB";
			case 0x14c6: return "Data Race Inc";
			case 0x14c7: return "Modular Technology Holdings Ltd";
			case 0x14c8: return "Turbocomm Tech. Inc.";
			case 0x14c9: return "ODIN Telesystems Inc";
			case 0x14ca: return "PE Logic Corp.";
			case 0x14cb: return "Billionton Systems Inc";
			case 0x14cc: return "NAKAYO Telecommunications Inc";
			case 0x14cd: return "Universal Global Scientific Industrial Co.,Ltd";
			case 0x14ce: return "Whistle Communications";
			case 0x14cf: return "TEK Microsystems Inc.";
			case 0x14d0: return "Ericsson Axe R & D";
			case 0x14d1: return "Computer Hi-Tech Co Ltd";
			case 0x14d2: return "Titan Electronics Inc";
			case 0x14d3: return "CIRTECH (UK) Ltd";
			case 0x14d4: return "Panacom Technology Corp";
			case 0x14d5: return "Nitsuko Corporation";
			case 0x14d6: return "Accusys Inc";
			case 0x14d7: return "Hirakawa Hewtech Corp";
			case 0x14d8: return "HOPF Elektronik GmBH";
			case 0x14d9: return "Alliance Semiconductor Corporation";
			case 0x14da: return "National Aerospace Laboratories";
			case 0x14db: return "AFAVLAB Technology Inc";
			case 0x14dc: return "Amplicon Liveline Ltd";
			case 0x14dd: return "Boulder Design Labs Inc";
			case 0x14de: return "Applied Integration Corporation";
			case 0x14df: return "ASIC Communications Corp";
			case 0x14e1: return "INVERTEX";
			case 0x14e2: return "INFOLIBRIA";
			case 0x14e3: return "AMTELCO";
			case 0x14e4: return "Broadcom Inc. and subsidiaries";
			case 0x14e5: return "Pixelfusion Ltd";
			case 0x14e6: return "SHINING Technology Inc";
			case 0x14e7: return "3CX";
			case 0x14e8: return "RAYCER Inc";
			case 0x14e9: return "GARNETS System CO Ltd";
			case 0x14ea: return "Planex Communications, Inc";
			case 0x14eb: return "SEIKO EPSON Corp";
			case 0x14ec: return "Agilent Technologies";
			case 0x14ed: return "DATAKINETICS Ltd";
			case 0x14ee: return "MASPRO KENKOH Corp";
			case 0x14ef: return "CARRY Computer ENG. CO Ltd";
			case 0x14f0: return "CANON RESEACH CENTRE FRANCE";
			case 0x14f1: return "Conexant Systems, Inc.";
			case 0x14f2: return "MOBILITY Electronics";
			case 0x14f3: return "BroadLogic";
			case 0x14f4: return "TOKYO Electronic Industry CO Ltd";
			case 0x14f5: return "SOPAC Ltd";
			case 0x14f6: return "COYOTE Technologies LLC";
			case 0x14f7: return "WOLF Technology Inc";
			case 0x14f8: return "AUDIOCODES Inc";
			case 0x14f9: return "AG COMMUNICATIONS";
			case 0x14fa: return "WANDEL & GOLTERMANN";
			case 0x14fb: return "TRANSAS MARINE (UK) Ltd";
			case 0x14fc: return "Quadrics Ltd";
			case 0x14fd: return "JAPAN Computer Industry Inc";
			case 0x14fe: return "ARCHTEK TELECOM Corp";
			case 0x14ff: return "TWINHEAD INTERNATIONAL Corp";
			case 0x1500: return "DELTA Electronics, Inc";
			case 0x1501: return "BANKSOFT CANADA Ltd";
			case 0x1502: return "MITSUBISHI ELECTRIC LOGISTICS SUPPORT Co Ltd";
			case 0x1503: return "KAWASAKI LSI USA Inc";
			case 0x1504: return "KAISER Electronics";
			case 0x1505: return "ITA INGENIEURBURO FUR TESTAUFGABEN GmbH";
			case 0x1506: return "CHAMELEON Systems Inc";
			case 0x1507: return "Motorola ?? / HTEC";
			case 0x1508: return "HONDA CONNECTORS/MHOTRONICS Inc";
			case 0x1509: return "FIRST INTERNATIONAL Computer Inc";
			case 0x150a: return "FORVUS RESEARCH Inc";
			case 0x150b: return "YAMASHITA Systems Corp";
			case 0x150c: return "KYOPAL CO Ltd";
			case 0x150d: return "WARPSPPED Inc";
			case 0x150e: return "C-PORT Corp";
			case 0x150f: return "INTEC GmbH";
			case 0x1510: return "BEHAVIOR TECH Computer Corp";
			case 0x1511: return "CENTILLIUM Technology Corp";
			case 0x1512: return "ROSUN Technologies Inc";
			case 0x1513: return "Raychem";
			case 0x1514: return "TFL LAN Inc";
			case 0x1515: return "Advent design";
			case 0x1516: return "MYSON Technology Inc";
			case 0x1517: return "ECHOTEK Corp";
			case 0x1518: return "Kontron";
			case 0x1519: return "TELEFON AKTIEBOLAGET LM Ericsson";
			case 0x151a: return "Globetek";
			case 0x151b: return "COMBOX Ltd";
			case 0x151c: return "DIGITAL AUDIO LABS Inc";
			case 0x151d: return "Fujitsu Computer Products Of America";
			case 0x151e: return "MATRIX Corp";
			case 0x151f: return "TOPIC SEMICONDUCTOR Corp";
			case 0x1520: return "CHAPLET System Inc";
			case 0x1521: return "BELL Corp";
			case 0x1522: return "MainPine Ltd";
			case 0x1523: return "MUSIC Semiconductors";
			case 0x1524: return "ENE Technology Inc";
			case 0x1525: return "IMPACT Technologies";
			case 0x1526: return "ISS, Inc";
			case 0x1527: return "SOLECTRON";
			case 0x1528: return "ACKSYS";
			case 0x1529: return "ON Semiconductor";
			case 0x152a: return "QUICKTURN DESIGN Systems";
			case 0x152b: return "FLYTECH Technology CO Ltd";
			case 0x152c: return "MACRAIGOR Systems LLC";
			case 0x152d: return "QUANTA Computer Inc";
			case 0x152e: return "MELEC Inc";
			case 0x152f: return "PHILIPS - CRYPTO";
			case 0x1530: return "ACQIS Technology Inc";
			case 0x1531: return "CHRYON Corp";
			case 0x1532: return "ECHELON Corp";
			case 0x1533: return "BALTIMORE";
			case 0x1534: return "ROAD Corp";
			case 0x1535: return "EVERGREEN Technologies Inc";
			case 0x1536: return "ACTIS Computer";
			case 0x1537: return "DATALEX COMMUNCATIONS";
			case 0x1538: return "ARALION Inc";
			case 0x1539: return "ATELIER INFORMATIQUES et ELECTRONIQUE ETUDES S.A.";
			case 0x153a: return "ONO SOKKI";
			case 0x153b: return "TERRATEC Electronic GmbH";
			case 0x153c: return "ANTAL Electronic";
			case 0x153d: return "FILANET Corp";
			case 0x153e: return "TECHWELL Inc";
			case 0x153f: return "MIPS Technologies, Inc.";
			case 0x1540: return "PROVIDEO MULTIMEDIA Co Ltd";
			case 0x1541: return "MACHONE Communications";
			case 0x1542: return "Concurrent Real-Time";
			case 0x1543: return "SILICON Laboratories";
			case 0x1544: return "DCM DATA Systems";
			case 0x1545: return "VISIONTEK";
			case 0x1546: return "IOI Technology Corp";
			case 0x1547: return "MITUTOYO Corp";
			case 0x1548: return "JET PROPULSION Laboratory";
			case 0x1549: return "INTERCONNECT Systems Solutions";
			case 0x154a: return "MAX Technologies Inc";
			case 0x154b: return "COMPUTEX Co Ltd";
			case 0x154c: return "VISUAL Technology Inc";
			case 0x154d: return "PAN INTERNATIONAL Industrial Corp";
			case 0x154e: return "SERVOTEST Ltd";
			case 0x154f: return "STRATABEAM Technology";
			case 0x1550: return "OPEN NETWORK Co Ltd";
			case 0x1551: return "SMART Electronic DEVELOPMENT GmBH";
			case 0x1552: return "RACAL AIRTECH Ltd";
			case 0x1553: return "CHICONY Electronics Co Ltd";
			case 0x1554: return "PROLINK Microsystems Corp";
			case 0x1555: return "GESYTEC GmBH";
			case 0x1556: return "PLDA";
			case 0x1557: return "MEDIASTAR Co Ltd";
			case 0x1558: return "CLEVO/KAPOK Computer";
			case 0x1559: return "SI LOGIC Ltd";
			case 0x155a: return "INNOMEDIA Inc";
			case 0x155b: return "PROTAC INTERNATIONAL Corp";
			case 0x155c: return "Cemax-Icon Inc";
			case 0x155d: return "Mac System Co Ltd";
			case 0x155e: return "LP Elektronik GmbH";
			case 0x155f: return "Perle Systems Ltd";
			case 0x1560: return "Terayon Communications Systems";
			case 0x1561: return "Viewgraphics Inc";
			case 0x1562: return "Symbol Technologies";
			case 0x1563: return "A-Trend Technology Co Ltd";
			case 0x1564: return "Yamakatsu Electronics Industry Co Ltd";
			case 0x1565: return "Biostar Microtech Int'l Corp";
			case 0x1566: return "Ardent Technologies Inc";
			case 0x1567: return "Jungsoft";
			case 0x1568: return "DDK Electronics Inc";
			case 0x1569: return "Palit Microsystems Inc.";
			case 0x156a: return "Avtec Systems";
			case 0x156b: return "2wire Inc";
			case 0x156c: return "Vidac Electronics GmbH";
			case 0x156d: return "Alpha-Top Corp";
			case 0x156e: return "Alfa Inc";
			case 0x156f: return "M-Systems Flash Disk Pioneers Ltd";
			case 0x1570: return "Lecroy Corp";
			case 0x1571: return "Contemporary Controls";
			case 0x1572: return "Otis Elevator Company";
			case 0x1573: return "Lattice - Vantis";
			case 0x1574: return "Fairchild Semiconductor";
			case 0x1575: return "Voltaire Advanced Data Security Ltd";
			case 0x1576: return "Viewcast COM";
			case 0x1578: return "HITT";
			case 0x1579: return "Dual Technology Corp";
			case 0x157a: return "Japan Elecronics Ind Inc";
			case 0x157b: return "Star Multimedia Corp";
			case 0x157c: return "Eurosoft (UK)";
			case 0x157d: return "Gemflex Networks";
			case 0x157e: return "Transition Networks";
			case 0x157f: return "PX Instruments Technology Ltd";
			case 0x1580: return "Primex Aerospace Co";
			case 0x1581: return "SEH Computertechnik GmbH";
			case 0x1582: return "Cytec Corp";
			case 0x1583: return "Inet Technologies Inc";
			case 0x1584: return "Uniwill Computer Corp";
			case 0x1585: return "Logitron";
			case 0x1586: return "Lancast Inc";
			case 0x1587: return "Konica Corp";
			case 0x1588: return "Solidum Systems Corp";
			case 0x1589: return "Atlantek Microsystems Pty Ltd";
			case 0x158a: return "Digalog Systems Inc";
			case 0x158b: return "Allied Data Technologies";
			case 0x158c: return "Hitachi Semiconductor & Devices Sales Co Ltd";
			case 0x158d: return "Point Multimedia Systems";
			case 0x158e: return "Lara Technology Inc";
			case 0x158f: return "Ditect Coop";
			case 0x1590: return "Hewlett Packard Enterprise";
			case 0x1591: return "ARN";
			case 0x1592: return "Syba Tech Ltd";
			case 0x1593: return "Bops Inc";
			case 0x1594: return "Netgame Ltd";
			case 0x1595: return "Diva Systems Corp";
			case 0x1596: return "Folsom Research Inc";
			case 0x1597: return "Memec Design Services";
			case 0x1598: return "Granite Microsystems";
			case 0x1599: return "Delta Electronics Inc";
			case 0x159a: return "General Instrument";
			case 0x159b: return "Faraday Technology Corp";
			case 0x159c: return "Stratus Computer Systems";
			case 0x159d: return "Ningbo Harrison Electronics Co Ltd";
			case 0x159e: return "A-Max Technology Co Ltd";
			case 0x159f: return "Galea Network Security";
			case 0x15a0: return "Compumaster SRL";
			case 0x15a1: return "Geocast Network Systems";
			case 0x15a2: return "Catalyst Enterprises Inc";
			case 0x15a3: return "Italtel";
			case 0x15a4: return "X-Net OY";
			case 0x15a5: return "Toyota Macs Inc";
			case 0x15a6: return "Sunlight Ultrasound Technologies Ltd";
			case 0x15a7: return "SSE Telecom Inc";
			case 0x15a8: return "Shanghai Communications Technologies Center";
			case 0x15aa: return "Moreton Bay";
			case 0x15ab: return "Bluesteel Networks Inc";
			case 0x15ac: return "North Atlantic Instruments";
			case 0x15ad: return "VMware";
			case 0x15ae: return "Amersham Pharmacia Biotech";
			case 0x15b0: return "Zoltrix International Ltd";
			case 0x15b1: return "Source Technology Inc";
			case 0x15b2: return "Mosaid Technologies Inc";
			case 0x15b3: return "Mellanox Technologies";
			case 0x15b4: return "CCI/TRIAD";
			case 0x15b5: return "Cimetrics Inc";
			case 0x15b6: return "Texas Memory Systems Inc";
			case 0x15b7: return "Sandisk Corp";
			case 0x15b8: return "ADDI-DATA GmbH";
			case 0x15b9: return "Maestro Digital Communications";
			case 0x15ba: return "Impacct Technology Corp";
			case 0x15bb: return "Portwell Inc";
			case 0x15bc: return "Agilent Technologies";
			case 0x15bd: return "DFI Inc";
			case 0x15be: return "Sola Electronics";
			case 0x15bf: return "High Tech Computer Corp (HTC)";
			case 0x15c0: return "BVM Ltd";
			case 0x15c1: return "Quantel";
			case 0x15c2: return "Newer Technology Inc";
			case 0x15c3: return "Taiwan Mycomp Co Ltd";
			case 0x15c4: return "EVSX Inc";
			case 0x15c5: return "Procomp Informatics Ltd";
			case 0x15c6: return "Technical University of Budapest";
			case 0x15c7: return "Tateyama System Laboratory Co Ltd";
			case 0x15c8: return "Penta Media Co Ltd";
			case 0x15c9: return "Serome Technology Inc";
			case 0x15ca: return "Bitboys OY";
			case 0x15cb: return "AG Electronics Ltd";
			case 0x15cc: return "Hotrail Inc";
			case 0x15cd: return "Dreamtech Co Ltd";
			case 0x15ce: return "Genrad Inc";
			case 0x15cf: return "Hilscher GmbH";
			case 0x15d1: return "Infineon Technologies AG";
			case 0x15d2: return "FIC (First International Computer Inc)";
			case 0x15d3: return "NDS Technologies Israel Ltd";
			case 0x15d4: return "Iwill Corp";
			case 0x15d5: return "Tatung Co";
			case 0x15d6: return "Entridia Corp";
			case 0x15d7: return "Rockwell-Collins Inc";
			case 0x15d8: return "Cybernetics Technology Co Ltd";
			case 0x15d9: return "Super Micro Computer Inc";
			case 0x15da: return "Cyberfirm Inc";
			case 0x15db: return "Applied Computing Systems Inc";
			case 0x15dc: return "Litronic Inc";
			case 0x15dd: return "Sigmatel Inc";
			case 0x15de: return "Malleable Technologies Inc";
			case 0x15df: return "Infinilink Corp";
			case 0x15e0: return "Cacheflow Inc";
			case 0x15e1: return "Voice Technologies Group Inc";
			case 0x15e2: return "Quicknet Technologies Inc";
			case 0x15e3: return "Networth Technologies Inc";
			case 0x15e4: return "VSN Systemen BV";
			case 0x15e5: return "Valley technologies Inc";
			case 0x15e6: return "Agere Inc";
			case 0x15e7: return "Get Engineering Corp";
			case 0x15e8: return "National Datacomm Corp";
			case 0x15e9: return "Pacific Digital Corp";
			case 0x15ea: return "Tokyo Denshi Sekei K.K.";
			case 0x15eb: return "DResearch Digital Media Systems GmbH";
			case 0x15ec: return "Beckhoff GmbH";
			case 0x15ed: return "Macrolink Inc";
			case 0x15ee: return "In Win Development Inc";
			case 0x15ef: return "Intelligent Paradigm Inc";
			case 0x15f0: return "B-Tree Systems Inc";
			case 0x15f1: return "Times N Systems Inc";
			case 0x15f2: return "Diagnostic Instruments Inc";
			case 0x15f3: return "Digitmedia Corp";
			case 0x15f4: return "Valuesoft";
			case 0x15f5: return "Power Micro Research";
			case 0x15f6: return "Extreme Packet Device Inc";
			case 0x15f7: return "Banctec";
			case 0x15f8: return "Koga Electronics Co";
			case 0x15f9: return "Zenith Electronics Corp";
			case 0x15fa: return "J.P. Axzam Corp";
			case 0x15fb: return "Zilog Inc";
			case 0x15fc: return "Techsan Electronics Co Ltd";
			case 0x15fd: return "N-CUBED.NET";
			case 0x15fe: return "Kinpo Electronics Inc";
			case 0x15ff: return "Fastpoint Technologies Inc";
			case 0x1600: return "Northrop Grumman - Canada Ltd";
			case 0x1601: return "Tenta Technology";
			case 0x1602: return "Prosys-tec Inc";
			case 0x1603: return "Nokia Wireless Communications";
			case 0x1604: return "Central System Research Co Ltd";
			case 0x1605: return "Pairgain Technologies";
			case 0x1606: return "Europop AG";
			case 0x1607: return "Lava Semiconductor Manufacturing Inc";
			case 0x1608: return "Automated Wagering International";
			case 0x1609: return "Scimetric Instruments Inc";
			case 0x1612: return "Telesynergy Research Inc.";
			case 0x1618: return "Stone Ridge Technology";
			case 0x1619: return "FarSite Communications Ltd";
			case 0x161f: return "Rioworks";
			case 0x1621: return "Lynx Studio Technology, Inc.";
			case 0x1626: return "TDK Semiconductor Corp.";
			case 0x1629: return "Kongsberg Spacetec AS";
			case 0x1631: return "Packard Bell B.V.";
			case 0x1638: return "Standard Microsystems Corp [SMC]";
			case 0x163c: return "Smart Link Ltd.";
			case 0x1641: return "MKNet Corp.";
			case 0x1642: return "Bitland(ShenZhen) Information Technology Co., Ltd.";
			case 0x1657: return "Cavium QLogic";
			case 0x165a: return "Epix Inc";
			case 0x165c: return "Gidel Ltd.";
			case 0x165d: return "Hsing Tech. Enterprise Co., Ltd.";
			case 0x165f: return "Linux Media Labs, LLC";
			case 0x1661: return "Worldspace Corp.";
			case 0x1668: return "Actiontec Electronics Inc";
			case 0x166d: return "Broadcom Corporation";
			case 0x1677: return "Bernecker + Rainer";
			case 0x1678: return "NetEffect";
			case 0x1679: return "Tokyo Electron Device Ltd.";
			case 0x167b: return "ZyDAS Technology Corp.";
			case 0x167d: return "Samsung Electro-Mechanics Co., Ltd.";
			case 0x167e: return "ONNTO Corp.";
			case 0x1681: return "Hercules";
			case 0x1682: return "XFX Pine Group Inc.";
			case 0x1688: return "CastleNet Technology Inc.";
			case 0x168a: return "Utimaco IS GmbH";
			case 0x168c: return "Qualcomm Atheros";
			case 0x1695: return "EPoX Computer Co., Ltd.";
			case 0x169c: return "Netcell Corporation";
			case 0x169d: return "Club-3D VB (Wrong ID)";
			case 0x16a5: return "Tekram Technology Co.,Ltd.";
			case 0x16ab: return "Global Sun Technology Inc";
			case 0x16ae: return "SafeNet Inc";
			case 0x16af: return "SparkLAN Communications, Inc.";
			case 0x16b4: return "Aspex Semiconductor Ltd";
			case 0x16b8: return "Sonnet Technologies, Inc.";
			case 0x16be: return "Creatix Polymedia GmbH";
			case 0x16c3: return "Synopsys, Inc.";
			case 0x16c6: return "Micrel-Kendin";
			case 0x16c8: return "Octasic Inc.";
			case 0x16c9: return "EONIC B.V. The Netherlands";
			case 0x16ca: return "CENATEK Inc";
			case 0x16cd: return "Advantech Co. Ltd";
			case 0x16ce: return "Roland Corp.";
			case 0x16d5: return "Acromag, Inc.";
			case 0x16da: return "Advantech Co., Ltd.";
			case 0x16df: return "PIKA Technologies Inc.";
			case 0x16e2: return "Geotest-MTS";
			case 0x16e3: return "European Space Agency";
			case 0x16e5: return "Intellon Corp.";
			case 0x16ec: return "U.S. Robotics";
			case 0x16ed: return "Sycron N. V.";
			case 0x16f2: return "ETAS GmbH";
			case 0x16f3: return "Jetway Information Co., Ltd.";
			case 0x16f4: return "Vweb Corp";
			case 0x16f6: return "VideoTele.com, Inc.";
			case 0x1702: return "Internet Machines Corporation (IMC)";
			case 0x1705: return "Digital First, Inc.";
			case 0x170b: return "NetOctave";
			case 0x170c: return "YottaYotta Inc.";
			case 0x1719: return "EZChip Technologies";
			case 0x1725: return "Vitesse Semiconductor";
			case 0x172a: return "Accelerated Encryption";
			case 0x1734: return "Fujitsu Technology Solutions";
			case 0x1735: return "Aten International Co. Ltd.";
			case 0x1737: return "Linksys";
			case 0x173b: return "Altima (nee Broadcom)";
			case 0x1743: return "Peppercon AG";
			case 0x1745: return "ViXS Systems, Inc.";
			case 0x1749: return "RLX Technologies";
			case 0x174b: return "PC Partner Limited / Sapphire Technology";
			case 0x174d: return "WellX Telecom SA";
			case 0x175c: return "AudioScience Inc";
			case 0x175e: return "Sanera Systems, Inc.";
			case 0x1760: return "TEDIA spol. s r. o.";
			case 0x1761: return "Pickering Interfaces Ltd";
			case 0x1771: return "InnoVISION Multimedia Ltd.";
			case 0x1775: return "General Electric";
			case 0x177d: return "Cavium, Inc.";
			case 0x1787: return "Hightech Information System Ltd.";
			case 0x1789: return "Ennyah Technologies Corp.";
			case 0x1796: return "Research Centre Juelich";
			case 0x1797: return "Intersil Techwell";
			case 0x1799: return "Belkin";
			case 0x179a: return "id Quantique";
			case 0x179c: return "Data Patterns";
			case 0x17a0: return "Genesys Logic, Inc";
			case 0x17aa: return "Lenovo";
			case 0x17ab: return "Phillips Components";
			case 0x17af: return "Hightech Information System Ltd.";
			case 0x17b3: return "Hawking Technologies";
			case 0x17b4: return "Indra Networks, Inc.";
			case 0x17c0: return "Wistron Corp.";
			case 0x17c2: return "Newisys, Inc.";
			case 0x17cb: return "Qualcomm";
			case 0x17cc: return "NetChip Technology, Inc";
			case 0x17cd: return "Cadence Design Systems, Inc.";
			case 0x17cf: return "Z-Com, Inc.";
			case 0x17d3: return "Areca Technology Corp.";
			case 0x17d5: return "Exar Corp.";
			case 0x17db: return "Cray Inc";
			case 0x17de: return "KWorld Computer Co. Ltd.";
			case 0x17df: return "Dini Group";
			case 0x17e4: return "Sectra AB";
			case 0x17e6: return "MaxLinear";
			case 0x17ee: return "Connect Components Ltd";
			case 0x17f2: return "Albatron Corp.";
			case 0x17f3: return "RDC Semiconductor, Inc.";
			case 0x17f7: return "Topdek Semiconductor Inc.";
			case 0x17f9: return "Gemtek Technology Co., Ltd";
			case 0x17fc: return "IOGEAR, Inc.";
			case 0x17fe: return "InProComm Inc.";
			case 0x17ff: return "Benq Corporation";
			case 0x1800: return "Qualcore Logic Inc.";
			case 0x1803: return "ProdaSafe GmbH";
			case 0x1804: return "Ralink corp. (wrong ID)";
			case 0x1805: return "Euresys S.A.";
			case 0x1809: return "Lumanate, Inc.";
			case 0x180c: return "IEI Integration Corp";
			case 0x1813: return "Ambient Technologies Inc";
			case 0x1814: return "Ralink corp.";
			case 0x1815: return "Devolo AG";
			case 0x1820: return "InfiniCon Systems Inc.";
			case 0x1822: return "Twinhan Technology Co. Ltd";
			case 0x182d: return "SiteCom Europe BV";
			case 0x182e: return "Raza Microelectronics, Inc.";
			case 0x182f: return "Broadcom";
			case 0x1830: return "Credence Systems Corporation";
			case 0x183b: return "MikroM GmbH";
			case 0x1846: return "Alcatel-Lucent";
			case 0x1849: return "ASRock Incorporation";
			case 0x184a: return "Thales Computers";
			case 0x1850: return "Advantest Corporation";
			case 0x1851: return "Microtune, Inc.";
			case 0x1852: return "Anritsu Corp.";
			case 0x1853: return "SMSC Automotive Infotainment System Group";
			case 0x1854: return "LG Electronics, Inc.";
			case 0x185b: return "Compro Technology, Inc.";
			case 0x185f: return "Wistron NeWeb Corp.";
			case 0x1864: return "SilverBack";
			case 0x1867: return "Topspin Communications";
			case 0x186c: return "Humusoft, s.r.o.";
			case 0x186f: return "WiNRADiO Communications";
			case 0x1876: return "L-3 Communications";
			case 0x187e: return "ZyXEL Communications Corporation";
			case 0x1885: return "Avvida Systems Inc.";
			case 0x1888: return "Varisys Ltd";
			case 0x188a: return "Ample Communications, Inc";
			case 0x1890: return "Egenera, Inc.";
			case 0x1894: return "KNC One";
			case 0x1896: return "B&B Electronics Manufacturing Company, Inc.";
			case 0x1897: return "AMtek";
			case 0x18a1: return "Astute Networks Inc.";
			case 0x18a2: return "Stretch Inc.";
			case 0x18a3: return "AT&T";
			case 0x18ac: return "DViCO Corporation";
			case 0x18b8: return "Ammasso";
			case 0x18bc: return "GeCube Technologies, Inc.";
			case 0x18c3: return "Micronas Semiconductor Holding AG";
			case 0x18c8: return "Cray Inc";
			case 0x18c9: return "ARVOO Engineering BV";
			case 0x18ca: return "XGI Technology Inc. (eXtreme Graphics Innovation)";
			case 0x18d2: return "Sitecom Europe BV (Wrong ID)";
			case 0x18d4: return "Celestica";
			case 0x18d8: return "Dialogue Technology Corp.";
			case 0x18dd: return "Artimi Inc";
			case 0x18df: return "LeWiz Communications";
			case 0x18e6: return "MPL AG";
			case 0x18eb: return "Advance Multimedia Internet Technology, Inc.";
			case 0x18ec: return "Cesnet, z.s.p.o.";
			case 0x18ee: return "Chenming Mold Ind. Corp.";
			case 0x18f1: return "Spectrum GmbH";
			case 0x18f4: return "Napatech A/S";
			case 0x18f6: return "NextIO";
			case 0x18f7: return "Commtech, Inc.";
			case 0x18fb: return "Resilience Corporation";
			case 0x1904: return "Hangzhou Silan Microelectronics Co., Ltd.";
			case 0x1905: return "Micronas USA, Inc.";
			case 0x1912: return "Renesas Technology Corp.";
			case 0x1919: return "Soltek Computer Inc.";
			case 0x1923: return "Sangoma Technologies Corp.";
			case 0x1924: return "Solarflare Communications";
			case 0x192a: return "BiTMICRO Networks Inc.";
			case 0x192e: return "TransDimension";
			case 0x1931: return "Option N.V.";
			case 0x1932: return "DiBcom";
			case 0x193c: return "MAXIM Integrated Products";
			case 0x193d: return "Hangzhou H3C Technologies Co., Ltd.";
			case 0x193f: return "AHA Products Group";
			case 0x1942: return "ClearSpeed Technology plc";
			case 0x1947: return "C-guys, Inc.";
			case 0x1948: return "Alpha Networks Inc.";
			case 0x194a: return "DapTechnology B.V.";
			case 0x1954: return "One Stop Systems, Inc.";
			case 0x1957: return "Freescale Semiconductor Inc";
			case 0x1958: return "Faster Technology, LLC.";
			case 0x1959: return "PA Semi, Inc";
			case 0x1966: return "Orad Hi-Tec Systems";
			case 0x1969: return "Qualcomm Atheros";
			case 0x196a: return "Sensory Networks Inc.";
			case 0x196d: return "Club-3D BV";
			case 0x196e: return "PNY";
			case 0x1971: return "AGEIA Technologies, Inc.";
			case 0x1974: return "Star Electronics GmbH & Co. KG";
			case 0x1976: return "TRENDnet";
			case 0x1977: return "Parsec";
			case 0x197b: return "JMicron Technology Corp.";
			case 0x1982: return "Distant Early Warning Communications Inc";
			case 0x1987: return "Phison Electronics Corporation";
			case 0x1989: return "Montilio Inc.";
			case 0x198a: return "Nallatech Ltd.";
			case 0x1993: return "Innominate Security Technologies AG";
			case 0x1999: return "A-Logics";
			case 0x199a: return "Pulse-LINK, Inc.";
			case 0x199d: return "Xsigo Systems";
			case 0x199f: return "Auvitek";
			case 0x19a2: return "Emulex Corporation";
			case 0x19a8: return "DAQDATA GmbH";
			case 0x19ac: return "Kasten Chase Applied Research";
			case 0x19ae: return "Progeny Systems Corporation";
			case 0x19ba: return "ZyXEL Communications Corp.";
			case 0x19c1: return "Exegy Inc.";
			case 0x19d1: return "Motorola Expedience";
			case 0x19d4: return "Quixant Limited";
			case 0x19da: return "ZOTAC International (MCO) Ltd.";
			case 0x19de: return "Pico Computing";
			case 0x19e2: return "Vector Informatik GmbH";
			case 0x19e3: return "DDRdrive LLC";
			case 0x19e5: return "Huawei Technologies Co., Ltd.";
			case 0x19e7: return "NET (Network Equipment Technologies)";
			case 0x19ee: return "Netronome Systems, Inc.";
			case 0x19f1: return "BFG Tech";
			case 0x19ff: return "Eclipse Electronic Systems, Inc.";
			case 0x1a03: return "ASPEED Technology, Inc.";
			case 0x1a05: return "deltaww";
			case 0x1a07: return "Kvaser AB";
			case 0x1a08: return "Sierra semiconductor";
			case 0x1a0d: return "SEAKR Engineering";
			case 0x1a0e: return "DekTec Digital Video B.V.";
			case 0x1a17: return "Force10 Networks, Inc.";
			case 0x1a1d: return "GFaI e.V.";
			case 0x1a1e: return "3Leaf Systems, Inc.";
			case 0x1a22: return "Ambric Inc.";
			case 0x1a29: return "Fortinet, Inc.";
			case 0x1a2b: return "Ascom AG";
			case 0x1a30: return "Lantiq";
			case 0x1a32: return "Quanta Microsystems, Inc";
			case 0x1a3b: return "AzureWave";
			case 0x1a41: return "Tilera Corp.";
			case 0x1a4a: return "SLAC National Accelerator Lab TID-AIR";
			case 0x1a51: return "Hectronic AB";
			case 0x1a55: return "Rohde & Schwarz DVS GmbH";
			case 0x1a56: return "Rivet Networks";
			case 0x1a57: return "Highly Reliable Systems";
			case 0x1a58: return "Razer USA Ltd.";
			case 0x1a5d: return "Celoxica";
			case 0x1a5e: return "Aprius Inc.";
			case 0x1a5f: return "System TALKS Inc.";
			case 0x1a68: return "VirtenSys Limited";
			case 0x1a71: return "XenSource, Inc.";
			case 0x1a73: return "Violin Memory, Inc";
			case 0x1a76: return "Wavesat";
			case 0x1a77: return "Lightfleet Corporation";
			case 0x1a78: return "Virident Systems Inc.";
			case 0x1a84: return "Commex Technologies";
			case 0x1a88: return "MEN Mikro Elektronik";
			case 0x1a8a: return "StarBridge, Inc.";
			case 0x1a8c: return "Verigy Pte. Ltd.";
			case 0x1a8e: return "DRS Technologies";
			case 0x1aa8: return "Ciprico, Inc.";
			case 0x1aae: return "Global Velocity, Inc.";
			case 0x1ab4: return "Distributed Management Task Force, Inc. (DMTF)";
			case 0x1ab6: return "CalDigit, Inc.";
			case 0x1ab8: return "Parallels, Inc.";
			case 0x1ab9: return "Espia Srl";
			case 0x1ac1: return "Global Unichip Corp.";
			case 0x1ac8: return "Aeroflex Gaisler";
			case 0x1acc: return "Point of View BV";
			case 0x1ad7: return "Spectracom Corporation";
			case 0x1ade: return "Spin Master Ltd.";
			case 0x1ae0: return "Google, Inc.";
			case 0x1ae3: return "SANBlaze Technology, Inc.";
			case 0x1ae7: return "First Wise Media GmbH";
			case 0x1ae8: return "Silicon Software GmbH";
			case 0x1ae9: return "Wilocity Ltd.";
			case 0x1aea: return "Alcor Micro";
			case 0x1aec: return "Wolfson Microelectronics";
			case 0x1aed: return "SanDisk";
			case 0x1aee: return "Caustic Graphics Inc.";
			case 0x1af4: return "Red Hat, Inc.";
			case 0x1af5: return "Netezza Corp.";
			case 0x1afa: return "J & W Electronics Co., Ltd.";
			case 0x1b03: return "Magnum Semiconductor, Inc,";
			case 0x1b08: return "MSC Technologies GmbH";
			case 0x1b0a: return "Pegatron";
			case 0x1b13: return "Jaton Corp";
			case 0x1b1a: return "K&F Computing Research Co.";
			case 0x1b1c: return "Corsair";
			case 0x1b21: return "ASMedia Technology Inc.";
			case 0x1b26: return "Netcope Technologies, a.s.";
			case 0x1b2c: return "Opal-RT Technologies Inc.";
			case 0x1b36: return "Red Hat, Inc.";
			case 0x1b37: return "Signal Processing Devices Sweden AB";
			case 0x1b39: return "sTec, Inc.";
			case 0x1b3a: return "Westar Display Technologies";
			case 0x1b3e: return "Teradata Corp.";
			case 0x1b40: return "Schooner Information Technology, Inc.";
			case 0x1b47: return "Numascale AS";
			case 0x1b4b: return "Marvell Technology Group Ltd.";
			case 0x1b4c: return "GALAX";
			case 0x1b55: return "NetUP Inc.";
			case 0x1b66: return "DELTACAST";
			case 0x1b6f: return "Etron Technology, Inc.";
			case 0x1b73: return "Fresco Logic";
			case 0x1b74: return "OpenVox Communication Co. Ltd.";
			case 0x1b79: return "Absolute Analysis";
			case 0x1b85: return "OCZ Technology Group, Inc.";
			case 0x1b94: return "Signatec / Dynamic Signals Corp";
			case 0x1b96: return "Western Digital";
			case 0x1b9a: return "XAVi Technologies Corp.";
			case 0x1baa: return "QNAP Systems, Inc.";
			case 0x1bad: return "ReFLEX CES";
			case 0x1bb0: return "SimpliVity Corporation";
			case 0x1bb1: return "Seagate Technology PLC";
			case 0x1bb3: return "Bluecherry";
			case 0x1bb5: return "Quantenna Communications, Inc.";
			case 0x1bbf: return "Maxeler Technologies Ltd.";
			case 0x1bc0: return "Innodisk Corporation";
			case 0x1bcf: return "NEC Corporation";
			case 0x1bd0: return "Astronics Corporation";
			case 0x1bd4: return "Inspur Electronic Information Industry Co., Ltd.";
			case 0x1bee: return "IXXAT Automation GmbH";
			case 0x1bef: return "Lantiq";
			case 0x1bf4: return "VTI Instruments Corporation";
			case 0x1bfd: return "EeeTOP";
			case 0x1c09: return "CSP, Inc.";
			case 0x1c1c: return "Symphony";
			case 0x1c1f: return "SoftLab-NSK";
			case 0x1c28: return "Lite-On IT Corp. / Plextor";
			case 0x1c2c: return "Silicom Denmark";
			case 0x1c32: return "Highland Technology, Inc.";
			case 0x1c33: return "Daktronics, Inc";
			case 0x1c36: return "Annapurna Labs Ltd.";
			case 0x1c3b: return "Accensus, LLC";
			case 0x1c44: return "Enmotus Inc";
			case 0x1c58: return "HGST, Inc.";
			case 0x1c5c: return "SK hynix";
			case 0x1c5f: return "Beijing Memblaze Technology Co. Ltd.";
			case 0x1c63: return "Science and Research Centre of Computer Technology (JSC \"NICEVT\")";
			case 0x1c7e: return "TTTech Computertechnik AG";
			case 0x1c7f: return "Elektrobit Austria GmbH";
			case 0x1c8a: return "TSF5 Corporation";
			case 0x1c8c: return "Mobiveil, Inc.";
			case 0x1cb0: return "Shannon Systems";
			case 0x1cb1: return "Collion UG & Co.KG";
			case 0x1cb5: return "Focusrite Audio Engineering Ltd";
			case 0x1cb8: return "Dawning Information Industry Co., Ltd.";
			case 0x1cc1: return "ADATA Technology Co., Ltd.";
			case 0x1cc4: return "Union Memory (Shenzhen)";
			case 0x1cc5: return "Embedded Intelligence, Inc.";
			case 0x1cc7: return "Radian Memory Systems Inc.";
			case 0x1ccf: return "Zoom Corporation";
			case 0x1cd2: return "SesKion GmbH";
			case 0x1cd7: return "Nanjing Magewell Electronics Co., Ltd.";
			case 0x1cdd: return "secunet Security Networks AG";
			case 0x1ce4: return "Exablaze";
			case 0x1cf0: return "Akitio";
			case 0x1cf7: return "Subspace Dynamics";
			case 0x1d00: return "Pure Storage";
			case 0x1d05: return "Tongfang Hongkong Limited";
			case 0x1d0f: return "Amazon.com, Inc.";
			case 0x1d17: return "Zhaoxin";
			case 0x1d18: return "RME";
			case 0x1d1d: return "CNEX Labs";
			case 0x1d21: return "Allo";
			case 0x1d22: return "Baidu Technology";
			case 0x1d26: return "Kalray Inc.";
			case 0x1d37: return "NovaSparks";
			case 0x1d40: return "Techman Electronics (Changshu) Co., Ltd.";
			case 0x1d44: return "DPT";
			case 0x1d49: return "Lenovo";
			case 0x1d4c: return "Diamanti, Inc.";
			case 0x1d5c: return "Fantasia Trading LLC";
			case 0x1d61: return "Technobox, Inc.";
			case 0x1d62: return "Nebbiolo Technologies";
			case 0x1d65: return "Imagine Communications Corp.";
			case 0x1d6a: return "Aquantia Corp.";
			case 0x1d6c: return "Atomic Rules LLC";
			case 0x1d72: return "Xiaomi";
			case 0x1d78: return "DERA Storage";
			case 0x1d7c: return "Aerotech, Inc.";
			case 0x1d82: return "NETINT Technologies Inc.";
			case 0x1d87: return "Rockchip Electronics Co., Ltd";
			case 0x1d8f: return "Enyx";
			case 0x1d92: return "Abaco Systems Inc.";
			case 0x1d93: return "YADRO";
			case 0x1d94: return "Chengdu Haiguang IC Design Co., Ltd.";
			case 0x1d95: return "Graphcore Ltd";
			case 0x1d97: return "Shenzhen Longsys Electronics Co., Ltd.";
			case 0x1d9b: return "Facebook, Inc.";
			case 0x1da1: return "Teko Telecom S.r.l.";
			case 0x1da2: return "Sapphire Technology Limited";
			case 0x1da3: return "Habana Labs Ltd.";
			case 0x1db2: return "ATP ELECTRONICS INC";
			case 0x1dbb: return "NGD Systems, Inc.";
			case 0x1dbf: return "Guizhou Huaxintong Semiconductor Technology Co., Ltd";
			case 0x1dc5: return "FADU Inc.";
			case 0x1dcd: return "Liqid Inc.";
			case 0x1dd8: return "Pensando Systems";
			case 0x1de0: return "Groq";
			case 0x1de1: return "Tekram Technology Co.,Ltd.";
			case 0x1de5: return "Eideticom, Inc";
			case 0x1dee: return "Biwin Storage Technology Co., Ltd.";
			case 0x1def: return "Ampere Computing, LLC";
			case 0x1df3: return "Ethernity Networks";
			case 0x1df7: return "opencpi.org";
			case 0x1dfc: return "JSC NT-COM";
			case 0x1e0f: return "KIOXIA Corporation";
			case 0x1e17: return "Arnold & Richter Cine Technik GmbH & Co. Betriebs KG";
			case 0x1e24: return "Squirrels Research Labs";
			case 0x1e26: return "Fujitsu Client Computing Limited";
			case 0x1e36: return "Shanghai Enflame Technology Co. Ltd";
			case 0x1e38: return "Blaize, Inc";
			case 0x1e3b: return "Shenzhen DAPU Microelectronics Co., Ltd";
			case 0x1e3d: return "Burlywood, Inc";
			case 0x1e49: return "Yangtze Memory Technologies Co.,Ltd";
			case 0x1e4b: return "MAXIO Technology (Hangzhou) Ltd.";
			case 0x1e4c: return "GSI Technology";
			case 0x1e57: return "Beijing Panyi Technology Co., Ltd";
			case 0x1e59: return "Oxford Nanopore Technologies";
			case 0x1e60: return "Hailo Technologies Ltd.";
			case 0x1e6b: return "Axiado Corp.";
			case 0x1e7b: return "Dataland";
			case 0x1e7c: return "Brainchip Inc";
			case 0x1e81: return "Ramaxel Technology(Shenzhen) Limited";
			case 0x1e85: return "Heitec AG";
			case 0x1e89: return "ID Quantique SA";
			case 0x1e94: return "Calian SED";
			case 0x1e95: return "Solid State Storage Technology Corporation";
			case 0x1ea0: return "Tencent Technology (Shenzhen) Company Limited";
			case 0x1ea7: return "Intelliprop, Inc";
			case 0x1eab: return "Hefei DATANG Storage Technology Co.,LTD.";
			case 0x1eae: return "XFX Limited";
			case 0x1eb1: return "VeriSilicon Inc";
			case 0x1ebd: return "EMERGETECH Company Ltd.";
			case 0x1ed3: return "Yeston";
			case 0x1ed8: return "Digiteq Automotive";
			case 0x1ed9: return "Myrtle.ai";
			case 0x1ee9: return "SUSE LLC";
			case 0x1eec: return "Viscore Technologies Ltd";
			case 0x1efb: return "Flexxon Pte Ltd";
			case 0x1fc0: return "Ascom (Finland) Oy";
			case 0x1fc1: return "QLogic, Corp.";
			case 0x1fc9: return "Tehuti Networks Ltd.";
			case 0x1fcc: return "StreamLabs";
			case 0x1fce: return "Cognio Inc.";
			case 0x1fd4: return "SUNIX Co., Ltd.";
			case 0x2000: return "Smart Link Ltd.";
			case 0x2001: return "Temporal Research Ltd";
			case 0x2003: return "Smart Link Ltd.";
			case 0x2004: return "Smart Link Ltd.";
			case 0x2048: return "Beijing SpaceControl Technology Co.Ltd";
			case 0x20f4: return "TRENDnet";
			case 0x2116: return "ZyDAS Technology Corp.";
			case 0x21c3: return "21st Century Computer Corp.";
			case 0x22b8: return "Flex-Logix Technologies";
			case 0x22db: return "Missing Link Electronics, Inc.";
			case 0x2304: return "Colorgraphic Communications Corp.";
			case 0x2348: return "Racore";
			case 0x2646: return "Kingston Technology Company, Inc.";
			case 0x270b: return "Xantel Corporation";
			case 0x270f: return "Chaintech Computer Co. Ltd";
			case 0x2711: return "AVID Technology Inc.";
			case 0x2955: return "Connectix Virtual PC";
			case 0x2a15: return "3D Vision(???)";
			case 0x2bd8: return "ROPEX Industrie-Elektronik GmbH";
			case 0x3000: return "Hansol Electronics Inc.";
			case 0x3112: return "Satelco Ingenieria S.A.";
			case 0x3130: return "AUDIOTRAK";
			case 0x3142: return "Post Impression Systems.";
			case 0x31ab: return "Zonet";
			case 0x3388: return "Hint Corp";
			case 0x3411: return "Quantum Designs (H.K.) Inc";
			case 0x3442: return "Bihl+Wiedemann GmbH";
			case 0x3475: return "Arista Networks, Inc.";
			case 0x3513: return "ARCOM Control Systems Ltd";
			case 0x37d9: return "ITD Firm ltd.";
			case 0x3842: return "eVga.com. Corp.";
			case 0x38ef: return "4Links";
			case 0x3d3d: return "3DLabs";
			case 0x4005: return "Avance Logic Inc.";
			case 0x4033: return "Addtron Technology Co, Inc.";
			case 0x4040: return "NetXen Incorporated";
			case 0x4143: return "Digital Equipment Corp";
			case 0x4144: return "Alpha Data";
			case 0x4150: return "ONA Electroerosion";
			case 0x415a: return "Auzentech, Inc.";
			case 0x416c: return "Aladdin Knowledge Systems";
			case 0x4254: return "DVBSky";
			case 0x4321: return "Tata Power Strategic Electronics Division";
			case 0x4348: return "WCH.CN";
			case 0x434e: return "Cornelis Networks";
			case 0x43bc: return "Tiger Lake-H PCIe Root Port #5";
			case 0x4444: return "Internext Compression Inc";
			case 0x4468: return "Bridgeport machines";
			case 0x4594: return "Cogetec Informatique Inc";
			case 0x45fb: return "Baldor Electric Company";
			case 0x4624: return "Budker Institute of Nuclear Physics";
			case 0x4651: return "TXIC";
			case 0x4680: return "Umax Computer Corp";
			case 0x4843: return "Hercules Computer Technology Inc";
			case 0x4916: return "RedCreek Communications Inc";
			case 0x4943: return "Growth Networks";
			case 0x494f: return "ACCES I/O Products, Inc.";
			case 0x4978: return "Axil Computer Inc";
			case 0x4a14: return "NetVin";
			case 0x4b10: return "Buslogic Inc.";
			case 0x4c48: return "LUNG HWA Electronics";
			case 0x4c52: return "LR-Link";
			case 0x4c53: return "SBS Technologies";
			case 0x4ca1: return "Seanix Technology Inc";
			case 0x4d51: return "MediaQ Inc.";
			case 0x4d54: return "Microtechnica Co Ltd";
			case 0x4d56: return "MATRIX VISION GmbH";
			case 0x4ddc: return "ILC Data Device Corp";
			case 0x5045: return "University of Toronto";
			case 0x5046: return "GemTek Technology Corporation";
			case 0x5053: return "Voyetra Technologies";
			case 0x50b2: return "TerraTec Electronic GmbH";
			case 0x5136: return "S S Technologies";
			case 0x5143: return "Qualcomm Inc";
			case 0x5145: return "Ensoniq (Old)";
			case 0x5168: return "Animation Technologies Inc.";
			case 0x5301: return "Alliance Semiconductor Corp.";
			case 0x5333: return "S3 Graphics Ltd.";
			case 0x5431: return "AuzenTech, Inc.";
			case 0x544c: return "Teralogic Inc";
			case 0x544d: return "TBS Technologies";
			case 0x5452: return "SCANLAB AG";
			case 0x5455: return "Technische Universitaet Berlin";
			case 0x5456: return "GoTView";
			case 0x5519: return "Cnet Technologies, Inc.";
			case 0x5544: return "Dunord Technologies";
			case 0x5555: return "Genroco, Inc";
			case 0x5646: return "Vector Fabrics BV";
			case 0x5654: return "VoiceTronix Pty Ltd";
			case 0x5678: return "Dawicontrol Computersysteme GmbH";
			case 0x5700: return "Netpower";
			case 0x5845: return "X-ES, Inc.";
			case 0x584d: return "AuzenTech Co., Ltd.";
			case 0x5851: return "Exacq Technologies";
			case 0x5853: return "XenSource, Inc.";
			case 0x5854: return "GoTView";
			case 0x5ace: return "Beholder International Ltd.";
			case 0x6205: return "TBS Technologies (wrong ID)";
			case 0x6209: return "TBS Technologies (wrong ID)";
			case 0x631c: return "SmartInfra Ltd";
			case 0x6356: return "UltraStor";
			case 0x6374: return "c't Magazin fuer Computertechnik";
			case 0x6409: return "Logitec Corp.";
			case 0x6549: return "Teradici Corp.";
			case 0x6666: return "Decision Computer International Co.";
			case 0x6688: return "Zycoo Co., Ltd";
			case 0x6900: return "Red Hat, Inc.";
			case 0x7063: return "pcHDTV";
			case 0x7284: return "HT OMEGA Inc.";
			case 0x7357: return "IOxOS Technologies SA";
			case 0x7401: return "EndRun Technologies";
			case 0x7470: return "TP-LINK Technologies Co., Ltd.";
			case 0x7604: return "O.N. Electronic Co Ltd.";
			case 0x7bde: return "MIDAC Corporation";
			case 0x7fed: return "PowerTV";
			case 0x8008: return "Quancom Electronic GmbH";
			case 0x807d: return "Asustek Computer, Inc.";
			case 0x8086: return "Intel Corporation";
			case 0x8088: return "Beijing Wangxun Technology Co., Ltd.";
			case 0x80ee: return "InnoTek Systemberatung GmbH";
			case 0x8322: return "Sodick America Corp.";
			case 0x8384: return "SigmaTel";
			case 0x8401: return "TRENDware International Inc.";
			case 0x8686: return "ScaleMP";
			case 0x8800: return "Trigem Computer Inc.";
			case 0x8820: return "Stryker Corporation";
			case 0x8866: return "T-Square Design Inc.";
			case 0x8888: return "Silicon Magic";
			case 0x8912: return "TRX";
			case 0x8c4a: return "Winbond";
			case 0x8e0e: return "Computone Corporation";
			case 0x8e2e: return "KTI";
			case 0x9004: return "Adaptec";
			case 0x9005: return "Adaptec";
			case 0x907f: return "Atronics";
			case 0x919a: return "Gigapixel Corp";
			case 0x9412: return "Holtek";
			case 0x9413: return "Softlogic Co., Ltd.";
			case 0x9618: return "JusonTech Corporation";
			case 0x9699: return "Omni Media Technology Inc";
			case 0x9710: return "MosChip Semiconductor Technology Ltd.";
			case 0x9850: return "3Com (wrong ID)";
			case 0x9902: return "Stargen Inc.";
			case 0x9a11: return "Tiger Lake-H Gaussian & Neural Accelerator";
			case 0x9d32: return "Beijing Starblaze Technology Co. Ltd.";
			case 0xa000: return "Asix Electronics Corporation (Wrong ID)";
			case 0xa0a0: return "AOPEN Inc.";
			case 0xa0f1: return "UNISYS Corporation";
			case 0xa200: return "NEC Corporation";
			case 0xa259: return "Hewlett Packard";
			case 0xa25b: return "Hewlett Packard GmbH PL24-MKT";
			case 0xa304: return "Sony";
			case 0xa727: return "3Com Corporation";
			case 0xaa00: return "iTuner";
			case 0xaa01: return "iTuner";
			case 0xaa02: return "iTuner";
			case 0xaa03: return "iTuner";
			case 0xaa04: return "iTuner";
			case 0xaa05: return "iTuner";
			case 0xaa06: return "iTuner";
			case 0xaa07: return "iTuner";
			case 0xaa08: return "iTuner";
			case 0xaa09: return "iTuner";
			case 0xaa0a: return "iTuner";
			case 0xaa0b: return "iTuner";
			case 0xaa0c: return "iTuner";
			case 0xaa0d: return "iTuner";
			case 0xaa0e: return "iTuner";
			case 0xaa0f: return "iTuner";
			case 0xaa42: return "Scitex Digital Video";
			case 0xaa55: return "Ncomputing X300 PCI-Engine";
			case 0xaaaa: return "Adnaco Technology Inc.";
			case 0xabcd: return "Vadatech Inc.";
			case 0xac1e: return "Digital Receiver Technology Inc";
			case 0xac3d: return "Actuality Systems";
			case 0xad00: return "Alta Data Technologies LLC";
			case 0xaecb: return "Adrienne Electronics Corporation";
			case 0xaffe: return "Sirrix AG security technologies";
			case 0xb100: return "OpenVox Communication Co. Ltd.";
			case 0xb10b: return "Uakron PCI Project";
			case 0xb1b3: return "Shiva Europe Limited";
			case 0xb1d9: return "ATCOM Technology co., LTD.";
			case 0xbd11: return "Pinnacle Systems, Inc. (Wrong ID)";
			case 0xbdbd: return "Blackmagic Design";
			case 0xc001: return "TSI Telsys";
			case 0xc0a9: return "Micron/Crucial Technology";
			case 0xc0de: return "Motorola";
			case 0xc0fe: return "Motion Engineering, Inc.";
			case 0xca3b: return "Cambrionix Ltd.";
			case 0xca50: return "Varian Australia Pty Ltd";
			case 0xcace: return "CACE Technologies, Inc.";
			case 0xcaed: return "Canny Edge";
			case 0xcafe: return "Chrysalis-ITS";
			case 0xcc53: return "ScaleFlux Inc.";
			case 0xcccc: return "Catapult Communications";
			case 0xccec: return "Curtiss-Wright Controls Embedded Computing";
			case 0xcddd: return "Tyzx, Inc.";
			case 0xceba: return "KEBA AG";
			case 0xd161: return "Digium, Inc.";
			case 0xd209: return "Ultimarc";
			case 0xd4d4: return "Dy4 Systems Inc";
			case 0xd531: return "I+ME ACTIA GmbH";
			case 0xd84d: return "Exsys";
			case 0xdada: return "Datapath Limited";
			case 0xdb10: return "Diablo Technologies";
			case 0xdc93: return "Dawicontrol GmbH";
			case 0xdcba: return "Dynamic Engineering";
			case 0xdd01: return "Digital Devices GmbH";
			case 0xdead: return "Indigita Corporation";
			case 0xdeaf: return "Middle Digital Inc.";
			case 0xdeda: return "XIMEA";
			case 0xe000: return "Winbond";
			case 0xe159: return "Tiger Jet Network Inc. / ICP DAS";
			case 0xe1c5: return "Elcus";
			case 0xe4bf: return "EKF Elektronik GmbH";
			case 0xe4e4: return "Xorcom";
			case 0xe55e: return "Essence Technology, Inc.";
			case 0xea01: return "Eagle Technology";
			case 0xea50: return "Emerson Automation Solutions";
			case 0xea60: return "RME";
			case 0xeabb: return "Aashima Technology B.V.";
			case 0xeace: return "Endace Measurement Systems, Ltd";
			case 0xec80: return "Belkin Corporation";
			case 0xecc0: return "Echo Digital Audio Corporation";
			case 0xedd8: return "ARK Logic Inc";
			case 0xf043: return "ASUSTeK Computer Inc. (Wrong ID)";
			case 0xf05b: return "Foxconn International, Inc. (Wrong ID)";
			case 0xf15e: return "SiFive, Inc.";
			case 0xf1d0: return "AJA Video";
			case 0xf5f5: return "F5 Networks, Inc.";
			case 0xf849: return "ASRock Incorporation (Wrong ID)";
			case 0xfa57: return "Interagon AS";
			case 0xfab7: return "Fabric7 Systems, Inc.";
			case 0xfebd: return "Ultraview Corp.";
			case 0xfeda: return "Broadcom Inc";
			case 0xfede: return "Fedetec Inc.";
			case 0xfffd: return "XenSource, Inc.";
			case 0xfffe: return "VMWare Inc (temporary ID)";
			case 0xffff: return "Illegal Vendor ID";
			default:
				return to_hstring(vendorID);
		}
	}

	const char* GetDeviceName(uint16_t vendorID, uint16_t deviceID) {
		uint32_t ID = (vendorID << 16) | deviceID;
		switch (ID){
			case 0x108139: return "AT-2500TX V3 Ethernet";
			case 0x147a00: return "Hyper Transport Bridge Controller";
			case 0x147a02: return "APB (Advanced Peripheral Bus) Controller";
			case 0x147a03: return "Gigabit Ethernet Controller";
			case 0x147a04: return "OTG USB Controller";
			case 0x147a05: return "Vivante GPU (Graphics Processing Unit)";
			case 0x147a06: return "DC (Display Controller)";
			case 0x147a07: return "HDA (High Definition Audio) Controller";
			case 0x147a08: return "SATA AHCI Controller";
			case 0x147a09: return "PCI-to-PCI Bridge";
			case 0x147a0b: return "SPI Controller";
			case 0x147a0c: return "LPC Controller";
			case 0x147a0f: return "DMA (Direct Memory Access) Controller";
			case 0x147a10: return "Hyper Transport Bridge Controller";
			case 0x147a14: return "EHCI USB Controller";
			case 0x147a15: return "Vivante GPU (Graphics Processing Unit)";
			case 0x147a19: return "PCI-to-PCI Bridge";
			case 0x147a24: return "OHCI USB Controller";
			case 0x147a29: return "PCI-to-PCI Bridge";
			case 0x1c0001: return "PCAN-PCI CAN-Bus controller";
			case 0x707801: return "WinTV HVR-1800 MCE";
			case 0x950680: return "Ultra ATA/133 IDE RAID CONTROLLER CARD";
			case 0x18a0106: return "FPC-0106TX misprogrammed [RTL81xx]";
			case 0x21b8139: return "HNE-300 (RealTek RTL8139c) [iPaq Networking]";
			case 0x2ac1012: return "1012 PCMCIA 10/100 Ethernet Card [RTL81xx]";
			case 0x357000a: return "TTP-Monitoring Card V2.0";
			case 0x4320001: return "Pluto2 DVB-T Receiver for PCMCIA [EasyWatch MobilSet]";
			case 0x6751700: return "IS64PH ISDN Adapter";
			case 0x6751702: return "IS64PH ISDN Adapter";
			case 0x6751703: return "ISDN Adapter (PCI Bus, DV, W)";
			case 0x6751704: return "ISDN Adapter (PCI Bus, D, C)";
			case 0x7317200: return "JM7200 Series GPU";
			case 0x7956663: return "Butane II (MPEG2 encoder board)";
			case 0x7956666: return "MediaPress (MPEG2 encoder board)";
			case 0xb0b0105: return "R1T1";
			case 0xb0b0205: return "R4FXO";
			case 0xb0b0206: return "RCB4FXO 4-channel FXO analog telephony card";
			case 0xb0b0305: return "R4T1";
			case 0xb0b0405: return "R8FXX";
			case 0xb0b0406: return "RCB8FXX 8-channel modular analog telephony card";
			case 0xb0b0505: return "R24FXX";
			case 0xb0b0506: return "RCB24FXS 24-Channel FXS analog telephony card";
			case 0xb0b0605: return "R2T1";
			case 0xb0b0705: return "R24FXS";
			case 0xb0b0706: return "RCB24FXO 24-Channel FXO analog telephony card";
			case 0xb0b0905: return "R1T3 Single T3 Digital Telephony Card";
			case 0xb0b0906: return "RCB24FXX 24-channel modular analog telephony card";
			case 0xb0b0a06: return "RCB672FXX 672-channel modular analog telephony card";
			case 0xe110001: return "PCI to EISA Bridge";
			case 0xe110002: return "PCI to ISA Bridge";
			case 0xe110046: return "Smart Array 64xx";
			case 0xe110049: return "NC7132 Gigabit Upgrade Module";
			case 0xe11004a: return "NC6136 Gigabit Server Adapter";
			case 0xe11005a: return "Remote Insight II board - Lights-Out";
			case 0xe11007c: return "NC7770 1000BaseTX";
			case 0xe11007d: return "NC6770 1000BaseTX";
			case 0xe110085: return "NC7780 1000BaseTX";
			case 0xe1100b1: return "Remote Insight II board - PCI device";
			case 0xe1100bb: return "NC7760";
			case 0xe1100ca: return "NC7771";
			case 0xe1100cb: return "NC7781";
			case 0xe1100cf: return "NC7772";
			case 0xe1100d0: return "NC7782";
			case 0xe1100d1: return "NC7783";
			case 0xe1100e3: return "NC7761";
			case 0xe110508: return "Netelligent 4/16 Token Ring";
			case 0xe111000: return "Triflex/Pentium Bridge, Model 1000";
			case 0xe112000: return "Triflex/Pentium Bridge, Model 2000";
			case 0xe113032: return "QVision 1280/p";
			case 0xe113033: return "QVision 1280/p";
			case 0xe113034: return "QVision 1280/p";
			case 0xe114000: return "4000 [Triflex]";
			case 0xe114040: return "Integrated Array";
			case 0xe114048: return "Compaq Raid LC2";
			case 0xe114050: return "Smart Array 4200";
			case 0xe114051: return "Smart Array 4250ES";
			case 0xe114058: return "Smart Array 431";
			case 0xe114070: return "Smart Array 5300";
			case 0xe114080: return "Smart Array 5i";
			case 0xe114082: return "Smart Array 532";
			case 0xe114083: return "Smart Array 5312";
			case 0xe114091: return "Smart Array 6i";
			case 0xe11409a: return "Smart Array 641";
			case 0xe11409b: return "Smart Array 642";
			case 0xe11409c: return "Smart Array 6400";
			case 0xe11409d: return "Smart Array 6400 EM";
			case 0xe116010: return "HotPlug PCI Bridge 6010";
			case 0xe117020: return "USB Controller";
			case 0xe11a0ec: return "Fibre Channel Host Controller";
			case 0xe11a0f0: return "Advanced System Management Controller";
			case 0xe11a0f3: return "Triflex PCI to ISA Bridge";
			case 0xe11a0f7: return "PCI Hotplug Controller";
			case 0xe11a0f8: return "ZFMicro Chipset USB";
			case 0xe11a0fc: return "FibreChannel HBA Tachyon";
			case 0xe11ae10: return "Smart-2/P RAID Controller";
			case 0xe11ae29: return "MIS-L";
			case 0xe11ae2a: return "MPC";
			case 0xe11ae2b: return "MIS-E";
			case 0xe11ae31: return "System Management Controller";
			case 0xe11ae32: return "Netelligent 10/100 TX PCI UTP";
			case 0xe11ae33: return "Triflex Dual EIDE Controller";
			case 0xe11ae34: return "Netelligent 10 T PCI UTP";
			case 0xe11ae35: return "Integrated NetFlex-3/P";
			case 0xe11ae40: return "Netelligent Dual 10/100 TX PCI UTP";
			case 0xe11ae43: return "Netelligent Integrated 10/100 TX UTP";
			case 0xe11ae69: return "CETUS-L";
			case 0xe11ae6c: return "Northstar";
			case 0xe11ae6d: return "NorthStar CPU to PCI Bridge";
			case 0xe11b011: return "Netelligent 10/100 TX Embedded UTP";
			case 0xe11b012: return "Netelligent 10 T/2 PCI UTP/Coax";
			case 0xe11b01e: return "NC3120 Fast Ethernet NIC";
			case 0xe11b01f: return "NC3122 Fast Ethernet NIC";
			case 0xe11b02f: return "NC1120 Ethernet NIC";
			case 0xe11b030: return "Netelligent 10/100 TX UTP";
			case 0xe11b04a: return "10/100 TX PCI Intel WOL UTP Controller";
			case 0xe11b060: return "Smart Array 5300 Controller";
			case 0xe11b0c6: return "NC3161 Fast Ethernet NIC";
			case 0xe11b0c7: return "NC3160 Fast Ethernet NIC";
			case 0xe11b0d7: return "NC3121 Fast Ethernet NIC";
			case 0xe11b0dd: return "NC3131 Fast Ethernet NIC";
			case 0xe11b0de: return "NC3132 Fast Ethernet Module";
			case 0xe11b0df: return "NC6132 Gigabit Module";
			case 0xe11b0e0: return "NC6133 Gigabit Module";
			case 0xe11b0e1: return "NC3133 Fast Ethernet Module";
			case 0xe11b123: return "NC6134 Gigabit NIC";
			case 0xe11b134: return "NC3163 Fast Ethernet NIC";
			case 0xe11b13c: return "NC3162 Fast Ethernet NIC";
			case 0xe11b144: return "NC3123 Fast Ethernet NIC";
			case 0xe11b163: return "NC3134 Fast Ethernet NIC";
			case 0xe11b164: return "NC3165 Fast Ethernet Upgrade Module";
			case 0xe11b178: return "Smart Array 5i/532";
			case 0xe11b1a4: return "NC7131 Gigabit Server Adapter";
			case 0xe11b200: return "Memory Hot-Plug Controller";
			case 0xe11b203: return "Integrated Lights Out Controller";
			case 0xe11b204: return "Integrated Lights Out";
			case 0xe11c000: return "Remote Insight Lights-Out Edition";
			case 0xe11f130: return "NetFlex-3/P ThunderLAN 1.0";
			case 0xe11f150: return "NetFlex-3/P ThunderLAN 2.3";
			case 0xeac0008: return "Ethernet Powerlink Managing Node 01";
			case 0x10000001: return "53c810";
			case 0x10000002: return "53c820";
			case 0x10000003: return "53c825";
			case 0x10000004: return "53c815";
			case 0x10000005: return "53c810AP";
			case 0x10000006: return "53c860";
			case 0x1000000a: return "53c1510";
			case 0x1000000b: return "53C896/897";
			case 0x1000000c: return "53c895";
			case 0x1000000d: return "53c885";
			case 0x1000000f: return "53c875";
			case 0x10000010: return "53C1510";
			case 0x10000012: return "53c895a";
			case 0x10000013: return "53c875a";
			case 0x10000014: return "MegaRAID Tri-Mode SAS3516";
			case 0x10000015: return "MegaRAID Tri-Mode SAS3416";
			case 0x10000016: return "MegaRAID Tri-Mode SAS3508";
			case 0x10000017: return "MegaRAID Tri-Mode SAS3408";
			case 0x1000001b: return "MegaRAID Tri-Mode SAS3504";
			case 0x1000001c: return "MegaRAID Tri-Mode SAS3404";
			case 0x10000020: return "53c1010 Ultra3 SCSI Adapter";
			case 0x10000021: return "53c1010 66MHz";
			case 0x1000002f: return "MegaRAID SAS 2208 IOV [Thunderbolt]";
			case 0x10000030: return "53c1030 PCI-X Fusion-MPT Dual Ultra320 SCSI";
			case 0x10000031: return "53c1030ZC PCI-X Fusion-MPT Dual Ultra320 SCSI";
			case 0x10000032: return "53c1035 PCI-X Fusion-MPT Dual Ultra320 SCSI";
			case 0x10000033: return "1030ZC_53c1035 PCI-X Fusion-MPT Dual Ultra320 SCSI";
			case 0x10000040: return "53c1035 PCI-X Fusion-MPT Dual Ultra320 SCSI";
			case 0x10000041: return "53C1035ZC PCI-X Fusion-MPT Dual Ultra320 SCSI";
			case 0x10000050: return "SAS1064 PCI-X Fusion-MPT SAS";
			case 0x10000052: return "MegaRAID SAS-3 3216/3224 [Cutlass]";
			case 0x10000053: return "MegaRAID SAS-3 3216/3224 [Cutlass]";
			case 0x10000054: return "SAS1068 PCI-X Fusion-MPT SAS";
			case 0x10000055: return "SAS1068 PCI-X Fusion-MPT SAS";
			case 0x10000056: return "SAS1064ET PCI-Express Fusion-MPT SAS";
			case 0x10000057: return "M1064E MegaRAID SAS";
			case 0x10000058: return "SAS1068E PCI-Express Fusion-MPT SAS";
			case 0x10000059: return "MegaRAID SAS 8208ELP/8208ELP";
			case 0x1000005a: return "SAS1066E PCI-Express Fusion-MPT SAS";
			case 0x1000005b: return "MegaRAID SAS 2208 [Thunderbolt]";
			case 0x1000005c: return "SAS1064A PCI-X Fusion-MPT SAS";
			case 0x1000005d: return "MegaRAID SAS-3 3108 [Invader]";
			case 0x1000005e: return "SAS1066 PCI-X Fusion-MPT SAS";
			case 0x1000005f: return "MegaRAID SAS-3 3008 [Fury]";
			case 0x10000060: return "MegaRAID SAS 1078";
			case 0x10000062: return "SAS1078 PCI-Express Fusion-MPT SAS";
			case 0x10000064: return "SAS2116 PCI-Express Fusion-MPT SAS-2 [Meteor]";
			case 0x10000065: return "SAS2116 PCI-Express Fusion-MPT SAS-2 [Meteor]";
			case 0x1000006e: return "SAS2308 PCI-Express Fusion-MPT SAS-2";
			case 0x10000070: return "SAS2004 PCI-Express Fusion-MPT SAS-2 [Spitfire]";
			case 0x10000071: return "MR SAS HBA 2004";
			case 0x10000072: return "SAS2008 PCI-Express Fusion-MPT SAS-2 [Falcon]";
			case 0x10000073: return "MegaRAID SAS 2008 [Falcon]";
			case 0x10000074: return "SAS2108 PCI-Express Fusion-MPT SAS-2 [Liberator]";
			case 0x10000076: return "SAS2108 PCI-Express Fusion-MPT SAS-2 [Liberator]";
			case 0x10000077: return "SAS2108 PCI-Express Fusion-MPT SAS-2 [Liberator]";
			case 0x10000079: return "MegaRAID SAS 2108 [Liberator]";
			case 0x1000007c: return "MegaRAID SAS 1078DE";
			case 0x1000007e: return "SSS6200 PCI-Express Flash SSD";
			case 0x10000080: return "SAS2208 PCI-Express Fusion-MPT SAS-2";
			case 0x10000081: return "SAS2208 PCI-Express Fusion-MPT SAS-2";
			case 0x10000082: return "SAS2208 PCI-Express Fusion-MPT SAS-2";
			case 0x10000083: return "SAS2208 PCI-Express Fusion-MPT SAS-2";
			case 0x10000084: return "SAS2208 PCI-Express Fusion-MPT SAS-2";
			case 0x10000085: return "SAS2208 PCI-Express Fusion-MPT SAS-2";
			case 0x10000086: return "SAS2308 PCI-Express Fusion-MPT SAS-2";
			case 0x10000087: return "SAS2308 PCI-Express Fusion-MPT SAS-2";
			case 0x1000008f: return "53c875J";
			case 0x10000090: return "SAS3108 PCI-Express Fusion-MPT SAS-3";
			case 0x10000091: return "SAS3108 PCI-Express Fusion-MPT SAS-3";
			case 0x10000094: return "SAS3108 PCI-Express Fusion-MPT SAS-3";
			case 0x10000095: return "SAS3108 PCI-Express Fusion-MPT SAS-3";
			case 0x10000096: return "SAS3004 PCI-Express Fusion-MPT SAS-3";
			case 0x10000097: return "SAS3008 PCI-Express Fusion-MPT SAS-3";
			case 0x100000a5: return "Fusion-MPT 24GSAS/PCIe SAS40xx";
			case 0x100000ab: return "SAS3516 Fusion-MPT Tri-Mode RAID On Chip (ROC)";
			case 0x100000ac: return "SAS3416 Fusion-MPT Tri-Mode I/O Controller Chip (IOC)";
			case 0x100000ae: return "SAS3508 Fusion-MPT Tri-Mode RAID On Chip (ROC)";
			case 0x100000af: return "SAS3408 Fusion-MPT Tri-Mode I/O Controller Chip (IOC)";
			case 0x100000b2: return "PCIe Switch management endpoint";
			case 0x100000be: return "SAS3504 Fusion-MPT Tri-Mode RAID On Chip (ROC)";
			case 0x100000bf: return "SAS3404 Fusion-MPT Tri-Mode I/O Controller Chip (IOC)";
			case 0x100000c0: return "SAS3324 PCI-Express Fusion-MPT SAS-3";
			case 0x100000c1: return "SAS3324 PCI-Express Fusion-MPT SAS-3";
			case 0x100000c2: return "SAS3324 PCI-Express Fusion-MPT SAS-3";
			case 0x100000c3: return "SAS3324 PCI-Express Fusion-MPT SAS-3";
			case 0x100000c4: return "SAS3224 PCI-Express Fusion-MPT SAS-3";
			case 0x100000c5: return "SAS3316 PCI-Express Fusion-MPT SAS-3";
			case 0x100000c6: return "SAS3316 PCI-Express Fusion-MPT SAS-3";
			case 0x100000c7: return "SAS3316 PCI-Express Fusion-MPT SAS-3";
			case 0x100000c8: return "SAS3316 PCI-Express Fusion-MPT SAS-3";
			case 0x100000c9: return "SAS3216 PCI-Express Fusion-MPT SAS-3";
			case 0x100000ce: return "MegaRAID SAS-3 3316 [Intruder]";
			case 0x100000cf: return "MegaRAID SAS-3 3324 [Intruder]";
			case 0x100000d0: return "SAS3716 Fusion-MPT Tri-Mode RAID Controller Chip (ROC)";
			case 0x100000d1: return "SAS3616 Fusion-MPT Tri-Mode I/O Controller Chip (IOC)";
			case 0x100000d3: return "MegaRAID Tri-Mode SAS3716W";
			case 0x100000e0: return "Fusion-MPT 12GSAS/PCIe Unsupported SAS39xx";
			case 0x100000e1: return "Fusion-MPT 12GSAS/PCIe SAS39xx";
			case 0x100000e2: return "Fusion-MPT 12GSAS/PCIe Secure SAS39xx";
			case 0x100000e3: return "Fusion-MPT 12GSAS/PCIe Unsupported SAS39xx";
			case 0x100000e4: return "Fusion-MPT 12GSAS/PCIe Unsupported SAS38xx";
			case 0x100000e5: return "Fusion-MPT 12GSAS/PCIe SAS38xx";
			case 0x100000e6: return "Fusion-MPT 12GSAS/PCIe Secure SAS38xx";
			case 0x100000e7: return "Fusion-MPT 12GSAS/PCIe Unsupported SAS38xx";
			case 0x100002b0: return "Virtual Endpoint on PCIe Switch";
			case 0x100002b1: return "Virtual Endpoint on PCIe Switch (9749)";
			case 0x10000407: return "MegaRAID";
			case 0x10000408: return "MegaRAID";
			case 0x10000409: return "MegaRAID";
			case 0x10000411: return "MegaRAID SAS 1068";
			case 0x10000413: return "MegaRAID SAS 1068 [Verde ZCR]";
			case 0x10000621: return "FC909 Fibre Channel Adapter";
			case 0x10000622: return "FC929 Fibre Channel Adapter";
			case 0x10000623: return "FC929 LAN";
			case 0x10000624: return "FC919 Fibre Channel Adapter";
			case 0x10000625: return "FC919 LAN";
			case 0x10000626: return "FC929X Fibre Channel Adapter";
			case 0x10000627: return "FC929X LAN";
			case 0x10000628: return "FC919X Fibre Channel Adapter";
			case 0x10000629: return "FC919X LAN";
			case 0x10000640: return "FC949X Fibre Channel Adapter";
			case 0x10000642: return "FC939X Fibre Channel Adapter";
			case 0x10000646: return "FC949ES Fibre Channel Adapter";
			case 0x10000701: return "83C885 NT50 DigitalScape Fast Ethernet";
			case 0x10000702: return "Yellowfin G-NIC gigabit ethernet";
			case 0x10000804: return "SA2010";
			case 0x10000805: return "SA2010ZC";
			case 0x10000806: return "SA2020";
			case 0x10000807: return "SA2020ZC";
			case 0x10000901: return "61C102";
			case 0x10001000: return "63C815";
			case 0x100010e0: return "MegaRAID 12GSAS/PCIe Unsupported SAS39xx";
			case 0x100010e1: return "MegaRAID 12GSAS/PCIe SAS39xx";
			case 0x100010e2: return "MegaRAID 12GSAS/PCIe Secure SAS39xx";
			case 0x100010e3: return "MegaRAID 12GSAS/PCIe Unsupported SAS39xx";
			case 0x100010e4: return "MegaRAID 12GSAS/PCIe Unsupported SAS38xx";
			case 0x100010e5: return "MegaRAID 12GSAS/PCIe SAS38xx";
			case 0x100010e6: return "MegaRAID 12GSAS/PCIe Secure SAS38xx";
			case 0x100010e7: return "MegaRAID 12GSAS/PCIe Unsupported SAS38xx";
			case 0x10001960: return "MegaRAID";
			case 0x10003050: return "SAS2008 PCI-Express Fusion-MPT SAS-2";
			case 0x10006001: return "DX1 Multiformat Broadcast HD/SD Encoder/Decoder";
			case 0x1000c010: return "PEX88048 50 lane, 50 port, PCI Express Gen 4.0 ExpressFabric Platform";
			case 0x1000c012: return "PEX880xx PCIe Gen 4 Switch";
			case 0x10010010: return "PCI 1616 Measurement card with 32 digital I/O lines";
			case 0x10010011: return "OPTO-PCI Opto-Isolated digital I/O board";
			case 0x10010012: return "PCI-AD/DA Analogue I/O board";
			case 0x10010013: return "PCI-OPTO-RELAIS Digital I/O board with relay outputs";
			case 0x10010014: return "PCI-Counter/Timer Counter Timer board";
			case 0x10010015: return "PCI-DAC416 Analogue output board";
			case 0x10010016: return "PCI-MFB Analogue I/O board";
			case 0x10010017: return "PROTO-3 PCI Prototyping board";
			case 0x10019100: return "INI-9100/9100W SCSI Host";
			case 0x10021304: return "Kaveri";
			case 0x10021305: return "Kaveri";
			case 0x10021306: return "Kaveri";
			case 0x10021307: return "Kaveri";
			case 0x10021308: return "Kaveri HDMI/DP Audio Controller";
			case 0x10021309: return "Kaveri [Radeon R6/R7 Graphics]";
			case 0x1002130a: return "Kaveri [Radeon R6 Graphics]";
			case 0x1002130b: return "Kaveri [Radeon R4 Graphics]";
			case 0x1002130c: return "Kaveri [Radeon R7 Graphics]";
			case 0x1002130d: return "Kaveri [Radeon R6 Graphics]";
			case 0x1002130e: return "Kaveri [Radeon R5 Graphics]";
			case 0x1002130f: return "Kaveri [Radeon R7 Graphics]";
			case 0x10021310: return "Kaveri";
			case 0x10021311: return "Kaveri";
			case 0x10021312: return "Kaveri";
			case 0x10021313: return "Kaveri [Radeon R7 Graphics]";
			case 0x10021314: return "Wrestler HDMI Audio";
			case 0x10021315: return "Kaveri [Radeon R5 Graphics]";
			case 0x10021316: return "Kaveri [Radeon R5 Graphics]";
			case 0x10021317: return "Kaveri";
			case 0x10021318: return "Kaveri [Radeon R5 Graphics]";
			case 0x1002131b: return "Kaveri [Radeon R4 Graphics]";
			case 0x1002131c: return "Kaveri [Radeon R7 Graphics]";
			case 0x1002131d: return "Kaveri [Radeon R6 Graphics]";
			case 0x100213e9: return "Ariel";
			case 0x10021478: return "Navi 10 XL Upstream Port of PCI Express Switch";
			case 0x10021479: return "Navi 10 XL Downstream Port of PCI Express Switch";
			case 0x1002154c: return "Kryptos [Radeon RX 350]";
			case 0x1002154e: return "Garfield";
			case 0x10021551: return "Arlene";
			case 0x10021552: return "Pooky";
			case 0x10021561: return "Anubis";
			case 0x100215d8: return "Picasso";
			case 0x100215dd: return "Raven Ridge [Radeon Vega Series / Radeon Vega Mobile Series]";
			case 0x100215de: return "Raven/Raven2/Fenghuang HDMI/DP Audio Controller";
			case 0x100215df: return "Raven/Raven2/Fenghuang/Renoir Cryptographic Coprocessor";
			case 0x100215ff: return "Fenghuang [Zhongshan Subor Z+]";
			case 0x10021607: return "Arden";
			case 0x10021636: return "Renoir";
			case 0x10021637: return "Renoir Radeon High Definition Audio Controller";
			case 0x10021638: return "Cezanne";
			case 0x1002163f: return "VanGogh";
			case 0x1002164c: return "Lucienne";
			case 0x1002164d: return "Rembrandt";
			case 0x10021714: return "BeaverCreek HDMI Audio [Radeon HD 6500D and 6400G-6600G series]";
			case 0x10023150: return "RV380/M24 [Mobility Radeon X600]";
			case 0x10023151: return "RV380 GL [FireMV 2400]";
			case 0x10023152: return "RV370/M22 [Mobility Radeon X300]";
			case 0x10023154: return "RV380/M24 GL [Mobility FireGL V3200]";
			case 0x10023155: return "RV380 GL [FireMV 2400]";
			case 0x10023171: return "RV380 GL [FireMV 2400] (Secondary)";
			case 0x10023e50: return "RV380 [Radeon X550/X600]";
			case 0x10023e54: return "RV380 GL [FireGL V3200]";
			case 0x10023e70: return "RV380 [Radeon X550/X600] (Secondary)";
			case 0x10024136: return "RS100 [Mobility IGP 320M]";
			case 0x10024137: return "RS200 [Radeon IGP 340]";
			case 0x10024144: return "R300 [Radeon 9500]";
			case 0x10024146: return "R300 [Radeon 9700 PRO]";
			case 0x10024147: return "R300 GL [FireGL Z1]";
			case 0x10024148: return "R350 [Radeon 9800/9800 SE]";
			case 0x10024150: return "RV350 [Radeon 9550/9600/X1050 Series]";
			case 0x10024151: return "RV350 [Radeon 9600 Series]";
			case 0x10024152: return "RV360 [Radeon 9600/X1050 Series]";
			case 0x10024153: return "RV350 [Radeon 9550]";
			case 0x10024154: return "RV350 GL [FireGL T2]";
			case 0x10024155: return "RV350 [Radeon 9600]";
			case 0x10024157: return "RV350 GL [FireGL T2]";
			case 0x10024158: return "68800AX [Graphics Ultra Pro PCI]";
			case 0x10024164: return "R300 [Radeon 9500 PRO] (Secondary)";
			case 0x10024165: return "R300 [Radeon 9700 PRO] (Secondary)";
			case 0x10024166: return "R300 [Radeon 9700 PRO] (Secondary)";
			case 0x10024168: return "RV350 [Radeon 9800 SE] (Secondary)";
			case 0x10024170: return "RV350 [Radeon 9550/9600/X1050 Series] (Secondary)";
			case 0x10024171: return "RV350 [Radeon 9600] (Secondary)";
			case 0x10024172: return "RV350 [Radeon 9600/X1050 Series] (Secondary)";
			case 0x10024173: return "RV350 [Radeon 9550] (Secondary)";
			case 0x10024242: return "R200 [All-In-Wonder Radeon 8500 DV]";
			case 0x10024243: return "R200 PCI Bridge [All-in-Wonder Radeon 8500DV]";
			case 0x10024336: return "RS100 [Radeon IGP 320M]";
			case 0x10024337: return "RS200M [Radeon IGP 330M/340M/345M/350M]";
			case 0x10024341: return "SB200 AC97 Audio Controller";
			case 0x10024342: return "SB200 PCI to PCI Bridge";
			case 0x10024345: return "SB200 EHCI USB Controller";
			case 0x10024346: return "Crayola 6 [XENOS Parent Die (XBOX 360)]";
			case 0x10024347: return "SB200 OHCI USB Controller #1";
			case 0x10024348: return "SB200 OHCI USB Controller #2";
			case 0x10024349: return "SB200 IDE Controller";
			case 0x1002434c: return "SB200 PCI to LPC Bridge";
			case 0x1002434d: return "SB200 AC97 Modem Controller";
			case 0x10024353: return "SB200 SMBus Controller";
			case 0x10024354: return "215CT [Mach64 CT PCI]";
			case 0x10024358: return "Mach64 CX [Graphics Xpression]";
			case 0x10024361: return "SB300 AC'97 Audio Controller";
			case 0x10024362: return "SB300 PCI to PCI Bridge";
			case 0x10024363: return "SB300 SMBus Controller";
			case 0x10024365: return "SB300 USB Controller (EHCI)";
			case 0x10024367: return "SB300 USB Controller (EHCI)";
			case 0x10024368: return "SB300 USB Controller (EHCI)";
			case 0x10024369: return "SB300 IDE Controller";
			case 0x1002436c: return "SB300 PCI to LPC Bridge";
			case 0x1002436d: return "SB300 AC97 Modem Controller";
			case 0x1002436e: return "SB300 Serial ATA Controller";
			case 0x10024370: return "IXP SB400 AC'97 Audio Controller";
			case 0x10024371: return "IXP SB4x0 PCI-PCI Bridge";
			case 0x10024372: return "IXP SB4x0 SMBus Controller";
			case 0x10024373: return "IXP SB4x0 USB2 Host Controller";
			case 0x10024374: return "IXP SB4x0 USB Host Controller";
			case 0x10024375: return "IXP SB4x0 USB Host Controller";
			case 0x10024376: return "IXP SB4x0 IDE Controller";
			case 0x10024377: return "IXP SB4x0 PCI-ISA Bridge";
			case 0x10024378: return "IXP SB400 AC'97 Modem Controller";
			case 0x10024379: return "IXP SB4x0 Serial ATA Controller";
			case 0x1002437a: return "IXP SB400 Serial ATA Controller";
			case 0x1002437b: return "IXP SB4x0 High Definition Audio Controller";
			case 0x10024380: return "SB600 Non-Raid-5 SATA";
			case 0x10024381: return "SB600 SATA Controller (RAID 5 mode)";
			case 0x10024382: return "SB600 AC97 Audio";
			case 0x10024383: return "SBx00 Azalia (Intel HDA)";
			case 0x10024384: return "SBx00 PCI to PCI Bridge";
			case 0x10024385: return "SBx00 SMBus Controller";
			case 0x10024386: return "SB600 USB Controller (EHCI)";
			case 0x10024387: return "SB600 USB (OHCI0)";
			case 0x10024388: return "SB600 USB (OHCI1)";
			case 0x10024389: return "SB600 USB (OHCI2)";
			case 0x1002438a: return "SB600 USB (OHCI3)";
			case 0x1002438b: return "SB600 USB (OHCI4)";
			case 0x1002438c: return "SB600 IDE";
			case 0x1002438d: return "SB600 PCI to LPC Bridge";
			case 0x1002438e: return "SB600 AC97 Modem";
			case 0x10024390: return "SB7x0/SB8x0/SB9x0 SATA Controller [IDE mode]";
			case 0x10024391: return "SB7x0/SB8x0/SB9x0 SATA Controller [AHCI mode]";
			case 0x10024392: return "SB7x0/SB8x0/SB9x0 SATA Controller [Non-RAID5 mode]";
			case 0x10024393: return "SB7x0/SB8x0/SB9x0 SATA Controller [RAID5 mode]";
			case 0x10024394: return "SB7x0/SB8x0/SB9x0 SATA Controller [AHCI mode]";
			case 0x10024395: return "SB8x0/SB9x0 SATA Controller [Storage mode]";
			case 0x10024396: return "SB7x0/SB8x0/SB9x0 USB EHCI Controller";
			case 0x10024397: return "SB7x0/SB8x0/SB9x0 USB OHCI0 Controller";
			case 0x10024398: return "SB7x0 USB OHCI1 Controller";
			case 0x10024399: return "SB7x0/SB8x0/SB9x0 USB OHCI2 Controller";
			case 0x1002439c: return "SB7x0/SB8x0/SB9x0 IDE Controller";
			case 0x1002439d: return "SB7x0/SB8x0/SB9x0 LPC host controller";
			case 0x100243a0: return "SB700/SB800/SB900 PCI to PCI bridge (PCIE port 0)";
			case 0x100243a1: return "SB700/SB800/SB900 PCI to PCI bridge (PCIE port 1)";
			case 0x100243a2: return "SB900 PCI to PCI bridge (PCIE port 2)";
			case 0x100243a3: return "SB900 PCI to PCI bridge (PCIE port 3)";
			case 0x10024437: return "RS250 [Mobility Radeon 7000 IGP]";
			case 0x10024554: return "210888ET [Mach64 ET]";
			case 0x10024630: return "XENOS Parent Die (XBOX 360)";
			case 0x10024631: return "XENOS Daughter Die (XBOX 360)";
			case 0x10024654: return "Mach64 VT";
			case 0x10024742: return "Rage 3 [3D Rage PRO AGP 2X]";
			case 0x10024744: return "Rage 3 [3D Rage PRO AGP 1X]";
			case 0x10024749: return "3D Rage PRO PCI";
			case 0x1002474d: return "Rage XL AGP 2X";
			case 0x1002474e: return "Rage XC AGP";
			case 0x1002474f: return "Rage XL";
			case 0x10024750: return "3D Rage Pro PCI";
			case 0x10024752: return "Rage 3 [Rage XL PCI]";
			case 0x10024753: return "Rage XC";
			case 0x10024754: return "Mach64 GT/GT-B [3D Rage I/II]";
			case 0x10024755: return "Mach64 GT-B [3D Rage II+ DVD]";
			case 0x10024756: return "Rage 2 [3D Rage IIC PCI]";
			case 0x10024757: return "Rage 2 [3D Rage IIC AGP]";
			case 0x10024758: return "Mach64 GX [WinTurbo]";
			case 0x10024759: return "Rage 3 [3D Rage IIC PCI]";
			case 0x1002475a: return "3D Rage IIC AGP";
			case 0x10024845: return "Xilleon 220 HBIU for HDTV2";
			case 0x10024846: return "Xilleon 220 IDE for HDTV2";
			case 0x10024847: return "Xilleon 220 USB for HDTV2";
			case 0x10024848: return "Xilleon 220 DAIO-0 for HDTV2";
			case 0x10024849: return "Xilleon 220 DAIO-1 for HDTV2";
			case 0x1002484a: return "Xilleon 220 LPC for HDTV2";
			case 0x10024850: return "Xilleon 215 HBIU for X215";
			case 0x10024851: return "Xilleon 215 IDE for X215";
			case 0x10024852: return "Xilleon 215 USB for X215";
			case 0x10024853: return "Xilleon 215 DAIO-0 for X215";
			case 0x10024854: return "Xilleon 215 DAIO-1 for X215";
			case 0x10024855: return "Xilleon 225 HBIU for X225";
			case 0x10024856: return "Xilleon 225 IDE for X225";
			case 0x10024857: return "Xilleon 225 USB for X225";
			case 0x10024858: return "Xilleon 225 DAIO-0 for X225";
			case 0x10024859: return "Xilleon 225 DAIO-1 for X225";
			case 0x10024860: return "Xilleon 210 HBIU for X210";
			case 0x10024861: return "Xilleon 210 IDE for X210";
			case 0x10024862: return "Xilleon 210 USB for X210";
			case 0x10024863: return "Xilleon 210 DAIO-0 for X210";
			case 0x10024864: return "Xilleon 210 DAIO-1 for X210";
			case 0x10024865: return "Xilleon 226 HBIU for X226";
			case 0x10024866: return "Xilleon 226 IDE for X226";
			case 0x10024867: return "Xilleon 226 USB for X226";
			case 0x10024868: return "Xilleon 226 DAIO-0 for X226";
			case 0x10024869: return "Xilleon 226 DAIO-1 for X226";
			case 0x1002486a: return "Xilleon 240S HBIU for X240S";
			case 0x1002486b: return "Xilleon 240H HBIU for X240H";
			case 0x1002486c: return "Xilleon 240S USB for X240S";
			case 0x1002486d: return "Xilleon 240H USB for X240H";
			case 0x1002486e: return "Xilleon 250 USB 1.1 for X250";
			case 0x1002486f: return "Xilleon 260 USB 1.1 for X260";
			case 0x10024870: return "Xilleon 250 HBIU for X250";
			case 0x10024871: return "Xilleon 250 IDE for X250";
			case 0x10024872: return "Xilleon 234/235 HBIU for X234/X235";
			case 0x10024873: return "Xilleon 244/245 HBIU for X244/X245";
			case 0x10024874: return "Xilleon 234/235 USB 1.1 for X234/X235";
			case 0x10024875: return "Xilleon 260 HBIU for X260";
			case 0x10024876: return "Xilleon 260 IDE for X260";
			case 0x10024877: return "Xilleon 244/245 USB 1.1 for X244/X245";
			case 0x10024878: return "Xilleon 270 HBIU for X270";
			case 0x1002487b: return "Xilleon 242 HBIU for X242";
			case 0x1002487d: return "Xilleon 242 USB 1.1 for X242";
			case 0x10024880: return "Xilleon 254 HBIU for X254";
			case 0x10024881: return "Xilleon 254 USB 1.1 for X254";
			case 0x10024882: return "Xilleon 255 HBIU for X255";
			case 0x10024883: return "Xilleon 255 USB 1.1 for X255";
			case 0x10024884: return "Xilleon 243 HBIU for X243";
			case 0x10024885: return "Xilleon 243 USB 1.1 for X243";
			case 0x10024886: return "Xilleon 233 HBIU for X233";
			case 0x10024887: return "Xilleon 233 USB 1.1 for X233";
			case 0x10024888: return "Xilleon 143 HBIU for X143";
			case 0x10024889: return "Xilleon 143 HBIU for X143L";
			case 0x1002488a: return "Xilleon 143 HBIU for X143S";
			case 0x10024966: return "RV250 [Radeon 9000 Series]";
			case 0x1002496e: return "RV250 [Radeon 9000] (Secondary)";
			case 0x10024a49: return "R420 [Radeon X800 PRO/GTO AGP]";
			case 0x10024a4a: return "R420 [Radeon X800 GT AGP]";
			case 0x10024a4b: return "R420 [Radeon X800 AGP Series]";
			case 0x10024a4d: return "R420 GL [FireGL X3-256]";
			case 0x10024a4e: return "RV420/M18 [Mobility Radeon 9800]";
			case 0x10024a4f: return "R420 [Radeon X850 AGP]";
			case 0x10024a50: return "R420 [Radeon X800 XT Platinum Edition AGP]";
			case 0x10024a54: return "R420 [Radeon X800 VE AGP]";
			case 0x10024a69: return "R420 [Radeon X800 PRO/GTO] (Secondary)";
			case 0x10024a6a: return "R420 [Radeon X800] (Secondary)";
			case 0x10024a6b: return "R420 [Radeon X800 XT AGP] (Secondary)";
			case 0x10024a70: return "R420 [Radeon X800 XT Platinum Edition AGP] (Secondary)";
			case 0x10024a74: return "R420 [Radeon X800 VE] (Secondary)";
			case 0x10024b49: return "R481 [Radeon X850 XT AGP]";
			case 0x10024b4b: return "R481 [Radeon X850 PRO AGP]";
			case 0x10024b4c: return "R481 [Radeon X850 XT Platinum Edition AGP]";
			case 0x10024b69: return "R481 [Radeon X850 XT AGP] (Secondary)";
			case 0x10024b6b: return "R481 [Radeon X850 PRO AGP] (Secondary)";
			case 0x10024b6c: return "R481 [Radeon X850 XT Platinum Edition AGP] (Secondary)";
			case 0x10024c42: return "Mach64 LT [3D Rage LT PRO AGP]";
			case 0x10024c46: return "Rage Mobility 128 AGP 2X/Mobility M3";
			case 0x10024c47: return "3D Rage IIC PCI / Mobility Radeon 7500/7500C";
			case 0x10024c49: return "3D Rage LT PRO PCI";
			case 0x10024c4d: return "Rage Mobility AGP 2x Series";
			case 0x10024c50: return "Rage 3 LT [3D Rage LT PRO PCI]";
			case 0x10024c52: return "M1 [Rage Mobility-M1 PCI]";
			case 0x10024c54: return "264LT [Mach64 LT]";
			case 0x10024c57: return "RV200/M7 [Mobility Radeon 7500]";
			case 0x10024c58: return "RV200/M7 GL [Mobility FireGL 7800]";
			case 0x10024c59: return "RV100/M6 [Rage/Radeon Mobility Series]";
			case 0x10024c66: return "RV250/M9 GL [Mobility FireGL 9000/Radeon 9000]";
			case 0x10024c6e: return "RV250/M9 [Mobility Radeon 9000] (Secondary)";
			case 0x10024d46: return "Rage Mobility 128 AGP 4X/Mobility M4";
			case 0x10024d52: return "Theater 550 PRO PCI [ATI TV Wonder 550]";
			case 0x10024d53: return "Theater 550 PRO PCIe";
			case 0x10024e44: return "R300 [Radeon 9700/9700 PRO]";
			case 0x10024e45: return "R300 [Radeon 9500 PRO/9700]";
			case 0x10024e46: return "R300 [Radeon 9600 TX]";
			case 0x10024e47: return "R300 GL [FireGL X1]";
			case 0x10024e48: return "R350 [Radeon 9800 Series]";
			case 0x10024e49: return "R350 [Radeon 9800]";
			case 0x10024e4a: return "R360 [Radeon 9800 XXL/XT]";
			case 0x10024e4b: return "R350 GL [FireGL X2 AGP Pro]";
			case 0x10024e50: return "RV350/M10 / RV360/M11 [Mobility Radeon 9600 (PRO) / 9700]";
			case 0x10024e51: return "RV350 [Radeon 9550/9600/X1050 Series]";
			case 0x10024e52: return "RV350/M10 [Mobility Radeon 9500/9700 SE]";
			case 0x10024e54: return "RV350/M10 GL [Mobility FireGL T2]";
			case 0x10024e56: return "RV360/M12 [Mobility Radeon 9550]";
			case 0x10024e64: return "R300 [Radeon 9700 PRO] (Secondary)";
			case 0x10024e65: return "R300 [Radeon 9500 PRO] (Secondary)";
			case 0x10024e66: return "RV350 [Radeon 9600] (Secondary)";
			case 0x10024e67: return "R300 GL [FireGL X1] (Secondary)";
			case 0x10024e68: return "R350 [Radeon 9800 PRO] (Secondary)";
			case 0x10024e69: return "R350 [Radeon 9800] (Secondary)";
			case 0x10024e6a: return "RV350 [Radeon 9800 XT] (Secondary)";
			case 0x10024e71: return "RV350/M10 [Mobility Radeon 9600] (Secondary)";
			case 0x10024f72: return "RV250 [Radeon 9000 Series]";
			case 0x10024f73: return "RV250 [Radeon 9000 Series] (Secondary)";
			case 0x10025044: return "All-In-Wonder 128 PCI";
			case 0x10025046: return "Rage 4 [Rage 128 PRO AGP 4X]";
			case 0x10025050: return "Rage 4 [Rage 128 PRO PCI / Xpert 128 PCI]";
			case 0x10025052: return "Rage 4 [Rage 128 PRO AGP 4X]";
			case 0x10025144: return "R100 [Radeon 7200 / All-In-Wonder Radeon]";
			case 0x10025148: return "R200 GL [FireGL 8800]";
			case 0x1002514c: return "R200 [Radeon 8500/8500 LE]";
			case 0x1002514d: return "R200 [Radeon 9100]";
			case 0x10025157: return "RV200 [Radeon 7500/7500 LE]";
			case 0x10025159: return "RV100 [Radeon 7000 / Radeon VE]";
			case 0x1002515e: return "ES1000";
			case 0x10025245: return "Rage 128 GL PCI";
			case 0x10025246: return "Rage 128 (Rage 4) series";
			case 0x1002524b: return "Rage 128 VR PCI";
			case 0x1002524c: return "Rage 128 VR AGP";
			case 0x1002534d: return "Rage 128 4X AGP 4x";
			case 0x10025354: return "Mach 64 VT";
			case 0x10025446: return "Rage 128 PRO Ultra AGP 4x";
			case 0x10025452: return "Rage 128 PRO Ultra4XL VR-R AGP";
			case 0x10025460: return "RV370/M22 [Mobility Radeon X300]";
			case 0x10025461: return "RV370/M22 [Mobility Radeon X300]";
			case 0x10025462: return "RV380/M24C [Mobility Radeon X600 SE]";
			case 0x10025464: return "RV370/M22 GL [Mobility FireGL V3100]";
			case 0x10025549: return "R423 [Radeon X800 GTO]";
			case 0x1002554a: return "R423 [Radeon X800 XT Platinum Edition]";
			case 0x1002554b: return "R423 [Radeon X800 GT/SE]";
			case 0x1002554d: return "R480 [Radeon X800 GTO2/XL]";
			case 0x1002554e: return "R430 [All-In-Wonder X800 GT]";
			case 0x1002554f: return "R430 [Radeon X800]";
			case 0x10025550: return "R423 GL [FireGL V7100]";
			case 0x10025551: return "R423 GL [FireGL V5100]";
			case 0x10025569: return "R423 [Radeon X800 PRO] (Secondary)";
			case 0x1002556b: return "R423 [Radeon X800 GT] (Secondary)";
			case 0x1002556d: return "R480 [Radeon X800 GTO2/XL] (Secondary)";
			case 0x1002556f: return "R430 [Radeon X800] (Secondary)";
			case 0x10025571: return "R423 GL [FireGL V5100] (Secondary)";
			case 0x1002564b: return "RV410/M26 GL [Mobility FireGL V5000]";
			case 0x1002564f: return "RV410/M26 [Mobility Radeon X700 XL]";
			case 0x10025652: return "RV410/M26 [Mobility Radeon X700]";
			case 0x10025653: return "RV410/M26 [Mobility Radeon X700]";
			case 0x10025654: return "Mach64 VT [Video Xpression]";
			case 0x10025655: return "264VT3 [Mach64 VT3]";
			case 0x10025656: return "Mach64 VT4 [Video Xpression+]";
			case 0x10025657: return "RV410 [Radeon X550 XTX / X700]";
			case 0x10025830: return "RS300 Host Bridge";
			case 0x10025831: return "RS300 Host Bridge";
			case 0x10025832: return "RS300 Host Bridge";
			case 0x10025833: return "RS300 Host Bridge";
			case 0x10025834: return "RS300 [Radeon 9100 IGP]";
			case 0x10025835: return "RS300M [Mobility Radeon 9100 IGP]";
			case 0x10025838: return "RS300 AGP Bridge";
			case 0x10025854: return "RS480 [Radeon Xpress 200 Series] (Secondary)";
			case 0x10025874: return "RS480 [Radeon Xpress 1150] (Secondary)";
			case 0x10025940: return "RV280 [Radeon 9200 PRO] (Secondary)";
			case 0x10025941: return "RV280 [Radeon 9200] (Secondary)";
			case 0x10025944: return "RV280 [Radeon 9200 SE PCI]";
			case 0x10025950: return "RS480/RS482/RS485 Host Bridge";
			case 0x10025951: return "RX480/RX482 Host Bridge";
			case 0x10025952: return "RD580 Host Bridge";
			case 0x10025954: return "RS480 [Radeon Xpress 200 Series]";
			case 0x10025955: return "RS480M [Mobility Radeon Xpress 200]";
			case 0x10025956: return "RD790 Host Bridge";
			case 0x10025957: return "RX780/RX790 Host Bridge";
			case 0x10025958: return "RD780 Host Bridge";
			case 0x10025960: return "RV280 [Radeon 9200 PRO / 9250]";
			case 0x10025961: return "RV280 [Radeon 9200]";
			case 0x10025962: return "RV280 [Radeon 9200]";
			case 0x10025964: return "RV280 [Radeon 9200 SE]";
			case 0x10025965: return "RV280 GL [FireMV 2200 PCI]";
			case 0x10025974: return "RS482/RS485 [Radeon Xpress 1100/1150]";
			case 0x10025975: return "RS482M [Mobility Radeon Xpress 200]";
			case 0x10025978: return "RX780/RD790 PCI to PCI bridge (external gfx0 port A)";
			case 0x10025979: return "RD790 PCI to PCI bridge (external gfx0 port B)";
			case 0x1002597a: return "RD790 PCI to PCI bridge (PCI express gpp port A)";
			case 0x1002597b: return "RX780/RD790 PCI to PCI bridge (PCI express gpp port B)";
			case 0x1002597c: return "RD790 PCI to PCI bridge (PCI express gpp port C)";
			case 0x1002597d: return "RX780/RD790 PCI to PCI bridge (PCI express gpp port D)";
			case 0x1002597e: return "RD790 PCI to PCI bridge (PCI express gpp port E)";
			case 0x1002597f: return "RD790 PCI to PCI bridge (PCI express gpp port F)";
			case 0x10025980: return "RD790 PCI to PCI bridge (external gfx1 port A)";
			case 0x10025981: return "RD790 PCI to PCI bridge (external gfx1 port B)";
			case 0x10025982: return "RD790 PCI to PCI bridge (NB-SB link)";
			case 0x10025a10: return "RD890 Northbridge only dual slot (2x16) PCI-e GFX Hydra part";
			case 0x10025a11: return "RD890 Northbridge only single slot PCI-e GFX Hydra part";
			case 0x10025a12: return "RD890 Northbridge only dual slot (2x8) PCI-e GFX Hydra part";
			case 0x10025a13: return "RD890S/SR5650 Host Bridge";
			case 0x10025a14: return "RD9x0/RX980 Host Bridge";
			case 0x10025a15: return "RD890 PCI to PCI bridge (PCI express gpp port A)";
			case 0x10025a16: return "RD890/RD9x0/RX980 PCI to PCI bridge (PCI Express GFX port 0)";
			case 0x10025a17: return "RD890/RD9x0 PCI to PCI bridge (PCI Express GFX port 1)";
			case 0x10025a18: return "RD890/RD9x0/RX980 PCI to PCI bridge (PCI Express GPP Port 0)";
			case 0x10025a19: return "RD890/RD9x0/RX980 PCI to PCI bridge (PCI Express GPP Port 1)";
			case 0x10025a1a: return "RD890/RD9x0/RX980 PCI to PCI bridge (PCI Express GPP Port 2)";
			case 0x10025a1b: return "RD890/RD9x0/RX980 PCI to PCI bridge (PCI Express GPP Port 3)";
			case 0x10025a1c: return "RD890/RD9x0/RX980 PCI to PCI bridge (PCI Express GPP Port 4)";
			case 0x10025a1d: return "RD890/RD9x0/RX980 PCI to PCI bridge (PCI Express GPP Port 5)";
			case 0x10025a1e: return "RD890/RD9x0/RX980 PCI to PCI bridge (PCI Express GPP2 Port 0)";
			case 0x10025a1f: return "RD890/RD990 PCI to PCI bridge (PCI Express GFX2 port 0)";
			case 0x10025a20: return "RD890/RD990 PCI to PCI bridge (PCI Express GFX2 port 1)";
			case 0x10025a23: return "RD890S/RD990 I/O Memory Management Unit (IOMMU)";
			case 0x10025a31: return "RC410 Host Bridge";
			case 0x10025a33: return "RS400 Host Bridge";
			case 0x10025a34: return "RS4xx PCI Express Port [ext gfx]";
			case 0x10025a36: return "RC4xx/RS4xx PCI Express Port 1";
			case 0x10025a37: return "RC4xx/RS4xx PCI Express Port 2";
			case 0x10025a38: return "RC4xx/RS4xx PCI Express Port 3";
			case 0x10025a39: return "RC4xx/RS4xx PCI Express Port 4";
			case 0x10025a3f: return "RC4xx/RS4xx PCI Bridge [int gfx]";
			case 0x10025a41: return "RS400 [Radeon Xpress 200]";
			case 0x10025a42: return "RS400M [Radeon Xpress 200M]";
			case 0x10025a61: return "RC410 [Radeon Xpress 200/1100]";
			case 0x10025a62: return "RC410M [Mobility Radeon Xpress 200M]";
			case 0x10025b60: return "RV370 [Radeon X300]";
			case 0x10025b62: return "RV370 [Radeon X600/X600 SE]";
			case 0x10025b63: return "RV370 [Radeon X300/X550/X1050 Series]";
			case 0x10025b64: return "RV370 GL [FireGL V3100]";
			case 0x10025b65: return "RV370 GL [FireMV 2200]";
			case 0x10025b66: return "RV370X";
			case 0x10025b70: return "RV370 [Radeon X300 SE]";
			case 0x10025b72: return "RV380 [Radeon X300/X550/X1050 Series] (Secondary)";
			case 0x10025b73: return "RV370 [Radeon X300/X550/X1050 Series] (Secondary)";
			case 0x10025b74: return "RV370 GL [FireGL V3100] (Secondary)";
			case 0x10025b75: return "RV370 GL [FireMV 2200] (Secondary)";
			case 0x10025c61: return "RV280/M9+ [Mobility Radeon 9200 AGP]";
			case 0x10025c63: return "RV280/M9+ [Mobility Radeon 9200 AGP]";
			case 0x10025d44: return "RV280 [Radeon 9200 SE] (Secondary)";
			case 0x10025d45: return "RV280 GL [FireMV 2200 PCI] (Secondary)";
			case 0x10025d48: return "R423/M28 [Mobility Radeon X800 XT]";
			case 0x10025d49: return "R423/M28 GL [Mobility FireGL V5100]";
			case 0x10025d4a: return "R423/M28 [Mobility Radeon X800]";
			case 0x10025d4d: return "R480 [Radeon X850 XT Platinum Edition]";
			case 0x10025d4e: return "R480 [Radeon X850 SE]";
			case 0x10025d4f: return "R480 [Radeon X800 GTO]";
			case 0x10025d50: return "R480 GL [FireGL V7200]";
			case 0x10025d52: return "R480 [Radeon X850 XT]";
			case 0x10025d57: return "R423 [Radeon X800 XT]";
			case 0x10025d6d: return "R480 [Radeon X850 XT Platinum Edition] (Secondary)";
			case 0x10025d6f: return "R480 [Radeon X800 GTO] (Secondary)";
			case 0x10025d72: return "R480 [Radeon X850 XT] (Secondary)";
			case 0x10025d77: return "R423 [Radeon X800 XT] (Secondary)";
			case 0x10025e48: return "RV410 GL [FireGL V5000]";
			case 0x10025e49: return "RV410 [Radeon X700 Series]";
			case 0x10025e4a: return "RV410 [Radeon X700 XT]";
			case 0x10025e4b: return "RV410 [Radeon X700 PRO]";
			case 0x10025e4c: return "RV410 [Radeon X700 SE]";
			case 0x10025e4d: return "RV410 [Radeon X700]";
			case 0x10025e4f: return "RV410 [Radeon X700]";
			case 0x10025e6b: return "RV410 [Radeon X700 PRO] (Secondary)";
			case 0x10025e6d: return "RV410 [Radeon X700] (Secondary)";
			case 0x10025f57: return "R423 [Radeon X800 XT]";
			case 0x10026600: return "Mars [Radeon HD 8670A/8670M/8750M / R7 M370]";
			case 0x10026601: return "Mars [Radeon HD 8730M]";
			case 0x10026604: return "Opal XT [Radeon R7 M265/M365X/M465]";
			case 0x10026605: return "Opal PRO [Radeon R7 M260X]";
			case 0x10026606: return "Mars XTX [Radeon HD 8790M]";
			case 0x10026607: return "Mars LE [Radeon HD 8530M / R5 M240]";
			case 0x10026608: return "Oland GL [FirePro W2100]";
			case 0x10026609: return "Oland GL [FirePro W2100 / Barco MXRT 2600]";
			case 0x10026610: return "Oland XT [Radeon HD 8670 / R5 340X OEM / R7 250/350/350X OEM]";
			case 0x10026611: return "Oland [Radeon HD 8570 / R5 430 OEM / R7 240/340 / Radeon 520 OEM]";
			case 0x10026613: return "Oland PRO [Radeon R7 240/340]";
			case 0x10026631: return "Oland";
			case 0x10026640: return "Saturn XT [FirePro M6100]";
			case 0x10026641: return "Saturn PRO [Radeon HD 8930M]";
			case 0x10026646: return "Bonaire XT [Radeon R9 M280X]";
			case 0x10026647: return "Saturn PRO/XT [Radeon R9 M270X/M280X]";
			case 0x10026649: return "Bonaire [FirePro W5100]";
			case 0x1002664d: return "Bonaire [FirePro W5100 / Barco MXRT-5600]";
			case 0x10026650: return "Bonaire";
			case 0x10026651: return "Bonaire";
			case 0x10026658: return "Bonaire XTX [Radeon R7 260X/360]";
			case 0x1002665c: return "Bonaire XT [Radeon HD 7790/8770 / R7 360 / R9 260/360 OEM]";
			case 0x1002665d: return "Bonaire [Radeon R7 200 Series]";
			case 0x1002665f: return "Tobago PRO [Radeon R7 360 / R9 360 OEM]";
			case 0x10026660: return "Sun XT [Radeon HD 8670A/8670M/8690M / R5 M330 / M430 / Radeon 520 Mobile]";
			case 0x10026663: return "Sun PRO [Radeon HD 8570A/8570M]";
			case 0x10026664: return "Jet XT [Radeon R5 M240]";
			case 0x10026665: return "Jet PRO [Radeon R5 M230 / R7 M260DX / Radeon 520 Mobile]";
			case 0x10026667: return "Jet ULT [Radeon R5 M230]";
			case 0x1002666f: return "Sun LE [Radeon HD 8550M / R5 M230]";
			case 0x100266a0: return "Vega 20 [Radeon Instinct]";
			case 0x100266a1: return "Vega 20 WKS GL-XE [Radeon Pro VII]";
			case 0x100266a2: return "Vega 20";
			case 0x100266a3: return "Vega 20 [Radeon Pro Vega II/Radeon Pro Vega II Duo]";
			case 0x100266a7: return "Vega 20 [Radeon Pro Vega 20]";
			case 0x100266af: return "Vega 20 [Radeon VII]";
			case 0x10026704: return "Cayman PRO GL [FirePro V7900]";
			case 0x10026707: return "Cayman LE GL [FirePro V5900]";
			case 0x10026718: return "Cayman XT [Radeon HD 6970]";
			case 0x10026719: return "Cayman PRO [Radeon HD 6950]";
			case 0x1002671c: return "Antilles [Radeon HD 6990]";
			case 0x1002671d: return "Antilles [Radeon HD 6990]";
			case 0x1002671f: return "Cayman CE [Radeon HD 6930]";
			case 0x10026720: return "Blackcomb [Radeon HD 6970M/6990M]";
			case 0x10026738: return "Barts XT [Radeon HD 6870]";
			case 0x10026739: return "Barts PRO [Radeon HD 6850]";
			case 0x1002673e: return "Barts LE [Radeon HD 6790]";
			case 0x10026740: return "Whistler [Radeon HD 6730M/6770M/7690M XT]";
			case 0x10026741: return "Whistler [Radeon HD 6630M/6650M/6750M/7670M/7690M]";
			case 0x10026742: return "Whistler LE [Radeon HD 6610M/7610M]";
			case 0x10026743: return "Whistler [Radeon E6760]";
			case 0x10026749: return "Turks GL [FirePro V4900]";
			case 0x1002674a: return "Turks GL [FirePro V3900]";
			case 0x10026750: return "Onega [Radeon HD 6650A/7650A]";
			case 0x10026751: return "Turks [Radeon HD 7650A/7670A]";
			case 0x10026758: return "Turks XT [Radeon HD 6670/7670]";
			case 0x10026759: return "Turks PRO [Radeon HD 6570/7570/8550 / R5 230]";
			case 0x1002675b: return "Turks [Radeon HD 7600 Series]";
			case 0x1002675d: return "Turks PRO [Radeon HD 7570]";
			case 0x1002675f: return "Turks LE [Radeon HD 5570/6510/7510/8510]";
			case 0x10026760: return "Seymour [Radeon HD 6400M/7400M Series]";
			case 0x10026761: return "Seymour LP [Radeon HD 6430M]";
			case 0x10026763: return "Seymour [Radeon E6460]";
			case 0x10026764: return "Seymour [Radeon HD 6400M Series]";
			case 0x10026765: return "Seymour [Radeon HD 6400M Series]";
			case 0x10026766: return "Caicos";
			case 0x10026767: return "Caicos";
			case 0x10026768: return "Caicos";
			case 0x10026770: return "Caicos [Radeon HD 6450A/7450A]";
			case 0x10026771: return "Caicos XTX [Radeon HD 8490 / R5 235X OEM]";
			case 0x10026772: return "Caicos [Radeon HD 7450A]";
			case 0x10026778: return "Caicos XT [Radeon HD 7470/8470 / R5 235/310 OEM]";
			case 0x10026779: return "Caicos [Radeon HD 6450/7450/8450 / R5 230 OEM]";
			case 0x1002677b: return "Caicos PRO [Radeon HD 7450]";
			case 0x10026780: return "Tahiti XT GL [FirePro W9000]";
			case 0x10026784: return "Tahiti [FirePro Series Graphics Adapter]";
			case 0x10026788: return "Tahiti [FirePro Series Graphics Adapter]";
			case 0x1002678a: return "Tahiti PRO GL [FirePro Series]";
			case 0x10026798: return "Tahiti XT [Radeon HD 7970/8970 OEM / R9 280X]";
			case 0x1002679a: return "Tahiti PRO [Radeon HD 7950/8950 OEM / R9 280]";
			case 0x1002679b: return "Malta [Radeon HD 7990/8990 OEM]";
			case 0x1002679e: return "Tahiti LE [Radeon HD 7870 XT]";
			case 0x1002679f: return "Tahiti";
			case 0x100267a0: return "Hawaii XT GL [FirePro W9100]";
			case 0x100267a1: return "Hawaii PRO GL [FirePro W8100]";
			case 0x100267a2: return "Hawaii GL";
			case 0x100267a8: return "Hawaii";
			case 0x100267a9: return "Hawaii";
			case 0x100267aa: return "Hawaii";
			case 0x100267b0: return "Hawaii XT / Grenada XT [Radeon R9 290X/390X]";
			case 0x100267b1: return "Hawaii PRO [Radeon R9 290/390]";
			case 0x100267b8: return "Hawaii XT [Radeon R9 290X Engineering Sample]";
			case 0x100267b9: return "Vesuvius [Radeon R9 295X2]";
			case 0x100267be: return "Hawaii LE";
			case 0x100267c0: return "Ellesmere [Radeon Pro WX 7100 Mobile]";
			case 0x100267c2: return "Ellesmere [Radeon Pro V7300X / V7350x2]";
			case 0x100267c4: return "Ellesmere [Radeon Pro WX 7100]";
			case 0x100267c7: return "Ellesmere [Radeon Pro WX 5100]";
			case 0x100267ca: return "Ellesmere [Polaris10]";
			case 0x100267cc: return "Ellesmere [Polaris10]";
			case 0x100267cf: return "Ellesmere [Polaris10]";
			case 0x100267d0: return "Ellesmere [Radeon Pro V7300X / V7350x2]";
			case 0x100267d7: return "Ellesmere [Radeon Pro WX 5100 / Barco MXRT-6700]";
			case 0x100267df: return "Ellesmere [Radeon RX 470/480/570/570X/580/580X/590]";
			case 0x100267e0: return "Baffin [Radeon Pro WX 4170]";
			case 0x100267e1: return "Baffin [Polaris11]";
			case 0x100267e3: return "Baffin [Radeon Pro WX 4100]";
			case 0x100267e8: return "Baffin [Radeon Pro WX 4130/4150]";
			case 0x100267e9: return "Baffin [Polaris11]";
			case 0x100267eb: return "Baffin [Radeon Pro V5300X]";
			case 0x100267ef: return "Baffin [Radeon RX 460/560D / Pro 450/455/460/555/555X/560/560X]";
			case 0x100267ff: return "Baffin [Radeon RX 550 640SP / RX 560/560X]";
			case 0x10026800: return "Wimbledon XT [Radeon HD 7970M]";
			case 0x10026801: return "Neptune XT [Radeon HD 8970M]";
			case 0x10026802: return "Wimbledon";
			case 0x10026806: return "Neptune";
			case 0x10026808: return "Pitcairn XT GL [FirePro W7000]";
			case 0x10026809: return "Pitcairn LE GL [FirePro W5000]";
			case 0x10026810: return "Curacao XT / Trinidad XT [Radeon R7 370 / R9 270X/370X]";
			case 0x10026811: return "Curacao PRO [Radeon R7 370 / R9 270/370 OEM]";
			case 0x10026816: return "Pitcairn";
			case 0x10026817: return "Pitcairn";
			case 0x10026818: return "Pitcairn XT [Radeon HD 7870 GHz Edition]";
			case 0x10026819: return "Pitcairn PRO [Radeon HD 7850 / R7 265 / R9 270 1024SP]";
			case 0x10026820: return "Venus XTX [Radeon HD 8890M / R9 M275X/M375X]";
			case 0x10026821: return "Venus XT [Radeon HD 8870M / R9 M270X/M370X]";
			case 0x10026822: return "Venus PRO [Radeon E8860]";
			case 0x10026823: return "Venus PRO [Radeon HD 8850M / R9 M265X]";
			case 0x10026825: return "Heathrow XT [Radeon HD 7870M]";
			case 0x10026826: return "Chelsea LP [Radeon HD 7700M Series]";
			case 0x10026827: return "Heathrow PRO [Radeon HD 7850M/8850M]";
			case 0x10026828: return "Cape Verde PRO [FirePro W600]";
			case 0x10026829: return "Cape Verde";
			case 0x1002682a: return "Venus PRO";
			case 0x1002682b: return "Cape Verde PRO / Venus LE / Tropo PRO-L [Radeon HD 8830M / R7 250 / R7 M465X]";
			case 0x1002682c: return "Cape Verde GL [FirePro W4100]";
			case 0x1002682d: return "Chelsea XT GL [FirePro M4000]";
			case 0x1002682f: return "Chelsea LP [Radeon HD 7730M]";
			case 0x10026835: return "Cape Verde PRX [Radeon R9 255 OEM]";
			case 0x10026837: return "Cape Verde LE [Radeon HD 7730/8730]";
			case 0x1002683d: return "Cape Verde XT [Radeon HD 7770/8760 / R7 250X]";
			case 0x1002683f: return "Cape Verde PRO [Radeon HD 7750/8740 / R7 250E]";
			case 0x10026840: return "Thames [Radeon HD 7500M/7600M Series]";
			case 0x10026841: return "Thames [Radeon HD 7550M/7570M/7650M]";
			case 0x10026842: return "Thames LE [Radeon HD 7000M Series]";
			case 0x10026843: return "Thames [Radeon HD 7670M]";
			case 0x10026860: return "Vega 10 [Radeon Instinct MI25]";
			case 0x10026861: return "Vega 10 XT [Radeon PRO WX 9100]";
			case 0x10026862: return "Vega 10 XT [Radeon PRO SSG]";
			case 0x10026863: return "Vega 10 XTX [Radeon Vega Frontier Edition]";
			case 0x10026864: return "Vega 10 [Radeon Pro V340]";
			case 0x10026867: return "Vega 10 XL [Radeon Pro Vega 56]";
			case 0x10026868: return "Vega 10 [Radeon PRO WX 8100/8200]";
			case 0x10026869: return "Vega 10 XGA [Radeon Pro Vega 48]";
			case 0x1002686a: return "Vega 10 LEA";
			case 0x1002686b: return "Vega 10 XTXA [Radeon Pro Vega 64X]";
			case 0x1002686c: return "Vega 10 [Radeon Instinct MI25 MxGPU]";
			case 0x1002686d: return "Vega 10 GLXTA";
			case 0x1002686e: return "Vega 10 GLXLA";
			case 0x1002687f: return "Vega 10 XL/XT [Radeon RX Vega 56/64]";
			case 0x10026880: return "Lexington [Radeon HD 6550M]";
			case 0x10026888: return "Cypress XT [FirePro V8800]";
			case 0x10026889: return "Cypress PRO [FirePro V7800]";
			case 0x1002688a: return "Cypress XT [FirePro V9800]";
			case 0x1002688c: return "Cypress XT GL [FireStream 9370]";
			case 0x1002688d: return "Cypress PRO GL [FireStream 9350]";
			case 0x10026898: return "Cypress XT [Radeon HD 5870]";
			case 0x10026899: return "Cypress PRO [Radeon HD 5850]";
			case 0x1002689b: return "Cypress PRO [Radeon HD 6800 Series]";
			case 0x1002689c: return "Hemlock [Radeon HD 5970]";
			case 0x1002689d: return "Hemlock [Radeon HD 5970]";
			case 0x1002689e: return "Cypress LE [Radeon HD 5830]";
			case 0x100268a0: return "Broadway XT [Mobility Radeon HD 5870]";
			case 0x100268a1: return "Broadway PRO [Mobility Radeon HD 5850]";
			case 0x100268a8: return "Granville [Radeon HD 6850M/6870M]";
			case 0x100268a9: return "Juniper XT [FirePro V5800]";
			case 0x100268b8: return "Juniper XT [Radeon HD 5770]";
			case 0x100268b9: return "Juniper LE [Radeon HD 5670 640SP Edition]";
			case 0x100268ba: return "Juniper XT [Radeon HD 6770]";
			case 0x100268be: return "Juniper PRO [Radeon HD 5750]";
			case 0x100268bf: return "Juniper PRO [Radeon HD 6750]";
			case 0x100268c0: return "Madison [Mobility Radeon HD 5730 / 6570M]";
			case 0x100268c1: return "Madison [Mobility Radeon HD 5650/5750 / 6530M/6550M]";
			case 0x100268c7: return "Pinewood [Mobility Radeon HD 5570/6550A]";
			case 0x100268c8: return "Redwood XT GL [FirePro V4800]";
			case 0x100268c9: return "Redwood PRO GL [FirePro V3800]";
			case 0x100268d8: return "Redwood XT [Radeon HD 5670/5690/5730]";
			case 0x100268d9: return "Redwood PRO [Radeon HD 5550/5570/5630/6510/6610/7570]";
			case 0x100268da: return "Redwood LE [Radeon HD 5550/5570/5630/6390/6490/7570]";
			case 0x100268de: return "Redwood";
			case 0x100268e0: return "Park [Mobility Radeon HD 5430/5450/5470]";
			case 0x100268e1: return "Park [Mobility Radeon HD 5430]";
			case 0x100268e4: return "Robson CE [Radeon HD 6370M/7370M]";
			case 0x100268e5: return "Robson LE [Radeon HD 6330M]";
			case 0x100268e8: return "Cedar";
			case 0x100268e9: return "Cedar [ATI FirePro (FireGL) Graphics Adapter]";
			case 0x100268f1: return "Cedar GL [FirePro 2460]";
			case 0x100268f2: return "Cedar GL [FirePro 2270]";
			case 0x100268f8: return "Cedar [Radeon HD 7300 Series]";
			case 0x100268f9: return "Cedar [Radeon HD 5000/6000/7350/8350 Series]";
			case 0x100268fa: return "Cedar [Radeon HD 7350/8350 / R5 220]";
			case 0x100268fe: return "Cedar LE";
			case 0x10026900: return "Topaz XT [Radeon R7 M260/M265 / M340/M360 / M440/M445 / 530/535 / 620/625 Mobile]";
			case 0x10026901: return "Topaz PRO [Radeon R5 M255]";
			case 0x10026907: return "Meso XT [Radeon R5 M315]";
			case 0x10026920: return "Amethyst [Radeon R9 M395/ M395X Mac Edition]";
			case 0x10026921: return "Amethyst XT [Radeon R9 M295X / M390X]";
			case 0x10026929: return "Tonga XT GL [FirePro S7150]";
			case 0x1002692b: return "Tonga PRO GL [FirePro W7100]";
			case 0x1002692f: return "Tonga XTV GL [FirePro S7150V]";
			case 0x10026938: return "Tonga XT / Amethyst XT [Radeon R9 380X / R9 M295X]";
			case 0x10026939: return "Tonga PRO [Radeon R9 285/380]";
			case 0x1002693b: return "Tonga PRO GL [FirePro W7100 / Barco MXRT-7600]";
			case 0x1002694c: return "Polaris 22 XT [Radeon RX Vega M GH]";
			case 0x1002694e: return "Polaris 22 XL [Radeon RX Vega M GL]";
			case 0x1002694f: return "Polaris 22 MGL XL [Radeon Pro WX Vega M GL]";
			case 0x10026980: return "Polaris12";
			case 0x10026981: return "Lexa XT [Radeon PRO WX 3200]";
			case 0x10026985: return "Lexa XT [Radeon PRO WX 3100]";
			case 0x10026986: return "Polaris12";
			case 0x10026987: return "Lexa [Radeon 540X/550X/630 / RX 640 / E9171 MCM]";
			case 0x1002698f: return "Lexa XT [Radeon PRO WX 3100 / Barco MXRT 4700]";
			case 0x10026995: return "Lexa XT [Radeon PRO WX 2100]";
			case 0x1002699f: return "Lexa PRO [Radeon 540/540X/550/550X / RX 540X/550/550X]";
			case 0x100269a0: return "Vega 12";
			case 0x100269a1: return "Vega 12";
			case 0x100269a2: return "Vega 12";
			case 0x100269a3: return "Vega 12";
			case 0x100269af: return "Vega 12 [Radeon Pro Vega 20]";
			case 0x10026fdf: return "Polaris 20 XL [Radeon RX 580 2048SP]";
			case 0x1002700f: return "RS100 AGP Bridge";
			case 0x10027010: return "RS200/RS250 AGP Bridge";
			case 0x10027100: return "R520 [Radeon X1800 XT]";
			case 0x10027101: return "R520/M58 [Mobility Radeon X1800 XT]";
			case 0x10027102: return "R520/M58 [Mobility Radeon X1800]";
			case 0x10027104: return "R520 GL [FireGL V7200 / Barco MXTR-5100]";
			case 0x10027109: return "R520 [Radeon X1800 XL]";
			case 0x1002710a: return "R520 [Radeon X1800 GTO]";
			case 0x1002710b: return "R520 [Radeon X1800 GTO]";
			case 0x1002710e: return "R520 GL [FireGL V7300]";
			case 0x1002710f: return "R520 GL [FireGL V7350]";
			case 0x10027120: return "R520 [Radeon X1800] (Secondary)";
			case 0x10027124: return "R520 GL [FireGL V7200] (Secondary)";
			case 0x10027129: return "R520 [Radeon X1800] (Secondary)";
			case 0x1002712e: return "R520 GL [FireGL V7300] (Secondary)";
			case 0x1002712f: return "R520 GL [FireGL V7350] (Secondary)";
			case 0x10027140: return "RV515 [Radeon X1300/X1550/X1600 Series]";
			case 0x10027142: return "RV515 PRO [Radeon X1300/X1550 Series]";
			case 0x10027143: return "RV505 [Radeon X1300/X1550 Series]";
			case 0x10027145: return "RV515/M54 [Mobility Radeon X1400]";
			case 0x10027146: return "RV515 [Radeon X1300/X1550]";
			case 0x10027147: return "RV505 [Radeon X1550 64-bit]";
			case 0x10027149: return "RV515/M52 [Mobility Radeon X1300]";
			case 0x1002714a: return "RV515/M52 [Mobility Radeon X1300]";
			case 0x10027152: return "RV515 GL [FireGL V3300]";
			case 0x10027153: return "RV515 GL [FireGL V3350]";
			case 0x1002715f: return "RV505 CE [Radeon X1550 64-bit]";
			case 0x10027162: return "RV515 PRO [Radeon X1300/X1550 Series] (Secondary)";
			case 0x10027163: return "RV505 [Radeon X1550 Series] (Secondary)";
			case 0x10027166: return "RV515 [Radeon X1300/X1550 Series] (Secondary)";
			case 0x10027167: return "RV515 [Radeon X1550 64-bit] (Secondary)";
			case 0x10027172: return "RV515 GL [FireGL V3300] (Secondary)";
			case 0x10027173: return "RV515 GL [FireGL V3350] (Secondary)";
			case 0x10027181: return "RV516 [Radeon X1600/X1650 Series]";
			case 0x10027183: return "RV516 [Radeon X1300/X1550 Series]";
			case 0x10027186: return "RV516/M64 [Mobility Radeon X1450]";
			case 0x10027187: return "RV516 [Radeon X1300/X1550 Series]";
			case 0x10027188: return "RV516/M64-S [Mobility Radeon X2300]";
			case 0x1002718a: return "RV516/M64 [Mobility Radeon X2300]";
			case 0x1002718b: return "RV516/M62 [Mobility Radeon X1350]";
			case 0x1002718c: return "RV516/M62-CSP64 [Mobility Radeon X1350]";
			case 0x1002718d: return "RV516/M64-CSP128 [Mobility Radeon X1450]";
			case 0x10027193: return "RV516 [Radeon X1550 Series]";
			case 0x10027196: return "RV516/M62-S [Mobility Radeon X1350]";
			case 0x1002719b: return "RV516 GL [FireMV 2250]";
			case 0x1002719f: return "RV516 [Radeon X1550 Series]";
			case 0x100271a0: return "RV516 [Radeon X1300/X1550 Series] (Secondary)";
			case 0x100271a1: return "RV516 [Radeon X1600/X1650 Series] (Secondary)";
			case 0x100271a3: return "RV516 [Radeon X1300/X1550 Series] (Secondary)";
			case 0x100271a7: return "RV516 [Radeon X1300/X1550 Series] (Secondary)";
			case 0x100271bb: return "RV516 GL [FireMV 2250] (Secondary)";
			case 0x100271c0: return "RV530 [Radeon X1600 XT/X1650 GTO]";
			case 0x100271c1: return "RV535 [Radeon X1650 PRO]";
			case 0x100271c2: return "RV530 [Radeon X1600 PRO]";
			case 0x100271c3: return "RV530 [Radeon X1600 PRO]";
			case 0x100271c4: return "RV530/M56 GL [Mobility FireGL V5200]";
			case 0x100271c5: return "RV530/M56-P [Mobility Radeon X1600]";
			case 0x100271c6: return "RV530LE [Radeon X1600/X1650 PRO]";
			case 0x100271c7: return "RV535 [Radeon X1650 PRO]";
			case 0x100271ce: return "RV530 [Radeon X1300 XT/X1600 PRO]";
			case 0x100271d2: return "RV530 GL [FireGL V3400]";
			case 0x100271d4: return "RV530/M66 GL [Mobility FireGL V5250]";
			case 0x100271d5: return "RV530/M66-P [Mobility Radeon X1700]";
			case 0x100271d6: return "RV530/M66-XT [Mobility Radeon X1700]";
			case 0x100271de: return "RV530/M66 [Mobility Radeon X1700/X2500]";
			case 0x100271e0: return "RV530 [Radeon X1600] (Secondary)";
			case 0x100271e1: return "RV535 [Radeon X1650 PRO] (Secondary)";
			case 0x100271e2: return "RV530 [Radeon X1600] (Secondary)";
			case 0x100271e6: return "RV530 [Radeon X1650] (Secondary)";
			case 0x100271e7: return "RV535 [Radeon X1650 PRO] (Secondary)";
			case 0x100271f2: return "RV530 GL [FireGL V3400] (Secondary)";
			case 0x10027210: return "RV550/M71 [Mobility Radeon HD 2300]";
			case 0x10027211: return "RV550/M71 [Mobility Radeon X2300 HD]";
			case 0x10027240: return "R580+ [Radeon X1950 XTX]";
			case 0x10027244: return "R580+ [Radeon X1950 XT]";
			case 0x10027248: return "R580 [Radeon X1950]";
			case 0x10027249: return "R580 [Radeon X1900 XT]";
			case 0x1002724b: return "R580 [Radeon X1900 GT]";
			case 0x1002724e: return "R580 GL [FireGL V7350]";
			case 0x10027269: return "R580 [Radeon X1900 XT] (Secondary)";
			case 0x1002726b: return "R580 [Radeon X1900 GT] (Secondary)";
			case 0x1002726e: return "R580 [AMD Stream Processor] (Secondary)";
			case 0x10027280: return "RV570 [Radeon X1950 PRO]";
			case 0x10027288: return "RV570 [Radeon X1950 GT]";
			case 0x10027291: return "RV560 [Radeon X1650 XT]";
			case 0x10027293: return "RV560 [Radeon X1650 GT]";
			case 0x100272a0: return "RV570 [Radeon X1950 PRO] (Secondary)";
			case 0x100272a8: return "RV570 [Radeon X1950 GT] (Secondary)";
			case 0x100272b1: return "RV560 [Radeon X1650 XT] (Secondary)";
			case 0x100272b3: return "RV560 [Radeon X1650 GT] (Secondary)";
			case 0x10027300: return "Fiji [Radeon R9 FURY / NANO Series]";
			case 0x10027310: return "Navi 10 [Radeon Pro W5700X]";
			case 0x10027312: return "Navi 10 [Radeon Pro W5700]";
			case 0x10027314: return "Navi 10 USB";
			case 0x1002731f: return "Navi 10 [Radeon RX 5600 OEM/5600 XT / 5700/5700 XT]";
			case 0x10027340: return "Navi 14 [Radeon RX 5500/5500M / Pro 5500M]";
			case 0x10027341: return "Navi 14 [Radeon Pro W5500]";
			case 0x10027347: return "Navi 14 [Radeon Pro W5500M]";
			case 0x1002734f: return "Navi 14 [Radeon Pro W5300M]";
			case 0x10027360: return "Navi 12 [Radeon Pro 5600M / V520]";
			case 0x10027362: return "Navi 12 [Radeon Pro V520]";
			case 0x10027388: return "Arcturus GL-XL";
			case 0x1002738c: return "Arcturus GL-XL [AMD Instinct MI100]";
			case 0x1002738e: return "Arcturus GL-XL";
			case 0x100273a3: return "Navi 21 [Radeon PRO W6800]";
			case 0x100273a4: return "Navi 21 USB";
			case 0x100273af: return "Navi 21 [Radeon RX 6900 XT]";
			case 0x100273bf: return "Navi 21 [Radeon RX 6800/6800 XT / 6900 XT]";
			case 0x100273c3: return "Navi 22";
			case 0x100273c4: return "Navi 22 USB";
			case 0x100273df: return "Navi 22 [Radeon RX 6700/6700 XT / 6800M]";
			case 0x100273e0: return "Navi 23";
			case 0x100273e1: return "Navi 23";
			case 0x100273e4: return "Navi 23 USB";
			case 0x100273ff: return "Navi 23 [Radeon RX 6600/6600 XT/6600M]";
			case 0x10027408: return "Aldebaran";
			case 0x1002740c: return "Aldebaran";
			case 0x1002740f: return "Aldebaran";
			case 0x10027833: return "RS350 Host Bridge";
			case 0x10027834: return "RS350 [Radeon 9100 PRO/XT IGP]";
			case 0x10027835: return "RS350M [Mobility Radeon 9000 IGP]";
			case 0x10027838: return "RS350 AGP Bridge";
			case 0x10027910: return "RS690 Host Bridge";
			case 0x10027911: return "RS690/RS740 Host Bridge";
			case 0x10027912: return "RS690/RS740 PCI to PCI Bridge (Internal gfx)";
			case 0x10027913: return "RS690 PCI to PCI Bridge (PCI Express Graphics Port 0)";
			case 0x10027915: return "RS690 PCI to PCI Bridge (PCI Express Port 1)";
			case 0x10027916: return "RS690 PCI to PCI Bridge (PCI Express Port 2)";
			case 0x10027917: return "RS690 PCI to PCI Bridge (PCI Express Port 3)";
			case 0x10027919: return "RS690 HDMI Audio [Radeon Xpress 1200 Series]";
			case 0x1002791e: return "RS690 [Radeon X1200]";
			case 0x1002791f: return "RS690M [Radeon Xpress 1200/1250/1270]";
			case 0x10027930: return "RS600 Host Bridge";
			case 0x10027932: return "RS600 PCI to PCI Bridge (Internal gfx)";
			case 0x10027933: return "RS600 PCI to PCI Bridge (PCI Express Graphics Port 0)";
			case 0x10027935: return "RS600 PCI to PCI Bridge (PCI Express Port 1)";
			case 0x10027936: return "RS600 PCI to PCI Bridge (PCI Express Port 2)";
			case 0x10027937: return "RS690 PCI to PCI Bridge (PCI Express Port 3)";
			case 0x1002793b: return "RS600 HDMI Audio [Radeon Xpress 1250]";
			case 0x1002793f: return "RS690M [Radeon Xpress 1200/1250/1270] (Secondary)";
			case 0x10027941: return "RS600 [Radeon Xpress 1250]";
			case 0x10027942: return "RS600M [Radeon Xpress 1250]";
			case 0x1002796e: return "RS740 [Radeon 2100]";
			case 0x10029400: return "R600 [Radeon HD 2900 PRO/XT]";
			case 0x10029401: return "R600 [Radeon HD 2900 XT]";
			case 0x10029403: return "R600 [Radeon HD 2900 PRO]";
			case 0x10029405: return "R600 [Radeon HD 2900 GT]";
			case 0x1002940a: return "R600 GL [FireGL V8650]";
			case 0x1002940b: return "R600 GL [FireGL V8600]";
			case 0x1002940f: return "R600 GL [FireGL V7600]";
			case 0x10029440: return "RV770 [Radeon HD 4870]";
			case 0x10029441: return "R700 [Radeon HD 4870 X2]";
			case 0x10029442: return "RV770 [Radeon HD 4850]";
			case 0x10029443: return "R700 [Radeon HD 4850 X2]";
			case 0x10029444: return "RV770 GL [FirePro V8750]";
			case 0x10029446: return "RV770 GL [FirePro V7760]";
			case 0x1002944a: return "RV770/M98L [Mobility Radeon HD 4850]";
			case 0x1002944b: return "RV770/M98 [Mobility Radeon HD 4850 X2]";
			case 0x1002944c: return "RV770 LE [Radeon HD 4830]";
			case 0x1002944e: return "RV770 CE [Radeon HD 4710]";
			case 0x10029450: return "RV770 GL [FireStream 9270]";
			case 0x10029452: return "RV770 GL [FireStream 9250]";
			case 0x10029456: return "RV770 GL [FirePro V8700]";
			case 0x1002945a: return "RV770/M98-XT [Mobility Radeon HD 4870]";
			case 0x10029460: return "RV790 [Radeon HD 4890]";
			case 0x10029462: return "RV790 [Radeon HD 4860]";
			case 0x1002946a: return "RV770 GL [FirePro M7750]";
			case 0x10029480: return "RV730/M96 [Mobility Radeon HD 4650/5165]";
			case 0x10029488: return "RV730/M96-XT [Mobility Radeon HD 4670]";
			case 0x10029489: return "RV730/M96 GL [Mobility FireGL V5725]";
			case 0x10029490: return "RV730 XT [Radeon HD 4670]";
			case 0x10029491: return "RV730/M96-CSP [Radeon E4690]";
			case 0x10029495: return "RV730 [Radeon HD 4600 AGP Series]";
			case 0x10029498: return "RV730 PRO [Radeon HD 4650]";
			case 0x1002949c: return "RV730 GL [FirePro V7750]";
			case 0x1002949e: return "RV730 GL [FirePro V5700]";
			case 0x1002949f: return "RV730 GL [FirePro V3750]";
			case 0x100294a0: return "RV740/M97 [Mobility Radeon HD 4830]";
			case 0x100294a1: return "RV740/M97-XT [Mobility Radeon HD 4860]";
			case 0x100294a3: return "RV740/M97 GL [FirePro M7740]";
			case 0x100294b3: return "RV740 PRO [Radeon HD 4770]";
			case 0x100294b4: return "RV740 PRO [Radeon HD 4750]";
			case 0x100294c1: return "RV610 [Radeon HD 2400 PRO/XT]";
			case 0x100294c3: return "RV610 [Radeon HD 2400 PRO]";
			case 0x100294c4: return "RV610 LE [Radeon HD 2400 PRO AGP]";
			case 0x100294c5: return "RV610 [Radeon HD 2400 LE]";
			case 0x100294c7: return "RV610 [Radeon HD 2350]";
			case 0x100294c8: return "RV610/M74 [Mobility Radeon HD 2400 XT]";
			case 0x100294c9: return "RV610/M72-S [Mobility Radeon HD 2400]";
			case 0x100294cb: return "RV610 [Radeon E2400]";
			case 0x100294cc: return "RV610 LE [Radeon HD 2400 PRO PCI]";
			case 0x10029500: return "RV670 [Radeon HD 3850 X2]";
			case 0x10029501: return "RV670 [Radeon HD 3870]";
			case 0x10029504: return "RV670/M88 [Mobility Radeon HD 3850]";
			case 0x10029505: return "RV670 [Radeon HD 3690/3850]";
			case 0x10029506: return "RV670/M88 [Mobility Radeon HD 3850 X2]";
			case 0x10029507: return "RV670 [Radeon HD 3830]";
			case 0x10029508: return "RV670/M88-XT [Mobility Radeon HD 3870]";
			case 0x10029509: return "RV670/M88 [Mobility Radeon HD 3870 X2]";
			case 0x1002950f: return "R680 [Radeon HD 3870 X2]";
			case 0x10029511: return "RV670 GL [FireGL V7700]";
			case 0x10029513: return "RV670 [Radeon HD 3850 X2]";
			case 0x10029515: return "RV670 PRO [Radeon HD 3850 AGP]";
			case 0x10029519: return "RV670 GL [FireStream 9170]";
			case 0x10029540: return "RV710 [Radeon HD 4550]";
			case 0x1002954f: return "RV710 [Radeon HD 4350/4550]";
			case 0x10029552: return "RV710/M92 [Mobility Radeon HD 4330/4350/4550]";
			case 0x10029553: return "RV710/M92 [Mobility Radeon HD 4530/4570/545v]";
			case 0x10029555: return "RV710/M92 [Mobility Radeon HD 4350/4550]";
			case 0x10029557: return "RV711/M93 GL [FirePro RG220]";
			case 0x1002955f: return "RV710/M92 [Mobility Radeon HD 4330]";
			case 0x10029580: return "RV630 [Radeon HD 2600 PRO]";
			case 0x10029581: return "RV630/M76 [Mobility Radeon HD 2600]";
			case 0x10029583: return "RV630/M76 [Mobility Radeon HD 2600 XT/2700]";
			case 0x10029586: return "RV630 XT [Radeon HD 2600 XT AGP]";
			case 0x10029587: return "RV630 PRO [Radeon HD 2600 PRO AGP]";
			case 0x10029588: return "RV630 XT [Radeon HD 2600 XT]";
			case 0x10029589: return "RV630 PRO [Radeon HD 2600 PRO]";
			case 0x1002958a: return "RV630 [Radeon HD 2600 X2]";
			case 0x1002958b: return "RV630/M76 [Mobility Radeon HD 2600 XT]";
			case 0x1002958c: return "RV630 GL [FireGL V5600]";
			case 0x1002958d: return "RV630 GL [FireGL V3600]";
			case 0x10029591: return "RV635/M86 [Mobility Radeon HD 3650]";
			case 0x10029593: return "RV635/M86 [Mobility Radeon HD 3670]";
			case 0x10029595: return "RV635/M86 GL [Mobility FireGL V5700]";
			case 0x10029596: return "RV635 PRO [Radeon HD 3650 AGP]";
			case 0x10029597: return "RV635 PRO [Radeon HD 3650 AGP]";
			case 0x10029598: return "RV635 [Radeon HD 3650/3750/4570/4580]";
			case 0x10029599: return "RV635 PRO [Radeon HD 3650 AGP]";
			case 0x100295c0: return "RV620 PRO [Radeon HD 3470]";
			case 0x100295c2: return "RV620/M82 [Mobility Radeon HD 3410/3430]";
			case 0x100295c4: return "RV620/M82 [Mobility Radeon HD 3450/3470]";
			case 0x100295c5: return "RV620 LE [Radeon HD 3450]";
			case 0x100295c6: return "RV620 LE [Radeon HD 3450 AGP]";
			case 0x100295c9: return "RV620 LE [Radeon HD 3450 PCI]";
			case 0x100295cc: return "RV620 GL [FirePro V3700]";
			case 0x100295cd: return "RV620 GL [FirePro 2450]";
			case 0x100295cf: return "RV620 GL [FirePro 2260]";
			case 0x1002960f: return "RS780 HDMI Audio [Radeon 3000/3100 / HD 3200/3300]";
			case 0x10029610: return "RS780 [Radeon HD 3200]";
			case 0x10029611: return "RS780C [Radeon 3100]";
			case 0x10029612: return "RS780M [Mobility Radeon HD 3200]";
			case 0x10029613: return "RS780MC [Mobility Radeon HD 3100]";
			case 0x10029614: return "RS780D [Radeon HD 3300]";
			case 0x10029615: return "RS780E [Radeon HD 3200]";
			case 0x10029616: return "RS780L [Radeon 3000]";
			case 0x10029640: return "Sumo [Radeon HD 6550D]";
			case 0x10029641: return "Sumo [Radeon HD 6620G]";
			case 0x10029642: return "SuperSumo [Radeon HD 6370D]";
			case 0x10029643: return "SuperSumo [Radeon HD 6380G]";
			case 0x10029644: return "SuperSumo [Radeon HD 6410D]";
			case 0x10029645: return "SuperSumo [Radeon HD 6410D]";
			case 0x10029647: return "Sumo [Radeon HD 6520G]";
			case 0x10029648: return "Sumo [Radeon HD 6480G]";
			case 0x10029649: return "SuperSumo [Radeon HD 6480G]";
			case 0x1002964a: return "Sumo [Radeon HD 6530D]";
			case 0x1002964b: return "Sumo";
			case 0x1002964c: return "Sumo";
			case 0x1002964e: return "Sumo";
			case 0x1002964f: return "Sumo";
			case 0x1002970f: return "RS880 HDMI Audio [Radeon HD 4200 Series]";
			case 0x10029710: return "RS880 [Radeon HD 4200]";
			case 0x10029712: return "RS880M [Mobility Radeon HD 4225/4250]";
			case 0x10029713: return "RS880M [Mobility Radeon HD 4100]";
			case 0x10029714: return "RS880 [Radeon HD 4290]";
			case 0x10029715: return "RS880 [Radeon HD 4250]";
			case 0x10029802: return "Wrestler [Radeon HD 6310]";
			case 0x10029803: return "Wrestler [Radeon HD 6310]";
			case 0x10029804: return "Wrestler [Radeon HD 6250]";
			case 0x10029805: return "Wrestler [Radeon HD 6250]";
			case 0x10029806: return "Wrestler [Radeon HD 6320]";
			case 0x10029807: return "Wrestler [Radeon HD 6290]";
			case 0x10029808: return "Wrestler [Radeon HD 7340]";
			case 0x10029809: return "Wrestler [Radeon HD 7310]";
			case 0x1002980a: return "Wrestler [Radeon HD 7290]";
			case 0x10029830: return "Kabini [Radeon HD 8400 / R3 Series]";
			case 0x10029831: return "Kabini [Radeon HD 8400E]";
			case 0x10029832: return "Kabini [Radeon HD 8330]";
			case 0x10029833: return "Kabini [Radeon HD 8330E]";
			case 0x10029834: return "Kabini [Radeon HD 8210]";
			case 0x10029835: return "Kabini [Radeon HD 8310E]";
			case 0x10029836: return "Kabini [Radeon HD 8280 / R3 Series]";
			case 0x10029837: return "Kabini [Radeon HD 8280E]";
			case 0x10029838: return "Kabini [Radeon HD 8240 / R3 Series]";
			case 0x10029839: return "Kabini [Radeon HD 8180]";
			case 0x1002983d: return "Temash [Radeon HD 8250/8280G]";
			case 0x10029840: return "Kabini HDMI/DP Audio";
			case 0x10029850: return "Mullins [Radeon R3 Graphics]";
			case 0x10029851: return "Mullins [Radeon R4/R5 Graphics]";
			case 0x10029852: return "Mullins [Radeon R2 Graphics]";
			case 0x10029853: return "Mullins [Radeon R2 Graphics]";
			case 0x10029854: return "Mullins [Radeon R3E Graphics]";
			case 0x10029855: return "Mullins [Radeon R6 Graphics]";
			case 0x10029856: return "Mullins [Radeon R1E/R2E Graphics]";
			case 0x10029857: return "Mullins [Radeon APU XX-2200M with R2 Graphics]";
			case 0x10029858: return "Mullins";
			case 0x10029859: return "Mullins";
			case 0x1002985a: return "Mullins";
			case 0x1002985b: return "Mullins";
			case 0x1002985c: return "Mullins";
			case 0x1002985d: return "Mullins";
			case 0x1002985e: return "Mullins";
			case 0x1002985f: return "Mullins";
			case 0x10029874: return "Wani [Radeon R5/R6/R7 Graphics]";
			case 0x10029890: return "Amur";
			case 0x100298c0: return "Nolan";
			case 0x100298e4: return "Stoney [Radeon R2/R3/R4/R5 Graphics]";
			case 0x10029900: return "Trinity [Radeon HD 7660G]";
			case 0x10029901: return "Trinity [Radeon HD 7660D]";
			case 0x10029902: return "Trinity HDMI Audio Controller";
			case 0x10029903: return "Trinity [Radeon HD 7640G]";
			case 0x10029904: return "Trinity [Radeon HD 7560D]";
			case 0x10029905: return "Trinity GL [FirePro A300]";
			case 0x10029906: return "Trinity GL [FirePro A320]";
			case 0x10029907: return "Trinity [Radeon HD 7620G]";
			case 0x10029908: return "Trinity [Radeon HD 7600G]";
			case 0x10029909: return "Trinity [Radeon HD 7500G]";
			case 0x1002990a: return "Trinity [Radeon HD 7500G]";
			case 0x1002990b: return "Richland [Radeon HD 8650G]";
			case 0x1002990c: return "Richland [Radeon HD 8670D]";
			case 0x1002990d: return "Richland [Radeon HD 8550G]";
			case 0x1002990e: return "Richland [Radeon HD 8570D]";
			case 0x1002990f: return "Richland [Radeon HD 8610G]";
			case 0x10029910: return "Trinity [Radeon HD 7660G]";
			case 0x10029913: return "Trinity [Radeon HD 7640G]";
			case 0x10029917: return "Trinity [Radeon HD 7620G]";
			case 0x10029918: return "Trinity [Radeon HD 7600G]";
			case 0x10029919: return "Trinity [Radeon HD 7500G]";
			case 0x1002991e: return "Bishop [Xbox One S APU]";
			case 0x10029920: return "Liverpool [Playstation 4 APU]";
			case 0x10029921: return "Liverpool HDMI/DP Audio Controller";
			case 0x10029922: return "Starshp";
			case 0x10029923: return "Starsha2 [Kingston/Clayton]";
			case 0x10029924: return "Gladius";
			case 0x10029925: return "Kingston/Clayton/Jupiter/Gladius/Montego HDMI Controller";
			case 0x10029926: return "Jupiter";
			case 0x10029990: return "Trinity 2 [Radeon HD 7520G]";
			case 0x10029991: return "Trinity 2 [Radeon HD 7540D]";
			case 0x10029992: return "Trinity 2 [Radeon HD 7420G]";
			case 0x10029993: return "Trinity 2 [Radeon HD 7480D]";
			case 0x10029994: return "Trinity 2 [Radeon HD 7400G]";
			case 0x10029995: return "Richland [Radeon HD 8450G]";
			case 0x10029996: return "Richland [Radeon HD 8470D]";
			case 0x10029997: return "Richland [Radeon HD 8350G]";
			case 0x10029998: return "Richland [Radeon HD 8370D]";
			case 0x10029999: return "Richland [Radeon HD 8510G]";
			case 0x1002999a: return "Richland [Radeon HD 8410G]";
			case 0x1002999b: return "Richland [Radeon HD 8310G]";
			case 0x1002999c: return "Richland [Radeon HD 8650D]";
			case 0x1002999d: return "Richland [Radeon HD 8550D]";
			case 0x100299a0: return "Trinity 2 [Radeon HD 7520G]";
			case 0x100299a2: return "Trinity 2 [Radeon HD 7420G]";
			case 0x100299a4: return "Trinity 2 [Radeon HD 7400G]";
			case 0x1002aa00: return "R600 HDMI Audio [Radeon HD 2900 GT/PRO/XT]";
			case 0x1002aa01: return "RV635 HDMI Audio [Radeon HD 3650/3730/3750]";
			case 0x1002aa08: return "RV630 HDMI Audio [Radeon HD 2600 PRO/XT / HD 3610]";
			case 0x1002aa10: return "RV610 HDMI Audio [Radeon HD 2350 PRO / 2400 PRO/XT / HD 3410]";
			case 0x1002aa18: return "RV670/680 HDMI Audio [Radeon HD 3690/3800 Series]";
			case 0x1002aa20: return "RV635 HDMI Audio [Radeon HD 3650/3730/3750]";
			case 0x1002aa28: return "RV620 HDMI Audio [Radeon HD 3450/3470/3550/3570]";
			case 0x1002aa30: return "RV770 HDMI Audio [Radeon HD 4850/4870]";
			case 0x1002aa38: return "RV710/730 HDMI Audio [Radeon HD 4000 series]";
			case 0x1002aa50: return "Cypress HDMI Audio [Radeon HD 5830/5850/5870 / 6850/6870 Rebrand]";
			case 0x1002aa58: return "Juniper HDMI Audio [Radeon HD 5700 Series]";
			case 0x1002aa60: return "Redwood HDMI Audio [Radeon HD 5000 Series]";
			case 0x1002aa68: return "Cedar HDMI Audio [Radeon HD 5400/6300/7300 Series]";
			case 0x1002aa80: return "Cayman/Antilles HDMI Audio [Radeon HD 6930/6950/6970/6990]";
			case 0x1002aa88: return "Barts HDMI Audio [Radeon HD 6790/6850/6870 / 7720 OEM]";
			case 0x1002aa90: return "Turks HDMI Audio [Radeon HD 6500/6600 / 6700M Series]";
			case 0x1002aa98: return "Caicos HDMI Audio [Radeon HD 6450 / 7450/8450/8490 OEM / R5 230/235/235X OEM]";
			case 0x1002aaa0: return "Tahiti HDMI Audio [Radeon HD 7870 XT / 7950/7970]";
			case 0x1002aab0: return "Oland/Hainan/Cape Verde/Pitcairn HDMI Audio [Radeon HD 7000 Series]";
			case 0x1002aab8: return "Tiran HDMI Audio";
			case 0x1002aac0: return "Tobago HDMI Audio [Radeon R7 360 / R9 360 OEM]";
			case 0x1002aac8: return "Hawaii HDMI Audio [Radeon R9 290/290X / 390/390X]";
			case 0x1002aad8: return "Tonga HDMI Audio [Radeon R9 285/380]";
			case 0x1002aae0: return "Baffin HDMI/DP Audio [Radeon RX 550 640SP / RX 560/560X]";
			case 0x1002aae8: return "Fiji HDMI/DP Audio [Radeon R9 Nano / FURY/FURY X]";
			case 0x1002aaf0: return "Ellesmere HDMI Audio [Radeon RX 470/480 / 570/580/590]";
			case 0x1002aaf8: return "Vega 10 HDMI Audio [Radeon Vega 56/64]";
			case 0x1002ab00: return "Baffin HDMI/DP Audio [Radeon RX 550 640SP / RX 560/560X]";
			case 0x1002ab08: return "Polaris 22 HDMI Audio";
			case 0x1002ab10: return "Lexa HDMI Audio";
			case 0x1002ab18: return "Vega 12 HDMI Audio";
			case 0x1002ab20: return "Vega 20 HDMI Audio [Radeon VII]";
			case 0x1002ab28: return "Navi 21 HDMI Audio [Radeon RX 6800/6800 XT / 6900 XT]";
			case 0x1002ab38: return "Navi 10 HDMI Audio";
			case 0x1002ac00: return "Theater 506 World-Wide Analog Decoder";
			case 0x1002ac01: return "Theater 506 World-Wide Analog Decoder";
			case 0x1002ac02: return "TV Wonder HD 600 PCIe";
			case 0x1002ac03: return "Theater 506 PCIe";
			case 0x1002ac04: return "Theater 506 USB";
			case 0x1002ac05: return "Theater 506 USB";
			case 0x1002ac06: return "Theater 506 External USB";
			case 0x1002ac07: return "Theater 506 External USB";
			case 0x1002ac08: return "Theater 506A World-Wide Analog Decoder + Demodulator";
			case 0x1002ac09: return "Theater 506A World-Wide Analog Decoder + Demodulator";
			case 0x1002ac0a: return "Theater 506A PCIe";
			case 0x1002ac0b: return "Theater 506A PCIe";
			case 0x1002ac0c: return "Theater 506A USB";
			case 0x1002ac0d: return "Theater 506A USB";
			case 0x1002ac0e: return "Theater 506A External USB";
			case 0x1002ac0f: return "Theater 506A External USB";
			case 0x1002ac12: return "Theater HD T507 (DVB-T) TV tuner/capture device";
			case 0x1002cab0: return "RS100 Host Bridge";
			case 0x1002cab2: return "RS200 Host Bridge";
			case 0x1002cab3: return "RS250 Host Bridge";
			case 0x1002cbb2: return "RS200 Host Bridge";
			case 0x10030201: return "US201";
			case 0x10040005: return "82C592-FC1";
			case 0x10040006: return "82C593-FC1";
			case 0x10040007: return "82C594-AFC2";
			case 0x10040008: return "82C596/7 [Wildcat]";
			case 0x10040009: return "82C597-AFC2";
			case 0x1004000c: return "82C541 [Lynx]";
			case 0x1004000d: return "82C543 [Lynx]";
			case 0x10040101: return "82C532";
			case 0x10040102: return "82C534 [Eagle]";
			case 0x10040103: return "82C538";
			case 0x10040104: return "82C535";
			case 0x10040105: return "82C147";
			case 0x10040200: return "82C975";
			case 0x10040280: return "82C925";
			case 0x10040304: return "QSound ThunderBird PCI Audio";
			case 0x10040305: return "QSound ThunderBird PCI Audio Gameport";
			case 0x10040306: return "QSound ThunderBird PCI Audio Support Registers";
			case 0x10040307: return "SAA7785 ThunderBird PCI Audio";
			case 0x10040308: return "SAA7785 ThunderBird PCI Audio Gameport";
			case 0x10040702: return "VAS96011 [Golden Gate II]";
			case 0x10040703: return "Tollgate";
			case 0x10052064: return "ALG2032/2064";
			case 0x10052128: return "ALG2364A";
			case 0x10052301: return "ALG2301";
			case 0x10052302: return "ALG2302";
			case 0x10052364: return "ALG2364";
			case 0x10052464: return "ALG2364A";
			case 0x10052501: return "ALG2564A/25128A";
			case 0x100b0001: return "DP83810";
			case 0x100b0002: return "87415/87560 IDE";
			case 0x100b000e: return "87560 Legacy I/O";
			case 0x100b000f: return "FireWire Controller";
			case 0x100b0011: return "NS87560 National PCI System I/O";
			case 0x100b0012: return "USB Controller";
			case 0x100b0020: return "DP83815 (MacPhyter) Ethernet Controller";
			case 0x100b0021: return "PC87200 PCI to ISA Bridge";
			case 0x100b0022: return "DP83820 10/100/1000 Ethernet Controller";
			case 0x100b0028: return "Geode GX2 Host Bridge";
			case 0x100b002a: return "CS5535 South Bridge";
			case 0x100b002b: return "CS5535 ISA bridge";
			case 0x100b002d: return "CS5535 IDE";
			case 0x100b002e: return "CS5535 Audio";
			case 0x100b002f: return "CS5535 USB";
			case 0x100b0030: return "Geode GX2 Graphics Processor";
			case 0x100b0035: return "DP83065 [Saturn] 10/100/1000 Ethernet Controller";
			case 0x100b0500: return "SCx200 Bridge";
			case 0x100b0501: return "SCx200 SMI";
			case 0x100b0502: return "SCx200, SC1100 IDE controller";
			case 0x100b0503: return "SCx200, SC1100 Audio Controller";
			case 0x100b0504: return "SCx200 Video";
			case 0x100b0505: return "SCx200 XBus";
			case 0x100b0510: return "SC1100 Bridge";
			case 0x100b0511: return "SC1100 SMI & ACPI";
			case 0x100b0515: return "SC1100 XBus";
			case 0x100bd001: return "87410 IDE";
			case 0x100c3202: return "ET4000/W32p rev A";
			case 0x100c3205: return "ET4000/W32p rev B";
			case 0x100c3206: return "ET4000/W32p rev C";
			case 0x100c3207: return "ET4000/W32p rev D";
			case 0x100c3208: return "ET6000";
			case 0x100c4702: return "ET6300";
			case 0x100e9000: return "P9000 Viper";
			case 0x100e9001: return "P9000 Viper";
			case 0x100e9002: return "P9000 Viper";
			case 0x100e9100: return "P9100 Viper Pro/SE";
			case 0x10110001: return "DECchip 21050";
			case 0x10110002: return "DECchip 21040 [Tulip]";
			case 0x10110004: return "DECchip 21030 [TGA]";
			case 0x10110007: return "NVRAM [Zephyr NVRAM]";
			case 0x10110008: return "KZPSA [KZPSA]";
			case 0x10110009: return "DECchip 21140 [FasterNet]";
			case 0x1011000a: return "21230 Video Codec";
			case 0x1011000d: return "PBXGB [TGA2]";
			case 0x1011000f: return "PCI-to-PDQ Interface Chip [PFI] FDDI (DEFPA)";
			case 0x10110014: return "DECchip 21041 [Tulip Pass 3]";
			case 0x10110016: return "ATMworks 350 Adapter [OPPO] (DGLPB)";
			case 0x10110017: return "PV-PCI Graphics Controller (ZLXp-L)";
			case 0x10110018: return "Memory Channel interface";
			case 0x10110019: return "DECchip 21142/43";
			case 0x1011001a: return "Farallon PN9000SX Gigabit Ethernet";
			case 0x10110021: return "DECchip 21052";
			case 0x10110022: return "DECchip 21150";
			case 0x10110023: return "DECchip 21150";
			case 0x10110024: return "DECchip 21152";
			case 0x10110025: return "DECchip 21153";
			case 0x10110026: return "DECchip 21154";
			case 0x10110034: return "56k Modem Cardbus";
			case 0x10110045: return "DECchip 21553";
			case 0x10110046: return "DECchip 21554";
			case 0x10111065: return "StrongARM DC21285";
			case 0x10130038: return "GD 7548";
			case 0x10130040: return "GD 7555 Flat Panel GUI Accelerator";
			case 0x1013004c: return "GD 7556 Video/Graphics LCD/CRT Ctrlr";
			case 0x101300a0: return "GD 5430/40 [Alpine]";
			case 0x101300a2: return "GD 5432 [Alpine]";
			case 0x101300a4: return "GD 5434-4 [Alpine]";
			case 0x101300a8: return "GD 5434-8 [Alpine]";
			case 0x101300ac: return "GD 5436 [Alpine]";
			case 0x101300b0: return "GD 5440";
			case 0x101300b8: return "GD 5446";
			case 0x101300bc: return "GD 5480";
			case 0x101300d0: return "GD 5462";
			case 0x101300d2: return "GD 5462 [Laguna I]";
			case 0x101300d4: return "GD 5464 [Laguna]";
			case 0x101300d5: return "GD 5464 BD [Laguna]";
			case 0x101300d6: return "GD 5465 [Laguna]";
			case 0x101300e8: return "GD 5436U";
			case 0x10131100: return "CL 6729";
			case 0x10131110: return "PD 6832 PCMCIA/CardBus Ctrlr";
			case 0x10131112: return "PD 6834 PCMCIA/CardBus Ctrlr";
			case 0x10131113: return "PD 6833 PCMCIA/CardBus Ctrlr";
			case 0x10131200: return "GD 7542 [Nordic]";
			case 0x10131202: return "GD 7543 [Viking]";
			case 0x10131204: return "GD 7541 [Nordic Light]";
			case 0x10134000: return "MD 5620 [CLM Data Fax Voice]";
			case 0x10134400: return "CD 4400";
			case 0x10136001: return "CS 4610/11 [CrystalClear SoundFusion Audio Accelerator]";
			case 0x10136003: return "CS 4614/22/24/30 [CrystalClear SoundFusion Audio Accelerator]";
			case 0x10136004: return "CS 4614/22/24 [CrystalClear SoundFusion Audio Accelerator]";
			case 0x10136005: return "Crystal CS4281 PCI Audio";
			case 0x10140002: return "PCI to MCA Bridge";
			case 0x10140005: return "Processor to I/O Controller [Alta Lite]";
			case 0x10140007: return "Processor to I/O Controller [Alta MP]";
			case 0x1014000a: return "PCI to ISA Bridge (IBM27-82376) [Fire Coral]";
			case 0x10140017: return "CPU to PCI Bridge";
			case 0x10140018: return "TR Auto LANstreamer";
			case 0x1014001b: return "GXT-150P";
			case 0x1014001c: return "Carrera";
			case 0x1014001d: return "SCSI-2 FAST PCI Adapter (82G2675)";
			case 0x10140020: return "GXT1000 Graphics Adapter";
			case 0x10140022: return "PCI to PCI Bridge (IBM27-82351)";
			case 0x1014002d: return "Processor to I/O Controller [Python]";
			case 0x1014002e: return "SCSI RAID Adapter [ServeRAID]";
			case 0x10140031: return "2 Port Serial Adapter";
			case 0x10140036: return "PCI to 32-bit LocalBus Bridge [Miami]";
			case 0x10140037: return "PowerPC to PCI Bridge (IBM27-82660)";
			case 0x1014003a: return "CPU to PCI Bridge";
			case 0x1014003c: return "GXT250P/GXT255P Graphics Adapter";
			case 0x1014003e: return "16/4 Token ring UTP/STP controller";
			case 0x10140045: return "SSA Adapter";
			case 0x10140046: return "MPIC interrupt controller";
			case 0x10140047: return "PCI to PCI Bridge";
			case 0x10140048: return "PCI to PCI Bridge";
			case 0x10140049: return "Warhead SCSI Controller";
			case 0x1014004e: return "ATM Controller (14104e00)";
			case 0x1014004f: return "ATM Controller (14104f00)";
			case 0x10140050: return "ATM Controller (14105000)";
			case 0x10140053: return "25 MBit ATM Controller";
			case 0x10140054: return "GXT500P/GXT550P Graphics Adapter";
			case 0x10140057: return "MPEG PCI Bridge";
			case 0x10140058: return "SSA Adapter [Advanced SerialRAID/X]";
			case 0x1014005e: return "GXT800P Graphics Adapter";
			case 0x1014007c: return "ATM Controller (14107c00)";
			case 0x1014007d: return "3780IDSP [MWave]";
			case 0x1014008b: return "EADS PCI to PCI Bridge";
			case 0x1014008e: return "GXT3000P Graphics Adapter";
			case 0x10140090: return "GXT 3000P";
			case 0x10140091: return "SSA Adapter";
			case 0x10140095: return "20H2999 PCI Docking Bridge";
			case 0x10140096: return "Chukar chipset SCSI controller";
			case 0x1014009f: return "PCI 4758 Cryptographic Accelerator";
			case 0x101400a5: return "ATM Controller (1410a500)";
			case 0x101400a6: return "ATM 155MBPS MM Controller (1410a600)";
			case 0x101400b7: return "GXT2000P Graphics Adapter";
			case 0x101400b8: return "GXT2000P Graphics Adapter";
			case 0x101400be: return "ATM 622MBPS Controller (1410be00)";
			case 0x101400dc: return "Advanced Systems Management Adapter (ASMA)";
			case 0x101400fc: return "CPC710 Dual Bridge and Memory Controller (PCI-64)";
			case 0x10140105: return "CPC710 Dual Bridge and Memory Controller (PCI-32)";
			case 0x1014010f: return "Remote Supervisor Adapter (RSA)";
			case 0x10140142: return "Yotta Video Compositor Input";
			case 0x10140144: return "Yotta Video Compositor Output";
			case 0x10140156: return "405GP PLB to PCI Bridge";
			case 0x1014015e: return "622Mbps ATM PCI Adapter";
			case 0x10140160: return "64bit/66MHz PCI ATM 155 MMF";
			case 0x1014016e: return "GXT4000P Graphics Adapter";
			case 0x10140170: return "GXT6000P Graphics Adapter";
			case 0x1014017d: return "GXT300P Graphics Adapter";
			case 0x10140180: return "Snipe chipset SCSI controller";
			case 0x10140188: return "EADS-X PCI-X to PCI-X Bridge";
			case 0x101401a7: return "PCI-X to PCI-X Bridge";
			case 0x101401bd: return "ServeRAID Controller";
			case 0x101401c1: return "64bit/66MHz PCI ATM 155 UTP";
			case 0x101401e6: return "Cryptographic Accelerator";
			case 0x101401ef: return "PowerPC 440GP PCI Bridge";
			case 0x101401ff: return "10/100 Mbps Ethernet";
			case 0x10140219: return "Multiport Serial Adapter";
			case 0x1014021b: return "GXT6500P Graphics Adapter";
			case 0x1014021c: return "GXT4500P Graphics Adapter";
			case 0x10140233: return "GXT135P Graphics Adapter";
			case 0x1014028c: return "Citrine chipset SCSI controller";
			case 0x101402a1: return "Calgary PCI-X Host Bridge";
			case 0x101402bd: return "Obsidian chipset SCSI controller";
			case 0x10140302: return "Winnipeg PCI-X Host Bridge";
			case 0x10140308: return "CalIOC2 PCI-E Root Port";
			case 0x10140311: return "FC 5740/1954 4-Port 10/100/1000 Base-TX PCI-X Adapter for POWER";
			case 0x10140314: return "ZISC 036 Neural accelerator card";
			case 0x1014032d: return "Axon - Cell Companion Chip";
			case 0x10140339: return "Obsidian-E PCI-E SCSI controller";
			case 0x1014033d: return "PCI-E IPR SAS Adapter (FPGA)";
			case 0x1014034a: return "PCI-E IPR SAS Adapter (ASIC)";
			case 0x101403dc: return "POWER8 Host Bridge (PHB3)";
			case 0x1014044b: return "GenWQE Accelerator Adapter";
			case 0x101404aa: return "Flash Adapter 90 (PCIe2 0.9TB)";
			case 0x101404c1: return "POWER9 Host Bridge (PHB4)";
			case 0x101404da: return "PCI-E IPR SAS+ Adapter (ASIC)";
			case 0x101404ed: return "Internal Shared Memory (ISM) virtual PCI device";
			case 0x10143022: return "QLA3022 Network Adapter";
			case 0x10144022: return "QLA3022 Network Adapter";
			case 0x1014ffff: return "MPIC-2 interrupt controller";
			case 0x10175343: return "SPEA 3D Accelerator";
			case 0x101a0005: return "100VG ethernet";
			case 0x101a0007: return "BYNET BIC4G/2C/2G";
			case 0x101a0009: return "PQS Memory Controller";
			case 0x101a000a: return "BYNET BPCI Adapter";
			case 0x101a000b: return "BYNET 4 Port BYA Switch (BYA4P)";
			case 0x101a000c: return "BYNET 4 Port BYA Switch (BYA4G)";
			case 0x101a0010: return "NCR AMC Memory Controller";
			case 0x101a1dc1: return "BYNET BIC2M/BIC4M/BYA4M";
			case 0x101a1fa8: return "BYNET Multi-port BIC Adapter (XBIC Based)";
			case 0x101b0452: return "VSC452 [SuperBMC]";
			case 0x101c0193: return "33C193A";
			case 0x101c0196: return "33C196A";
			case 0x101c0197: return "33C197A";
			case 0x101c0296: return "33C296A";
			case 0x101c3193: return "7193";
			case 0x101c3197: return "7197";
			case 0x101c3296: return "33C296A";
			case 0x101c4296: return "34C296";
			case 0x101c9710: return "Pipeline 9710";
			case 0x101c9712: return "Pipeline 9712";
			case 0x101cc24a: return "90C";
			case 0x101e0009: return "MegaRAID 428 Ultra RAID Controller (rev 03)";
			case 0x101e1960: return "MegaRAID";
			case 0x101e9010: return "MegaRAID 428 Ultra RAID Controller";
			case 0x101e9030: return "EIDE Controller";
			case 0x101e9031: return "EIDE Controller";
			case 0x101e9032: return "EIDE & SCSI Controller";
			case 0x101e9033: return "SCSI Controller";
			case 0x101e9040: return "Multimedia card";
			case 0x101e9060: return "MegaRAID 434 Ultra GT RAID Controller";
			case 0x101e9063: return "MegaRAC";
			case 0x10221100: return "K8 [Athlon64/Opteron] HyperTransport Technology Configuration";
			case 0x10221101: return "K8 [Athlon64/Opteron] Address Map";
			case 0x10221102: return "K8 [Athlon64/Opteron] DRAM Controller";
			case 0x10221103: return "K8 [Athlon64/Opteron] Miscellaneous Control";
			case 0x10221200: return "Family 10h Processor HyperTransport Configuration";
			case 0x10221201: return "Family 10h Processor Address Map";
			case 0x10221202: return "Family 10h Processor DRAM Controller";
			case 0x10221203: return "Family 10h Processor Miscellaneous Control";
			case 0x10221204: return "Family 10h Processor Link Control";
			case 0x10221300: return "Family 11h Processor HyperTransport Configuration";
			case 0x10221301: return "Family 11h Processor Address Map";
			case 0x10221302: return "Family 11h Processor DRAM Controller";
			case 0x10221303: return "Family 11h Processor Miscellaneous Control";
			case 0x10221304: return "Family 11h Processor Link Control";
			case 0x10221305: return "Griffin Function 5";
			case 0x10221306: return "Griffin Function 6";
			case 0x10221307: return "Griffin Function 7";
			case 0x10221308: return "Kaveri Audio Controller";
			case 0x10221314: return "Wrestler/Bheem/Ontario/Krishna Audio Controller";
			case 0x102213e0: return "Ariel Root Complex";
			case 0x102213e1: return "Ariel IOMMU";
			case 0x102213e2: return "Ariel PCIe Dummy Host Bridge";
			case 0x102213e3: return "Ariel PCIe GPP Bridge";
			case 0x102213e4: return "Ariel PCIe Dummy Host Bridge";
			case 0x102213e5: return "Ariel Internal PCIe GPP Bridge 0 to Bus A";
			case 0x102213e6: return "Ariel Internal PCIe GPP Bridge 0 to Bus B";
			case 0x102213e7: return "Ariel SMBus Controller";
			case 0x102213e8: return "Ariel LPC Bridge";
			case 0x102213e9: return "Ariel Internal GPU";
			case 0x102213ea: return "Ariel HD Audio Controller";
			case 0x102213eb: return "Ariel HD Audio Coprocessor";
			case 0x102213ec: return "Ariel Cryptographic Coprocessor";
			case 0x102213ed: return "Ariel USB 3.1 Type C: Gen2 x 1port + DP Alt Mode";
			case 0x102213ee: return "Ariel USB 3.1 Type A: Gen2 x 2 ports";
			case 0x102213ef: return "Ariel ZCN/MP4";
			case 0x102213f0: return "Ariel Device 24: Function 0";
			case 0x102213f1: return "Ariel Device 24: Function 1";
			case 0x102213f2: return "Ariel Device 24: Function 2";
			case 0x102213f3: return "Ariel Device 24: Function 3";
			case 0x102213f4: return "Ariel Device 24: Function 4";
			case 0x102213f5: return "Ariel Device 24: Function 5";
			case 0x102213f6: return "Ariel Device 24: Function 6";
			case 0x102213f7: return "Ariel Device 24: Function 7";
			case 0x10221400: return "Family 15h (Models 10h-1fh) Processor Function 0";
			case 0x10221401: return "Family 15h (Models 10h-1fh) Processor Function 1";
			case 0x10221402: return "Family 15h (Models 10h-1fh) Processor Function 2";
			case 0x10221403: return "Family 15h (Models 10h-1fh) Processor Function 3";
			case 0x10221404: return "Family 15h (Models 10h-1fh) Processor Function 4";
			case 0x10221405: return "Family 15h (Models 10h-1fh) Processor Function 5";
			case 0x10221410: return "Family 15h (Models 10h-1fh) Processor Root Complex";
			case 0x10221412: return "Family 15h (Models 10h-1fh) Processor Root Port";
			case 0x10221413: return "Family 15h (Models 10h-1fh) Processor Root Port";
			case 0x10221414: return "Family 15h (Models 10h-1fh) Processor Root Port";
			case 0x10221415: return "Family 15h (Models 10h-1fh) Processor Root Port";
			case 0x10221416: return "Family 15h (Models 10h-1fh) Processor Root Port";
			case 0x10221417: return "Family 15h (Models 10h-1fh) Processor Root Port";
			case 0x10221418: return "Family 15h (Models 10h-1fh) Processor Root Port";
			case 0x10221419: return "Family 15h (Models 10h-1fh) I/O Memory Management Unit";
			case 0x1022141a: return "Family 15h (Models 30h-3fh) Processor Function 0";
			case 0x1022141b: return "Family 15h (Models 30h-3fh) Processor Function 1";
			case 0x1022141c: return "Family 15h (Models 30h-3fh) Processor Function 2";
			case 0x1022141d: return "Family 15h (Models 30h-3fh) Processor Function 3";
			case 0x1022141e: return "Family 15h (Models 30h-3fh) Processor Function 4";
			case 0x1022141f: return "Family 15h (Models 30h-3fh) Processor Function 5";
			case 0x10221422: return "Family 15h (Models 30h-3fh) Processor Root Complex";
			case 0x10221423: return "Family 15h (Models 30h-3fh) I/O Memory Management Unit";
			case 0x10221424: return "Family 15h (Models 30h-3fh) Processor Root Port";
			case 0x10221425: return "Kaveri P2P Bridge for GFX PCIe Port [1:0]";
			case 0x10221426: return "Family 15h (Models 30h-3fh) Processor Root Port";
			case 0x1022142e: return "Liverpool Processor HT configuration";
			case 0x1022142f: return "Liverpool Processor Address Maps";
			case 0x10221430: return "Liverpool Processor DRAM configuration";
			case 0x10221431: return "Liverpool Processor Misc configuration";
			case 0x10221432: return "Liverpool Processor PM configuration";
			case 0x10221433: return "Liverpool Processor NB Performance Monitor";
			case 0x10221434: return "Liverpool Processor SPLL Configuration";
			case 0x10221436: return "Liverpool Processor Root Complex";
			case 0x10221437: return "Liverpool I/O Memory Management Unit";
			case 0x10221438: return "Liverpool UMI PCIe Dummy Host Bridge";
			case 0x10221439: return "Family 16h Processor Functions 5:1";
			case 0x1022143a: return "Kingston/Clayton/Gladius/Montego Root Complex";
			case 0x1022143b: return "Kingston/Clayton/Gladius/Montego P2P Bridge for UMI Link";
			case 0x10221440: return "Matisse Device 24: Function 0";
			case 0x10221441: return "Matisse Device 24: Function 1";
			case 0x10221442: return "Matisse Device 24: Function 2";
			case 0x10221443: return "Matisse Device 24: Function 3";
			case 0x10221444: return "Matisse Device 24: Function 4";
			case 0x10221445: return "Matisse Device 24: Function 5";
			case 0x10221446: return "Matisse Device 24: Function 6";
			case 0x10221447: return "Matisse Device 24: Function 7";
			case 0x10221448: return "Renoir Device 24: Function 0";
			case 0x10221449: return "Renoir Device 24: Function 1";
			case 0x1022144a: return "Renoir Device 24: Function 2";
			case 0x1022144b: return "Renoir Device 24: Function 3";
			case 0x1022144c: return "Renoir Device 24: Function 4";
			case 0x1022144d: return "Renoir Device 24: Function 5";
			case 0x1022144e: return "Renoir Device 24: Function 6";
			case 0x1022144f: return "Renoir Device 24: Function 7";
			case 0x10221450: return "Family 17h (Models 00h-0fh) Root Complex";
			case 0x10221451: return "Family 17h (Models 00h-0fh) I/O Memory Management Unit";
			case 0x10221452: return "Family 17h (Models 00h-1fh) PCIe Dummy Host Bridge";
			case 0x10221453: return "Family 17h (Models 00h-0fh) PCIe GPP Bridge";
			case 0x10221454: return "Family 17h (Models 00h-0fh) Internal PCIe GPP Bridge 0 to Bus B";
			case 0x10221455: return "Zeppelin/Renoir PCIe Dummy Function";
			case 0x10221456: return "Family 17h (Models 00h-0fh) Platform Security Processor";
			case 0x10221457: return "Family 17h (Models 00h-0fh) HD Audio Controller";
			case 0x1022145a: return "Zeppelin/Raven/Raven2 PCIe Dummy Function";
			case 0x1022145b: return "Zeppelin Non-Transparent Bridge";
			case 0x1022145c: return "Family 17h (Models 00h-0fh) USB 3.0 Host Controller";
			case 0x1022145d: return "Zeppelin Switch Upstream (PCIE SW.US)";
			case 0x1022145e: return "Zeppelin Switch Downstream (PCIE SW.DS)";
			case 0x1022145f: return "Zeppelin USB 3.0 Host controller";
			case 0x10221460: return "Family 17h (Models 00h-0fh) Data Fabric: Device 18h; Function 0";
			case 0x10221461: return "Family 17h (Models 00h-0fh) Data Fabric: Device 18h; Function 1";
			case 0x10221462: return "Family 17h (Models 00h-0fh) Data Fabric: Device 18h; Function 2";
			case 0x10221463: return "Family 17h (Models 00h-0fh) Data Fabric: Device 18h; Function 3";
			case 0x10221464: return "Family 17h (Models 00h-0fh) Data Fabric: Device 18h; Function 4";
			case 0x10221465: return "Family 17h (Models 00h-0fh) Data Fabric: Device 18h; Function 5";
			case 0x10221466: return "Family 17h (Models 00h-0fh) Data Fabric: Device 18h; Function 6";
			case 0x10221467: return "Family 17h (Models 00h-0fh) Data Fabric: Device 18h; Function 7";
			case 0x10221468: return "Zeppelin Cryptographic Coprocessor NTBCCP";
			case 0x10221470: return "Vega 10 PCIe Bridge";
			case 0x10221471: return "Vega 10 PCIe Bridge";
			case 0x10221480: return "Starship/Matisse Root Complex";
			case 0x10221481: return "Starship/Matisse IOMMU";
			case 0x10221482: return "Starship/Matisse PCIe Dummy Host Bridge";
			case 0x10221483: return "Starship/Matisse GPP Bridge";
			case 0x10221484: return "Starship/Matisse Internal PCIe GPP Bridge 0 to bus[E:B]";
			case 0x10221485: return "Starship/Matisse Reserved SPP";
			case 0x10221486: return "Starship/Matisse Cryptographic Coprocessor PSPCPP";
			case 0x10221487: return "Starship/Matisse HD Audio Controller";
			case 0x10221488: return "Starship Reserved SSP";
			case 0x10221489: return "Starship Reserved SSP";
			case 0x1022148a: return "Starship/Matisse PCIe Dummy Function";
			case 0x1022148b: return "Starship/Matisse Non-Transparent Bridge";
			case 0x1022148c: return "Starship USB 3.0 Host Controller";
			case 0x1022148d: return "Starship/Matisse Switch Upstream (PCIE SW.US)";
			case 0x1022148e: return "Starship/Matisse Switch Downstream (PCIE SW.DS)";
			case 0x1022148f: return "Starship Reserved SSP";
			case 0x10221490: return "Starship Device 24; Function 0";
			case 0x10221491: return "Starship Device 24; Function 1";
			case 0x10221492: return "Starship Device 24; Function 2";
			case 0x10221493: return "Starship Device 24; Function 3";
			case 0x10221494: return "Starship Device 24; Function 4";
			case 0x10221495: return "Starship Device 24; Function 5";
			case 0x10221496: return "Starship Device 24; Function 6";
			case 0x10221497: return "Starship Device 24; Function 7";
			case 0x10221498: return "Starship/Matisse PTDMA";
			case 0x10221499: return "Starship/Matisse NVMe";
			case 0x1022149a: return "Starship PCIe GPP Bridge [1:0]";
			case 0x1022149b: return "Starship Reserved SSP";
			case 0x1022149c: return "Matisse USB 3.0 Host Controller";
			case 0x1022149d: return "Vangogh CVIP";
			case 0x10221510: return "Family 14h Processor Root Complex";
			case 0x10221512: return "Family 14h Processor Root Port";
			case 0x10221513: return "Family 14h Processor Root Port";
			case 0x10221514: return "Family 14h Processor Root Port";
			case 0x10221515: return "Family 14h Processor Root Port";
			case 0x10221516: return "Family 14h Processor Root Port";
			case 0x10221530: return "Family 16h Processor Function 0";
			case 0x10221531: return "Family 16h Processor Function 1";
			case 0x10221532: return "Family 16h Processor Function 2";
			case 0x10221533: return "Family 16h Processor Function 3";
			case 0x10221534: return "Family 16h Processor Function 4";
			case 0x10221535: return "Family 16h Processor Function 5";
			case 0x10221536: return "Family 16h Processor Root Complex";
			case 0x10221537: return "Kabini/Mullins PSP-Platform Security Processor";
			case 0x10221538: return "Family 16h Processor Function 0";
			case 0x10221539: return "Kabini P2P Bridge for PCIe Ports[4:0]";
			case 0x10221540: return "Kryptos/Cato/Garfield/Garfield+/Arlene/Pooky HT Configuration";
			case 0x10221541: return "Kryptos/Cato/Garfield/Garfield+/Arlene/Pooky Address Maps";
			case 0x10221542: return "Kryptos/Cato/Garfield/Garfield+/Arlene/Pooky DRAM Configuration";
			case 0x10221543: return "Kryptos/Cato/Garfield/Garfield+/Arlene/Pooky Miscellaneous Configuration";
			case 0x10221544: return "Kryptos/Cato/Garfield/Garfield+/Arlene/Pooky PM Configuration";
			case 0x10221545: return "Kryptos/Cato/Garfield/Garfield+/Arlene/Pooky NB Performance Monitor";
			case 0x10221546: return "Kryptos/Cato/Garfield/Garfield+/Arlene/Pooky Root Complex";
			case 0x10221547: return "Kryptos/Cato/Garfield/Garfield+/Arlene/Pooky IOMMU";
			case 0x10221548: return "Kryptos/Cato/Garfield/Garfield+/Arlene/Pooky UMI PCIe Dummy Host Bridge";
			case 0x10221549: return "Kryptos/Cato/Garfield/Garfield+ P2P Bridge for PCIe Port [3:0]";
			case 0x1022154a: return "Kryptos/Cato/Garfield/Garfield+/Arlene/Pooky Audio Processor";
			case 0x1022154b: return "Kryptos/Cato/Garfield/Garfield+/Arlene/Pooky Security Processor";
			case 0x1022154d: return "Kryptos/Cato/Garfield/Garfield+/Arlene/Pooky/Anubis HDMI Controller";
			case 0x1022154f: return "Anubis Audio Processor";
			case 0x10221550: return "Garfield+/Arlene/Pooky/Anubis SPLL Configuration";
			case 0x10221553: return "Arlene/Pooky P2P Bridge for PCIE (3:0)";
			case 0x1022155b: return "Anubis Root Complex";
			case 0x1022155c: return "Anubis IOMMU";
			case 0x1022155d: return "Anubis UMI PCIe Dummy Bridge";
			case 0x1022155e: return "Anubis P2P Bridge for PCIe Ports [4:0]";
			case 0x10221560: return "Anubis Security Processor";
			case 0x10221566: return "Family 16h (Models 30h-3fh) Processor Root Complex";
			case 0x10221567: return "Mullins IOMMU";
			case 0x1022156b: return "Family 16h (Models 30h-3fh) Host Bridge";
			case 0x10221570: return "Family 15h (Models 60h-6fh) Processor Function 0";
			case 0x10221571: return "Family 15h (Models 60h-6fh) Processor Function 1";
			case 0x10221572: return "Family 15h (Models 60h-6fh) Processor Function 2";
			case 0x10221573: return "Family 15h (Models 60h-6fh) Processor Function 3";
			case 0x10221574: return "Family 15h (Models 60h-6fh) Processor Function 4";
			case 0x10221575: return "Family 15h (Models 60h-6fh) Processor Function 5";
			case 0x10221576: return "Family 15h (Models 60h-6fh) Processor Root Complex";
			case 0x10221577: return "Family 15h (Models 60h-6fh) I/O Memory Management Unit";
			case 0x10221578: return "Carrizo Platform Security Processor";
			case 0x10221579: return "Carrizo Audio Processor";
			case 0x1022157a: return "Family 15h (Models 60h-6fh) Audio Controller";
			case 0x1022157b: return "Family 15h (Models 60h-6fh) Host Bridge";
			case 0x1022157c: return "Family 15h (Models 60h-6fh) Processor Root Port";
			case 0x1022157d: return "Carrizo Audio Dummy Host Bridge";
			case 0x1022157e: return "Carrizo Audio Controller";
			case 0x10221580: return "Family 16h (Models 30h-3fh) Processor Function 0";
			case 0x10221581: return "Family 16h (Models 30h-3fh) Processor Function 1";
			case 0x10221582: return "Family 16h (Models 30h-3fh) Processor Function 2";
			case 0x10221583: return "Family 16h (Models 30h-3fh) Processor Function 3";
			case 0x10221584: return "Family 16h (Models 30h-3fh) Processor Function 4";
			case 0x10221585: return "Family 16h (Models 30h-3fh) Processor Function 5";
			case 0x10221590: return "Amur/Nolan HT Configuration";
			case 0x10221591: return "Amur/Nolan Address Maps";
			case 0x10221592: return "Amur/Nolan DRAM Configuration";
			case 0x10221593: return "Amur/Nolan Miscellaneous Configuration";
			case 0x10221594: return "Amur/Nolan PM Configuration";
			case 0x10221595: return "Amur/Nolan NB Performance Monitor";
			case 0x10221596: return "Amur/Nolan Root Complex";
			case 0x10221597: return "Amur/Nolan IOMMU";
			case 0x10221598: return "Amur/Nolan Platform Security Processor";
			case 0x10221599: return "Amur/Nolan PCIe Dummy Host Bridge";
			case 0x1022159d: return "Amur Function 6: Gasket";
			case 0x102215b0: return "Stoney HT Configuration";
			case 0x102215b1: return "Stoney Address Maps";
			case 0x102215b2: return "Stoney DRAM Configuration";
			case 0x102215b3: return "Stoney Miscellaneous Configuration";
			case 0x102215b4: return "Stoney PM Configuration";
			case 0x102215b5: return "Stoney NB Performance Monitor";
			case 0x102215bc: return "Stoney PCIe [GFX,GPP] Bridge [4:0]";
			case 0x102215be: return "Stoney Audio Processor";
			case 0x102215d0: return "Raven/Raven2 Root Complex";
			case 0x102215d1: return "Raven/Raven2 IOMMU";
			case 0x102215d2: return "Raven/Raven2 PCIe Dummy Host Bridge";
			case 0x102215d3: return "Raven/Raven2 PCIe GPP Bridge [6:0]";
			case 0x102215d4: return "FireFlight USB 3.1";
			case 0x102215d5: return "FireFlight USB 3.1";
			case 0x102215da: return "Raven/Raven2 PCIe Dummy Host Bridge";
			case 0x102215db: return "Raven/Raven2 Internal PCIe GPP Bridge 0 to Bus A";
			case 0x102215dc: return "Raven/Raven2 Internal PCIe GPP Bridge 0 to Bus B";
			case 0x102215de: return "Raven/Raven2/FireFlight HD Audio Controller";
			case 0x102215df: return "Family 17h (Models 10h-1fh) Platform Security Processor";
			case 0x102215e0: return "Raven USB 3.1";
			case 0x102215e1: return "Raven USB 3.1";
			case 0x102215e2: return "Raven/Raven2/FireFlight/Renoir Audio Processor";
			case 0x102215e3: return "Family 17h (Models 10h-1fh) HD Audio Controller";
			case 0x102215e4: return "Raven/Raven2/Renoir Sensor Fusion Hub";
			case 0x102215e5: return "Raven2 USB 3.1";
			case 0x102215e6: return "Raven/Raven2/Renoir Non-Sensor Fusion Hub KMDF driver";
			case 0x102215e8: return "Raven/Raven2 Device 24: Function 0";
			case 0x102215e9: return "Raven/Raven2 Device 24: Function 1";
			case 0x102215ea: return "Raven/Raven2 Device 24: Function 2";
			case 0x102215eb: return "Raven/Raven2 Device 24: Function 3";
			case 0x102215ec: return "Raven/Raven2 Device 24: Function 4";
			case 0x102215ed: return "Raven/Raven2 Device 24: Function 5";
			case 0x102215ee: return "Raven/Raven2 Device 24: Function 6";
			case 0x102215ef: return "Raven/Raven2 Device 24: Function 7";
			case 0x102215f0: return "FireFlight Device 24: Function 0";
			case 0x102215f1: return "FireFlight Device 24: Function 1";
			case 0x102215f2: return "FireFlight Device 24: Function 2";
			case 0x102215f3: return "FireFlight Device 24: Function 3";
			case 0x102215f4: return "FireFlight Device 24: Function 4";
			case 0x102215f5: return "FireFlight Device 24: Function 5";
			case 0x102215f6: return "FireFlight Device 24: Function 6";
			case 0x102215f7: return "FireFlight Device 24: Function 7";
			case 0x102215f8: return "FireFlight Root Complex";
			case 0x102215f9: return "FireFlight IOMMU";
			case 0x102215fa: return "FireFlight PCIe Dummy Host Bridge";
			case 0x102215fb: return "FireFlight PCIe GPP Bride 3:0";
			case 0x102215fc: return "FireFlight PCIe Dummy Host Bridge";
			case 0x102215fd: return "FireFlight Internal PCIe GPP Bridge 0 to Bus A";
			case 0x102215fe: return "FireFlight Internal PCIe GPP Bridge 0 to Bus B";
			case 0x102215ff: return "FireFlight Bus A; Device 0: Function 0: Internal GPU";
			case 0x10221600: return "Family 15h Processor Function 0";
			case 0x10221601: return "Family 15h Processor Function 1";
			case 0x10221602: return "Family 15h Processor Function 2";
			case 0x10221603: return "Family 15h Processor Function 3";
			case 0x10221604: return "Family 15h Processor Function 4";
			case 0x10221605: return "Family 15h Processor Function 5";
			case 0x10221606: return "Arden Security Processor";
			case 0x10221608: return "Arden Device 18h: Function 0";
			case 0x10221609: return "Arden Device 18h: Function 1";
			case 0x1022160a: return "Arden Device 18h: Function 2";
			case 0x1022160b: return "Arden Device 18h: Function 3";
			case 0x1022160c: return "Arden Device 18h: Function 4";
			case 0x1022160d: return "Arden Device 18h: Function 5";
			case 0x1022160e: return "Arden Device 18h: Function 6";
			case 0x1022160f: return "Arden Device 18h: Function 7";
			case 0x10221620: return "Anubis HT Configuration";
			case 0x10221621: return "Anubis Address Maps";
			case 0x10221622: return "Anubis DRAM Configuration";
			case 0x10221623: return "Anubis Miscellaneous Configuration";
			case 0x10221624: return "Anubis PM Configuration";
			case 0x10221625: return "Anubis NB Performance Monitor";
			case 0x10221626: return "Arden Root Complex";
			case 0x10221627: return "Arden IOMMU";
			case 0x10221628: return "Arden PCIe Dummy Host Bridge";
			case 0x10221629: return "Arden PCIe GPP Bridge";
			case 0x1022162a: return "Arden Internal PCIe GPP Bridge 0 to bus X";
			case 0x1022162b: return "Arden PCIe Non-Transparent Bridge";
			case 0x10221630: return "Renoir/Cezanne Root Complex";
			case 0x10221631: return "Renoir/Cezanne IOMMU";
			case 0x10221632: return "Renoir PCIe Dummy Host Bridge";
			case 0x10221633: return "Renoir PCIe GPP Bridge";
			case 0x10221634: return "Renoir/Cezanne PCIe GPP Bridge";
			case 0x10221635: return "Renoir Internal PCIe GPP Bridge to Bus";
			case 0x10221637: return "Renoir HD Audio Controller";
			case 0x10221639: return "Renoir/Cezanne USB 3.1";
			case 0x1022163a: return "VanGogh USB0";
			case 0x1022163b: return "VanGogh USB1";
			case 0x1022163c: return "VanGogh SecUSB";
			case 0x1022163d: return "VanGogh SecureFunction";
			case 0x1022163e: return "VanGogh HSP";
			case 0x10221641: return "Renoir 10GbE Controller Port 0 (XGBE0/1)";
			case 0x10221642: return "Renoir WLAN";
			case 0x10221643: return "Renoir BT";
			case 0x10221644: return "Renoir I2S";
			case 0x10221648: return "VanGogh Root Complex";
			case 0x10221649: return "VanGogh PSP/CCP";
			case 0x10221700: return "Family 12h/14h Processor Function 0";
			case 0x10221701: return "Family 12h/14h Processor Function 1";
			case 0x10221702: return "Family 12h/14h Processor Function 2";
			case 0x10221703: return "Family 12h/14h Processor Function 3";
			case 0x10221704: return "Family 12h/14h Processor Function 4";
			case 0x10221705: return "Family 12h Processor Root Complex";
			case 0x10221706: return "Llano P2P Bridge to external GPU";
			case 0x10221707: return "Family 12h Processor Root Port";
			case 0x10221708: return "Family 12h Processor Root Port";
			case 0x10221709: return "Family 12h Processor Root Port";
			case 0x1022170a: return "Family 12h Processor Root Port";
			case 0x1022170b: return "Family 12h Processor Root Port";
			case 0x1022170c: return "Family 12h Processor Root Port";
			case 0x1022170d: return "Family 12h Processor Root Port";
			case 0x10221716: return "Family 12h/14h Processor Function 5";
			case 0x10221718: return "Family 12h/14h Processor Function 6";
			case 0x10221719: return "Family 12h/14h Processor Function 7";
			case 0x10222000: return "79c970 [PCnet32 LANCE]";
			case 0x10222001: return "Am79C978 PCnet Home (HomePNA) 1/10 PCI Ethernet Adapter [Am79C971 PHY]";
			case 0x10222003: return "Am 1771 MBW [Alchemy]";
			case 0x10222020: return "53c974 [PCscsi]";
			case 0x10222040: return "79c974";
			case 0x10222080: return "CS5536 [Geode companion] Host Bridge";
			case 0x10222081: return "Geode LX Video";
			case 0x10222082: return "Geode LX AES Security Block";
			case 0x1022208f: return "CS5536 GeodeLink PCI South Bridge";
			case 0x10222090: return "CS5536 [Geode companion] ISA";
			case 0x10222091: return "CS5536 [Geode companion] FLASH";
			case 0x10222093: return "CS5536 [Geode companion] Audio";
			case 0x10222094: return "CS5536 [Geode companion] OHC";
			case 0x10222095: return "CS5536 [Geode companion] EHC";
			case 0x10222096: return "CS5536 [Geode companion] UDC";
			case 0x10222097: return "CS5536 [Geode companion] UOC";
			case 0x1022209a: return "CS5536 [Geode companion] IDE";
			case 0x10222625: return "Am79C973 [Lance/PCI PCNet/32]";
			case 0x10222627: return "Am79C975 [Lance/PCI PCNet/32]";
			case 0x10223000: return "ELanSC520 Microcontroller";
			case 0x102243a0: return "Hudson PCI to PCI bridge (PCIE port 0)";
			case 0x102243a1: return "Hudson PCI to PCI bridge (PCIE port 1)";
			case 0x102243a2: return "Hudson PCI to PCI bridge (PCIE port 2)";
			case 0x102243a3: return "Hudson PCI to PCI bridge (PCIE port 3)";
			case 0x102243b0: return "X370 Series Chipset PCIe Upstream Port";
			case 0x102243b1: return "X399 Series Chipset PCIe Bridge";
			case 0x102243b4: return "300 Series Chipset PCIe Port";
			case 0x102243b5: return "X370 Series Chipset SATA Controller";
			case 0x102243b6: return "X399 Series Chipset SATA Controller";
			case 0x102243b7: return "300 Series Chipset SATA Controller";
			case 0x102243b9: return "X370 Series Chipset USB 3.1 xHCI Controller";
			case 0x102243ba: return "X399 Series Chipset USB 3.1 xHCI Controller";
			case 0x102243bb: return "300 Series Chipset USB 3.1 xHCI Controller";
			case 0x102243c6: return "400 Series Chipset PCIe Bridge";
			case 0x102243c7: return "400 Series Chipset PCIe Port";
			case 0x102243c8: return "400 Series Chipset SATA Controller";
			case 0x102243d5: return "400 Series Chipset USB 3.1 XHCI Controller";
			case 0x102257a3: return "Matisse PCIe GPP Bridge";
			case 0x102257a4: return "Matisse PCIe GPP Bridge";
			case 0x102257ad: return "Matisse Switch Upstream";
			case 0x10227006: return "AMD-751 [Irongate] System Controller";
			case 0x10227007: return "AMD-751 [Irongate] AGP Bridge";
			case 0x1022700a: return "AMD-IGR4 AGP Host to PCI Bridge";
			case 0x1022700b: return "AMD-IGR4 PCI to PCI Bridge";
			case 0x1022700c: return "AMD-760 MP [IGD4-2P] System Controller";
			case 0x1022700d: return "AMD-760 MP [IGD4-2P] AGP Bridge";
			case 0x1022700e: return "AMD-760 [IGD4-1P] System Controller";
			case 0x1022700f: return "AMD-760 [IGD4-1P] AGP Bridge";
			case 0x10227400: return "AMD-755 [Cobra] ISA";
			case 0x10227401: return "AMD-755 [Cobra] IDE";
			case 0x10227403: return "AMD-755 [Cobra] ACPI";
			case 0x10227404: return "AMD-755 [Cobra] USB";
			case 0x10227408: return "AMD-756 [Viper] ISA";
			case 0x10227409: return "AMD-756 [Viper] IDE";
			case 0x1022740b: return "AMD-756 [Viper] ACPI";
			case 0x1022740c: return "AMD-756 [Viper] USB";
			case 0x10227410: return "AMD-766 [ViperPlus] ISA";
			case 0x10227411: return "AMD-766 [ViperPlus] IDE";
			case 0x10227413: return "AMD-766 [ViperPlus] ACPI";
			case 0x10227414: return "AMD-766 [ViperPlus] USB";
			case 0x10227440: return "AMD-768 [Opus] ISA";
			case 0x10227441: return "AMD-768 [Opus] IDE";
			case 0x10227443: return "AMD-768 [Opus] ACPI";
			case 0x10227445: return "AMD-768 [Opus] Audio";
			case 0x10227446: return "AMD-768 [Opus] MC97 Modem";
			case 0x10227448: return "AMD-768 [Opus] PCI";
			case 0x10227449: return "AMD-768 [Opus] USB";
			case 0x10227450: return "AMD-8131 PCI-X Bridge";
			case 0x10227451: return "AMD-8131 PCI-X IOAPIC";
			case 0x10227454: return "AMD-8151 System Controller";
			case 0x10227455: return "AMD-8151 AGP Bridge";
			case 0x10227458: return "AMD-8132 PCI-X Bridge";
			case 0x10227459: return "AMD-8132 PCI-X IOAPIC";
			case 0x10227460: return "AMD-8111 PCI";
			case 0x10227461: return "AMD-8111 USB";
			case 0x10227462: return "AMD-8111 Ethernet";
			case 0x10227463: return "AMD-8111 USB EHCI";
			case 0x10227464: return "AMD-8111 USB OHCI";
			case 0x10227468: return "AMD-8111 LPC";
			case 0x10227469: return "AMD-8111 IDE";
			case 0x1022746a: return "AMD-8111 SMBus 2.0";
			case 0x1022746b: return "AMD-8111 ACPI";
			case 0x1022746d: return "AMD-8111 AC97 Audio";
			case 0x1022746e: return "AMD-8111 MC97 Modem";
			case 0x1022756b: return "AMD-8111 ACPI";
			case 0x10227800: return "FCH SATA Controller [IDE mode]";
			case 0x10227801: return "FCH SATA Controller [AHCI mode]";
			case 0x10227802: return "FCH SATA Controller [RAID mode]";
			case 0x10227803: return "FCH SATA Controller [RAID mode]";
			case 0x10227804: return "FCH SATA Controller [AHCI mode]";
			case 0x10227805: return "FCH SATA Controller [RAID mode]";
			case 0x10227806: return "FCH SD Flash Controller";
			case 0x10227807: return "FCH USB OHCI Controller";
			case 0x10227808: return "FCH USB EHCI Controller";
			case 0x10227809: return "FCH USB OHCI Controller";
			case 0x1022780a: return "Kabini/Mullins SATA Raid/AHCI Mode (DotHill driver)";
			case 0x1022780b: return "FCH SMBus Controller";
			case 0x1022780c: return "FCH IDE Controller";
			case 0x1022780d: return "FCH Azalia Controller";
			case 0x1022780e: return "FCH LPC Bridge";
			case 0x1022780f: return "FCH PCI Bridge";
			case 0x10227812: return "FCH USB XHCI Controller";
			case 0x10227813: return "FCH SD Flash Controller";
			case 0x10227814: return "FCH USB XHCI Controller";
			case 0x10227900: return "FCH SATA Controller [IDE mode]";
			case 0x10227901: return "FCH SATA Controller [AHCI mode]";
			case 0x10227902: return "FCH SATA Controller [RAID mode]";
			case 0x10227903: return "FCH SATA Controller [RAID mode]";
			case 0x10227904: return "FCH SATA Controller [AHCI mode]";
			case 0x10227906: return "FCH SD Flash Controller";
			case 0x10227908: return "FCH USB EHCI Controller";
			case 0x1022790b: return "FCH SMBus Controller";
			case 0x1022790e: return "FCH LPC Bridge";
			case 0x1022790f: return "FCH PCI Bridge";
			case 0x10227914: return "FCH USB XHCI Controller";
			case 0x10229600: return "RS780 Host Bridge";
			case 0x10229601: return "RS880 Host Bridge";
			case 0x10229602: return "RS780/RS880 PCI to PCI bridge (int gfx)";
			case 0x10229603: return "RS780 PCI to PCI bridge (ext gfx port 0)";
			case 0x10229604: return "RS780/RS880 PCI to PCI bridge (PCIE port 0)";
			case 0x10229605: return "RS780/RS880 PCI to PCI bridge (PCIE port 1)";
			case 0x10229606: return "RS780 PCI to PCI bridge (PCIE port 2)";
			case 0x10229607: return "RS780/RS880 PCI to PCI bridge (PCIE port 3)";
			case 0x10229608: return "RS780/RS880 PCI to PCI bridge (PCIE port 4)";
			case 0x10229609: return "RS780/RS880 PCI to PCI bridge (PCIE port 5)";
			case 0x1022960a: return "RS780 PCI to PCI bridge (NB-SB link)";
			case 0x1022960b: return "RS780 PCI to PCI bridge (ext gfx port 1)";
			case 0x10230194: return "82C194";
			case 0x10232000: return "4DWave DX";
			case 0x10232001: return "4DWave NX";
			case 0x10232100: return "CyberBlade XP4m32";
			case 0x10232200: return "XGI Volari XP5";
			case 0x10238400: return "CyberBlade/i7";
			case 0x10238420: return "CyberBlade/i7d";
			case 0x10238500: return "CyberBlade/i1";
			case 0x10238520: return "CyberBlade i1";
			case 0x10238620: return "CyberBlade/i1";
			case 0x10238820: return "CyberBlade XPAi1";
			case 0x10239320: return "TGUI 9320";
			case 0x10239350: return "GUI Accelerator";
			case 0x10239360: return "Flat panel GUI Accelerator";
			case 0x10239382: return "Cyber 9382 [Reference design]";
			case 0x10239383: return "Cyber 9383 [Reference design]";
			case 0x10239385: return "Cyber 9385 [Reference design]";
			case 0x10239386: return "Cyber 9386";
			case 0x10239388: return "Cyber 9388";
			case 0x10239397: return "Cyber 9397";
			case 0x1023939a: return "Cyber 9397DVD";
			case 0x10239420: return "TGUI 9420";
			case 0x10239430: return "TGUI 9430";
			case 0x10239440: return "TGUI 9440";
			case 0x10239460: return "TGUI 9460";
			case 0x10239470: return "TGUI 9470";
			case 0x10239520: return "Cyber 9520";
			case 0x10239525: return "Cyber 9525";
			case 0x10239540: return "Cyber 9540";
			case 0x10239660: return "TGUI 9660/938x/968x";
			case 0x10239680: return "TGUI 9680";
			case 0x10239682: return "TGUI 9682";
			case 0x10239683: return "TGUI 9683";
			case 0x10239685: return "ProVIDIA 9685";
			case 0x10239750: return "3DImage 9750";
			case 0x10239753: return "TGUI 9753";
			case 0x10239754: return "TGUI 9754";
			case 0x10239759: return "TGUI 975";
			case 0x10239783: return "TGUI 9783";
			case 0x10239785: return "TGUI 9785";
			case 0x10239850: return "3DImage 9850";
			case 0x10239880: return "Blade 3D PCI/AGP";
			case 0x10239910: return "CyberBlade/XP";
			case 0x10239930: return "CyberBlade/XPm";
			case 0x10239960: return "CyberBlade XP2";
			case 0x10251435: return "M1435";
			case 0x10251445: return "M1445";
			case 0x10251449: return "M1449";
			case 0x10251451: return "M1451";
			case 0x10251461: return "M1461";
			case 0x10251489: return "M1489";
			case 0x10251511: return "M1511";
			case 0x10251512: return "ALI M1512 Aladdin";
			case 0x10251513: return "M1513";
			case 0x10251521: return "ALI M1521 Aladdin III CPU Bridge";
			case 0x10251523: return "ALI M1523 ISA Bridge";
			case 0x10251531: return "M1531 Northbridge [Aladdin IV/IV+]";
			case 0x10251533: return "M1533 PCI-to-ISA Bridge";
			case 0x10251535: return "M1535 PCI Bridge + Super I/O + FIR";
			case 0x10251541: return "M1541 Northbridge [Aladdin V]";
			case 0x10251542: return "M1542 Northbridge [Aladdin V]";
			case 0x10251543: return "M1543 PCI-to-ISA Bridge + Super I/O + FIR";
			case 0x10251561: return "M1561 Northbridge [Aladdin 7]";
			case 0x10251621: return "M1621 Northbridge [Aladdin-Pro II]";
			case 0x10251631: return "M1631 Northbridge+3D Graphics [Aladdin TNT2]";
			case 0x10251641: return "M1641 Northbridge [Aladdin-Pro IV]";
			case 0x10251647: return "M1647 [MaGiK1] PCI North Bridge";
			case 0x10251671: return "M1671 Northbridge [ALADDiN-P4]";
			case 0x10251672: return "Northbridge [CyberALADDiN-P4]";
			case 0x10253141: return "M3141";
			case 0x10253143: return "M3143";
			case 0x10253145: return "M3145";
			case 0x10253147: return "M3147";
			case 0x10253149: return "M3149";
			case 0x10253151: return "M3151";
			case 0x10253307: return "M3307 MPEG-I Video Controller";
			case 0x10253309: return "M3309 MPEG-II Video w/ Software Audio Decoder";
			case 0x10253321: return "M3321 MPEG-II Audio/Video Decoder";
			case 0x10255212: return "M4803";
			case 0x10255215: return "ALI PCI EIDE Controller";
			case 0x10255217: return "M5217H";
			case 0x10255219: return "M5219";
			case 0x10255225: return "M5225";
			case 0x10255229: return "M5229";
			case 0x10255235: return "M5235";
			case 0x10255237: return "M5237 PCI USB Host Controller";
			case 0x10255240: return "EIDE Controller";
			case 0x10255241: return "PCMCIA Bridge";
			case 0x10255242: return "General Purpose Controller";
			case 0x10255243: return "PCI to PCI Bridge Controller";
			case 0x10255244: return "Floppy Disk Controller";
			case 0x10255247: return "M1541 PCI to PCI Bridge";
			case 0x10255251: return "M5251 P1394 Controller";
			case 0x10255427: return "PCI to AGP Bridge";
			case 0x10255451: return "M5451 PCI AC-Link Controller Audio Device";
			case 0x10255453: return "M5453 PCI AC-Link Controller Modem Device";
			case 0x10257101: return "M7101 PCI PMU Power Management Controller";
			case 0x10259602: return "AMD RS780/RS880 PCI to PCI bridge (int gfx)";
			case 0x10280001: return "PowerEdge Expandable RAID Controller 2/Si";
			case 0x10280002: return "PowerEdge Expandable RAID Controller 3/Di";
			case 0x10280003: return "PowerEdge Expandable RAID Controller 3/Si";
			case 0x10280004: return "PowerEdge Expandable RAID Controller 3/Di [Iguana]";
			case 0x10280006: return "PowerEdge Expandable RAID Controller 3/Di";
			case 0x10280007: return "Remote Access Card III";
			case 0x10280008: return "Remote Access Card III";
			case 0x10280009: return "Remote Access Card III: BMC/SMIC device not present";
			case 0x1028000a: return "PowerEdge Expandable RAID Controller 3/Di";
			case 0x1028000c: return "Embedded Remote Access or ERA/O";
			case 0x1028000d: return "Embedded Remote Access: BMC/SMIC device";
			case 0x1028000e: return "PowerEdge Expandable RAID controller 4/Di";
			case 0x1028000f: return "PowerEdge Expandable RAID controller 4/Di";
			case 0x10280010: return "Remote Access Card 4";
			case 0x10280011: return "Remote Access Card 4 Daughter Card";
			case 0x10280012: return "Remote Access Card 4 Daughter Card Virtual UART";
			case 0x10280013: return "PowerEdge Expandable RAID controller 4";
			case 0x10280014: return "Remote Access Card 4 Daughter Card SMIC interface";
			case 0x10280015: return "PowerEdge Expandable RAID controller 5";
			case 0x10280016: return "PowerEdge Expandable RAID controller S300";
			case 0x10280073: return "NV-RAM Adapter";
			case 0x102a0000: return "HYDRA";
			case 0x102a0010: return "ASPEN";
			case 0x102a001f: return "AHA-2940U2/U2W /7890/7891 SCSI Controllers";
			case 0x102a00c5: return "AIC-7899 U160/m SCSI Controller";
			case 0x102a00cf: return "AIC-7899P U160/m";
			case 0x102b0010: return "MGA-I [Impression?]";
			case 0x102b0100: return "MGA 1064SG [Mystique]";
			case 0x102b0518: return "MGA-II [Athena]";
			case 0x102b0519: return "MGA 2064W [Millennium]";
			case 0x102b051a: return "MGA 1064SG [Mystique]";
			case 0x102b051b: return "MGA 2164W [Millennium II]";
			case 0x102b051e: return "MGA 1064SG [Mystique] AGP";
			case 0x102b051f: return "MGA 2164W [Millennium II] AGP";
			case 0x102b0520: return "MGA G200";
			case 0x102b0521: return "MGA G200 AGP";
			case 0x102b0522: return "MGA G200e [Pilot] ServerEngines (SEP1)";
			case 0x102b0525: return "MGA G400/G450";
			case 0x102b0527: return "Parhelia";
			case 0x102b0528: return "Parhelia";
			case 0x102b0530: return "MGA G200EV";
			case 0x102b0532: return "MGA G200eW WPCM450";
			case 0x102b0533: return "MGA G200EH";
			case 0x102b0534: return "G200eR2";
			case 0x102b0536: return "Integrated Matrox G200eW3 Graphics Controller";
			case 0x102b0538: return "MGA G200eH3";
			case 0x102b0540: return "M91XX";
			case 0x102b0550: return "SV2";
			case 0x102b0d10: return "MGA Ultima/Impression";
			case 0x102b1000: return "MGA G100 [Productiva]";
			case 0x102b1001: return "MGA G100 [Productiva] AGP";
			case 0x102b2007: return "MGA Mistral";
			case 0x102b2527: return "Millennium G550";
			case 0x102b2537: return "Millennium P650/P750";
			case 0x102b2538: return "Millennium P650 PCIe";
			case 0x102b2539: return "Millennium P690";
			case 0x102b4164: return "Morphis QxT frame grabber";
			case 0x102b43b4: return "Morphis Qxt encoding engine";
			case 0x102b4510: return "Morphis COM port";
			case 0x102b4536: return "VIA Framegrabber";
			case 0x102b4686: return "Concord GX (customized Intel 82541)";
			case 0x102b475b: return "Solios eCL/XCL-B frame grabber";
			case 0x102b475d: return "Vio frame grabber family";
			case 0x102b475f: return "Solios (single-Full) CL frame grabber";
			case 0x102b47a1: return "Solios eA/XA frame grabber";
			case 0x102b47a2: return "Solios COM port";
			case 0x102b47c1: return "Solios (dual-Base/single-Medium) CL frame grabber";
			case 0x102b47c2: return "Solios COM port";
			case 0x102b4949: return "Radient frame grabber family";
			case 0x102b4cdc: return "Morphis JPEG2000 accelerator";
			case 0x102b4f54: return "Morphis (e)Quad frame grabber";
			case 0x102b4fc5: return "Morphis (e)Dual frame grabber";
			case 0x102b5e10: return "Morphis aux I/O";
			case 0x102b6573: return "Shark 10/100 Multiport SwitchNIC";
			case 0x102c00b8: return "F64310";
			case 0x102c00c0: return "F69000 HiQVideo";
			case 0x102c00d0: return "F65545";
			case 0x102c00d8: return "F65545";
			case 0x102c00dc: return "F65548";
			case 0x102c00e0: return "F65550";
			case 0x102c00e4: return "F65554";
			case 0x102c00e5: return "F65555 HiQVPro";
			case 0x102c00f0: return "F68554";
			case 0x102c00f4: return "F68554 HiQVision";
			case 0x102c00f5: return "F68555";
			case 0x102c0c30: return "F69030";
			case 0x102d50dc: return "3328 Audio";
			case 0x102f0009: return "r4x00";
			case 0x102f000a: return "TX3927 MIPS RISC PCI Controller";
			case 0x102f0020: return "ATM Meteor 155";
			case 0x102f0030: return "TC35815CF PCI 10/100 Mbit Ethernet Controller";
			case 0x102f0031: return "TC35815CF PCI 10/100 Mbit Ethernet Controller with WOL";
			case 0x102f0032: return "TC35815CF PCI 10/100 Mbit Ethernet Controller on TX4939";
			case 0x102f0105: return "TC86C001 [goku-s] IDE";
			case 0x102f0106: return "TC86C001 [goku-s] USB 1.1 Host";
			case 0x102f0107: return "TC86C001 [goku-s] USB Device Controller";
			case 0x102f0108: return "TC86C001 [goku-s] I2C/SIO/GPIO Controller";
			case 0x102f0180: return "TX4927/38 MIPS RISC PCI Controller";
			case 0x102f0181: return "TX4925 MIPS RISC PCI Controller";
			case 0x102f0182: return "TX4937 MIPS RISC PCI Controller";
			case 0x102f01b4: return "Celleb platform IDE interface";
			case 0x102f01b5: return "SCC USB 2.0 EHCI controller";
			case 0x102f01b6: return "SCC USB 1.1 OHCI controller";
			case 0x10315601: return "DC20 ASIC";
			case 0x10315607: return "Video I/O & motion JPEG compressor";
			case 0x10315631: return "Media 3D";
			case 0x10316057: return "MiroVideo DC10/DC30+";
			case 0x10330000: return "Vr4181A USB Host or Function Control Unit";
			case 0x10330001: return "PCI to 486-like bus Bridge";
			case 0x10330002: return "PCI to VL98 Bridge";
			case 0x10330003: return "ATM Controller";
			case 0x10330004: return "R4000 PCI Bridge";
			case 0x10330005: return "PCI to 486-like bus Bridge";
			case 0x10330006: return "PC-9800 Graphic Accelerator";
			case 0x10330007: return "PCI to UX-Bus Bridge";
			case 0x10330008: return "PC-9800 Graphic Accelerator";
			case 0x10330009: return "PCI to PC9800 Core-Graph Bridge";
			case 0x10330016: return "PCI to VL Bridge";
			case 0x1033001a: return "[Nile II]";
			case 0x10330021: return "Vrc4373 [Nile I]";
			case 0x10330029: return "PowerVR PCX1";
			case 0x1033002a: return "PowerVR 3D";
			case 0x1033002c: return "Star Alpha 2";
			case 0x1033002d: return "PCI to C-bus Bridge";
			case 0x10330035: return "OHCI USB Controller";
			case 0x1033003b: return "PCI to C-bus Bridge";
			case 0x1033003e: return "NAPCCARD Cardbus Controller";
			case 0x10330046: return "PowerVR PCX2 [midas]";
			case 0x1033005a: return "Vrc5074 [Nile 4]";
			case 0x10330063: return "uPD72862 [Firewarden] IEEE1394 OHCI 1.0 Link Controller";
			case 0x10330067: return "PowerVR Neon 250 Chipset";
			case 0x10330072: return "uPD72874 IEEE1394 OHCI 1.1 3-port PHY-Link Ctrlr";
			case 0x10330074: return "56k Voice Modem";
			case 0x1033009b: return "Vrc5476";
			case 0x103300a5: return "VRC4173";
			case 0x103300a6: return "VRC5477 AC97";
			case 0x103300cd: return "uPD72870 [Firewarden] IEEE1394a OHCI 1.0 Link/3-port PHY Controller";
			case 0x103300ce: return "uPD72871 [Firewarden] IEEE1394a OHCI 1.0 Link/1-port PHY Controller";
			case 0x103300df: return "Vr4131";
			case 0x103300e0: return "uPD72010x USB 2.0 Controller";
			case 0x103300e7: return "uPD72873 [Firewarden] IEEE1394a OHCI 1.1 Link/2-port PHY Controller";
			case 0x103300f2: return "uPD72874 [Firewarden] IEEE1394a OHCI 1.1 Link/3-port PHY Controller";
			case 0x103300f3: return "uPD6113x Multimedia Decoder/Processor [EMMA2]";
			case 0x1033010c: return "VR7701";
			case 0x10330125: return "uPD720400 PCI Express - PCI/PCI-X Bridge";
			case 0x1033013a: return "Dual Tuner/MPEG Encoder";
			case 0x10330194: return "uPD720200 USB 3.0 Host Controller";
			case 0x103301e7: return "uPD72873 [Firewarden] IEEE1394a OHCI 1.1 Link/2-port PHY Controller";
			case 0x103301f2: return "uPD72874 [Firewarden] IEEE1394a OHCI 1.1 Link/3-port PHY Controller";
			case 0x10360000: return "TMC-18C30 [36C70]";
			case 0x10390001: return "AGP Port (virtual PCI-to-PCI bridge)";
			case 0x10390002: return "AGP Port (virtual PCI-to-PCI bridge)";
			case 0x10390003: return "AGP Port (virtual PCI-to-PCI bridge)";
			case 0x10390004: return "PCI-to-PCI bridge";
			case 0x10390006: return "85C501/2/3";
			case 0x10390008: return "SiS85C503/5513 (LPC Bridge)";
			case 0x10390009: return "5595 Power Management Controller";
			case 0x1039000a: return "PCI-to-PCI bridge";
			case 0x10390016: return "SiS961/2/3 SMBus controller";
			case 0x10390018: return "SiS85C503/5513 (LPC Bridge)";
			case 0x10390163: return "163 802.11b/g Wireless LAN Adapter";
			case 0x10390180: return "RAID bus controller 180 SATA/PATA";
			case 0x10390181: return "SATA";
			case 0x10390182: return "182 SATA/RAID Controller";
			case 0x10390186: return "AHCI Controller (0106)";
			case 0x10390190: return "190 Ethernet Adapter";
			case 0x10390191: return "191 Gigabit Ethernet Adapter";
			case 0x10390200: return "5597/5598/6326 VGA";
			case 0x10390204: return "82C204";
			case 0x10390205: return "SG86C205";
			case 0x10390300: return "300/305 PCI/AGP VGA Display Adapter";
			case 0x10390310: return "315H PCI/AGP VGA Display Adapter";
			case 0x10390315: return "315 PCI/AGP VGA Display Adapter";
			case 0x10390325: return "315PRO PCI/AGP VGA Display Adapter";
			case 0x10390330: return "330 [Xabre] PCI/AGP VGA Display Adapter";
			case 0x10390406: return "85C501/2";
			case 0x10390496: return "SiS85C496 PCI & CPU Memory Controller (PCM)";
			case 0x10390530: return "530 Host";
			case 0x10390540: return "540 Host";
			case 0x10390550: return "550 Host";
			case 0x10390597: return "5513C";
			case 0x10390601: return "85C601";
			case 0x10390620: return "620 Host";
			case 0x10390630: return "630 Host";
			case 0x10390633: return "633 Host";
			case 0x10390635: return "635 Host";
			case 0x10390645: return "SiS645 Host & Memory & AGP Controller";
			case 0x10390646: return "SiS645DX Host & Memory & AGP Controller";
			case 0x10390648: return "645xx";
			case 0x10390649: return "SiS649 Host";
			case 0x10390650: return "650/M650 Host";
			case 0x10390651: return "651 Host";
			case 0x10390655: return "655 Host";
			case 0x10390660: return "660 Host";
			case 0x10390661: return "661FX/M661FX/M661MX Host";
			case 0x10390662: return "662 Host";
			case 0x10390671: return "671MX";
			case 0x10390730: return "730 Host";
			case 0x10390733: return "733 Host";
			case 0x10390735: return "735 Host";
			case 0x10390740: return "740 Host";
			case 0x10390741: return "741/741GX/M741 Host";
			case 0x10390745: return "745 Host";
			case 0x10390746: return "746 Host";
			case 0x10390755: return "755 Host";
			case 0x10390760: return "760/M760 Host";
			case 0x10390761: return "761/M761 Host";
			case 0x10390900: return "SiS900 PCI Fast Ethernet";
			case 0x10390961: return "SiS961 [MuTIOL Media IO]";
			case 0x10390962: return "SiS962 [MuTIOL Media IO] LPC Controller";
			case 0x10390963: return "SiS963 [MuTIOL Media IO] LPC Controller";
			case 0x10390964: return "SiS964 [MuTIOL Media IO] LPC Controller";
			case 0x10390965: return "SiS965 [MuTIOL Media IO]";
			case 0x10390966: return "SiS966 [MuTIOL Media IO]";
			case 0x10390968: return "SiS968 [MuTIOL Media IO]";
			case 0x10391180: return "SATA Controller / IDE mode";
			case 0x10391182: return "SATA Controller / RAID mode";
			case 0x10391183: return "SATA Controller / IDE mode";
			case 0x10391184: return "AHCI Controller / RAID mode";
			case 0x10391185: return "AHCI IDE Controller (0106)";
			case 0x10393602: return "83C602";
			case 0x10395107: return "5107";
			case 0x10395300: return "SiS540 PCI Display Adapter";
			case 0x10395315: return "550 PCI/AGP VGA Display Adapter";
			case 0x10395401: return "486 PCI Chipset";
			case 0x10395511: return "5511/5512";
			case 0x10395513: return "5513 IDE Controller";
			case 0x10395517: return "5517";
			case 0x10395571: return "5571";
			case 0x10395581: return "5581 Pentium Chipset";
			case 0x10395582: return "5582";
			case 0x10395591: return "5591/5592 Host";
			case 0x10395596: return "5596 Pentium Chipset";
			case 0x10395597: return "5597 [SiS5582]";
			case 0x10395600: return "5600 Host";
			case 0x10396204: return "Video decoder & MPEG interface";
			case 0x10396205: return "VGA Controller";
			case 0x10396236: return "6236 3D-AGP";
			case 0x10396300: return "630/730 PCI/AGP VGA Display Adapter";
			case 0x10396306: return "530/620 PCI/AGP VGA Display Adapter";
			case 0x10396325: return "65x/M650/740 PCI/AGP VGA Display Adapter";
			case 0x10396326: return "86C326 5598/6326";
			case 0x10396330: return "661/741/760 PCI/AGP or 662/761Gx PCIE VGA Display Adapter";
			case 0x10396350: return "770/670 PCIE VGA Display Adapter";
			case 0x10396351: return "771/671 PCIE VGA Display Adapter";
			case 0x10397001: return "USB 1.1 Controller";
			case 0x10397002: return "USB 2.0 Controller";
			case 0x10397007: return "FireWire Controller";
			case 0x10397012: return "SiS7012 AC'97 Sound Controller";
			case 0x10397013: return "AC'97 Modem Controller";
			case 0x10397016: return "SiS7016 PCI Fast Ethernet Adapter";
			case 0x10397018: return "SiS PCI Audio Accelerator";
			case 0x10397019: return "SiS7019 Audio Accelerator";
			case 0x10397502: return "Azalia Audio Controller";
			case 0x103c1005: return "A4977A Visualize EG";
			case 0x103c1008: return "Visualize FX";
			case 0x103c1028: return "Tach TL Fibre Channel Host Adapter";
			case 0x103c1029: return "Tach XL2 Fibre Channel Host Adapter";
			case 0x103c102a: return "Tach TS Fibre Channel Host Adapter";
			case 0x103c1030: return "J2585A DeskDirect 10/100VG NIC";
			case 0x103c1031: return "J2585B HP 10/100VG PCI LAN Adapter";
			case 0x103c1040: return "J2973A DeskDirect 10BaseT NIC";
			case 0x103c1041: return "J2585B DeskDirect 10/100 NIC";
			case 0x103c1042: return "J2970A DeskDirect 10BaseT/2 NIC";
			case 0x103c1048: return "Diva Serial [GSP] Multiport UART";
			case 0x103c1054: return "PCI Local Bus Adapter";
			case 0x103c1064: return "79C970 PCnet Ethernet Controller";
			case 0x103c108b: return "Visualize FXe";
			case 0x103c10c1: return "NetServer Smart IRQ Router";
			case 0x103c10ed: return "TopTools Remote Control";
			case 0x103c10f0: return "rio System Bus Adapter";
			case 0x103c10f1: return "rio I/O Controller";
			case 0x103c1219: return "NetServer PCI Hot-Plug Controller";
			case 0x103c121a: return "NetServer SMIC Controller";
			case 0x103c121b: return "NetServer Legacy COM Port Decoder";
			case 0x103c121c: return "NetServer PCI COM Port Decoder";
			case 0x103c1229: return "zx1 System Bus Adapter";
			case 0x103c122a: return "zx1 I/O Controller";
			case 0x103c122e: return "PCI-X Local Bus Adapter";
			case 0x103c127b: return "sx1000 System Bus Adapter";
			case 0x103c127c: return "sx1000 I/O Controller";
			case 0x103c128d: return "Diva [GSP] Management Board";
			case 0x103c1290: return "Auxiliary Diva Serial Port";
			case 0x103c1291: return "Auxiliary Diva Serial Port";
			case 0x103c12b4: return "zx1 QuickSilver AGP8x Local Bus Adapter";
			case 0x103c12eb: return "sx2000 System Bus Adapter";
			case 0x103c12ec: return "sx2000 I/O Controller";
			case 0x103c12ee: return "PCI-X 2.0 Local Bus Adapter";
			case 0x103c1302: return "RMP-3 Shared Memory Driver";
			case 0x103c1303: return "RMP-3 (Remote Management Processor)";
			case 0x103c22f6: return "iLO5 Virtual USB Controller";
			case 0x103c2910: return "E2910A PCIBus Exerciser";
			case 0x103c2925: return "E2925A 32 Bit, 33 MHzPCI Exerciser & Analyzer";
			case 0x103c3206: return "Adaptec Embedded Serial ATA HostRAID";
			case 0x103c3220: return "Smart Array P600";
			case 0x103c3230: return "Smart Array Controller";
			case 0x103c3238: return "Smart Array E200i (SAS Controller)";
			case 0x103c3239: return "Smart Array Gen9 Controllers";
			case 0x103c323a: return "Smart Array G6 controllers";
			case 0x103c323b: return "Smart Array Gen8 Controllers";
			case 0x103c323c: return "Smart Array Gen8+ Controllers";
			case 0x103c3300: return "Integrated Lights-Out Standard Virtual USB Controller";
			case 0x103c3301: return "Integrated Lights-Out Standard Serial Port";
			case 0x103c3302: return "Integrated Lights-Out Standard KCS Interface";
			case 0x103c3305: return "Integrated Lights-Out (iLO2) Controller";
			case 0x103c3306: return "Integrated Lights-Out Standard Slave Instrumentation & System Support";
			case 0x103c3307: return "Integrated Lights-Out Standard Management Processor Support and Messaging";
			case 0x103c3308: return "Integrated Lights-Out Standard MS Watchdog Timer";
			case 0x103c4030: return "zx2 System Bus Adapter";
			case 0x103c4031: return "zx2 I/O Controller";
			case 0x103c4037: return "PCIe Local Bus Adapter";
			case 0x103c9602: return "AMD RS780/RS880 PCI to PCI bridge (int gfx)";
			case 0x10421000: return "PC Tech RZ1000";
			case 0x10421001: return "PC Tech RZ1001";
			case 0x10423000: return "Samurai_0";
			case 0x10423010: return "Samurai_1";
			case 0x10423020: return "Samurai_IDE";
			case 0x10430464: return "Radeon R9 270x GPU";
			case 0x10430521: return "RX580 [RX 580 Dual O8G]";
			case 0x10430675: return "ISDNLink P-IN100-ST-D";
			case 0x10439602: return "AMD RS780/RS880 PCI to PCI bridge (int gfx)";
			case 0x10441012: return "Domino RAID Engine";
			case 0x1044a400: return "SmartCache/Raid I-IV Controller";
			case 0x1044a500: return "PCI Bridge";
			case 0x1044a501: return "SmartRAID V Controller";
			case 0x1044a511: return "SmartRAID V Controller";
			case 0x1044c066: return "3010S Ultra3 Dual Channel";
			case 0x1045a0f8: return "82C750 [Vendetta] USB Controller";
			case 0x1045c101: return "92C264";
			case 0x1045c178: return "92C178";
			case 0x1045c556: return "82X556 [Viper]";
			case 0x1045c557: return "82C557 [Viper-M]";
			case 0x1045c558: return "82C558 [Viper-M ISA+IDE]";
			case 0x1045c567: return "82C750 [Vendetta], device 0";
			case 0x1045c568: return "82C750 [Vendetta], device 1";
			case 0x1045c569: return "82C579 [Viper XPress+ Chipset]";
			case 0x1045c621: return "82C621 [Viper-M/N+]";
			case 0x1045c700: return "82C700 [FireStar]";
			case 0x1045c701: return "82C701 [FireStar Plus]";
			case 0x1045c814: return "82C814 [Firebridge 1]";
			case 0x1045c822: return "82C822";
			case 0x1045c824: return "82C824";
			case 0x1045c825: return "82C825 [Firebridge 2]";
			case 0x1045c832: return "82C832";
			case 0x1045c861: return "82C861 OHCI USB Host";
			case 0x1045c881: return "82C881 [FireLink] 1394 OHCI Link Controller";
			case 0x1045c895: return "82C895";
			case 0x1045c935: return "EV1935 ECTIVA MachOne PCIAudio";
			case 0x1045d568: return "82C825 [Firebridge 2]";
			case 0x1045d721: return "IDE [FireStar]";
			case 0x10480c60: return "Gladiac MX";
			case 0x10480d22: return "Quadro4 900XGL [ELSA GLoria4 900XGL]";
			case 0x10481000: return "QuickStep 1000";
			case 0x10483000: return "QuickStep 3000";
			case 0x10488901: return "Gloria XL";
			case 0x104a0000: return "STLS2F Host Bridge";
			case 0x104a0008: return "STG 2000X";
			case 0x104a0009: return "STG 1764X";
			case 0x104a0010: return "STG4000 [3D Prophet Kyro Series]";
			case 0x104a0201: return "STPC Vega Northbridge";
			case 0x104a0209: return "STPC Consumer/Industrial North- and Southbridge";
			case 0x104a020a: return "STPC Atlas/ConsumerS/Consumer IIA Northbridge";
			case 0x104a020b: return "STPC Consumer II ISA Bridge";
			case 0x104a0210: return "STPC Atlas ISA Bridge";
			case 0x104a021a: return "STPC Consumer S Southbridge";
			case 0x104a021b: return "STPC Consumer IIA Southbridge";
			case 0x104a0220: return "STPC Industrial PCI to PCCard bridge";
			case 0x104a0228: return "STPC Atlas IDE";
			case 0x104a0229: return "STPC Vega IDE";
			case 0x104a0230: return "STPC Atlas/Vega OHCI USB Controller";
			case 0x104a0238: return "STPC Vega LAN";
			case 0x104a0500: return "ST70137 [Unicorn] ADSL DMT Transceiver";
			case 0x104a0564: return "STPC Client Northbridge";
			case 0x104a0981: return "21x4x DEC-Tulip compatible 10/100 Ethernet";
			case 0x104a1746: return "STG 1764X";
			case 0x104a2774: return "21x4x DEC-Tulip compatible 10/100 Ethernet";
			case 0x104a3520: return "MPEG-II decoder card";
			case 0x104a55cc: return "STPC Client Southbridge";
			case 0x104b0140: return "BT-946C (old) [multimaster";
			case 0x104b1040: return "BT-946C (BA80C30) [MultiMaster 10]";
			case 0x104b8130: return "Flashpoint LT";
			case 0x104c0500: return "100 MBit LAN Controller";
			case 0x104c0508: return "TMS380C2X Compressor Interface";
			case 0x104c1000: return "Eagle i/f AS";
			case 0x104c104c: return "PCI1510 PC card Cardbus Controller";
			case 0x104c3d04: return "TVP4010 [Permedia]";
			case 0x104c3d07: return "TVP4020 [Permedia 2]";
			case 0x104c8000: return "PCILynx/PCILynx2 IEEE 1394 Link Layer Controller";
			case 0x104c8009: return "TSB12LV22 IEEE-1394 Controller";
			case 0x104c8017: return "PCI4410 FireWire Controller";
			case 0x104c8019: return "TSB12LV23 IEEE-1394 Controller";
			case 0x104c8020: return "TSB12LV26 IEEE-1394 Controller (Link)";
			case 0x104c8021: return "TSB43AA22 IEEE-1394 Controller (PHY/Link Integrated)";
			case 0x104c8022: return "TSB43AB22 IEEE-1394a-2000 Controller (PHY/Link) [iOHCI-Lynx]";
			case 0x104c8023: return "TSB43AB22A IEEE-1394a-2000 Controller (PHY/Link) [iOHCI-Lynx]";
			case 0x104c8024: return "TSB43AB23 IEEE-1394a-2000 Controller (PHY/Link)";
			case 0x104c8025: return "TSB82AA2 IEEE-1394b Link Layer Controller";
			case 0x104c8026: return "TSB43AB21 IEEE-1394a-2000 Controller (PHY/Link)";
			case 0x104c8027: return "PCI4451 IEEE-1394 Controller";
			case 0x104c8029: return "PCI4510 IEEE-1394 Controller";
			case 0x104c802b: return "PCI7410,7510,7610 OHCI-Lynx Controller";
			case 0x104c802e: return "PCI7x20 1394a-2000 OHCI Two-Port PHY/Link-Layer Controller";
			case 0x104c8031: return "PCIxx21/PCIxx11/PCIx515 PC Card Controller";
			case 0x104c8032: return "OHCI Compliant IEEE 1394 Host Controller";
			case 0x104c8033: return "PCIxx21/PCIxx11 Flash Media Controller";
			case 0x104c8034: return "PCIxx21/PCIxx11 SD Host Controller";
			case 0x104c8035: return "PCIxx21/PCIxx11 Smart Card Controller";
			case 0x104c8036: return "PCI6515 Cardbus Controller";
			case 0x104c8038: return "PCI6515 SmartCard Controller";
			case 0x104c8039: return "PCIxx12 Cardbus Controller";
			case 0x104c803a: return "PCIxx12 OHCI Compliant IEEE 1394 Host Controller";
			case 0x104c803b: return "PCIxx12 Flash Media Controller";
			case 0x104c803c: return "PCIxx12 SDA Standard Compliant SD Host Controller";
			case 0x104c803d: return "PCIxx12 GemCore based SmartCard controller";
			case 0x104c8101: return "TSB43DB42 IEEE-1394a-2000 Controller (PHY/Link)";
			case 0x104c8201: return "PCI1620 Firmware Loading Function";
			case 0x104c8204: return "PCI7410/7510/7610 PCI Firmware Loading Function";
			case 0x104c8231: return "XIO2000(A)/XIO2200A PCI Express-to-PCI Bridge";
			case 0x104c8232: return "XIO3130 PCI Express Switch (Upstream)";
			case 0x104c8233: return "XIO3130 PCI Express Switch (Downstream)";
			case 0x104c8235: return "XIO2200A IEEE-1394a-2000 Controller (PHY/Link)";
			case 0x104c823e: return "XIO2213A/B/XIO2221 PCI Express to PCI Bridge [Cheetah Express]";
			case 0x104c823f: return "XIO2213A/B/XIO2221 IEEE-1394b OHCI Controller [Cheetah Express]";
			case 0x104c8240: return "XIO2001 PCI Express-to-PCI Bridge";
			case 0x104c8241: return "TUSB73x0 SuperSpeed USB 3.0 xHCI Host Controller";
			case 0x104c8400: return "ACX 100 22Mbps Wireless Interface";
			case 0x104c8401: return "ACX 100 22Mbps Wireless Interface";
			case 0x104c8888: return "Multicore DSP+ARM KeyStone II SOC";
			case 0x104c9000: return "Wireless Interface (of unknown type)";
			case 0x104c9065: return "TMS320DM642";
			case 0x104c9066: return "ACX 111 54Mbps Wireless Interface";
			case 0x104ca001: return "TDC1570";
			case 0x104ca100: return "TDC1561";
			case 0x104ca102: return "TNETA1575 HyperSAR Plus w/PCI Host i/f & UTOPIA i/f";
			case 0x104ca106: return "TMS320C6414 TMS320C6415 TMS320C6416";
			case 0x104cac10: return "PCI1050";
			case 0x104cac11: return "PCI1053";
			case 0x104cac12: return "PCI1130";
			case 0x104cac13: return "PCI1031";
			case 0x104cac15: return "PCI1131";
			case 0x104cac16: return "PCI1250";
			case 0x104cac17: return "PCI1220";
			case 0x104cac18: return "PCI1260";
			case 0x104cac19: return "PCI1221";
			case 0x104cac1a: return "PCI1210";
			case 0x104cac1b: return "PCI1450";
			case 0x104cac1c: return "PCI1225";
			case 0x104cac1d: return "PCI1251A";
			case 0x104cac1e: return "PCI1211";
			case 0x104cac1f: return "PCI1251B";
			case 0x104cac20: return "TI 2030";
			case 0x104cac21: return "PCI2031";
			case 0x104cac22: return "PCI2032 PCI Docking Bridge";
			case 0x104cac23: return "PCI2250 PCI-to-PCI Bridge";
			case 0x104cac28: return "PCI2050 PCI-to-PCI Bridge";
			case 0x104cac2c: return "PCI2060 PCI-to-PCI Bridge";
			case 0x104cac30: return "PCI1260 PC card Cardbus Controller";
			case 0x104cac40: return "PCI4450 PC card Cardbus Controller";
			case 0x104cac41: return "PCI4410 PC card Cardbus Controller";
			case 0x104cac42: return "PCI4451 PC card Cardbus Controller";
			case 0x104cac44: return "PCI4510 PC card Cardbus Controller";
			case 0x104cac46: return "PCI4520 PC card Cardbus Controller";
			case 0x104cac47: return "PCI7510 PC card Cardbus Controller";
			case 0x104cac48: return "PCI7610 PC Card Cardbus Controller";
			case 0x104cac49: return "PCI7410 PC Card Cardbus Controller";
			case 0x104cac4a: return "PCI7510/7610 CardBus Bridge";
			case 0x104cac4b: return "PCI7610 SD/MMC controller";
			case 0x104cac4c: return "PCI7610 Memory Stick controller";
			case 0x104cac50: return "PCI1410 PC card Cardbus Controller";
			case 0x104cac51: return "PCI1420 PC card Cardbus Controller";
			case 0x104cac52: return "PCI1451 PC card Cardbus Controller";
			case 0x104cac53: return "PCI1421 PC card Cardbus Controller";
			case 0x104cac54: return "PCI1620 PC Card Controller";
			case 0x104cac55: return "PCI1520 PC card Cardbus Controller";
			case 0x104cac56: return "PCI1510 PC card Cardbus Controller";
			case 0x104cac60: return "PCI2040 PCI to DSP Bridge Controller";
			case 0x104cac8d: return "PCI 7620";
			case 0x104cac8e: return "PCI7420 CardBus Controller";
			case 0x104cac8f: return "PCI7420/7620 SD/MS-Pro Controller";
			case 0x104cb001: return "TMS320C6424";
			case 0x104cfe00: return "FireWire Host Controller";
			case 0x104cfe03: return "12C01A FireWire Host Controller";
			case 0x104d8004: return "DTL-H2500 [Playstation development board]";
			case 0x104d8009: return "CXD1947Q i.LINK Controller";
			case 0x104d800c: return "DTL-H800 [PS1 sound development board]";
			case 0x104d8039: return "CXD3222 i.LINK Controller";
			case 0x104d8047: return "PS2 TOOL MRP";
			case 0x104d8056: return "Rockwell HCF 56K modem";
			case 0x104d808a: return "Memory Stick Controller";
			case 0x104d80ff: return "PS2 Performance Analyzer";
			case 0x104d814a: return "PS2 Performance Analyzer";
			case 0x104d8183: return "ATHENS [PS3 prototype developer interface card]";
			case 0x104d81b0: return "BM-1 [PSP TOOL Board Management Device]";
			case 0x104d81c3: return "VO-4 [PSP TOOL Video Output Device]";
			case 0x104d81ce: return "SxS Pro memory card";
			case 0x104d81ff: return "PS3 TOOL MRP";
			case 0x104d8200: return "PS3 TOOL RSX Tracing FPGA";
			case 0x104d820e: return "CXD9208GP [PS3 PS2 emulation subsystem adapter]";
			case 0x104d905c: return "SxS Pro memory card";
			case 0x104d907f: return "SxS Pro+ memory card";
			case 0x104d908f: return "Aeolia ACPI";
			case 0x104d909e: return "Aeolia Ethernet Controller (Marvell Yukon 2 Family)";
			case 0x104d909f: return "Aeolia SATA AHCI Controller";
			case 0x104d90a0: return "Aeolia SD/MMC Host Controller";
			case 0x104d90a1: return "Aeolia PCI Express Glue and Miscellaneous Devices";
			case 0x104d90a2: return "Aeolia DMA Controller";
			case 0x104d90a3: return "Aeolia Memory (DDR3/SPM)";
			case 0x104d90a4: return "Aeolia USB 3.0 xHCI Host Controller";
			case 0x104d90bc: return "SxS Pro+ memory card";
			case 0x104d90c8: return "Belize ACPI";
			case 0x104d90c9: return "Belize Ethernet Controller";
			case 0x104d90ca: return "Belize SATA AHCI Controller";
			case 0x104d90cb: return "Belize SD/MMC Host Controller";
			case 0x104d90cc: return "Belize PCI Express Glue and Miscellaneous Devices";
			case 0x104d90cd: return "Belize DMA Controller";
			case 0x104d90ce: return "Belize Memory (DDR3/SPM)";
			case 0x104d90cf: return "Belize USB 3.0 xHCI Host Controller";
			case 0x104d90d7: return "Baikal ACPI";
			case 0x104d90d8: return "Baikal Ethernet Controller";
			case 0x104d90d9: return "Baikal SATA AHCI Controller";
			case 0x104d90da: return "Baikal SD/MMC Host Controller";
			case 0x104d90db: return "Baikal PCI Express Glue and Miscellaneous Devices";
			case 0x104d90dc: return "Baikal DMA Controller";
			case 0x104d90dd: return "Baikal Memory (DDR3/SPM)";
			case 0x104d90de: return "Baikal USB 3.0 xHCI Host Controller";
			case 0x104e0017: return "OTI-64017";
			case 0x104e0107: return "OTI-107 [Spitfire]";
			case 0x104e0109: return "Video Adapter";
			case 0x104e0111: return "OTI-64111 [Spitfire]";
			case 0x104e0217: return "OTI-64217";
			case 0x104e0317: return "OTI-64317";
			case 0x10500000: return "NE2000";
			case 0x10500001: return "W83769F";
			case 0x10500033: return "W89C33D 802.11 a/b/g BB/MAC";
			case 0x10500105: return "W82C105";
			case 0x10500840: return "W89C840";
			case 0x10500940: return "W89C940";
			case 0x10505a5a: return "W89C940F";
			case 0x10506692: return "W6692";
			case 0x10509921: return "W99200F MPEG-1 Video Encoder";
			case 0x10509922: return "W99200F/W9922PF MPEG-1/2 Video Encoder";
			case 0x10509970: return "W9970CF";
			case 0x10543009: return "2Gbps Fibre Channel to PCI HBA 3009";
			case 0x1054300a: return "4Gbps Fibre Channel to PCI-X HBA 300a";
			case 0x1054300b: return "4Gbps Fibre Channel to PCI-X HBA 300b";
			case 0x1054300f: return "ColdFusion 3 Chipset Processor to I/O Controller";
			case 0x10543010: return "ColdFusion 3 Chipset Memory Controller Hub";
			case 0x10543011: return "ColdFusion 3e Chipset Processor to I/O Controller";
			case 0x10543012: return "ColdFusion 3e Chipset Memory Controller Hub";
			case 0x10543017: return "Unassigned Hitachi Shared FC Device 3017";
			case 0x1054301b: return "Virtual VGA Device";
			case 0x1054301d: return "PCIe-to-PCIe Bridge with Virtualization IO Assist Feature";
			case 0x10543020: return "FIVE-EX based Fibre Channel to PCIe HBA";
			case 0x1054302c: return "M001 PCI Express Switch Upstream Port";
			case 0x1054302d: return "M001 PCI Express Switch Downstream Port";
			case 0x10543070: return "Hitachi FIVE-FX Fibre Channel to PCIe HBA";
			case 0x10543505: return "SH7751 PCI Controller (PCIC)";
			case 0x1054350e: return "SH7751R PCI Controller (PCIC)";
			case 0x10559130: return "SLC90E66 [Victory66] IDE";
			case 0x10559460: return "SLC90E66 [Victory66] ISA";
			case 0x10559462: return "SLC90E66 [Victory66] USB";
			case 0x10559463: return "SLC90E66 [Victory66] ACPI";
			case 0x1055e420: return "LAN9420/LAN9420i";
			case 0x10570001: return "MPC105 [Eagle]";
			case 0x10570002: return "MPC106 [Grackle]";
			case 0x10570003: return "MPC8240 [Kahlua]";
			case 0x10570004: return "MPC107";
			case 0x10570006: return "MPC8245 [Unity]";
			case 0x10570008: return "MPC8540";
			case 0x10570009: return "MPC8560";
			case 0x10570012: return "MPC8548 [PowerQUICC III]";
			case 0x10570100: return "MC145575 [HFC-PCI]";
			case 0x10570431: return "KTI829c 100VG";
			case 0x10571073: return "Nokia N770";
			case 0x10571219: return "Nokia N800";
			case 0x10571801: return "DSP56301 Digital Signal Processor";
			case 0x105718c0: return "MPC8265A/8266/8272";
			case 0x105718c1: return "MPC8271/MPC8272";
			case 0x10573052: return "SM56 Data Fax Modem";
			case 0x10573410: return "DSP56361 Digital Signal Processor";
			case 0x10574801: return "Raven";
			case 0x10574802: return "Falcon";
			case 0x10574803: return "Hawk";
			case 0x10574806: return "CPX8216";
			case 0x1057480b: return "MPC7410";
			case 0x10574d68: return "20268";
			case 0x10575600: return "SM56 PCI Modem";
			case 0x10575608: return "Wildcard X100P";
			case 0x10575803: return "MPC5200";
			case 0x10575806: return "MCF54 Coldfire";
			case 0x10575808: return "MPC8220";
			case 0x10575809: return "MPC5200B";
			case 0x10576400: return "MPC190 Security Processor (S1 family, encryption)";
			case 0x10576405: return "MPC184 Security Processor (S1 family)";
			case 0x105a0d30: return "PDC20265 (FastTrak100 Lite/Ultra100)";
			case 0x105a0d38: return "20263";
			case 0x105a1275: return "20275";
			case 0x105a3318: return "PDC20318 (SATA150 TX4)";
			case 0x105a3319: return "PDC20319 (FastTrak S150 TX4)";
			case 0x105a3371: return "PDC20371 (FastTrak S150 TX2plus)";
			case 0x105a3373: return "PDC20378 (FastTrak 378/SATA 378)";
			case 0x105a3375: return "PDC20375 (SATA150 TX2plus)";
			case 0x105a3376: return "PDC20376 (FastTrak 376)";
			case 0x105a3515: return "PDC40719 [FastTrak TX4300/TX4310]";
			case 0x105a3519: return "PDC40519 (FastTrak TX4200)";
			case 0x105a3570: return "PDC20771 [FastTrak TX2300]";
			case 0x105a3571: return "PDC20571 (FastTrak TX2200)";
			case 0x105a3574: return "PDC20579 SATAII 150 IDE Controller";
			case 0x105a3577: return "PDC40779 (SATA 300 779)";
			case 0x105a3d17: return "PDC40718 (SATA 300 TX4)";
			case 0x105a3d18: return "PDC20518/PDC40518 (SATAII 150 TX4)";
			case 0x105a3d73: return "PDC40775 (SATA 300 TX2plus)";
			case 0x105a3d75: return "PDC20575 (SATAII150 TX2plus)";
			case 0x105a3f20: return "PDC42819 [FastTrak TX2650/TX4650]";
			case 0x105a4302: return "80333 [SuperTrak EX4350]";
			case 0x105a4d30: return "PDC20267 (FastTrak100/Ultra100)";
			case 0x105a4d33: return "20246";
			case 0x105a4d38: return "PDC20262 (FastTrak66/Ultra66)";
			case 0x105a4d68: return "PDC20268 [Ultra100 TX2]";
			case 0x105a4d69: return "20269";
			case 0x105a5275: return "PDC20276 (MBFastTrak133 Lite)";
			case 0x105a5300: return "DC5300";
			case 0x105a6268: return "PDC20270 (FastTrak100 LP/TX2/TX4)";
			case 0x105a6269: return "PDC20271 (FastTrak TX2000)";
			case 0x105a6300: return "PDC81731 [FastTrak SX8300]";
			case 0x105a6621: return "PDC20621 (FastTrak S150 SX4/FastTrak SX4000 lite)";
			case 0x105a6622: return "PDC20621 [SATA150 SX4] 4 Channel IDE RAID Controller";
			case 0x105a6624: return "PDC20621 [FastTrak SX4100]";
			case 0x105a6626: return "PDC20618 (Ultra 618)";
			case 0x105a6629: return "PDC20619 (FastTrak TX4000)";
			case 0x105a7275: return "PDC20277 (SBFastTrak133 Lite)";
			case 0x105a8002: return "SATAII150 SX8";
			case 0x105a8350: return "80333 [SuperTrak EX8350/EX16350], 80331 [SuperTrak EX8300/EX16300]";
			case 0x105a8650: return "81384 [SuperTrak EX SAS and SATA RAID Controller]";
			case 0x105a8760: return "PM8010 [SuperTrak EX SAS and SATA 6G RAID Controller]";
			case 0x105ac350: return "80333 [SuperTrak EX12350]";
			case 0x105ae350: return "80333 [SuperTrak EX24350]";
			case 0x105d2309: return "Imagine 128";
			case 0x105d2339: return "Imagine 128-II";
			case 0x105d493d: return "Imagine 128 T2R [Ticket to Ride]";
			case 0x105d5348: return "Revolution 4";
			case 0x10600001: return "UM82C881";
			case 0x10600002: return "UM82C886";
			case 0x10600101: return "UM8673F";
			case 0x10600881: return "UM8881";
			case 0x10600886: return "UM8886F";
			case 0x10600891: return "UM8891A";
			case 0x10601001: return "UM886A";
			case 0x1060673a: return "UM8886BF";
			case 0x1060673b: return "EIDE Master/DMA";
			case 0x10608710: return "UM8710";
			case 0x1060886a: return "UM8886A";
			case 0x10608881: return "UM8881F";
			case 0x10608886: return "UM8886F";
			case 0x1060888a: return "UM8886A";
			case 0x10608891: return "UM8891A";
			case 0x10609017: return "UM9017F";
			case 0x10609018: return "UM9018";
			case 0x10609026: return "UM9026";
			case 0x1060e881: return "UM8881N";
			case 0x1060e886: return "UM8886N";
			case 0x1060e88a: return "UM8886N";
			case 0x1060e891: return "UM8891N";
			case 0x10610001: return "AGX016";
			case 0x10610002: return "IIT3204/3501";
			case 0x10641102: return "Dynamite 2840 (ADSL PCI modem)";
			case 0x10660000: return "PT80C826";
			case 0x10660001: return "PT86C521 [Vesuvius v1] Host Bridge";
			case 0x10660002: return "PT86C523 [Vesuvius v3] PCI-ISA Bridge Master";
			case 0x10660003: return "PT86C524 [Nile] PCI-to-PCI Bridge";
			case 0x10660004: return "PT86C525 [Nile-II] PCI-to-PCI Bridge";
			case 0x10660005: return "National PC87550 System Controller";
			case 0x10668002: return "PT86C523 [Vesuvius v3] PCI-ISA Bridge Slave";
			case 0x10670301: return "AccelGraphics AccelECLIPSE";
			case 0x10670304: return "AccelGALAXY A2100 [OEM Evans & Sutherland]";
			case 0x10670308: return "Tornado 3000 [OEM Evans & Sutherland]";
			case 0x10671002: return "VG500 [VolumePro Volume Rendering Accelerator]";
			case 0x10690001: return "DAC960P";
			case 0x10690002: return "DAC960PD";
			case 0x10690010: return "DAC960PG";
			case 0x10690020: return "DAC960LA";
			case 0x10690050: return "AcceleRAID 352/170/160 support Device";
			case 0x1069b166: return "AcceleRAID 600/500/400/Sapphire support Device";
			case 0x1069ba55: return "eXtremeRAID 1100 support Device";
			case 0x1069ba56: return "eXtremeRAID 2000/3000 support Device";
			case 0x1069ba57: return "eXtremeRAID 4000/5000 support Device";
			case 0x106b0001: return "Bandit PowerPC host bridge";
			case 0x106b0002: return "Grand Central I/O";
			case 0x106b0003: return "Control Video";
			case 0x106b0004: return "PlanB Video-In";
			case 0x106b0007: return "O'Hare I/O";
			case 0x106b000b: return "Apple Camera";
			case 0x106b000c: return "DOS on Mac";
			case 0x106b000e: return "Hydra Mac I/O";
			case 0x106b0010: return "Heathrow Mac I/O";
			case 0x106b0017: return "Paddington Mac I/O";
			case 0x106b0018: return "UniNorth FireWire";
			case 0x106b0019: return "KeyLargo USB";
			case 0x106b001e: return "UniNorth Internal PCI";
			case 0x106b001f: return "UniNorth PCI";
			case 0x106b0020: return "UniNorth AGP";
			case 0x106b0021: return "UniNorth GMAC (Sun GEM)";
			case 0x106b0022: return "KeyLargo Mac I/O";
			case 0x106b0024: return "UniNorth/Pangea GMAC (Sun GEM)";
			case 0x106b0025: return "KeyLargo/Pangea Mac I/O";
			case 0x106b0026: return "KeyLargo/Pangea USB";
			case 0x106b0027: return "UniNorth/Pangea AGP";
			case 0x106b0028: return "UniNorth/Pangea PCI";
			case 0x106b0029: return "UniNorth/Pangea Internal PCI";
			case 0x106b002d: return "UniNorth 1.5 AGP";
			case 0x106b002e: return "UniNorth 1.5 PCI";
			case 0x106b002f: return "UniNorth 1.5 Internal PCI";
			case 0x106b0030: return "UniNorth/Pangea FireWire";
			case 0x106b0031: return "UniNorth 2 FireWire";
			case 0x106b0032: return "UniNorth 2 GMAC (Sun GEM)";
			case 0x106b0033: return "UniNorth 2 ATA/100";
			case 0x106b0034: return "UniNorth 2 AGP";
			case 0x106b0035: return "UniNorth 2 PCI";
			case 0x106b0036: return "UniNorth 2 Internal PCI";
			case 0x106b003b: return "UniNorth/Intrepid ATA/100";
			case 0x106b003e: return "KeyLargo/Intrepid Mac I/O";
			case 0x106b003f: return "KeyLargo/Intrepid USB";
			case 0x106b0040: return "K2 KeyLargo USB";
			case 0x106b0041: return "K2 KeyLargo Mac/IO";
			case 0x106b0042: return "K2 FireWire";
			case 0x106b0043: return "K2 ATA/100";
			case 0x106b0045: return "K2 HT-PCI Bridge";
			case 0x106b0046: return "K2 HT-PCI Bridge";
			case 0x106b0047: return "K2 HT-PCI Bridge";
			case 0x106b0048: return "K2 HT-PCI Bridge";
			case 0x106b0049: return "K2 HT-PCI Bridge";
			case 0x106b004a: return "CPC945 HT Bridge";
			case 0x106b004b: return "U3 AGP";
			case 0x106b004c: return "K2 GMAC (Sun GEM)";
			case 0x106b004f: return "Shasta Mac I/O";
			case 0x106b0050: return "Shasta IDE";
			case 0x106b0051: return "Shasta (Sun GEM)";
			case 0x106b0052: return "Shasta Firewire";
			case 0x106b0053: return "Shasta PCI Bridge";
			case 0x106b0054: return "Shasta PCI Bridge";
			case 0x106b0055: return "Shasta PCI Bridge";
			case 0x106b0056: return "U4 PCIe";
			case 0x106b0057: return "U3 HT Bridge";
			case 0x106b0058: return "U3L AGP Bridge";
			case 0x106b0059: return "U3H AGP Bridge";
			case 0x106b005b: return "CPC945 PCIe Bridge";
			case 0x106b0066: return "Intrepid2 AGP Bridge";
			case 0x106b0067: return "Intrepid2 PCI Bridge";
			case 0x106b0068: return "Intrepid2 PCI Bridge";
			case 0x106b0069: return "Intrepid2 ATA/100";
			case 0x106b006a: return "Intrepid2 Firewire";
			case 0x106b006b: return "Intrepid2 GMAC (Sun GEM)";
			case 0x106b0074: return "U4 HT Bridge";
			case 0x106b1645: return "Broadcom NetXtreme BCM5701 Gigabit Ethernet";
			case 0x106b1801: return "T2 Bridge Controller";
			case 0x106b1802: return "T2 Secure Enclave Processor";
			case 0x106b1803: return "Apple Audio Device";
			case 0x106b2001: return "S1X NVMe Controller";
			case 0x106b2002: return "S3ELab NVMe Controller";
			case 0x106b2003: return "S3X NVMe Controller";
			case 0x106b2005: return "ANS2 NVMe Controller";
			case 0x106c8139: return "8139c 100BaseTX Ethernet Controller";
			case 0x106c8801: return "Dual Pentium ISA/PCI Motherboard";
			case 0x106c8802: return "PowerPC ISA/PCI Motherboard";
			case 0x106c8803: return "Dual Window Graphics Accelerator";
			case 0x106c8804: return "LAN Controller";
			case 0x106c8805: return "100-BaseT LAN";
			case 0x10718160: return "Mitac 8060B Mobile Platform";
			case 0x10730001: return "3D GUI Accelerator";
			case 0x10730002: return "YGV615 [RPA3 3D-Graphics Controller]";
			case 0x10730003: return "YMF-740";
			case 0x10730004: return "YMF-724";
			case 0x10730005: return "DS1 Audio";
			case 0x10730006: return "DS1 Audio";
			case 0x10730008: return "DS1 Audio";
			case 0x1073000a: return "DS1L Audio";
			case 0x1073000c: return "YMF-740C [DS-1L Audio Controller]";
			case 0x1073000d: return "YMF-724F [DS-1 Audio Controller]";
			case 0x10730010: return "YMF-744B [DS-1S Audio Controller]";
			case 0x10730012: return "YMF-754 [DS-1E Audio Controller]";
			case 0x10730020: return "DS-1 Audio";
			case 0x10731000: return "SW1000XG [XG Factory]";
			case 0x10732000: return "DS2416 Digital Mixing Card";
			case 0x10744e78: return "82c500/1";
			case 0x10771016: return "ISP10160 Single Channel Ultra3 SCSI Processor";
			case 0x10771020: return "ISP1020 Fast-wide SCSI";
			case 0x10771022: return "ISP1022 Fast-wide SCSI";
			case 0x10771080: return "ISP1080 SCSI Host Adapter";
			case 0x10771216: return "ISP12160 Dual Channel Ultra3 SCSI Processor";
			case 0x10771240: return "ISP1240 SCSI Host Adapter";
			case 0x10771280: return "ISP1280 SCSI Host Adapter";
			case 0x10771634: return "FastLinQ QL45000 Series 40GbE Controller";
			case 0x10771644: return "FastLinQ QL45000 Series 100GbE Controller";
			case 0x10771654: return "FastLinQ QL45000 Series 50GbE Controller";
			case 0x10771656: return "FastLinQ QL45000 Series 25GbE Controller";
			case 0x1077165c: return "FastLinQ QL45000 Series 10/25/40/50GbE Controller (FCoE)";
			case 0x1077165e: return "FastLinQ QL45000 Series 10/25/40/50GbE Controller (iSCSI)";
			case 0x10771664: return "FastLinQ QL45000 Series Gigabit Ethernet Controller (SR-IOV VF)";
			case 0x10772020: return "ISP2020A Fast!SCSI Basic Adapter";
			case 0x10772031: return "ISP8324-based 16Gb Fibre Channel to PCI Express Adapter";
			case 0x10772071: return "ISP2714-based 16/32Gb Fibre Channel to PCIe Adapter";
			case 0x10772081: return "ISP2814-based 64/32G Fibre Channel to PCIe Controller";
			case 0x10772089: return "ISP2854-based 64/32G Fibre Channel to PCIe Controller with StorCryption";
			case 0x10772100: return "QLA2100 64-bit Fibre Channel Adapter";
			case 0x10772200: return "QLA2200 64-bit Fibre Channel Adapter";
			case 0x10772261: return "ISP2722-based 16/32Gb Fibre Channel to PCIe Adapter";
			case 0x10772281: return "ISP2812-based 64/32G Fibre Channel to PCIe Controller";
			case 0x10772289: return "ISP2852-based 64/32G Fibre Channel to PCIe Controller with StorCryption";
			case 0x10772300: return "QLA2300 64-bit Fibre Channel Adapter";
			case 0x10772312: return "ISP2312-based 2Gb Fibre Channel to PCI-X HBA";
			case 0x10772322: return "ISP2322-based 2Gb Fibre Channel to PCI-X HBA";
			case 0x10772422: return "ISP2422-based 4Gb Fibre Channel to PCI-X HBA";
			case 0x10772432: return "ISP2432-based 4Gb Fibre Channel to PCI Express HBA";
			case 0x10772532: return "ISP2532-based 8Gb Fibre Channel to PCI Express HBA";
			case 0x10772971: return "ISP2684";
			case 0x10773022: return "ISP4022-based Ethernet NIC";
			case 0x10773032: return "ISP4032-based Ethernet IPv6 NIC";
			case 0x10774010: return "ISP4010-based iSCSI TOE HBA";
			case 0x10774022: return "ISP4022-based iSCSI TOE HBA";
			case 0x10774032: return "ISP4032-based iSCSI TOE IPv6 HBA";
			case 0x10775432: return "SP232-based 4Gb Fibre Channel to PCI Express HBA";
			case 0x10776312: return "SP202-based 2Gb Fibre Channel to PCI-X HBA";
			case 0x10776322: return "SP212-based 2Gb Fibre Channel to PCI-X HBA";
			case 0x10777220: return "IBA7220 InfiniBand HCA";
			case 0x10777322: return "IBA7322 QDR InfiniBand HCA";
			case 0x10778000: return "10GbE Converged Network Adapter (TCP/IP Networking)";
			case 0x10778001: return "10GbE Converged Network Adapter (FCoE)";
			case 0x10778020: return "cLOM8214 1/10GbE Controller";
			case 0x10778021: return "8200 Series 10GbE Converged Network Adapter (FCoE)";
			case 0x10778022: return "8200 Series 10GbE Converged Network Adapter (iSCSI)";
			case 0x10778030: return "ISP8324 1/10GbE Converged Network Controller";
			case 0x10778031: return "8300 Series 10GbE Converged Network Adapter (FCoE)";
			case 0x10778032: return "8300 Series 10GbE Converged Network Adapter (iSCSI)";
			case 0x10778070: return "FastLinQ QL41000 Series 10/25/40/50GbE Controller";
			case 0x10778080: return "FastLinQ QL41000 Series 10/25/40/50GbE Controller (FCoE)";
			case 0x10778084: return "FastLinQ QL41000 Series 10/25/40/50GbE Controller (iSCSI)";
			case 0x10778090: return "FastLinQ QL41000 Series Gigabit Ethernet Controller (SR-IOV VF)";
			case 0x10778430: return "ISP8324 1/10GbE Converged Network Controller (NIC VF)";
			case 0x10778431: return "8300 Series 10GbE Converged Network Adapter (FCoE VF)";
			case 0x10778432: return "ISP2432M-based 10GbE Converged Network Adapter (CNA)";
			case 0x10780000: return "5510 [Grappa]";
			case 0x10780001: return "PCI Master";
			case 0x10780002: return "5520 [Cognac]";
			case 0x10780100: return "5530 Legacy [Kahlua]";
			case 0x10780101: return "5530 SMI [Kahlua]";
			case 0x10780102: return "5530 IDE [Kahlua]";
			case 0x10780103: return "5530 Audio [Kahlua]";
			case 0x10780104: return "5530 Video [Kahlua]";
			case 0x10780400: return "ZFMicro PCI Bridge";
			case 0x10780401: return "ZFMicro Chipset SMI";
			case 0x10780402: return "ZFMicro Chipset IDE";
			case 0x10780403: return "ZFMicro Expansion Bus";
			case 0x107d0000: return "P86C850";
			case 0x107e0001: return "5515 ATM Adapter [Flipper]";
			case 0x107e0002: return "100 VG AnyLan Controller";
			case 0x107e0004: return "5526 Fibre Channel Host Adapter";
			case 0x107e0005: return "x526 Fibre Channel Host Adapter";
			case 0x107e0008: return "5525/5575 ATM Adapter (155 Mbit) [Atlantic]";
			case 0x107e9003: return "5535-4P-BRI-ST";
			case 0x107e9007: return "5535-4P-BRI-U";
			case 0x107e9008: return "5535-1P-SR";
			case 0x107e900c: return "5535-1P-SR-ST";
			case 0x107e900e: return "5535-1P-SR-U";
			case 0x107e9011: return "5535-1P-PRI";
			case 0x107e9013: return "5535-2P-PRI";
			case 0x107e9023: return "5536-4P-BRI-ST";
			case 0x107e9027: return "5536-4P-BRI-U";
			case 0x107e9031: return "5536-1P-PRI";
			case 0x107e9033: return "5536-2P-PRI";
			case 0x107f0802: return "SL82C105";
			case 0x10800600: return "82C599";
			case 0x1080c691: return "Cypress CY82C691";
			case 0x1080c693: return "82c693";
			case 0x10810d47: return "Radius PCI to NuBUS Bridge";
			case 0x10830001: return "FR710";
			case 0x108a0001: return "VME Bridge Model 617";
			case 0x108a0010: return "VME Bridge Model 618";
			case 0x108a0040: return "dataBLIZZARD";
			case 0x108a3000: return "VME Bridge Model 2706";
			case 0x108d0001: return "Token-Ring 16/4 PCI Adapter (3136/3137)";
			case 0x108d0002: return "16/4 Token Ring";
			case 0x108d0004: return "RapidFire OC-3139/3140 Token-Ring 16/4 PCI Adapter";
			case 0x108d0005: return "GoCard 3250 Token-Ring 16/4 CardBus PC Card";
			case 0x108d0006: return "OC-3530 RapidFire Token-Ring 100";
			case 0x108d0007: return "RapidFire 3141 Token-Ring 16/4 PCI Fiber Adapter";
			case 0x108d0008: return "RapidFire 3540 HSTR 100/16/4 PCI Adapter";
			case 0x108d0011: return "OC-2315";
			case 0x108d0012: return "OC-2325";
			case 0x108d0013: return "OC-2183/2185";
			case 0x108d0014: return "OC-2326";
			case 0x108d0019: return "OC-2327/2250 10/100 Ethernet Adapter";
			case 0x108d0021: return "OC-6151/6152 [RapidFire ATM 155]";
			case 0x108d0022: return "ATM Adapter";
			case 0x108e0001: return "EBUS";
			case 0x108e1000: return "EBUS";
			case 0x108e1001: return "Happy Meal 10/100 Ethernet [hme]";
			case 0x108e1100: return "RIO EBUS";
			case 0x108e1101: return "RIO 10/100 Ethernet [eri]";
			case 0x108e1102: return "RIO 1394";
			case 0x108e1103: return "RIO USB";
			case 0x108e1647: return "Broadcom 570x 10/100/1000 Ethernet [bge]";
			case 0x108e1648: return "Broadcom 570x 10/100/1000 Ethernet [bge]";
			case 0x108e16a7: return "Broadcom 570x 10/100/1000 Ethernet [bge]";
			case 0x108e16a8: return "Broadcom 570x 10/100/1000 Ethernet [bge]";
			case 0x108e2bad: return "GEM 10/100/1000 Ethernet [ge]";
			case 0x108e5000: return "Simba Advanced PCI Bridge";
			case 0x108e5043: return "SunPCI Co-processor";
			case 0x108e5ca0: return "Crypto Accelerator 6000 [mca]";
			case 0x108e6300: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6301: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6302: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6303: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6310: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6311: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6312: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6313: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6320: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6323: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6330: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6331: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6332: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6333: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6340: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6343: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6350: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6353: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e6722: return "Intel 21554 PCI-PCI bus bridge [db21554]";
			case 0x108e676e: return "SunPCiIII";
			case 0x108e7063: return "SunPCiII / SunPCiIIpro";
			case 0x108e8000: return "Psycho PCI Bus Module";
			case 0x108e8001: return "Schizo PCI Bus Module";
			case 0x108e8002: return "Schizo+ PCI Bus Module";
			case 0x108e80f0: return "PCIe switch [px]";
			case 0x108e80f8: return "PCIe switch [px]";
			case 0x108e9010: return "PCIe/PCI bridge switch [pxb_plx]";
			case 0x108e9020: return "PCIe/PCI bridge switch [pxb_plx]";
			case 0x108e9102: return "Davicom Fast Ethernet driver for Davicom DM9102A [dmfe]";
			case 0x108ea000: return "Psycho UPA-PCI Bus Module [pcipsy]";
			case 0x108ea001: return "Psycho UPA-PCI Bus Module [pcipsy]";
			case 0x108ea801: return "Schizo Fireplane-PCI bus bridge module [pcisch]";
			case 0x108eaaaa: return "Multithreaded Shared 10GbE Ethernet Network Controller";
			case 0x108eabba: return "Cassini 10/100/1000";
			case 0x108eabcd: return "Multithreaded 10-Gigabit Ethernet Network Controller";
			case 0x108ec416: return "Sun Fire System/System Controller Interface chip [sbbc]";
			case 0x10904610: return "PCI RTOM";
			case 0x10904620: return "GPIO HSD";
			case 0x10910020: return "3D graphics processor";
			case 0x10910021: return "3D graphics processor w/Texturing";
			case 0x10910040: return "3D graphics frame buffer";
			case 0x10910041: return "3D graphics frame buffer";
			case 0x10910060: return "Proprietary bus bridge";
			case 0x109100e4: return "Powerstorm 4D50T";
			case 0x10910720: return "Motion JPEG codec";
			case 0x10910780: return "Intense3D Wildcat 3410 (MSMT496)";
			case 0x109107a0: return "Sun Expert3D-Lite Graphics Accelerator";
			case 0x10911091: return "Sun Expert3D Graphics Accelerator";
			case 0x10920028: return "Viper V770";
			case 0x109200a0: return "Speedstar Pro SE";
			case 0x109200a8: return "Speedstar 64";
			case 0x10920550: return "Viper V550";
			case 0x109208d4: return "Supra 2260 Modem";
			case 0x1092094c: return "SupraExpress 56i Pro";
			case 0x10921001: return "Video Crunch It 1001 capture card";
			case 0x10921092: return "Viper V330";
			case 0x10926120: return "Maximum DVD";
			case 0x10928810: return "Stealth SE";
			case 0x10928811: return "Stealth 64/SE";
			case 0x10928880: return "Stealth";
			case 0x10928881: return "Stealth";
			case 0x109288b0: return "Stealth 64";
			case 0x109288b1: return "Stealth 64";
			case 0x109288c0: return "Stealth 64";
			case 0x109288c1: return "Stealth 64";
			case 0x109288d0: return "Stealth 64";
			case 0x109288d1: return "Stealth 64";
			case 0x109288f0: return "Stealth 64";
			case 0x109288f1: return "Stealth 64";
			case 0x10929999: return "DMD-I0928-1 \"Monster sound\" sound chip";
			case 0x10930160: return "PCI-DIO-96";
			case 0x10930162: return "PCI-MIO-16XE-50";
			case 0x10930fe1: return "PXI-8320";
			case 0x10931150: return "PCI-6533 (PCI-DIO-32HS)";
			case 0x10931170: return "PCI-MIO-16XE-10";
			case 0x10931180: return "PCI-MIO-16E-1";
			case 0x10931190: return "PCI-MIO-16E-4";
			case 0x109311b0: return "PXI-6070E";
			case 0x109311c0: return "PXI-6040E";
			case 0x109311d0: return "PXI-6030E";
			case 0x10931270: return "PCI-6032E";
			case 0x10931290: return "PCI-6704";
			case 0x109312b0: return "PCI-6534";
			case 0x10931310: return "PCI-6602";
			case 0x10931320: return "PXI-6533";
			case 0x10931330: return "PCI-6031E";
			case 0x10931340: return "PCI-6033E";
			case 0x10931350: return "PCI-6071E";
			case 0x10931360: return "PXI-6602";
			case 0x109313c0: return "PXI-6508";
			case 0x10931490: return "PXI-6534";
			case 0x109314e0: return "PCI-6110";
			case 0x109314f0: return "PCI-6111";
			case 0x10931580: return "PXI-6031E";
			case 0x109315b0: return "PXI-6071E";
			case 0x10931710: return "PXI-6509";
			case 0x109317c0: return "PXI-5690";
			case 0x109317d0: return "PCI-6503";
			case 0x10931870: return "PCI-6713";
			case 0x10931880: return "PCI-6711";
			case 0x109318b0: return "PCI-6052E";
			case 0x109318c0: return "PXI-6052E";
			case 0x10931920: return "PXI-6704";
			case 0x10931930: return "PCI-6040E";
			case 0x109319c0: return "PCI-4472";
			case 0x10931aa0: return "PXI-4110";
			case 0x10931ad0: return "PCI-6133";
			case 0x10931ae0: return "PXI-6133";
			case 0x10931e30: return "PCI-6624";
			case 0x10931e40: return "PXI-6624";
			case 0x10931e50: return "PXI-5404";
			case 0x10932410: return "PCI-6733";
			case 0x10932420: return "PXI-6733";
			case 0x10932430: return "PCI-6731";
			case 0x10932470: return "PCI-4474";
			case 0x109324a0: return "PCI-4065";
			case 0x109324b0: return "PXI-4200";
			case 0x109324f0: return "PXI-4472";
			case 0x10932510: return "PCI-4472";
			case 0x10932520: return "PCI-4474";
			case 0x109327a0: return "PCI-6123";
			case 0x109327b0: return "PXI-6123";
			case 0x10932880: return "DAQCard-6601";
			case 0x10932890: return "PCI-6036E";
			case 0x109328a0: return "PXI-4461";
			case 0x109328b0: return "PCI-6013";
			case 0x109328c0: return "PCI-6014";
			case 0x109328d0: return "PCI-5122";
			case 0x109328e0: return "PXI-5122";
			case 0x109329f0: return "PXI-7334";
			case 0x10932a00: return "PXI-7344";
			case 0x10932a60: return "PCI-6023E";
			case 0x10932a70: return "PCI-6024E";
			case 0x10932a80: return "PCI-6025E";
			case 0x10932ab0: return "PXI-6025E";
			case 0x10932b10: return "PXI-6527";
			case 0x10932b20: return "PCI-6527";
			case 0x10932b80: return "PXI-6713";
			case 0x10932b90: return "PXI-6711";
			case 0x10932c60: return "PCI-6601";
			case 0x10932c70: return "PXI-6601";
			case 0x10932c80: return "PCI-6035E";
			case 0x10932c90: return "PCI-6703";
			case 0x10932ca0: return "PCI-6034E";
			case 0x10932cb0: return "PCI-7344";
			case 0x10932cc0: return "PXI-6608";
			case 0x10932d20: return "PXI-5600";
			case 0x10932db0: return "PCI-6608";
			case 0x10932dc0: return "PCI-4070";
			case 0x10932dd0: return "PXI-4070";
			case 0x10932eb0: return "PXI-4472";
			case 0x10932ec0: return "PXI-6115";
			case 0x10932ed0: return "PCI-6115";
			case 0x10932ee0: return "PXI-6120";
			case 0x10932ef0: return "PCI-6120";
			case 0x10932fd1: return "PCI-7334";
			case 0x10932fd2: return "PCI-7350";
			case 0x10932fd3: return "PCI-7342";
			case 0x10932fd5: return "PXI-7350";
			case 0x10932fd6: return "PXI-7342";
			case 0x10937003: return "PCI-6551";
			case 0x10937004: return "PXI-6551";
			case 0x1093700b: return "PXI-5421";
			case 0x1093700c: return "PCI-5421";
			case 0x1093701a: return "VXIpc-87xB";
			case 0x1093701b: return "VXIpc-770";
			case 0x10937023: return "PXI-2593";
			case 0x10937027: return "PCI-MXI-2 Universal";
			case 0x1093702c: return "PXI-7831R";
			case 0x1093702d: return "PCI-7831R";
			case 0x1093702e: return "PXI-7811R";
			case 0x1093702f: return "PCI-7811R";
			case 0x10937030: return "PCI-CAN (Series 2)";
			case 0x10937031: return "PCI-CAN/2 (Series 2)";
			case 0x10937032: return "PCI-CAN/LS (Series 2)";
			case 0x10937033: return "PCI-CAN/LS2 (Series 2)";
			case 0x10937034: return "PCI-CAN/DS (Series 2)";
			case 0x10937035: return "PXI-8460 (Series 2, 1 port)";
			case 0x10937036: return "PXI-8460 (Series 2, 2 ports)";
			case 0x10937037: return "PXI-8461 (Series 2, 1 port)";
			case 0x10937038: return "PXI-8461 (Series 2, 2 ports)";
			case 0x10937039: return "PXI-8462 (Series 2)";
			case 0x1093703f: return "PXI-2566";
			case 0x10937040: return "PXI-2567";
			case 0x10937044: return "MXI-4 Connection Monitor";
			case 0x10937047: return "PXI-6653";
			case 0x1093704c: return "PXI-2530";
			case 0x1093704f: return "PXI-4220";
			case 0x10937050: return "PXI-4204";
			case 0x10937055: return "PXI-7830R";
			case 0x10937056: return "PCI-7830R";
			case 0x1093705a: return "PCI-CAN/XS (Series 2)";
			case 0x1093705b: return "PCI-CAN/XS2 (Series 2)";
			case 0x1093705c: return "PXI-8464 (Series 2, 1 port)";
			case 0x1093705d: return "PXI-8464 (Series 2, 2 ports)";
			case 0x1093705e: return "cRIO-9102";
			case 0x10937060: return "PXI-5610";
			case 0x10937064: return "PXI-1045 Trigger Routing Module";
			case 0x10937065: return "PXI-6652";
			case 0x10937066: return "PXI-6651";
			case 0x10937067: return "PXI-2529";
			case 0x10937068: return "PCI-CAN/SW (Series 2)";
			case 0x10937069: return "PCI-CAN/SW2 (Series 2)";
			case 0x1093706a: return "PXI-8463 (Series 2, 1 port)";
			case 0x1093706b: return "PXI-8463 (Series 2, 2 ports)";
			case 0x10937073: return "PCI-6723";
			case 0x10937074: return "PXI-7833R";
			case 0x10937075: return "PXI-6552";
			case 0x10937076: return "PCI-6552";
			case 0x1093707c: return "PXI-1428";
			case 0x1093707e: return "PXI-4462";
			case 0x10937080: return "PXI-8430/2 (RS-232) Interface";
			case 0x10937081: return "PXI-8431/2 (RS-485) Interface";
			case 0x10937083: return "PCI-7833R";
			case 0x10937085: return "PCI-6509";
			case 0x10937086: return "PXI-6528";
			case 0x10937087: return "PCI-6515";
			case 0x10937088: return "PCI-6514";
			case 0x1093708c: return "PXI-2568";
			case 0x1093708d: return "PXI-2569";
			case 0x109370a9: return "PCI-6528";
			case 0x109370aa: return "PCI-6229";
			case 0x109370ab: return "PCI-6259";
			case 0x109370ac: return "PCI-6289";
			case 0x109370ad: return "PXI-6251";
			case 0x109370ae: return "PXI-6220";
			case 0x109370af: return "PCI-6221";
			case 0x109370b0: return "PCI-6220";
			case 0x109370b1: return "PXI-6229";
			case 0x109370b2: return "PXI-6259";
			case 0x109370b3: return "PXI-6289";
			case 0x109370b4: return "PCI-6250";
			case 0x109370b5: return "PXI-6221";
			case 0x109370b6: return "PCI-6280";
			case 0x109370b7: return "PCI-6254";
			case 0x109370b8: return "PCI-6251";
			case 0x109370b9: return "PXI-6250";
			case 0x109370ba: return "PXI-6254";
			case 0x109370bb: return "PXI-6280";
			case 0x109370bc: return "PCI-6284";
			case 0x109370bd: return "PCI-6281";
			case 0x109370be: return "PXI-6284";
			case 0x109370bf: return "PXI-6281";
			case 0x109370c0: return "PCI-6143";
			case 0x109370c3: return "PCI-6511";
			case 0x109370c4: return "PXI-7330";
			case 0x109370c5: return "PXI-7340";
			case 0x109370c6: return "PCI-7330";
			case 0x109370c7: return "PCI-7340";
			case 0x109370c8: return "PCI-6513";
			case 0x109370c9: return "PXI-6515";
			case 0x109370ca: return "PCI-1405";
			case 0x109370cc: return "PCI-6512";
			case 0x109370cd: return "PXI-6514";
			case 0x109370ce: return "PXI-1405";
			case 0x109370cf: return "PCIe-GPIB";
			case 0x109370d0: return "PXI-2570";
			case 0x109370d1: return "PXI-6513";
			case 0x109370d2: return "PXI-6512";
			case 0x109370d3: return "PXI-6511";
			case 0x109370d4: return "PCI-6722";
			case 0x109370d6: return "PXI-4072";
			case 0x109370d7: return "PXI-6541";
			case 0x109370d8: return "PXI-6542";
			case 0x109370d9: return "PCI-6541";
			case 0x109370da: return "PCI-6542";
			case 0x109370db: return "PCI-8430/2 (RS-232) Interface";
			case 0x109370dc: return "PCI-8431/2 (RS-485) Interface";
			case 0x109370dd: return "PXI-8430/4 (RS-232) Interface";
			case 0x109370de: return "PXI-8431/4 (RS-485) Interface";
			case 0x109370df: return "PCI-8430/4 (RS-232) Interface";
			case 0x109370e0: return "PCI-8431/4 (RS-485) Interface";
			case 0x109370e1: return "PXI-2532";
			case 0x109370e2: return "PXI-8430/8 (RS-232) Interface";
			case 0x109370e3: return "PXI-8431/8 (RS-485) Interface";
			case 0x109370e4: return "PCI-8430/8 (RS-232) Interface";
			case 0x109370e5: return "PCI-8431/8 (RS-485) Interface";
			case 0x109370e6: return "PXI-8430/16 (RS-232) Interface";
			case 0x109370e7: return "PCI-8430/16 (RS-232) Interface";
			case 0x109370e8: return "PXI-8432/2 (Isolated RS-232) Interface";
			case 0x109370e9: return "PXI-8433/2 (Isolated RS-485) Interface";
			case 0x109370ea: return "PCI-8432/2 (Isolated RS-232) Interface";
			case 0x109370eb: return "PCI-8433/2 (Isolated RS-485) Interface";
			case 0x109370ec: return "PXI-8432/4 (Isolated RS-232) Interface";
			case 0x109370ed: return "PXI-8433/4 (Isolated RS-485) Interface";
			case 0x109370ee: return "PCI-8432/4 (Isolated RS-232) Interface";
			case 0x109370ef: return "PCI-8433/4 (Isolated RS-485) Interface";
			case 0x109370f0: return "PXI-5922";
			case 0x109370f1: return "PCI-5922";
			case 0x109370f2: return "PCI-6224";
			case 0x109370f3: return "PXI-6224";
			case 0x109370f6: return "cRIO-9101";
			case 0x109370f7: return "cRIO-9103";
			case 0x109370f8: return "cRIO-9104";
			case 0x109370ff: return "PXI-6723";
			case 0x10937100: return "PXI-6722";
			case 0x10937104: return "PCIx-1429";
			case 0x10937105: return "PCIe-1429";
			case 0x1093710a: return "PXI-4071";
			case 0x1093710d: return "PXI-6143";
			case 0x1093710e: return "PCIe-GPIB";
			case 0x1093710f: return "PXI-5422";
			case 0x10937110: return "PCI-5422";
			case 0x10937111: return "PXI-5441";
			case 0x10937119: return "PXI-6561";
			case 0x1093711a: return "PXI-6562";
			case 0x1093711b: return "PCI-6561";
			case 0x1093711c: return "PCI-6562";
			case 0x10937120: return "PCI-7390";
			case 0x10937121: return "PXI-5122EX";
			case 0x10937122: return "PCI-5122EX";
			case 0x10937123: return "PXIe-5653";
			case 0x10937124: return "PCI-6510";
			case 0x10937125: return "PCI-6516";
			case 0x10937126: return "PCI-6517";
			case 0x10937127: return "PCI-6518";
			case 0x10937128: return "PCI-6519";
			case 0x10937137: return "PXI-2575";
			case 0x1093713c: return "PXI-2585";
			case 0x1093713d: return "PXI-2586";
			case 0x10937142: return "PXI-4224";
			case 0x10937144: return "PXI-5124";
			case 0x10937145: return "PCI-5124";
			case 0x10937146: return "PCI-6132";
			case 0x10937147: return "PXI-6132";
			case 0x10937148: return "PCI-6122";
			case 0x10937149: return "PXI-6122";
			case 0x1093714c: return "PXI-5114";
			case 0x1093714d: return "PCI-5114";
			case 0x10937150: return "PXI-2564";
			case 0x10937152: return "PCI-5640R";
			case 0x10937156: return "PXI-1044 Trigger Routing Module";
			case 0x1093715d: return "PCI-1426";
			case 0x10937167: return "PXI-5412";
			case 0x10937168: return "PCI-5412";
			case 0x1093716b: return "PCI-6230";
			case 0x1093716c: return "PCI-6225";
			case 0x1093716d: return "PXI-6225";
			case 0x1093716f: return "PCI-4461";
			case 0x10937170: return "PCI-4462";
			case 0x10937171: return "PCI-6010";
			case 0x10937174: return "PXI-8360";
			case 0x10937177: return "PXI-6230";
			case 0x1093717d: return "PCIe-6251";
			case 0x1093717f: return "PCIe-6259";
			case 0x10937187: return "PCI-1410";
			case 0x1093718b: return "PCI-6521";
			case 0x1093718c: return "PXI-6521";
			case 0x10937191: return "PCI-6154";
			case 0x10937193: return "PXI-7813R";
			case 0x10937194: return "PCI-7813R";
			case 0x10937195: return "PCI-8254R";
			case 0x10937197: return "PXI-5402";
			case 0x10937198: return "PCI-5402";
			case 0x1093719f: return "PCIe-6535";
			case 0x109371a0: return "PCIe-6536";
			case 0x109371a3: return "PXI-5650";
			case 0x109371a4: return "PXI-5652";
			case 0x109371a5: return "PXI-2594";
			case 0x109371a7: return "PXI-2595";
			case 0x109371a9: return "PXI-2596";
			case 0x109371aa: return "PXI-2597";
			case 0x109371ab: return "PXI-2598";
			case 0x109371ac: return "PXI-2599";
			case 0x109371ad: return "PCI-GPIB+";
			case 0x109371ae: return "PCIe-1430";
			case 0x109371b7: return "PXI-1056 Trigger Routing Module";
			case 0x109371b8: return "PXI-1045 Trigger Routing Module";
			case 0x109371b9: return "PXI-1044 Trigger Routing Module";
			case 0x109371bb: return "PXI-2584";
			case 0x109371bc: return "PCI-6221 (37-pin)";
			case 0x109371bf: return "PCIe-1427";
			case 0x109371c5: return "PCI-6520";
			case 0x109371c6: return "PXI-2576";
			case 0x109371c7: return "cRIO-9072";
			case 0x109371dc: return "PCI-1588";
			case 0x109371e0: return "PCI-6255";
			case 0x109371e1: return "PXI-6255";
			case 0x109371e2: return "PXI-5406";
			case 0x109371e3: return "PCI-5406";
			case 0x109371fc: return "PXI-4022";
			case 0x10937209: return "PCI-6233";
			case 0x1093720a: return "PXI-6233";
			case 0x1093720b: return "PCI-6238";
			case 0x1093720c: return "PXI-6238";
			case 0x10937260: return "PXI-5142";
			case 0x10937261: return "PCI-5142";
			case 0x1093726d: return "PXI-5651";
			case 0x10937273: return "PXI-4461";
			case 0x10937274: return "PXI-4462";
			case 0x10937279: return "PCI-6232";
			case 0x1093727a: return "PXI-6232";
			case 0x1093727b: return "PCI-6239";
			case 0x1093727c: return "PXI-6239";
			case 0x1093727e: return "SMBus Controller";
			case 0x10937281: return "PCI-6236";
			case 0x10937282: return "PXI-6236";
			case 0x10937283: return "PXI-2554";
			case 0x10937288: return "PXIe-5611";
			case 0x10937293: return "PCIe-8255R";
			case 0x1093729d: return "cRIO-9074";
			case 0x109372a4: return "PCIe-4065";
			case 0x109372a7: return "PCIe-6537";
			case 0x109372a8: return "PXI-5152";
			case 0x109372a9: return "PCI-5152";
			case 0x109372aa: return "PXI-5105";
			case 0x109372ab: return "PCI-5105";
			case 0x109372b8: return "PXI-6682";
			case 0x109372d0: return "PXI-2545";
			case 0x109372d1: return "PXI-2546";
			case 0x109372d2: return "PXI-2547";
			case 0x109372d3: return "PXI-2548";
			case 0x109372d4: return "PXI-2549";
			case 0x109372d5: return "PXI-2555";
			case 0x109372d6: return "PXI-2556";
			case 0x109372d7: return "PXI-2557";
			case 0x109372d8: return "PXI-2558";
			case 0x109372d9: return "PXI-2559";
			case 0x109372e8: return "PXIe-6251";
			case 0x109372e9: return "PXIe-6259";
			case 0x109372ef: return "PXI-4498";
			case 0x109372f0: return "PXI-4496";
			case 0x109372fb: return "PXIe-6672";
			case 0x1093730e: return "PXI-4130";
			case 0x1093730f: return "PXI-5922EX";
			case 0x10937310: return "PCI-5922EX";
			case 0x1093731c: return "PXI-2535";
			case 0x1093731d: return "PXI-2536";
			case 0x10937322: return "PXIe-6124";
			case 0x10937327: return "PXI-6529";
			case 0x1093732c: return "VXI-8360T";
			case 0x10937331: return "PXIe-5602";
			case 0x10937332: return "PXIe-5601";
			case 0x10937333: return "PXI-5900";
			case 0x10937335: return "PXI-2533";
			case 0x10937336: return "PXI-2534";
			case 0x10937342: return "PXI-4461";
			case 0x10937349: return "PXI-5154";
			case 0x1093734a: return "PCI-5154";
			case 0x10937357: return "PXI-4065";
			case 0x10937359: return "PXI-4495";
			case 0x10937370: return "PXI-4461";
			case 0x10937373: return "sbRIO-9601";
			case 0x10937374: return "IOtech-9601";
			case 0x10937375: return "sbRIO-9602";
			case 0x10937378: return "sbRIO-9641";
			case 0x1093737d: return "PXI-5124EX";
			case 0x10937384: return "PXI-7851R";
			case 0x10937385: return "PXI-7852R";
			case 0x10937386: return "PCIe-7851R";
			case 0x10937387: return "PCIe-7852R";
			case 0x10937390: return "PXI-7841R";
			case 0x10937391: return "PXI-7842R";
			case 0x10937392: return "PXI-7853R";
			case 0x10937393: return "PCIe-7841R";
			case 0x10937394: return "PCIe-7842R";
			case 0x10937397: return "sbRIO-9611";
			case 0x10937398: return "sbRIO-9612";
			case 0x10937399: return "sbRIO-9631";
			case 0x1093739a: return "sbRIO-9632";
			case 0x1093739b: return "sbRIO-9642";
			case 0x109373a1: return "PXIe-4498";
			case 0x109373a2: return "PXIe-4496";
			case 0x109373a5: return "PXIe-5641R";
			case 0x109373a7: return "PXI-8250 Chassis Monitor Module";
			case 0x109373a8: return "PXI-8511 CAN/LS";
			case 0x109373a9: return "PXI-8511 CAN/LS";
			case 0x109373aa: return "PXI-8512 CAN/HS";
			case 0x109373ab: return "PXI-8512 CAN/HS";
			case 0x109373ac: return "PXI-8513 CAN/XS";
			case 0x109373ad: return "PXI-8513 CAN/XS";
			case 0x109373af: return "PXI-8516 LIN";
			case 0x109373b1: return "PXI-8517 FlexRay";
			case 0x109373b2: return "PXI-8531 CANopen";
			case 0x109373b3: return "PXI-8531 CANopen";
			case 0x109373b4: return "PXI-8532 DeviceNet";
			case 0x109373b5: return "PXI-8532 DeviceNet";
			case 0x109373b6: return "PCI-8511 CAN/LS";
			case 0x109373b7: return "PCI-8511 CAN/LS";
			case 0x109373b8: return "PCI-8512 CAN/HS";
			case 0x109373b9: return "PCI-8512 CAN/HS";
			case 0x109373ba: return "PCI-8513 CAN/XS";
			case 0x109373bb: return "PCI-8513 CAN/XS";
			case 0x109373bd: return "PCI-8516 LIN";
			case 0x109373bf: return "PCI-8517 FlexRay";
			case 0x109373c0: return "PCI-8531 CANopen";
			case 0x109373c1: return "PCI-8531 CANopen";
			case 0x109373c2: return "PCI-8532 DeviceNet";
			case 0x109373c3: return "PCI-8532 DeviceNet";
			case 0x109373c5: return "PXIe-2527";
			case 0x109373c6: return "PXIe-2529";
			case 0x109373c8: return "PXIe-2530";
			case 0x109373c9: return "PXIe-2532";
			case 0x109373ca: return "PXIe-2569";
			case 0x109373cb: return "PXIe-2575";
			case 0x109373cc: return "PXIe-2593";
			case 0x109373d5: return "PXI-7951R";
			case 0x109373d6: return "PXI-7952R";
			case 0x109373d7: return "PXI-7953R";
			case 0x109373e1: return "PXI-7854R";
			case 0x109373ec: return "PXI-7954R";
			case 0x109373ed: return "cRIO-9073";
			case 0x109373f0: return "PXI-5153";
			case 0x109373f1: return "PCI-5153";
			case 0x109373f4: return "PXI-2515";
			case 0x109373f6: return "cRIO-9111";
			case 0x109373f7: return "cRIO-9112";
			case 0x109373f8: return "cRIO-9113";
			case 0x109373f9: return "cRIO-9114";
			case 0x109373fa: return "cRIO-9116";
			case 0x109373fb: return "cRIO-9118";
			case 0x10937404: return "PXI-4132";
			case 0x10937405: return "PXIe-6674T";
			case 0x10937406: return "PXIe-6674";
			case 0x1093740e: return "PCIe-8430/16 (RS-232) Interface";
			case 0x1093740f: return "PCIe-8430/8 (RS-232) Interface";
			case 0x10937410: return "PCIe-8431/16 (RS-485) Interface";
			case 0x10937411: return "PCIe-8431/8 (RS-485) Interface";
			case 0x10937414: return "PCIe-GPIB+";
			case 0x1093741c: return "PXI-5691";
			case 0x1093741d: return "PXI-5695";
			case 0x1093743c: return "CSC-3059";
			case 0x10937448: return "PXI-2510";
			case 0x10937454: return "PXI-2512";
			case 0x10937455: return "PXI-2514";
			case 0x10937456: return "PXIe-2512";
			case 0x10937457: return "PXIe-2514";
			case 0x1093745a: return "PXI-6682H";
			case 0x1093745e: return "PXI-5153EX";
			case 0x1093745f: return "PCI-5153EX";
			case 0x10937460: return "PXI-5154EX";
			case 0x10937461: return "PCI-5154EX";
			case 0x1093746d: return "PXIe-5650";
			case 0x1093746e: return "PXIe-5651";
			case 0x1093746f: return "PXIe-5652";
			case 0x10937472: return "PXI-2800";
			case 0x10937495: return "PXIe-5603";
			case 0x10937497: return "PXIe-5605";
			case 0x109374ae: return "PXIe-2515";
			case 0x109374b4: return "PXI-2531";
			case 0x109374b5: return "PXIe-2531";
			case 0x109374c1: return "PXIe-8430/16 (RS-232) Interface";
			case 0x109374c2: return "PXIe-8430/8 (RS-232) Interface";
			case 0x109374c3: return "PXIe-8431/16 (RS-485) Interface";
			case 0x109374c4: return "PXIe-8431/8 (RS-485) Interface";
			case 0x109374d5: return "PXIe-5630";
			case 0x109374d9: return "PCIe-8432/2 (Isolated RS-232) Interface";
			case 0x109374da: return "PCIe-8433/2 (Isolated RS-485) Interface";
			case 0x109374db: return "PCIe-8432/4 (Isolated RS-232) Interface";
			case 0x109374dc: return "PCIe-8433/4 (Isolated RS-485) Interface";
			case 0x109374e8: return "NI 9148";
			case 0x10937515: return "PCIe-8430/2 (RS-232) Interface";
			case 0x10937516: return "PCIe-8430/4 (RS-232) Interface";
			case 0x10937517: return "PCIe-8431/2 (RS-485) Interface";
			case 0x10937518: return "PCIe-8431/4 (RS-485) Interface";
			case 0x1093751b: return "cRIO-9081";
			case 0x1093751c: return "cRIO-9082";
			case 0x10937528: return "PXIe-4497";
			case 0x10937529: return "PXIe-4499";
			case 0x1093752a: return "PXIe-4492";
			case 0x10937539: return "NI 9157";
			case 0x1093753a: return "NI 9159";
			case 0x10937598: return "PXI-2571";
			case 0x109375a4: return "PXI-4131A";
			case 0x109375b1: return "PCIe-7854R";
			case 0x109375ba: return "PXI-2543";
			case 0x109375bb: return "PXIe-2543";
			case 0x109375e5: return "PXI-6683";
			case 0x109375e6: return "PXI-6683H";
			case 0x109375ef: return "PXIe-5632";
			case 0x1093761c: return "VXI-8360LT";
			case 0x1093761f: return "PXI-2540";
			case 0x10937620: return "PXIe-2540";
			case 0x10937621: return "PXI-2541";
			case 0x10937622: return "PXIe-2541";
			case 0x10937626: return "NI 9154";
			case 0x10937627: return "NI 9155";
			case 0x10937638: return "PXI-2720";
			case 0x10937639: return "PXI-2722";
			case 0x1093763a: return "PXIe-2725";
			case 0x1093763b: return "PXIe-2727";
			case 0x1093763c: return "PXI-4465";
			case 0x1093764b: return "PXIe-2790";
			case 0x1093764c: return "PXI-2520";
			case 0x1093764d: return "PXI-2521";
			case 0x1093764e: return "PXI-2522";
			case 0x1093764f: return "PXI-2523";
			case 0x10937654: return "PXI-2796";
			case 0x10937655: return "PXI-2797";
			case 0x10937656: return "PXI-2798";
			case 0x10937657: return "PXI-2799";
			case 0x1093765d: return "PXI-2542";
			case 0x1093765e: return "PXIe-2542";
			case 0x1093765f: return "PXI-2544";
			case 0x10937660: return "PXIe-2544";
			case 0x1093766d: return "PCIe-6535B";
			case 0x1093766e: return "PCIe-6536B";
			case 0x1093766f: return "PCIe-6537B";
			case 0x109376a3: return "PXIe-6535B";
			case 0x109376a4: return "PXIe-6536B";
			case 0x109376a5: return "PXIe-6537B";
			case 0x1093783e: return "PXI-8368";
			case 0x10939020: return "PXI-2501";
			case 0x10939030: return "PXI-2503";
			case 0x10939040: return "PXI-2527";
			case 0x10939050: return "PXI-2565";
			case 0x10939060: return "PXI-2590";
			case 0x10939070: return "PXI-2591";
			case 0x10939080: return "PXI-2580";
			case 0x10939090: return "PCI-4021";
			case 0x109390a0: return "PXI-4021";
			case 0x1093a001: return "PCI-MXI-2";
			case 0x1093b001: return "PCI-1408";
			case 0x1093b011: return "PXI-1408";
			case 0x1093b021: return "PCI-1424";
			case 0x1093b022: return "PXI-1424";
			case 0x1093b031: return "PCI-1413";
			case 0x1093b041: return "PCI-1407";
			case 0x1093b051: return "PXI-1407";
			case 0x1093b061: return "PCI-1411";
			case 0x1093b071: return "PCI-1422";
			case 0x1093b081: return "PXI-1422";
			case 0x1093b091: return "PXI-1411";
			case 0x1093b0b1: return "PCI-1409";
			case 0x1093b0c1: return "PXI-1409";
			case 0x1093b0e1: return "PCI-1428";
			case 0x1093c4c4: return "PXIe/PCIe Device";
			case 0x1093c801: return "PCI-GPIB";
			case 0x1093c811: return "PCI-GPIB+";
			case 0x1093c821: return "PXI-GPIB";
			case 0x1093c831: return "PMC-GPIB";
			case 0x1093c840: return "PCI-GPIB";
			case 0x1093d130: return "PCI-232/2 Interface";
			case 0x1093d140: return "PCI-232/4 Interface";
			case 0x1093d150: return "PCI-232/8 Interface";
			case 0x1093d160: return "PCI-485/2 Interface";
			case 0x1093d170: return "PCI-485/4 Interface";
			case 0x1093d190: return "PXI-8422/2 (Isolated RS-232) Interface";
			case 0x1093d1a0: return "PXI-8422/4 (Isolated RS-232) Interface";
			case 0x1093d1b0: return "PXI-8423/2 (Isolated RS-485) Interface";
			case 0x1093d1c0: return "PXI-8423/4 (Isolated RS-485) Interface";
			case 0x1093d1d0: return "PXI-8420/2 (RS-232) Interface";
			case 0x1093d1e0: return "PXI-8420/4 (RS-232) Interface";
			case 0x1093d1f0: return "PXI-8420/8 (RS-232) Interface";
			case 0x1093d1f1: return "PXI-8420/16 (RS-232) Interface";
			case 0x1093d230: return "PXI-8421/2 (RS-485) Interface";
			case 0x1093d240: return "PXI-8421/4 (RS-485) Interface";
			case 0x1093d250: return "PCI-232/2 (Isolated) Interface";
			case 0x1093d260: return "PCI-485/2 (Isolated) Interface";
			case 0x1093d270: return "PCI-232/4 (Isolated) Interface";
			case 0x1093d280: return "PCI-485/4 (Isolated) Interface";
			case 0x1093d290: return "PCI-485/8 Interface";
			case 0x1093d2a0: return "PXI-8421/8 (RS-485) Interface";
			case 0x1093d2b0: return "PCI-232/16 Interface";
			case 0x1093e111: return "PCI-CAN";
			case 0x1093e131: return "PXI-8461 (1 port)";
			case 0x1093e141: return "PCI-CAN/LS";
			case 0x1093e151: return "PXI-8460 (1 port)";
			case 0x1093e211: return "PCI-CAN/2";
			case 0x1093e231: return "PXI-8461 (2 ports)";
			case 0x1093e241: return "PCI-CAN/LS2";
			case 0x1093e251: return "PXI-8460 (2 ports)";
			case 0x1093e261: return "PCI-CAN/DS";
			case 0x1093e271: return "PXI-8462";
			case 0x1093f110: return "VMEpc-650";
			case 0x1093f120: return "VXIpc-650";
			case 0x1093fe00: return "VXIpc-87x";
			case 0x1093fe41: return "VXIpc-860";
			case 0x1093fe51: return "VXIpc-74x";
			case 0x1093fe61: return "VXIpc-850";
			case 0x1093fe70: return "VXIpc-880";
			case 0x10950240: return "Adaptec AAR-1210SA SATA HostRAID Controller";
			case 0x10950640: return "PCI0640";
			case 0x10950643: return "PCI0643";
			case 0x10950646: return "PCI0646";
			case 0x10950647: return "PCI0647";
			case 0x10950648: return "PCI0648";
			case 0x10950649: return "SiI 0649 Ultra ATA/100 PCI to ATA Host Controller";
			case 0x10950650: return "PBC0650A";
			case 0x10950670: return "USB0670";
			case 0x10950673: return "USB0673";
			case 0x10950680: return "PCI0680 Ultra ATA-133 Host Controller";
			case 0x10953112: return "SiI 3112 [SATALink/SATARaid] Serial ATA Controller";
			case 0x10953114: return "SiI 3114 [SATALink/SATARaid] Serial ATA Controller";
			case 0x10953124: return "SiI 3124 PCI-X Serial ATA Controller";
			case 0x10953132: return "SiI 3132 Serial ATA Raid II Controller";
			case 0x10953512: return "SiI 3512 [SATALink/SATARaid] Serial ATA Controller";
			case 0x10953531: return "SiI 3531 [SATALink/SATARaid] Serial ATA Controller";
			case 0x10980001: return "QD-8500";
			case 0x10980002: return "QD-8580";
			case 0x109e0310: return "Bt848 Video Capture";
			case 0x109e032e: return "Bt878 Video Capture";
			case 0x109e0350: return "Bt848 Video Capture";
			case 0x109e0351: return "Bt849A Video capture";
			case 0x109e0369: return "Bt878 Video Capture";
			case 0x109e036c: return "Bt879(??) Video Capture";
			case 0x109e036e: return "Bt878 Video Capture";
			case 0x109e036f: return "Bt879 Video Capture";
			case 0x109e0370: return "Bt880 Video Capture";
			case 0x109e0878: return "Bt878 Audio Capture";
			case 0x109e0879: return "Bt879 Audio Capture";
			case 0x109e0880: return "Bt880 Audio Capture";
			case 0x109e2115: return "BtV 2115 Mediastream controller";
			case 0x109e2125: return "BtV 2125 Mediastream controller";
			case 0x109e2164: return "BtV 2164";
			case 0x109e2165: return "BtV 2165";
			case 0x109e8230: return "Bt8230 ATM Segment/Reassembly Ctrlr (SRC)";
			case 0x109e8472: return "Bt8472";
			case 0x109e8474: return "Bt8474";
			case 0x10a53052: return "SmartPCI562 56K Modem";
			case 0x10a55449: return "SmartPCI561 modem";
			case 0x10a80000: return "STB Horizon 64";
			case 0x10a90001: return "Crosstalk to PCI Bridge";
			case 0x10a90002: return "Linc I/O controller";
			case 0x10a90003: return "IOC3 I/O controller";
			case 0x10a90004: return "O2 MACE";
			case 0x10a90005: return "RAD Audio";
			case 0x10a90006: return "HPCEX";
			case 0x10a90007: return "RPCEX";
			case 0x10a90008: return "DiVO VIP";
			case 0x10a90009: return "AceNIC Gigabit Ethernet";
			case 0x10a90010: return "AMP Video I/O";
			case 0x10a90011: return "GRIP";
			case 0x10a90012: return "SGH PSHAC GSN";
			case 0x10a90208: return "SSIM1 SAS Adapter";
			case 0x10a91001: return "Magic Carpet";
			case 0x10a91002: return "Lithium";
			case 0x10a91003: return "Dual JPEG 1";
			case 0x10a91004: return "Dual JPEG 2";
			case 0x10a91005: return "Dual JPEG 3";
			case 0x10a91006: return "Dual JPEG 4";
			case 0x10a91007: return "Dual JPEG 5";
			case 0x10a91008: return "Cesium";
			case 0x10a9100a: return "IOC4 I/O controller";
			case 0x10a91504: return "SSIM1 Fibre Channel Adapter";
			case 0x10a92001: return "Fibre Channel";
			case 0x10a92002: return "ASDE";
			case 0x10a94001: return "TIO-CE PCI Express Bridge";
			case 0x10a94002: return "TIO-CE PCI Express Port";
			case 0x10a98001: return "O2 1394";
			case 0x10a98002: return "G-net NT";
			case 0x10a9802b: return "REACT external interrupt controller";
			case 0x10aa0000: return "ACCM 2188";
			case 0x10aa2051: return "2051 CPU bridge";
			case 0x10aa5842: return "2051 ISA bridge";
			case 0x10ad0001: return "W83769F";
			case 0x10ad0003: return "SL82C103";
			case 0x10ad0005: return "SL82C105";
			case 0x10ad0103: return "SL82c103";
			case 0x10ad0105: return "SL82c105";
			case 0x10ad0565: return "W83C553F/W83C554F";
			case 0x10b33106: return "DB87144";
			case 0x10b3b106: return "DB87144";
			case 0x10b41b1d: return "Velocity 128 3D";
			case 0x10b50001: return "i960 PCI bus interface";
			case 0x10b50557: return "PCI9030 32-bit 33MHz PCI <-> IOBus Bridge";
			case 0x10b51000: return "PCI9030 32-bit 33MHz PCI <-> IOBus Bridge";
			case 0x10b51024: return "Acromag, Inc. IndustryPack Carrier Card";
			case 0x10b51042: return "Brandywine / jxi2, Inc. - PMC-SyncClock32, IRIG A & B, Nasa 36";
			case 0x10b5106a: return "Dual OX16C952 4 port serial adapter [Megawolf Romulus/4]";
			case 0x10b51076: return "VScom 800 8 port serial adaptor";
			case 0x10b51077: return "VScom 400 4 port serial adaptor";
			case 0x10b51078: return "VScom 210 2 port serial and 1 port parallel adaptor";
			case 0x10b51103: return "VScom 200 2 port serial adaptor";
			case 0x10b51146: return "VScom 010 1 port parallel adaptor";
			case 0x10b51147: return "VScom 020 2 port parallel adaptor";
			case 0x10b52000: return "PCI9030 32-bit 33MHz PCI <-> IOBus Bridge";
			case 0x10b52540: return "IXXAT CAN-Interface PC-I 04/PCI";
			case 0x10b52724: return "Thales PCSM Security Card";
			case 0x10b53376: return "Cosateq 4 Port CAN Card";
			case 0x10b54000: return "PCI9030 32-bit 33MHz PCI <-> IOBus Bridge";
			case 0x10b54001: return "PCI9030 32-bit 33MHz PCI <-> IOBus Bridge";
			case 0x10b54002: return "PCI9030 32-bit 33MHz PCI <-> IOBus Bridge";
			case 0x10b56140: return "PCI6140 32-bit 33MHz PCI-to-PCI Bridge";
			case 0x10b56150: return "PCI6150 32-bit 33MHz PCI-to-PCI Bridge";
			case 0x10b56152: return "PCI6152 32-bit 66MHz PCI-to-PCI Bridge";
			case 0x10b56154: return "PCI6154 64-bit 66MHz PCI-to-PCI Bridge";
			case 0x10b56254: return "PCI6254 64-bit 66MHz PCI-to-PCI Bridge";
			case 0x10b56466: return "PCI6466 64-bit 66MHz PCI-to-PCI Bridge";
			case 0x10b56520: return "PCI6520 64-bit 133MHz PCI-X-to-PCI-X Bridge";
			case 0x10b56540: return "PCI6540 64-bit 133MHz PCI-X-to-PCI-X Bridge";
			case 0x10b56541: return "PCI6540/6466 PCI-PCI bridge (non-transparent mode, primary side)";
			case 0x10b56542: return "PCI6540/6466 PCI-PCI bridge (non-transparent mode, secondary side)";
			case 0x10b58111: return "PEX 8111 PCI Express-to-PCI Bridge";
			case 0x10b58112: return "PEX8112 x1 Lane PCI Express-to-PCI Bridge";
			case 0x10b58114: return "PEX 8114 PCI Express-to-PCI/PCI-X Bridge";
			case 0x10b58311: return "PEX8311 x1 Lane PCI Express-to-Generic Local Bus Bridge";
			case 0x10b58505: return "PEX 8505 5-lane, 5-port PCI Express Switch";
			case 0x10b58508: return "PEX 8508 8-lane, 5-port PCI Express Switch";
			case 0x10b58509: return "PEX 8509 8-lane, 8-port PCI Express Switch";
			case 0x10b58512: return "PEX 8512 12-lane, 5-port PCI Express Switch";
			case 0x10b58516: return "PEX 8516";
			case 0x10b58517: return "PEX 8517 16-lane, 5-port PCI Express Switch";
			case 0x10b58518: return "PEX 8518 16-lane, 5-port PCI Express Switch";
			case 0x10b58524: return "PEX 8524 24-lane, 6-port PCI Express Switch";
			case 0x10b58525: return "PEX 8525 24-lane, 5-port PCI Express Switch";
			case 0x10b58532: return "PEX 8532";
			case 0x10b58533: return "PEX 8533 32-lane, 6-port PCI Express Switch";
			case 0x10b58547: return "PEX 8547 48-lane, 3-port PCI Express Switch";
			case 0x10b58548: return "PEX 8548 48-lane, 9-port PCI Express Switch";
			case 0x10b58603: return "PEX 8603 3-lane, 3-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58604: return "PEX 8604 4-lane, 4-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58605: return "PEX 8605 PCI Express 4-port Gen2 Switch";
			case 0x10b58606: return "PEX 8606 6 Lane, 6 Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58608: return "PEX 8608 8-lane, 8-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58609: return "PEX 8609 8-lane, 8-Port PCI Express Gen 2 (5.0 GT/s) Switch with DMA";
			case 0x10b58612: return "PEX 8612 12-lane, 4-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58613: return "PEX 8613 12-lane, 3-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58614: return "PEX 8614 12-lane, 12-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58615: return "PEX 8615 12-lane, 12-Port PCI Express Gen 2 (5.0 GT/s) Switch with DMA";
			case 0x10b58616: return "PEX 8616 16-lane, 4-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58617: return "PEX 8617 16-lane, 4-Port PCI Express Gen 2 (5.0 GT/s) Switch with P2P";
			case 0x10b58618: return "PEX 8618 16-lane, 16-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58619: return "PEX 8619 16-lane, 16-Port PCI Express Gen 2 (5.0 GT/s) Switch with DMA";
			case 0x10b58624: return "PEX 8624 24-lane, 6-Port PCI Express Gen 2 (5.0 GT/s) Switch [ExpressLane]";
			case 0x10b58625: return "PEX 8625 24-lane, 24-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58632: return "PEX 8632 32-lane, 12-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58636: return "PEX 8636 36-lane, 24-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58647: return "PEX 8647 48-Lane, 3-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58648: return "PEX 8648 48-lane, 12-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58649: return "PEX 8649 48-lane, 12-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58664: return "PEX 8664 64-lane, 16-Port PCI Express Gen 2 (5.0 GT/s) Switch";
			case 0x10b58680: return "PEX 8680 80-lane, 20-Port PCI Express Gen 2 (5.0 GT/s) Multi-Root Switch";
			case 0x10b58696: return "PEX 8696 96-lane, 24-Port PCI Express Gen 2 (5.0 GT/s) Multi-Root Switch";
			case 0x10b58717: return "PEX 8717 16-lane, 8-Port PCI Express Gen 3 (8.0 GT/s) Switch with DMA";
			case 0x10b58718: return "PEX 8718 16-Lane, 5-Port PCI Express Gen 3 (8.0 GT/s) Switch";
			case 0x10b58724: return "PEX 8724 24-Lane, 6-Port PCI Express Gen 3 (8 GT/s) Switch, 19 x 19mm FCBGA";
			case 0x10b58732: return "PEX 8732 32-lane, 8-Port PCI Express Gen 3 (8.0 GT/s) Switch";
			case 0x10b58734: return "PEX 8734 32-lane, 8-Port PCI Express Gen 3 (8.0GT/s) Switch";
			case 0x10b58747: return "PEX 8747 48-Lane, 5-Port PCI Express Gen 3 (8.0 GT/s) Switch";
			case 0x10b58748: return "PEX 8748 48-Lane, 12-Port PCI Express Gen 3 (8 GT/s) Switch, 27 x 27mm FCBGA";
			case 0x10b587b0: return "PEX 8732 32-lane, 8-Port PCI Express Gen 3 (8.0 GT/s) Switch";
			case 0x10b59016: return "PLX 9016 8-port serial controller";
			case 0x10b59030: return "PCI9030 32-bit 33MHz PCI <-> IOBus Bridge";
			case 0x10b59036: return "9036";
			case 0x10b59050: return "PCI <-> IOBus Bridge";
			case 0x10b59052: return "PCI9052 PCI <-> IOBus Bridge";
			case 0x10b59054: return "PCI9054 32-bit 33MHz PCI <-> IOBus Bridge";
			case 0x10b59056: return "PCI9056 32-bit 66MHz PCI <-> IOBus Bridge";
			case 0x10b59060: return "PCI9060 32-bit 33MHz PCI <-> IOBus Bridge";
			case 0x10b5906d: return "9060SD";
			case 0x10b5906e: return "9060ES";
			case 0x10b59080: return "PCI9080 32-bit; 33MHz PCI <-> IOBus Bridge";
			case 0x10b59656: return "PCI9656 PCI <-> IOBus Bridge";
			case 0x10b59733: return "PEX 9733 33-lane, 9-port PCI Express Gen 3 (8.0 GT/s) Switch";
			case 0x10b59749: return "PEX 9749 49-lane, 13-port PCI Express Gen 3 (8.0 GT/s) Switch";
			case 0x10b5a100: return "Blackmagic Design DeckLink";
			case 0x10b5bb04: return "B&B 3PCIOSD1A Isolated PCI Serial";
			case 0x10b5c001: return "CronyxOmega-PCI (8-port RS232)";
			case 0x10b5d00d: return "PCI9030 32-bit 33MHz PCI <-> IOBus Bridge";
			case 0x10b5d33d: return "PCI9030 32-bit 33MHz PCI <-> IOBus Bridge";
			case 0x10b5d44d: return "PCI9030 32-bit 33MHz PCI <-> IOBus Bridge";
			case 0x10b60001: return "Smart 16/4 PCI Ringnode";
			case 0x10b60002: return "Smart 16/4 PCI Ringnode Mk2";
			case 0x10b60003: return "Smart 16/4 PCI Ringnode Mk3";
			case 0x10b60004: return "Smart 16/4 PCI Ringnode Mk1";
			case 0x10b60006: return "16/4 Cardbus Adapter";
			case 0x10b60007: return "Presto PCI Adapter";
			case 0x10b60009: return "Smart 100/16/4 PCI-HS Ringnode";
			case 0x10b6000a: return "Token Ring 100/16/4 Ringnode/Ringrunner";
			case 0x10b6000b: return "16/4 CardBus Adapter Mk2";
			case 0x10b6000c: return "RapidFire 3140V2 16/4 TR Adapter";
			case 0x10b61000: return "Collage 25/155 ATM Client Adapter";
			case 0x10b61001: return "Collage 155 ATM Server Adapter";
			case 0x10b70001: return "3c985 1000BaseSX (SX/TX)";
			case 0x10b70013: return "AR5212 802.11abg NIC (3CRDAG675)";
			case 0x10b70910: return "3C910-A01";
			case 0x10b71006: return "MINI PCI type 3B Data Fax Modem";
			case 0x10b71007: return "Mini PCI 56k Winmodem";
			case 0x10b71201: return "3c982-TXM 10/100baseTX Dual Port A [Hydra]";
			case 0x10b71202: return "3c982-TXM 10/100baseTX Dual Port B [Hydra]";
			case 0x10b71700: return "3c940 10/100/1000Base-T [Marvell]";
			case 0x10b73390: return "3c339 TokenLink Velocity";
			case 0x10b73590: return "3c359 TokenLink Velocity XL";
			case 0x10b74500: return "3c450 HomePNA [Tornado]";
			case 0x10b75055: return "3c555 Laptop Hurricane";
			case 0x10b75057: return "3c575 Megahertz 10/100 LAN CardBus [Boomerang]";
			case 0x10b75157: return "3cCFE575BT Megahertz 10/100 LAN CardBus [Cyclone]";
			case 0x10b75257: return "3cCFE575CT CardBus [Cyclone]";
			case 0x10b75900: return "3c590 10BaseT [Vortex]";
			case 0x10b75920: return "3c592 EISA 10mbps Demon/Vortex";
			case 0x10b75950: return "3c595 100BaseTX [Vortex]";
			case 0x10b75951: return "3c595 100BaseT4 [Vortex]";
			case 0x10b75952: return "3c595 100Base-MII [Vortex]";
			case 0x10b75970: return "3c597 EISA Fast Demon/Vortex";
			case 0x10b75b57: return "3c595 Megahertz 10/100 LAN CardBus [Boomerang]";
			case 0x10b76000: return "3CRSHPW796 [OfficeConnect Wireless CardBus]";
			case 0x10b76001: return "3com 3CRWE154G72 [Office Connect Wireless LAN Adapter]";
			case 0x10b76055: return "3c556 Hurricane CardBus [Cyclone]";
			case 0x10b76056: return "3c556B CardBus [Tornado]";
			case 0x10b76560: return "3cCFE656 CardBus [Cyclone]";
			case 0x10b76561: return "3cCFEM656 10/100 LAN+56K Modem CardBus";
			case 0x10b76562: return "3cCFEM656B 10/100 LAN+Winmodem CardBus [Cyclone]";
			case 0x10b76563: return "3cCFEM656B 10/100 LAN+56K Modem CardBus";
			case 0x10b76564: return "3cXFEM656C 10/100 LAN+Winmodem CardBus [Tornado]";
			case 0x10b77646: return "3cSOHO100-TX Hurricane";
			case 0x10b77770: return "3CRWE777 PCI Wireless Adapter [Airconnect]";
			case 0x10b77940: return "3c803 FDDILink UTP Controller";
			case 0x10b77980: return "3c804 FDDILink SAS Controller";
			case 0x10b77990: return "3c805 FDDILink DAS Controller";
			case 0x10b780eb: return "3c940B 10/100/1000Base-T";
			case 0x10b78811: return "Token ring";
			case 0x10b79000: return "3c900 10BaseT [Boomerang]";
			case 0x10b79001: return "3c900 10Mbps Combo [Boomerang]";
			case 0x10b79004: return "3c900B-TPO Etherlink XL [Cyclone]";
			case 0x10b79005: return "3c900B-Combo Etherlink XL [Cyclone]";
			case 0x10b79006: return "3c900B-TPC Etherlink XL [Cyclone]";
			case 0x10b7900a: return "3c900B-FL 10base-FL [Cyclone]";
			case 0x10b79050: return "3c905 100BaseTX [Boomerang]";
			case 0x10b79051: return "3c905 100BaseT4 [Boomerang]";
			case 0x10b79054: return "3C905B-TX Fast Etherlink XL PCI";
			case 0x10b79055: return "3c905B 100BaseTX [Cyclone]";
			case 0x10b79056: return "3c905B-T4 Fast EtherLink XL [Cyclone]";
			case 0x10b79058: return "3c905B Deluxe Etherlink 10/100/BNC [Cyclone]";
			case 0x10b7905a: return "3c905B-FX Fast Etherlink XL FX 100baseFx [Cyclone]";
			case 0x10b79200: return "3c905C-TX/TX-M [Tornado]";
			case 0x10b79201: return "3C920B-EMB Integrated Fast Ethernet Controller [Tornado]";
			case 0x10b79202: return "3Com 3C920B-EMB-WNM Integrated Fast Ethernet Controller";
			case 0x10b79210: return "3C920B-EMB-WNM Integrated Fast Ethernet Controller";
			case 0x10b79300: return "3CSOHO100B-TX 910-A01 [tulip]";
			case 0x10b79800: return "3c980-TX Fast Etherlink XL Server Adapter [Cyclone]";
			case 0x10b79805: return "3c980-C 10/100baseTX NIC [Python-T]";
			case 0x10b79900: return "3C990-TX [Typhoon]";
			case 0x10b79902: return "3CR990-TX-95 [Typhoon 56-bit]";
			case 0x10b79903: return "3CR990-TX-97 [Typhoon 168-bit]";
			case 0x10b79904: return "3C990B-TX-M/3C990BSVR [Typhoon2]";
			case 0x10b79905: return "3CR990-FX-95/97/95 [Typhon Fiber]";
			case 0x10b79908: return "3CR990SVR95 [Typhoon Server 56-bit]";
			case 0x10b79909: return "3CR990SVR97 [Typhoon Server 168-bit]";
			case 0x10b7990a: return "3C990SVR [Typhoon Server]";
			case 0x10b7990b: return "3C990SVR [Typhoon Server]";
			case 0x10b80005: return "83c170 EPIC/100 Fast Ethernet Adapter";
			case 0x10b80006: return "83c175 EPIC/100 Fast Ethernet Adapter";
			case 0x10b81000: return "FDC 37c665";
			case 0x10b81001: return "FDC 37C922";
			case 0x10b8a011: return "83C170QF";
			case 0x10b8b106: return "SMC34C90";
			case 0x10b90101: return "CMI8338/C3DX PCI Audio Device";
			case 0x10b90111: return "C-Media CMI8738/C3DX Audio Device (OEM)";
			case 0x10b90780: return "Multi-IO Card";
			case 0x10b90782: return "Multi-IO Card";
			case 0x10b91435: return "M1435";
			case 0x10b91445: return "M1445";
			case 0x10b91449: return "M1449";
			case 0x10b91451: return "M1451";
			case 0x10b91461: return "M1461";
			case 0x10b91489: return "M1489";
			case 0x10b91511: return "M1511 [Aladdin]";
			case 0x10b91512: return "M1512 [Aladdin]";
			case 0x10b91513: return "M1513 [Aladdin]";
			case 0x10b91521: return "M1521 [Aladdin III]";
			case 0x10b91523: return "M1523";
			case 0x10b91531: return "M1531 [Aladdin IV]";
			case 0x10b91533: return "M1533/M1535/M1543 PCI to ISA Bridge [Aladdin IV/V/V+]";
			case 0x10b91541: return "M1541";
			case 0x10b91543: return "M1543";
			case 0x10b91563: return "M1563 HyperTransport South Bridge";
			case 0x10b91573: return "PCI to LPC Controller";
			case 0x10b91575: return "M1575 South Bridge";
			case 0x10b91621: return "M1621";
			case 0x10b91631: return "ALI M1631 PCI North Bridge Aladdin Pro III";
			case 0x10b91632: return "M1632M Northbridge+Trident";
			case 0x10b91641: return "ALI M1641 PCI North Bridge Aladdin Pro IV";
			case 0x10b91644: return "M1644/M1644T Northbridge+Trident";
			case 0x10b91646: return "M1646 Northbridge+Trident";
			case 0x10b91647: return "M1647 Northbridge [MAGiK 1 / MobileMAGiK 1]";
			case 0x10b91651: return "M1651/M1651T Northbridge [Aladdin-Pro 5/5M,Aladdin-Pro 5T/5TM]";
			case 0x10b91671: return "M1671 Super P4 Northbridge [AGP4X,PCI and SDR/DDR]";
			case 0x10b91672: return "M1672 Northbridge [CyberALADDiN-P4]";
			case 0x10b91681: return "M1681 P4 Northbridge [AGP8X,HyperTransport and SDR/DDR]";
			case 0x10b91687: return "M1687 K8 Northbridge [AGP8X and HyperTransport]";
			case 0x10b91689: return "M1689 K8 Northbridge [Super K8 Single Chip]";
			case 0x10b91695: return "M1695 Host Bridge";
			case 0x10b91697: return "M1697 HTT Host Bridge";
			case 0x10b93141: return "M3141";
			case 0x10b93143: return "M3143";
			case 0x10b93145: return "M3145";
			case 0x10b93147: return "M3147";
			case 0x10b93149: return "M3149";
			case 0x10b93151: return "M3151";
			case 0x10b93307: return "M3307";
			case 0x10b93309: return "M3309";
			case 0x10b93323: return "M3325 Video/Audio Decoder";
			case 0x10b95212: return "M4803";
			case 0x10b95215: return "MS4803";
			case 0x10b95217: return "M5217H";
			case 0x10b95219: return "M5219";
			case 0x10b95225: return "M5225";
			case 0x10b95228: return "M5228 ALi ATA/RAID Controller";
			case 0x10b95229: return "M5229 IDE";
			case 0x10b95235: return "M5225";
			case 0x10b95237: return "USB 1.1 Controller";
			case 0x10b95239: return "USB 2.0 Controller";
			case 0x10b95243: return "M1541 PCI to AGP Controller";
			case 0x10b95246: return "AGP8X Controller";
			case 0x10b95247: return "PCI to AGP Controller";
			case 0x10b95249: return "M5249 HTT to PCI Bridge";
			case 0x10b9524b: return "PCI Express Root Port";
			case 0x10b9524c: return "PCI Express Root Port";
			case 0x10b9524d: return "PCI Express Root Port";
			case 0x10b9524e: return "PCI Express Root Port";
			case 0x10b95251: return "M5251 P1394 OHCI 1.0 Controller";
			case 0x10b95253: return "M5253 P1394 OHCI 1.1 Controller";
			case 0x10b95261: return "M5261 Ethernet Controller";
			case 0x10b95263: return "ULi 1689,1573 integrated ethernet.";
			case 0x10b95281: return "ALi M5281 Serial ATA / RAID Host Controller";
			case 0x10b95287: return "ULi 5287 SATA";
			case 0x10b95288: return "ULi M5288 SATA";
			case 0x10b95289: return "ULi 5289 SATA";
			case 0x10b95450: return "Lucent Technologies Soft Modem AMR";
			case 0x10b95451: return "M5451 PCI AC-Link Controller Audio Device";
			case 0x10b95453: return "M5453 PCI AC-Link Controller Modem Device";
			case 0x10b95455: return "M5455 PCI AC-Link Controller Audio Device";
			case 0x10b95457: return "M5457 AC'97 Modem Controller";
			case 0x10b95459: return "SmartLink SmartPCI561 56K Modem";
			case 0x10b9545a: return "SmartLink SmartPCI563 56K Modem";
			case 0x10b95461: return "HD Audio Controller";
			case 0x10b95471: return "M5471 Memory Stick Controller";
			case 0x10b95473: return "M5473 SD-MMC Controller";
			case 0x10b97101: return "M7101 Power Management Controller [PMU]";
			case 0x10ba0301: return "AccelGraphics AccelECLIPSE";
			case 0x10ba0304: return "AccelGALAXY A2100 [OEM Evans & Sutherland]";
			case 0x10ba0308: return "Tornado 3000 [OEM Evans & Sutherland]";
			case 0x10ba1002: return "VG500 [VolumePro Volume Rendering Accelerator]";
			case 0x10bd0e34: return "NE-34";
			case 0x10c80001: return "NM2070 [MagicGraph 128]";
			case 0x10c80002: return "NM2090 [MagicGraph 128V]";
			case 0x10c80003: return "NM2093 [MagicGraph 128ZV]";
			case 0x10c80004: return "NM2160 [MagicGraph 128XD]";
			case 0x10c80005: return "NM2200 [MagicGraph 256AV]";
			case 0x10c80006: return "NM2360 [MagicMedia 256ZX]";
			case 0x10c80016: return "NM2380 [MagicMedia 256XL+]";
			case 0x10c80025: return "NM2230 [MagicGraph 256AV+]";
			case 0x10c80083: return "NM2093 [MagicGraph 128ZV+]";
			case 0x10c88005: return "NM2200 [MagicMedia 256AV Audio]";
			case 0x10c88006: return "NM2360 [MagicMedia 256ZX Audio]";
			case 0x10c88016: return "NM2380 [MagicMedia 256XL+ Audio]";
			case 0x10cc0660: return "Articia S Host Bridge";
			case 0x10cc0661: return "Articia S PCI Bridge";
			case 0x10cd1100: return "ASC1100";
			case 0x10cd1200: return "ASC1200 [(abp940) Fast SCSI-II]";
			case 0x10cd1300: return "ASC1300 / ASC3030 [ABP940-U / ABP960-U / ABP3925]";
			case 0x10cd2300: return "ABP940-UW";
			case 0x10cd2500: return "ABP940-U2W";
			case 0x10cd2700: return "ABP3950-U3W";
			case 0x10cf01ef: return "PCEA4 PCI-Express Dual Port ESCON Adapter";
			case 0x10cf1414: return "On-board USB 1.1 companion controller";
			case 0x10cf1415: return "On-board USB 2.0 EHCI controller";
			case 0x10cf1422: return "E8410 nVidia graphics adapter";
			case 0x10cf142d: return "HD audio (Realtek ALC262)";
			case 0x10cf1430: return "82566MM Intel 1Gb copper LAN interface";
			case 0x10cf1623: return "PCEA4 PCI-Express Dual Port ESCON Adapter";
			case 0x10cf2001: return "mb86605";
			case 0x10cf200c: return "MB86613L IEEE1394 OHCI 1.0 Controller";
			case 0x10cf2010: return "MB86613S IEEE1394 OHCI 1.1 Controller";
			case 0x10cf2019: return "MB86295S [CORAL P]";
			case 0x10cf201e: return "MB86296S [CORAL PA]";
			case 0x10cf202b: return "MB86297A [Carmine Graphics Controller]";
			case 0x10d90431: return "MX98715";
			case 0x10d90512: return "MX98713";
			case 0x10d90531: return "MX987x5";
			case 0x10d98625: return "MX86250";
			case 0x10d98626: return "Macronix MX86251 + 3Dfx Voodoo Rush";
			case 0x10d98888: return "MX86200";
			case 0x10da0508: return "TC4048 Token Ring 4/16";
			case 0x10da3390: return "Tl3c3x9";
			case 0x10dc0001: return "STAR/RD24 SCI-PCI (PMC)";
			case 0x10dc0002: return "TAR/RD24 SCI-PCI (PMC)";
			case 0x10dc0021: return "HIPPI destination";
			case 0x10dc0022: return "HIPPI source";
			case 0x10dc10dc: return "ATT2C15-3 FPGA";
			case 0x10dd0100: return "Lightning 1200";
			case 0x10de0008: return "NV1 [STG2000X-B Series]";
			case 0x10de0009: return "NV1 [NV1 Series]";
			case 0x10de0018: return "NV3 [Riva 128]";
			case 0x10de0019: return "NV3 [Riva 128ZX]";
			case 0x10de0020: return "NV4 [Riva TNT]";
			case 0x10de0028: return "NV5 [Riva TNT2 / TNT2 Pro]";
			case 0x10de0029: return "NV5 [Riva TNT2 Ultra]";
			case 0x10de002a: return "NV5 [Riva TNT2]";
			case 0x10de002b: return "NV5 [Riva TNT2]";
			case 0x10de002c: return "NV5 [Vanta / Vanta LT]";
			case 0x10de002d: return "NV5 [Riva TNT2 Model 64 / Model 64 Pro]";
			case 0x10de0034: return "MCP04 SMBus";
			case 0x10de0035: return "MCP04 IDE";
			case 0x10de0036: return "MCP04 Serial ATA Controller";
			case 0x10de0037: return "MCP04 Ethernet Controller";
			case 0x10de0038: return "MCP04 Ethernet Controller";
			case 0x10de003a: return "MCP04 AC'97 Audio Controller";
			case 0x10de003b: return "MCP04 USB Controller";
			case 0x10de003c: return "MCP04 USB Controller";
			case 0x10de003d: return "MCP04 PCI Bridge";
			case 0x10de003e: return "MCP04 Serial ATA Controller";
			case 0x10de0040: return "NV40 [GeForce 6800 Ultra]";
			case 0x10de0041: return "NV40 [GeForce 6800]";
			case 0x10de0042: return "NV40 [GeForce 6800 LE]";
			case 0x10de0043: return "NV40 [GeForce 6800 XE]";
			case 0x10de0044: return "NV40 [GeForce 6800 XT]";
			case 0x10de0045: return "NV40 [GeForce 6800 GT]";
			case 0x10de0047: return "NV40 [GeForce 6800 GS]";
			case 0x10de0048: return "NV40 [GeForce 6800 XT]";
			case 0x10de004e: return "NV40GL [Quadro FX 4000]";
			case 0x10de0050: return "CK804 ISA Bridge";
			case 0x10de0051: return "CK804 ISA Bridge";
			case 0x10de0052: return "CK804 SMBus";
			case 0x10de0053: return "CK804 IDE";
			case 0x10de0054: return "CK804 Serial ATA Controller";
			case 0x10de0055: return "CK804 Serial ATA Controller";
			case 0x10de0056: return "CK804 Ethernet Controller";
			case 0x10de0057: return "CK804 Ethernet Controller";
			case 0x10de0058: return "CK804 AC'97 Modem";
			case 0x10de0059: return "CK804 AC'97 Audio Controller";
			case 0x10de005a: return "CK804 USB Controller";
			case 0x10de005b: return "CK804 USB Controller";
			case 0x10de005c: return "CK804 PCI Bridge";
			case 0x10de005d: return "CK804 PCIE Bridge";
			case 0x10de005e: return "CK804 Memory Controller";
			case 0x10de005f: return "CK804 Memory Controller";
			case 0x10de0060: return "nForce2 ISA Bridge";
			case 0x10de0064: return "nForce2 SMBus (MCP)";
			case 0x10de0065: return "nForce2 IDE";
			case 0x10de0066: return "nForce2 Ethernet Controller";
			case 0x10de0067: return "nForce2 USB Controller";
			case 0x10de0068: return "nForce2 USB Controller";
			case 0x10de006a: return "nForce2 AC97 Audio Controler (MCP)";
			case 0x10de006b: return "nForce Audio Processing Unit";
			case 0x10de006c: return "nForce2 External PCI Bridge";
			case 0x10de006d: return "nForce2 PCI Bridge";
			case 0x10de006e: return "nForce2 FireWire (IEEE 1394) Controller";
			case 0x10de0080: return "MCP2A ISA bridge";
			case 0x10de0084: return "MCP2A SMBus";
			case 0x10de0085: return "MCP2A IDE";
			case 0x10de0086: return "MCP2A Ethernet Controller";
			case 0x10de0087: return "MCP2A USB Controller";
			case 0x10de0088: return "MCP2A USB Controller";
			case 0x10de008a: return "MCP2S AC'97 Audio Controller";
			case 0x10de008b: return "MCP2A PCI Bridge";
			case 0x10de008c: return "MCP2A Ethernet Controller";
			case 0x10de008e: return "nForce2 Serial ATA Controller";
			case 0x10de0090: return "G70 [GeForce 7800 GTX]";
			case 0x10de0091: return "G70 [GeForce 7800 GTX]";
			case 0x10de0092: return "G70 [GeForce 7800 GT]";
			case 0x10de0093: return "G70 [GeForce 7800 GS]";
			case 0x10de0095: return "G70 [GeForce 7800 SLI]";
			case 0x10de0097: return "G70 [GeForce GTS 250]";
			case 0x10de0098: return "G70M [GeForce Go 7800]";
			case 0x10de0099: return "G70M [GeForce Go 7800 GTX]";
			case 0x10de009d: return "G70GL [Quadro FX 4500]";
			case 0x10de00a0: return "NV0A [Aladdin TNT2 IGP]";
			case 0x10de00c0: return "NV41 [GeForce 6800 GS]";
			case 0x10de00c1: return "NV41 [GeForce 6800]";
			case 0x10de00c2: return "NV41 [GeForce 6800 LE]";
			case 0x10de00c3: return "NV41 [GeForce 6800 XT]";
			case 0x10de00c5: return "NV41";
			case 0x10de00c6: return "NV41";
			case 0x10de00c7: return "NV41";
			case 0x10de00c8: return "NV41M [GeForce Go 6800]";
			case 0x10de00c9: return "NV41M [GeForce Go 6800 Ultra]";
			case 0x10de00cc: return "NV41GLM [Quadro FX Go1400]";
			case 0x10de00cd: return "NV42GL [Quadro FX 3450/4000 SDI]";
			case 0x10de00ce: return "NV41GL [Quadro FX 1400]";
			case 0x10de00cf: return "NV41";
			case 0x10de00d0: return "nForce3 LPC Bridge";
			case 0x10de00d1: return "nForce3 Host Bridge";
			case 0x10de00d2: return "nForce3 AGP Bridge";
			case 0x10de00d3: return "CK804 Memory Controller";
			case 0x10de00d4: return "nForce3 SMBus";
			case 0x10de00d5: return "nForce3 IDE";
			case 0x10de00d6: return "nForce3 Ethernet";
			case 0x10de00d7: return "nForce3 USB 1.1";
			case 0x10de00d8: return "nForce3 USB 2.0";
			case 0x10de00d9: return "nForce3 Audio";
			case 0x10de00da: return "nForce3 Audio";
			case 0x10de00dd: return "nForce3 PCI Bridge";
			case 0x10de00df: return "CK8S Ethernet Controller";
			case 0x10de00e0: return "nForce3 250Gb LPC Bridge";
			case 0x10de00e1: return "nForce3 250Gb Host Bridge";
			case 0x10de00e2: return "nForce3 250Gb AGP Host to PCI Bridge";
			case 0x10de00e3: return "nForce3 Serial ATA Controller";
			case 0x10de00e4: return "nForce 250Gb PCI System Management";
			case 0x10de00e5: return "CK8S Parallel ATA Controller (v2.5)";
			case 0x10de00e6: return "CK8S Ethernet Controller";
			case 0x10de00e7: return "CK8S USB Controller";
			case 0x10de00e8: return "nForce3 EHCI USB 2.0 Controller";
			case 0x10de00ea: return "nForce3 250Gb AC'97 Audio Controller";
			case 0x10de00ed: return "nForce3 250Gb PCI-to-PCI Bridge";
			case 0x10de00ee: return "nForce3 Serial ATA Controller 2";
			case 0x10de00f1: return "NV43 [GeForce 6600 GT]";
			case 0x10de00f2: return "NV43 [GeForce 6600]";
			case 0x10de00f3: return "NV43 [GeForce 6200]";
			case 0x10de00f4: return "NV43 [GeForce 6600 LE]";
			case 0x10de00f5: return "G70/G71 [GeForce 7800 GS AGP]";
			case 0x10de00f6: return "NV43 [GeForce 6800 GS/XT]";
			case 0x10de00f8: return "NV45GL [Quadro FX 3400/4400]";
			case 0x10de00f9: return "NV40 [GeForce 6800 GT/GTO/Ultra]";
			case 0x10de00fa: return "NV39 [GeForce PCX 5750]";
			case 0x10de00fb: return "NV35 [GeForce PCX 5900]";
			case 0x10de00fc: return "NV37GL [Quadro FX 330/GeForce PCX 5300]";
			case 0x10de00fd: return "NV37GL [Quadro PCI-E Series]";
			case 0x10de00fe: return "NV38GL [Quadro FX 1300]";
			case 0x10de00ff: return "NV19 [GeForce PCX 4300]";
			case 0x10de0100: return "NV10 [GeForce 256 SDR]";
			case 0x10de0101: return "NV10 [GeForce 256 DDR]";
			case 0x10de0103: return "NV10GL [Quadro]";
			case 0x10de0110: return "NV11 [GeForce2 MX/MX 400]";
			case 0x10de0111: return "NV11 [GeForce2 MX200]";
			case 0x10de0112: return "NV11M [GeForce2 Go]";
			case 0x10de0113: return "NV11GL [Quadro2 MXR/EX/Go]";
			case 0x10de0140: return "NV43 [GeForce 6600 GT]";
			case 0x10de0141: return "NV43 [GeForce 6600]";
			case 0x10de0142: return "NV43 [GeForce 6600 LE]";
			case 0x10de0143: return "NV43 [GeForce 6600 VE]";
			case 0x10de0144: return "NV43M [GeForce Go 6600]";
			case 0x10de0145: return "NV43 [GeForce 6610 XL]";
			case 0x10de0146: return "NV43M [GeForce Go6200 TE / 6600 TE]";
			case 0x10de0147: return "NV43 [GeForce 6700 XL]";
			case 0x10de0148: return "NV43M [GeForce Go 6600]";
			case 0x10de0149: return "NV43M [GeForce Go 6600 GT]";
			case 0x10de014a: return "NV43 [Quadro NVS 440]";
			case 0x10de014b: return "NV43";
			case 0x10de014d: return "NV43GL [Quadro FX 550]";
			case 0x10de014e: return "NV43GL [Quadro FX 540]";
			case 0x10de014f: return "NV43 [GeForce 6200]";
			case 0x10de0150: return "NV15 [GeForce2 GTS/Pro]";
			case 0x10de0151: return "NV15 [GeForce2 Ti]";
			case 0x10de0152: return "NV15 [GeForce2 Ultra]";
			case 0x10de0153: return "NV15GL [Quadro2 Pro]";
			case 0x10de0160: return "NV44 [GeForce 6500]";
			case 0x10de0161: return "NV44 [GeForce 6200 TurboCache]";
			case 0x10de0162: return "NV44 [GeForce 6200 SE TurboCache]";
			case 0x10de0163: return "NV44 [GeForce 6200 LE]";
			case 0x10de0164: return "NV44M [GeForce Go 6200]";
			case 0x10de0165: return "NV44 [Quadro NVS 285]";
			case 0x10de0166: return "NV44M [GeForce Go 6400]";
			case 0x10de0167: return "NV44M [GeForce Go 6200]";
			case 0x10de0168: return "NV44M [GeForce Go 6400]";
			case 0x10de0169: return "NV44 [GeForce 6250]";
			case 0x10de016a: return "NV44 [GeForce 7100 GS]";
			case 0x10de016d: return "NV44";
			case 0x10de016e: return "NV44";
			case 0x10de016f: return "NV44";
			case 0x10de0170: return "NV17 [GeForce4 MX 460]";
			case 0x10de0171: return "NV17 [GeForce4 MX 440]";
			case 0x10de0172: return "NV17 [GeForce4 MX 420]";
			case 0x10de0173: return "NV17 [GeForce4 MX 440-SE]";
			case 0x10de0174: return "NV17M [GeForce4 440 Go]";
			case 0x10de0175: return "NV17M [GeForce4 420 Go]";
			case 0x10de0176: return "NV17M [GeForce4 420 Go 32M]";
			case 0x10de0177: return "NV17M [GeForce4 460 Go]";
			case 0x10de0178: return "NV17GL [Quadro4 550 XGL]";
			case 0x10de0179: return "NV17M [GeForce4 440 Go 64M]";
			case 0x10de017a: return "NV17GL [Quadro NVS]";
			case 0x10de017b: return "NV17GL [Quadro4 550 XGL]";
			case 0x10de017c: return "NV17GL [Quadro4 500 GoGL]";
			case 0x10de017f: return "NV17";
			case 0x10de0181: return "NV18 [GeForce4 MX 440 AGP 8x]";
			case 0x10de0182: return "NV18 [GeForce4 MX 440SE AGP 8x]";
			case 0x10de0183: return "NV18 [GeForce4 MX 420 AGP 8x]";
			case 0x10de0184: return "NV18 [GeForce4 MX]";
			case 0x10de0185: return "NV18 [GeForce4 MX 4000]";
			case 0x10de0186: return "NV18M [GeForce4 448 Go]";
			case 0x10de0187: return "NV18M [GeForce4 488 Go]";
			case 0x10de0188: return "NV18GL [Quadro4 580 XGL]";
			case 0x10de0189: return "NV18 [GeForce4 MX with AGP8X (Mac)]";
			case 0x10de018a: return "NV18GL [Quadro NVS 280 SD]";
			case 0x10de018b: return "NV18GL [Quadro4 380 XGL]";
			case 0x10de018c: return "NV18GL [Quadro NVS 50 PCI]";
			case 0x10de018d: return "NV18M [GeForce4 448 Go]";
			case 0x10de0190: return "G80 [GeForce 8800 GTS / 8800 GTX]";
			case 0x10de0191: return "G80 [GeForce 8800 GTX]";
			case 0x10de0192: return "G80 [GeForce 8800 GTS]";
			case 0x10de0193: return "G80 [GeForce 8800 GTS]";
			case 0x10de0194: return "G80 [GeForce 8800 Ultra]";
			case 0x10de0197: return "G80GL [Tesla C870]";
			case 0x10de019d: return "G80GL [Quadro FX 5600]";
			case 0x10de019e: return "G80GL [Quadro FX 4600]";
			case 0x10de01a0: return "nForce 220/420 NV1A [GeForce2 MX]";
			case 0x10de01a4: return "nForce CPU bridge";
			case 0x10de01ab: return "nForce 420 Memory Controller (DDR)";
			case 0x10de01ac: return "nForce 220/420 Memory Controller";
			case 0x10de01ad: return "nForce 220/420 Memory Controller";
			case 0x10de01b0: return "nForce Audio Processing Unit";
			case 0x10de01b1: return "nForce AC'97 Audio Controller";
			case 0x10de01b2: return "nForce ISA Bridge";
			case 0x10de01b4: return "nForce PCI System Management";
			case 0x10de01b7: return "nForce AGP to PCI Bridge";
			case 0x10de01b8: return "nForce PCI-to-PCI bridge";
			case 0x10de01bc: return "nForce IDE";
			case 0x10de01c1: return "nForce AC'97 Modem Controller";
			case 0x10de01c2: return "nForce USB Controller";
			case 0x10de01c3: return "nForce Ethernet Controller";
			case 0x10de01d0: return "G72 [GeForce 7350 LE]";
			case 0x10de01d1: return "G72 [GeForce 7300 LE]";
			case 0x10de01d2: return "G72 [GeForce 7550 LE]";
			case 0x10de01d3: return "G72 [GeForce 7200 GS / 7300 SE]";
			case 0x10de01d5: return "G72";
			case 0x10de01d6: return "G72M [GeForce Go 7200]";
			case 0x10de01d7: return "G72M [Quadro NVS 110M/GeForce Go 7300]";
			case 0x10de01d8: return "G72M [GeForce Go 7400]";
			case 0x10de01d9: return "G72M [GeForce Go 7450]";
			case 0x10de01da: return "G72M [Quadro NVS 110M]";
			case 0x10de01db: return "G72M [Quadro NVS 120M]";
			case 0x10de01dc: return "G72GLM [Quadro FX 350M]";
			case 0x10de01dd: return "G72 [GeForce 7500 LE]";
			case 0x10de01de: return "G72GL [Quadro FX 350]";
			case 0x10de01df: return "G72 [GeForce 7300 GS]";
			case 0x10de01e0: return "nForce2 IGP2";
			case 0x10de01e8: return "nForce2 AGP";
			case 0x10de01ea: return "nForce2 Memory Controller 0";
			case 0x10de01eb: return "nForce2 Memory Controller 1";
			case 0x10de01ec: return "nForce2 Memory Controller 2";
			case 0x10de01ed: return "nForce2 Memory Controller 3";
			case 0x10de01ee: return "nForce2 Memory Controller 4";
			case 0x10de01ef: return "nForce2 Memory Controller 5";
			case 0x10de01f0: return "NV1F C17 [GeForce4 MX IGP]";
			case 0x10de0200: return "NV20 [GeForce3]";
			case 0x10de0201: return "NV20 [GeForce3 Ti 200]";
			case 0x10de0202: return "NV20 [GeForce3 Ti 500]";
			case 0x10de0203: return "NV20GL [Quadro DCC]";
			case 0x10de0211: return "NV48 [GeForce 6800]";
			case 0x10de0212: return "NV48 [GeForce 6800 LE]";
			case 0x10de0215: return "NV48 [GeForce 6800 GT]";
			case 0x10de0218: return "NV48 [GeForce 6800 XT]";
			case 0x10de0221: return "NV44A [GeForce 6200]";
			case 0x10de0222: return "NV44 [GeForce 6200 A-LE]";
			case 0x10de0224: return "NV44";
			case 0x10de0240: return "C51PV [GeForce 6150]";
			case 0x10de0241: return "C51 [GeForce 6150 LE]";
			case 0x10de0242: return "C51G [GeForce 6100]";
			case 0x10de0243: return "C51 PCI Express Bridge";
			case 0x10de0244: return "C51 [GeForce Go 6150]";
			case 0x10de0245: return "C51 [Quadro NVS 210S/GeForce 6150LE]";
			case 0x10de0246: return "C51 PCI Express Bridge";
			case 0x10de0247: return "C51 [GeForce Go 6100]";
			case 0x10de0248: return "C51 PCI Express Bridge";
			case 0x10de0249: return "C51 PCI Express Bridge";
			case 0x10de024a: return "C51 PCI Express Bridge";
			case 0x10de024b: return "C51 PCI Express Bridge";
			case 0x10de024c: return "C51 PCI Express Bridge";
			case 0x10de024d: return "C51 PCI Express Bridge";
			case 0x10de024e: return "C51 PCI Express Bridge";
			case 0x10de024f: return "C51 PCI Express Bridge";
			case 0x10de0250: return "NV25 [GeForce4 Ti 4600]";
			case 0x10de0251: return "NV25 [GeForce4 Ti 4400]";
			case 0x10de0252: return "NV25 [GeForce4 Ti]";
			case 0x10de0253: return "NV25 [GeForce4 Ti 4200]";
			case 0x10de0258: return "NV25GL [Quadro4 900 XGL]";
			case 0x10de0259: return "NV25GL [Quadro4 750 XGL]";
			case 0x10de025b: return "NV25GL [Quadro4 700 XGL]";
			case 0x10de0260: return "MCP51 LPC Bridge";
			case 0x10de0261: return "MCP51 LPC Bridge";
			case 0x10de0262: return "MCP51 LPC Bridge";
			case 0x10de0263: return "MCP51 LPC Bridge";
			case 0x10de0264: return "MCP51 SMBus";
			case 0x10de0265: return "MCP51 IDE";
			case 0x10de0266: return "MCP51 Serial ATA Controller";
			case 0x10de0267: return "MCP51 Serial ATA Controller";
			case 0x10de0268: return "MCP51 Ethernet Controller";
			case 0x10de0269: return "MCP51 Ethernet Controller";
			case 0x10de026a: return "MCP51 MCI";
			case 0x10de026b: return "MCP51 AC97 Audio Controller";
			case 0x10de026c: return "MCP51 High Definition Audio";
			case 0x10de026d: return "MCP51 USB Controller";
			case 0x10de026e: return "MCP51 USB Controller";
			case 0x10de026f: return "MCP51 PCI Bridge";
			case 0x10de0270: return "MCP51 Host Bridge";
			case 0x10de0271: return "MCP51 PMU";
			case 0x10de0272: return "MCP51 Memory Controller 0";
			case 0x10de027e: return "C51 Memory Controller 2";
			case 0x10de027f: return "C51 Memory Controller 3";
			case 0x10de0280: return "NV28 [GeForce4 Ti 4800]";
			case 0x10de0281: return "NV28 [GeForce4 Ti 4200 AGP 8x]";
			case 0x10de0282: return "NV28 [GeForce4 Ti 4800 SE]";
			case 0x10de0286: return "NV28M [GeForce4 Ti 4200 Go AGP 8x]";
			case 0x10de0288: return "NV28GL [Quadro4 980 XGL]";
			case 0x10de0289: return "NV28GL [Quadro4 780 XGL]";
			case 0x10de028c: return "NV28GLM [Quadro4 Go700]";
			case 0x10de0290: return "G71 [GeForce 7900 GTX]";
			case 0x10de0291: return "G71 [GeForce 7900 GT/GTO]";
			case 0x10de0292: return "G71 [GeForce 7900 GS]";
			case 0x10de0293: return "G71 [GeForce 7900 GX2]";
			case 0x10de0294: return "G71 [GeForce 7950 GX2]";
			case 0x10de0295: return "G71 [GeForce 7950 GT]";
			case 0x10de0297: return "G71M [GeForce Go 7950 GTX]";
			case 0x10de0298: return "G71M [GeForce Go 7900 GS]";
			case 0x10de0299: return "G71M [GeForce Go 7900 GTX]";
			case 0x10de029a: return "G71GLM [Quadro FX 2500M]";
			case 0x10de029b: return "G71GLM [Quadro FX 1500M]";
			case 0x10de029c: return "G71GL [Quadro FX 5500]";
			case 0x10de029d: return "G71GL [Quadro FX 3500]";
			case 0x10de029e: return "G71GL [Quadro FX 1500]";
			case 0x10de029f: return "G71GL [Quadro FX 4500 X2]";
			case 0x10de02a0: return "NV2A [XGPU]";
			case 0x10de02a5: return "MCPX CPU Bridge";
			case 0x10de02a6: return "MCPX Memory Controller";
			case 0x10de02e0: return "G73 [GeForce 7600 GT AGP]";
			case 0x10de02e1: return "G73 [GeForce 7600 GS AGP]";
			case 0x10de02e2: return "G73 [GeForce 7300 GT AGP]";
			case 0x10de02e3: return "G71 [GeForce 7900 GS AGP]";
			case 0x10de02e4: return "G71 [GeForce 7950 GT AGP]";
			case 0x10de02e5: return "G71 [GeForce 7600 GS AGP]";
			case 0x10de02f0: return "C51 Host Bridge";
			case 0x10de02f1: return "C51 Host Bridge";
			case 0x10de02f2: return "C51 Host Bridge";
			case 0x10de02f3: return "C51 Host Bridge";
			case 0x10de02f4: return "C51 Host Bridge";
			case 0x10de02f5: return "C51 Host Bridge";
			case 0x10de02f6: return "C51 Host Bridge";
			case 0x10de02f7: return "C51 Host Bridge";
			case 0x10de02f8: return "C51 Memory Controller 5";
			case 0x10de02f9: return "C51 Memory Controller 4";
			case 0x10de02fa: return "C51 Memory Controller 0";
			case 0x10de02fb: return "C51 PCI Express Bridge";
			case 0x10de02fc: return "C51 PCI Express Bridge";
			case 0x10de02fd: return "C51 PCI Express Bridge";
			case 0x10de02fe: return "C51 Memory Controller 1";
			case 0x10de02ff: return "C51 Host Bridge";
			case 0x10de0300: return "NV30 [GeForce FX]";
			case 0x10de0301: return "NV30 [GeForce FX 5800 Ultra]";
			case 0x10de0302: return "NV30 [GeForce FX 5800]";
			case 0x10de0308: return "NV30GL [Quadro FX 2000]";
			case 0x10de0309: return "NV30GL [Quadro FX 1000]";
			case 0x10de0311: return "NV31 [GeForce FX 5600 Ultra]";
			case 0x10de0312: return "NV31 [GeForce FX 5600]";
			case 0x10de0314: return "NV31 [GeForce FX 5600XT]";
			case 0x10de0316: return "NV31M";
			case 0x10de0318: return "NV31GL";
			case 0x10de031a: return "NV31M [GeForce FX Go5600]";
			case 0x10de031b: return "NV31M [GeForce FX Go5650]";
			case 0x10de031c: return "NV31GLM [Quadro FX Go700]";
			case 0x10de0320: return "NV34 [GeForce FX 5200]";
			case 0x10de0321: return "NV34 [GeForce FX 5200 Ultra]";
			case 0x10de0322: return "NV34 [GeForce FX 5200]";
			case 0x10de0323: return "NV34 [GeForce FX 5200LE]";
			case 0x10de0324: return "NV34M [GeForce FX Go5200 64M]";
			case 0x10de0325: return "NV34M [GeForce FX Go5250]";
			case 0x10de0326: return "NV34 [GeForce FX 5500]";
			case 0x10de0327: return "NV34 [GeForce FX 5100]";
			case 0x10de0328: return "NV34M [GeForce FX Go5200 32M/64M]";
			case 0x10de0329: return "NV34M [GeForce FX Go5200]";
			case 0x10de032a: return "NV34GL [Quadro NVS 280 PCI]";
			case 0x10de032b: return "NV34GL [Quadro FX 500/600 PCI]";
			case 0x10de032c: return "NV34M [GeForce FX Go5300 / Go5350]";
			case 0x10de032d: return "NV34M [GeForce FX Go5100]";
			case 0x10de032e: return "NV34";
			case 0x10de032f: return "NV34 [GeForce FX 5200]";
			case 0x10de0330: return "NV35 [GeForce FX 5900 Ultra]";
			case 0x10de0331: return "NV35 [GeForce FX 5900]";
			case 0x10de0332: return "NV35 [GeForce FX 5900XT]";
			case 0x10de0333: return "NV38 [GeForce FX 5950 Ultra / PCX 5950]";
			case 0x10de0334: return "NV35 [GeForce FX 5900ZT]";
			case 0x10de0338: return "NV35GL [Quadro FX 3000]";
			case 0x10de033f: return "NV35GL [Quadro FX 700]";
			case 0x10de0341: return "NV36 [GeForce FX 5700 Ultra]";
			case 0x10de0342: return "NV36 [GeForce FX 5700]";
			case 0x10de0343: return "NV36 [GeForce FX 5700LE]";
			case 0x10de0344: return "NV36 [GeForce FX 5700VE]";
			case 0x10de0347: return "NV36M [GeForce FX Go5700]";
			case 0x10de0348: return "NV36M [GeForce FX Go5700]";
			case 0x10de034c: return "NV36 [Quadro FX Go1000]";
			case 0x10de034d: return "NV36";
			case 0x10de034e: return "NV36GL [Quadro FX 1100]";
			case 0x10de0360: return "MCP55 LPC Bridge";
			case 0x10de0361: return "MCP55 LPC Bridge";
			case 0x10de0362: return "MCP55 LPC Bridge";
			case 0x10de0363: return "MCP55 LPC Bridge";
			case 0x10de0364: return "MCP55 LPC Bridge";
			case 0x10de0365: return "MCP55 LPC Bridge";
			case 0x10de0366: return "MCP55 LPC Bridge";
			case 0x10de0367: return "MCP55 LPC Bridge";
			case 0x10de0368: return "MCP55 SMBus Controller";
			case 0x10de0369: return "MCP55 Memory Controller";
			case 0x10de036a: return "MCP55 Memory Controller";
			case 0x10de036b: return "MCP55 SMU";
			case 0x10de036c: return "MCP55 USB Controller";
			case 0x10de036d: return "MCP55 USB Controller";
			case 0x10de036e: return "MCP55 IDE";
			case 0x10de0370: return "MCP55 PCI bridge";
			case 0x10de0371: return "MCP55 High Definition Audio";
			case 0x10de0372: return "MCP55 Ethernet";
			case 0x10de0373: return "MCP55 Ethernet";
			case 0x10de0374: return "MCP55 PCI Express bridge";
			case 0x10de0375: return "MCP55 PCI Express bridge";
			case 0x10de0376: return "MCP55 PCI Express bridge";
			case 0x10de0377: return "MCP55 PCI Express bridge";
			case 0x10de0378: return "MCP55 PCI Express bridge";
			case 0x10de037a: return "MCP55 Memory Controller";
			case 0x10de037e: return "MCP55 SATA Controller";
			case 0x10de037f: return "MCP55 SATA Controller";
			case 0x10de038b: return "G73 [GeForce 7650 GS]";
			case 0x10de0390: return "G73 [GeForce 7650 GS]";
			case 0x10de0391: return "G73 [GeForce 7600 GT]";
			case 0x10de0392: return "G73 [GeForce 7600 GS]";
			case 0x10de0393: return "G73 [GeForce 7300 GT]";
			case 0x10de0394: return "G73 [GeForce 7600 LE]";
			case 0x10de0395: return "G73 [GeForce 7300 GT]";
			case 0x10de0396: return "G73";
			case 0x10de0397: return "G73M [GeForce Go 7700]";
			case 0x10de0398: return "G73M [GeForce Go 7600]";
			case 0x10de0399: return "G73M [GeForce Go 7600 GT]";
			case 0x10de039a: return "G73M [Quadro NVS 300M]";
			case 0x10de039b: return "G73M [GeForce Go 7900 SE]";
			case 0x10de039c: return "G73GLM [Quadro FX 550M]";
			case 0x10de039d: return "G73";
			case 0x10de039e: return "G73GL [Quadro FX 560]";
			case 0x10de039f: return "G73";
			case 0x10de03a0: return "C55 Host Bridge";
			case 0x10de03a1: return "C55 Host Bridge";
			case 0x10de03a2: return "C55 Host Bridge";
			case 0x10de03a3: return "C55 Host Bridge";
			case 0x10de03a4: return "C55 Host Bridge";
			case 0x10de03a5: return "C55 Host Bridge";
			case 0x10de03a6: return "C55 Host Bridge";
			case 0x10de03a7: return "C55 Host Bridge";
			case 0x10de03a8: return "C55 Memory Controller";
			case 0x10de03a9: return "C55 Memory Controller";
			case 0x10de03aa: return "C55 Memory Controller";
			case 0x10de03ab: return "C55 Memory Controller";
			case 0x10de03ac: return "C55 Memory Controller";
			case 0x10de03ad: return "C55 Memory Controller";
			case 0x10de03ae: return "C55 Memory Controller";
			case 0x10de03af: return "C55 Memory Controller";
			case 0x10de03b0: return "C55 Memory Controller";
			case 0x10de03b1: return "C55 Memory Controller";
			case 0x10de03b2: return "C55 Memory Controller";
			case 0x10de03b3: return "C55 Memory Controller";
			case 0x10de03b4: return "C55 Memory Controller";
			case 0x10de03b5: return "C55 Memory Controller";
			case 0x10de03b6: return "C55 Memory Controller";
			case 0x10de03b7: return "C55 PCI Express bridge";
			case 0x10de03b8: return "C55 PCI Express bridge";
			case 0x10de03b9: return "C55 PCI Express bridge";
			case 0x10de03ba: return "C55 Memory Controller";
			case 0x10de03bb: return "C55 PCI Express bridge";
			case 0x10de03bc: return "C55 Memory Controller";
			case 0x10de03d0: return "C61 [GeForce 6150SE nForce 430]";
			case 0x10de03d1: return "C61 [GeForce 6100 nForce 405]";
			case 0x10de03d2: return "C61 [GeForce 6100 nForce 400]";
			case 0x10de03d5: return "C61 [GeForce 6100 nForce 420]";
			case 0x10de03d6: return "C61 [GeForce 7025 / nForce 630a]";
			case 0x10de03e0: return "MCP61 LPC Bridge";
			case 0x10de03e1: return "MCP61 LPC Bridge";
			case 0x10de03e2: return "MCP61 Host Bridge";
			case 0x10de03e3: return "MCP61 LPC Bridge";
			case 0x10de03e4: return "MCP61 High Definition Audio";
			case 0x10de03e5: return "MCP61 Ethernet";
			case 0x10de03e6: return "MCP61 Ethernet";
			case 0x10de03e7: return "MCP61 SATA Controller";
			case 0x10de03e8: return "MCP61 PCI Express bridge";
			case 0x10de03e9: return "MCP61 PCI Express bridge";
			case 0x10de03ea: return "MCP61 Memory Controller";
			case 0x10de03eb: return "MCP61 SMBus";
			case 0x10de03ec: return "MCP61 IDE";
			case 0x10de03ee: return "MCP61 Ethernet";
			case 0x10de03ef: return "MCP61 Ethernet";
			case 0x10de03f0: return "MCP61 High Definition Audio";
			case 0x10de03f1: return "MCP61 USB 1.1 Controller";
			case 0x10de03f2: return "MCP61 USB 2.0 Controller";
			case 0x10de03f3: return "MCP61 PCI bridge";
			case 0x10de03f4: return "MCP61 SMU";
			case 0x10de03f5: return "MCP61 Memory Controller";
			case 0x10de03f6: return "MCP61 SATA Controller";
			case 0x10de03f7: return "MCP61 SATA Controller";
			case 0x10de0400: return "G84 [GeForce 8600 GTS]";
			case 0x10de0401: return "G84 [GeForce 8600 GT]";
			case 0x10de0402: return "G84 [GeForce 8600 GT]";
			case 0x10de0403: return "G84 [GeForce 8600 GS]";
			case 0x10de0404: return "G84 [GeForce 8400 GS]";
			case 0x10de0405: return "G84M [GeForce 9500M GS]";
			case 0x10de0406: return "G84 [GeForce 8300 GS]";
			case 0x10de0407: return "G84M [GeForce 8600M GT]";
			case 0x10de0408: return "G84M [GeForce 9650M GS]";
			case 0x10de0409: return "G84M [GeForce 8700M GT]";
			case 0x10de040a: return "G84GL [Quadro FX 370]";
			case 0x10de040b: return "G84GLM [Quadro NVS 320M]";
			case 0x10de040c: return "G84GLM [Quadro FX 570M]";
			case 0x10de040d: return "G84GLM [Quadro FX 1600M]";
			case 0x10de040e: return "G84GL [Quadro FX 570]";
			case 0x10de040f: return "G84GL [Quadro FX 1700]";
			case 0x10de0410: return "G92 [GeForce GT 330]";
			case 0x10de0414: return "G92 [GeForce 9800 GT]";
			case 0x10de0418: return "G92 [GeForce GT 330 OEM]";
			case 0x10de0420: return "G86 [GeForce 8400 SE]";
			case 0x10de0421: return "G86 [GeForce 8500 GT]";
			case 0x10de0422: return "G86 [GeForce 8400 GS]";
			case 0x10de0423: return "G86 [GeForce 8300 GS]";
			case 0x10de0424: return "G86 [GeForce 8400 GS]";
			case 0x10de0425: return "G86M [GeForce 8600M GS]";
			case 0x10de0426: return "G86M [GeForce 8400M GT]";
			case 0x10de0427: return "G86M [GeForce 8400M GS]";
			case 0x10de0428: return "G86M [GeForce 8400M G]";
			case 0x10de0429: return "G86M [Quadro NVS 140M]";
			case 0x10de042a: return "G86M [Quadro NVS 130M]";
			case 0x10de042b: return "G86M [Quadro NVS 135M]";
			case 0x10de042c: return "G86 [GeForce 9400 GT]";
			case 0x10de042d: return "G86GLM [Quadro FX 360M]";
			case 0x10de042e: return "G86M [GeForce 9300M G]";
			case 0x10de042f: return "G86 [Quadro NVS 290]";
			case 0x10de0440: return "MCP65 LPC Bridge";
			case 0x10de0441: return "MCP65 LPC Bridge";
			case 0x10de0442: return "MCP65 LPC Bridge";
			case 0x10de0443: return "MCP65 LPC Bridge";
			case 0x10de0444: return "MCP65 Memory Controller";
			case 0x10de0445: return "MCP65 Memory Controller";
			case 0x10de0446: return "MCP65 SMBus";
			case 0x10de0447: return "MCP65 SMU";
			case 0x10de0448: return "MCP65 IDE";
			case 0x10de0449: return "MCP65 PCI bridge";
			case 0x10de044a: return "MCP65 High Definition Audio";
			case 0x10de044b: return "MCP65 High Definition Audio";
			case 0x10de044c: return "MCP65 AHCI Controller";
			case 0x10de044d: return "MCP65 AHCI Controller";
			case 0x10de044e: return "MCP65 AHCI Controller";
			case 0x10de044f: return "MCP65 AHCI Controller";
			case 0x10de0450: return "MCP65 Ethernet";
			case 0x10de0451: return "MCP65 Ethernet";
			case 0x10de0452: return "MCP65 Ethernet";
			case 0x10de0453: return "MCP65 Ethernet";
			case 0x10de0454: return "MCP65 USB 1.1 OHCI Controller";
			case 0x10de0455: return "MCP65 USB 2.0 EHCI Controller";
			case 0x10de0456: return "MCP65 USB Controller";
			case 0x10de0457: return "MCP65 USB Controller";
			case 0x10de0458: return "MCP65 PCI Express bridge";
			case 0x10de0459: return "MCP65 PCI Express bridge";
			case 0x10de045a: return "MCP65 PCI Express bridge";
			case 0x10de045b: return "MCP65 PCI Express bridge";
			case 0x10de045c: return "MCP65 SATA Controller";
			case 0x10de045d: return "MCP65 SATA Controller";
			case 0x10de045e: return "MCP65 SATA Controller";
			case 0x10de045f: return "MCP65 SATA Controller";
			case 0x10de0531: return "C67 [GeForce 7150M / nForce 630M]";
			case 0x10de0533: return "C67 [GeForce 7000M / nForce 610M]";
			case 0x10de053a: return "C68 [GeForce 7050 PV / nForce 630a]";
			case 0x10de053b: return "C68 [GeForce 7050 PV / nForce 630a]";
			case 0x10de053e: return "C68 [GeForce 7025 / nForce 630a]";
			case 0x10de0541: return "MCP67 Memory Controller";
			case 0x10de0542: return "MCP67 SMBus";
			case 0x10de0543: return "MCP67 Co-processor";
			case 0x10de0547: return "MCP67 Memory Controller";
			case 0x10de0548: return "MCP67 ISA Bridge";
			case 0x10de054c: return "MCP67 Ethernet";
			case 0x10de054d: return "MCP67 Ethernet";
			case 0x10de054e: return "MCP67 Ethernet";
			case 0x10de054f: return "MCP67 Ethernet";
			case 0x10de0550: return "MCP67 AHCI Controller";
			case 0x10de0554: return "MCP67 AHCI Controller";
			case 0x10de0555: return "MCP67 SATA Controller";
			case 0x10de055c: return "MCP67 High Definition Audio";
			case 0x10de055d: return "MCP67 High Definition Audio";
			case 0x10de055e: return "MCP67 OHCI USB 1.1 Controller";
			case 0x10de055f: return "MCP67 EHCI USB 2.0 Controller";
			case 0x10de0560: return "MCP67 IDE Controller";
			case 0x10de0561: return "MCP67 PCI Bridge";
			case 0x10de0562: return "MCP67 PCI Express Bridge";
			case 0x10de0563: return "MCP67 PCI Express Bridge";
			case 0x10de0568: return "MCP78S [GeForce 8200] Memory Controller";
			case 0x10de0569: return "MCP78S [GeForce 8200] PCI Express Bridge";
			case 0x10de056a: return "MCP73 [nForce 630i] USB 2.0 Controller (EHCI)";
			case 0x10de056c: return "MCP73 IDE Controller";
			case 0x10de056d: return "MCP73 PCI Express bridge";
			case 0x10de056e: return "MCP73 PCI Express bridge";
			case 0x10de056f: return "MCP73 PCI Express bridge";
			case 0x10de05b1: return "NF200 PCIe 2.0 switch";
			case 0x10de05b8: return "NF200 PCIe 2.0 switch for GTX 295";
			case 0x10de05be: return "NF200 PCIe 2.0 switch for Quadro Plex S4 / Tesla S870 / Tesla S1070 / Tesla S2050";
			case 0x10de05e0: return "GT200b [GeForce GTX 295]";
			case 0x10de05e1: return "GT200 [GeForce GTX 280]";
			case 0x10de05e2: return "GT200 [GeForce GTX 260]";
			case 0x10de05e3: return "GT200b [GeForce GTX 285]";
			case 0x10de05e6: return "GT200b [GeForce GTX 275]";
			case 0x10de05e7: return "GT200GL [Tesla C1060 / M1060]";
			case 0x10de05ea: return "GT200 [GeForce GTX 260]";
			case 0x10de05eb: return "GT200 [GeForce GTX 295]";
			case 0x10de05ed: return "GT200GL [Quadro Plex 2200 D2]";
			case 0x10de05f1: return "GT200 [GeForce GTX 280]";
			case 0x10de05f2: return "GT200 [GeForce GTX 260]";
			case 0x10de05f8: return "GT200GL [Quadro Plex 2200 S4]";
			case 0x10de05f9: return "GT200GL [Quadro CX]";
			case 0x10de05fd: return "GT200GL [Quadro FX 5800]";
			case 0x10de05fe: return "GT200GL [Quadro FX 4800]";
			case 0x10de05ff: return "GT200GL [Quadro FX 3800]";
			case 0x10de0600: return "G92 [GeForce 8800 GTS 512]";
			case 0x10de0601: return "G92 [GeForce 9800 GT]";
			case 0x10de0602: return "G92 [GeForce 8800 GT]";
			case 0x10de0603: return "G92 [GeForce GT 230 OEM]";
			case 0x10de0604: return "G92 [GeForce 9800 GX2]";
			case 0x10de0605: return "G92 [GeForce 9800 GT]";
			case 0x10de0606: return "G92 [GeForce 8800 GS]";
			case 0x10de0607: return "G92 [GeForce GTS 240]";
			case 0x10de0608: return "G92M [GeForce 9800M GTX]";
			case 0x10de0609: return "G92M [GeForce 8800M GTS]";
			case 0x10de060a: return "G92M [GeForce GTX 280M]";
			case 0x10de060b: return "G92M [GeForce 9800M GT]";
			case 0x10de060c: return "G92M [GeForce 8800M GTX]";
			case 0x10de060d: return "G92 [GeForce 8800 GS]";
			case 0x10de060f: return "G92M [GeForce GTX 285M]";
			case 0x10de0610: return "G92 [GeForce 9600 GSO]";
			case 0x10de0611: return "G92 [GeForce 8800 GT]";
			case 0x10de0612: return "G92 [GeForce 9800 GTX / 9800 GTX+]";
			case 0x10de0613: return "G92 [GeForce 9800 GTX+]";
			case 0x10de0614: return "G92 [GeForce 9800 GT]";
			case 0x10de0615: return "G92 [GeForce GTS 250]";
			case 0x10de0617: return "G92M [GeForce 9800M GTX]";
			case 0x10de0618: return "G92M [GeForce GTX 260M]";
			case 0x10de0619: return "G92GL [Quadro FX 4700 X2]";
			case 0x10de061a: return "G92GL [Quadro FX 3700]";
			case 0x10de061b: return "G92GL [Quadro VX 200]";
			case 0x10de061c: return "G92GLM [Quadro FX 3600M]";
			case 0x10de061d: return "G92GLM [Quadro FX 2800M]";
			case 0x10de061e: return "G92GLM [Quadro FX 3700M]";
			case 0x10de061f: return "G92GLM [Quadro FX 3800M]";
			case 0x10de0620: return "G94 [GeForce 9800 GT]";
			case 0x10de0621: return "G94 [GeForce GT 230]";
			case 0x10de0622: return "G94 [GeForce 9600 GT]";
			case 0x10de0623: return "G94 [GeForce 9600 GS]";
			case 0x10de0624: return "G94 [GeForce 9600 GT Green Edition]";
			case 0x10de0625: return "G94 [GeForce 9600 GSO 512]";
			case 0x10de0626: return "G94 [GeForce GT 130]";
			case 0x10de0627: return "G94 [GeForce GT 140]";
			case 0x10de0628: return "G94M [GeForce 9800M GTS]";
			case 0x10de062a: return "G94M [GeForce 9700M GTS]";
			case 0x10de062b: return "G94M [GeForce 9800M GS]";
			case 0x10de062c: return "G94M [GeForce 9800M GTS]";
			case 0x10de062d: return "G94 [GeForce 9600 GT]";
			case 0x10de062e: return "G94 [GeForce 9600 GT]";
			case 0x10de062f: return "G94 [GeForce 9800 S]";
			case 0x10de0630: return "G94 [GeForce 9600 GT]";
			case 0x10de0631: return "G94M [GeForce GTS 160M]";
			case 0x10de0632: return "G94M [GeForce GTS 150M]";
			case 0x10de0633: return "G94 [GeForce GT 220]";
			case 0x10de0635: return "G94 [GeForce 9600 GSO]";
			case 0x10de0637: return "G94 [GeForce 9600 GT]";
			case 0x10de0638: return "G94GL [Quadro FX 1800]";
			case 0x10de063a: return "G94GLM [Quadro FX 2700M]";
			case 0x10de063f: return "G94 [GeForce 9600 GE]";
			case 0x10de0640: return "G96C [GeForce 9500 GT]";
			case 0x10de0641: return "G96C [GeForce 9400 GT]";
			case 0x10de0642: return "G96 [D9M-10]";
			case 0x10de0643: return "G96 [GeForce 9500 GT]";
			case 0x10de0644: return "G96 [GeForce 9500 GS]";
			case 0x10de0645: return "G96C [GeForce 9500 GS]";
			case 0x10de0646: return "G96C [GeForce GT 120]";
			case 0x10de0647: return "G96CM [GeForce 9600M GT]";
			case 0x10de0648: return "G96CM [GeForce 9600M GS]";
			case 0x10de0649: return "G96CM [GeForce 9600M GT]";
			case 0x10de064a: return "G96M [GeForce 9700M GT]";
			case 0x10de064b: return "G96M [GeForce 9500M G]";
			case 0x10de064c: return "G96CM [GeForce 9650M GT]";
			case 0x10de064e: return "G96C [GeForce 9600 GSO / 9800 GT]";
			case 0x10de0651: return "G96CM [GeForce G 110M]";
			case 0x10de0652: return "G96CM [GeForce GT 130M]";
			case 0x10de0653: return "G96CM [GeForce GT 120M]";
			case 0x10de0654: return "G96CM [GeForce GT 220M]";
			case 0x10de0655: return "G96 [GeForce GT 120 Mac Edition]";
			case 0x10de0656: return "G96 [GeForce GT 120 Mac Edition]";
			case 0x10de0658: return "G96GL [Quadro FX 380]";
			case 0x10de0659: return "G96CGL [Quadro FX 580]";
			case 0x10de065a: return "G96GLM [Quadro FX 1700M]";
			case 0x10de065b: return "G96C [GeForce 9400 GT]";
			case 0x10de065c: return "G96GLM [Quadro FX 770M]";
			case 0x10de065d: return "G96 [GeForce 9500 GA / 9600 GT / GTS 250]";
			case 0x10de065f: return "G96C [GeForce G210]";
			case 0x10de06c0: return "GF100 [GeForce GTX 480]";
			case 0x10de06c4: return "GF100 [GeForce GTX 465]";
			case 0x10de06ca: return "GF100M [GeForce GTX 480M]";
			case 0x10de06cb: return "GF100 [GeForce GTX 480]";
			case 0x10de06cd: return "GF100 [GeForce GTX 470]";
			case 0x10de06d0: return "GF100GL";
			case 0x10de06d1: return "GF100GL [Tesla C2050 / C2070]";
			case 0x10de06d2: return "GF100GL [Tesla M2070]";
			case 0x10de06d8: return "GF100GL [Quadro 6000]";
			case 0x10de06d9: return "GF100GL [Quadro 5000]";
			case 0x10de06da: return "GF100GLM [Quadro 5000M]";
			case 0x10de06dc: return "GF100GL [Quadro 6000]";
			case 0x10de06dd: return "GF100GL [Quadro 4000]";
			case 0x10de06de: return "GF100GL [Tesla T20 Processor]";
			case 0x10de06df: return "GF100GL [Tesla M2070-Q]";
			case 0x10de06e0: return "G98 [GeForce 9300 GE]";
			case 0x10de06e1: return "G98 [GeForce 9300 GS]";
			case 0x10de06e2: return "G98 [GeForce 8400]";
			case 0x10de06e3: return "G98 [GeForce 8300 GS]";
			case 0x10de06e4: return "G98 [GeForce 8400 GS Rev. 2]";
			case 0x10de06e5: return "G98M [GeForce 9300M GS]";
			case 0x10de06e6: return "G98 [GeForce G 100]";
			case 0x10de06e7: return "G98 [GeForce 9300 SE]";
			case 0x10de06e8: return "G98M [GeForce 9200M GS]";
			case 0x10de06e9: return "G98M [GeForce 9300M GS]";
			case 0x10de06ea: return "G98M [Quadro NVS 150M]";
			case 0x10de06eb: return "G98M [Quadro NVS 160M]";
			case 0x10de06ec: return "G98M [GeForce G 105M]";
			case 0x10de06ed: return "G98 [GeForce 9600 GT / 9800 GT]";
			case 0x10de06ee: return "G98 [GeForce 9600 GT / 9800 GT / GT 240]";
			case 0x10de06ef: return "G98M [GeForce G 103M]";
			case 0x10de06f1: return "G98M [GeForce G 105M]";
			case 0x10de06f8: return "G98 [Quadro NVS 420]";
			case 0x10de06f9: return "G98GL [Quadro FX 370 LP]";
			case 0x10de06fa: return "G98 [Quadro NVS 450]";
			case 0x10de06fb: return "G98GLM [Quadro FX 370M]";
			case 0x10de06fd: return "G98 [Quadro NVS 295]";
			case 0x10de06ff: return "G98 [HICx16 + Graphics]";
			case 0x10de0751: return "MCP78S [GeForce 8200] Memory Controller";
			case 0x10de0752: return "MCP78S [GeForce 8200] SMBus";
			case 0x10de0753: return "MCP78S [GeForce 8200] Co-Processor";
			case 0x10de0754: return "MCP78S [GeForce 8200] Memory Controller";
			case 0x10de0759: return "MCP78S [GeForce 8200] IDE";
			case 0x10de075a: return "MCP78S [GeForce 8200] PCI Bridge";
			case 0x10de075b: return "MCP78S [GeForce 8200] PCI Express Bridge";
			case 0x10de075c: return "MCP78S [GeForce 8200] LPC Bridge";
			case 0x10de075d: return "MCP78S [GeForce 8200] LPC Bridge";
			case 0x10de0760: return "MCP77 Ethernet";
			case 0x10de0761: return "MCP77 Ethernet";
			case 0x10de0762: return "MCP77 Ethernet";
			case 0x10de0763: return "MCP77 Ethernet";
			case 0x10de0774: return "MCP72XE/MCP72P/MCP78U/MCP78S High Definition Audio";
			case 0x10de0778: return "MCP78S [GeForce 8200] PCI Express Bridge";
			case 0x10de077a: return "MCP78S [GeForce 8200] PCI Bridge";
			case 0x10de077b: return "MCP78S [GeForce 8200] OHCI USB 1.1 Controller";
			case 0x10de077c: return "MCP78S [GeForce 8200] EHCI USB 2.0 Controller";
			case 0x10de077d: return "MCP78S [GeForce 8200] OHCI USB 1.1 Controller";
			case 0x10de077e: return "MCP78S [GeForce 8200] EHCI USB 2.0 Controller";
			case 0x10de07c0: return "MCP73 Host Bridge";
			case 0x10de07c1: return "MCP73 Host Bridge";
			case 0x10de07c2: return "MCP73 Host Bridge";
			case 0x10de07c3: return "MCP73 Host Bridge";
			case 0x10de07c5: return "MCP73 Host Bridge";
			case 0x10de07c8: return "MCP73 Memory Controller";
			case 0x10de07cb: return "nForce 610i/630i memory controller";
			case 0x10de07cd: return "nForce 610i/630i memory controller";
			case 0x10de07ce: return "nForce 610i/630i memory controller";
			case 0x10de07cf: return "nForce 610i/630i memory controller";
			case 0x10de07d0: return "nForce 610i/630i memory controller";
			case 0x10de07d1: return "nForce 610i/630i memory controller";
			case 0x10de07d2: return "nForce 610i/630i memory controller";
			case 0x10de07d3: return "nForce 610i/630i memory controller";
			case 0x10de07d6: return "nForce 610i/630i memory controller";
			case 0x10de07d7: return "MCP73 LPC Bridge";
			case 0x10de07d8: return "MCP73 SMBus";
			case 0x10de07d9: return "MCP73 Memory Controller";
			case 0x10de07da: return "MCP73 Co-processor";
			case 0x10de07dc: return "MCP73 Ethernet";
			case 0x10de07dd: return "MCP73 Ethernet";
			case 0x10de07de: return "MCP73 Ethernet";
			case 0x10de07df: return "MCP73 Ethernet";
			case 0x10de07e0: return "C73 [GeForce 7150 / nForce 630i]";
			case 0x10de07e1: return "C73 [GeForce 7100 / nForce 630i]";
			case 0x10de07e2: return "C73 [GeForce 7050 / nForce 630i]";
			case 0x10de07e3: return "C73 [GeForce 7050 / nForce 610i]";
			case 0x10de07e5: return "C73 [GeForce 7100 / nForce 620i]";
			case 0x10de07f0: return "MCP73 SATA Controller (IDE mode)";
			case 0x10de07f4: return "GeForce 7100/nForce 630i SATA";
			case 0x10de07f8: return "MCP73 SATA RAID Controller";
			case 0x10de07fc: return "MCP73 High Definition Audio";
			case 0x10de07fe: return "MCP73 OHCI USB 1.1 Controller";
			case 0x10de0840: return "C77 [GeForce 8200M]";
			case 0x10de0844: return "C77 [GeForce 9100M G]";
			case 0x10de0845: return "C77 [GeForce 8200M G]";
			case 0x10de0846: return "C77 [GeForce 9200]";
			case 0x10de0847: return "C78 [GeForce 9100]";
			case 0x10de0848: return "C77 [GeForce 8300]";
			case 0x10de0849: return "C77 [GeForce 8200]";
			case 0x10de084a: return "C77 [nForce 730a]";
			case 0x10de084b: return "C77 [GeForce 8200]";
			case 0x10de084c: return "C77 [nForce 780a/980a SLI]";
			case 0x10de084d: return "C77 [nForce 750a SLI]";
			case 0x10de084f: return "C77 [GeForce 8100 / nForce 720a]";
			case 0x10de0860: return "C79 [GeForce 9300]";
			case 0x10de0861: return "C79 [GeForce 9400]";
			case 0x10de0862: return "C79 [GeForce 9400M G]";
			case 0x10de0863: return "C79 [GeForce 9400M]";
			case 0x10de0864: return "C79 [GeForce 9300]";
			case 0x10de0865: return "C79 [GeForce 9300 / ION]";
			case 0x10de0866: return "C79 [GeForce 9400M G]";
			case 0x10de0867: return "C79 [GeForce 9400]";
			case 0x10de0868: return "C79 [nForce 760i SLI]";
			case 0x10de0869: return "MCP7A [GeForce 9400]";
			case 0x10de086a: return "C79 [GeForce 9400]";
			case 0x10de086c: return "C79 [GeForce 9300 / nForce 730i]";
			case 0x10de086d: return "C79 [GeForce 9200]";
			case 0x10de086e: return "C79 [GeForce 9100M G]";
			case 0x10de086f: return "MCP79 [GeForce 8200M G]";
			case 0x10de0870: return "C79 [GeForce 9400M]";
			case 0x10de0871: return "C79 [GeForce 9200]";
			case 0x10de0872: return "C79 [GeForce G102M]";
			case 0x10de0873: return "C79 [GeForce G102M]";
			case 0x10de0874: return "C79 [ION]";
			case 0x10de0876: return "C79 [GeForce 9400M / ION]";
			case 0x10de087a: return "C79 [GeForce 9400]";
			case 0x10de087d: return "C79 [ION]";
			case 0x10de087e: return "C79 [ION LE]";
			case 0x10de087f: return "C79 [ION LE]";
			case 0x10de08a0: return "MCP89 [GeForce 320M]";
			case 0x10de08a2: return "MCP89 [GeForce 320M]";
			case 0x10de08a3: return "MCP89 [GeForce 320M]";
			case 0x10de08a4: return "MCP89 [GeForce 320M]";
			case 0x10de08a5: return "MCP89 [GeForce 320M]";
			case 0x10de0a20: return "GT216 [GeForce GT 220]";
			case 0x10de0a21: return "GT216M [GeForce GT 330M]";
			case 0x10de0a22: return "GT216 [GeForce 315]";
			case 0x10de0a23: return "GT216 [GeForce 210]";
			case 0x10de0a24: return "GT216 [GeForce 405]";
			case 0x10de0a26: return "GT216 [GeForce 405]";
			case 0x10de0a27: return "GT216 [GeForce 405]";
			case 0x10de0a28: return "GT216M [GeForce GT 230M]";
			case 0x10de0a29: return "GT216M [GeForce GT 330M]";
			case 0x10de0a2a: return "GT216M [GeForce GT 230M]";
			case 0x10de0a2b: return "GT216M [GeForce GT 330M]";
			case 0x10de0a2c: return "GT216M [NVS 5100M]";
			case 0x10de0a2d: return "GT216M [GeForce GT 320M]";
			case 0x10de0a30: return "GT216 [GeForce 505]";
			case 0x10de0a32: return "GT216 [GeForce GT 415]";
			case 0x10de0a34: return "GT216M [GeForce GT 240M]";
			case 0x10de0a35: return "GT216M [GeForce GT 325M]";
			case 0x10de0a38: return "GT216GL [Quadro 400]";
			case 0x10de0a3c: return "GT216GLM [Quadro FX 880M]";
			case 0x10de0a60: return "GT218 [GeForce G210]";
			case 0x10de0a62: return "GT218 [GeForce 205]";
			case 0x10de0a63: return "GT218 [GeForce 310]";
			case 0x10de0a64: return "GT218 [ION]";
			case 0x10de0a65: return "GT218 [GeForce 210]";
			case 0x10de0a66: return "GT218 [GeForce 310]";
			case 0x10de0a67: return "GT218 [GeForce 315]";
			case 0x10de0a68: return "GT218M [GeForce G 105M]";
			case 0x10de0a69: return "GT218M [GeForce G 105M]";
			case 0x10de0a6a: return "GT218M [NVS 2100M]";
			case 0x10de0a6c: return "GT218M [NVS 3100M]";
			case 0x10de0a6e: return "GT218M [GeForce 305M]";
			case 0x10de0a6f: return "GT218M [ION]";
			case 0x10de0a70: return "GT218M [GeForce 310M]";
			case 0x10de0a71: return "GT218M [GeForce 305M]";
			case 0x10de0a72: return "GT218M [GeForce 310M]";
			case 0x10de0a73: return "GT218M [GeForce 305M]";
			case 0x10de0a74: return "GT218M [GeForce G210M]";
			case 0x10de0a75: return "GT218M [GeForce 310M]";
			case 0x10de0a76: return "GT218M [ION 2]";
			case 0x10de0a78: return "GT218GL [Quadro FX 380 LP]";
			case 0x10de0a7a: return "GT218M [GeForce 315M]";
			case 0x10de0a7b: return "GT218 [GeForce 505]";
			case 0x10de0a7c: return "GT218GLM [Quadro FX 380M]";
			case 0x10de0a80: return "MCP79 Host Bridge";
			case 0x10de0a81: return "MCP79 Host Bridge";
			case 0x10de0a82: return "MCP79 Host Bridge";
			case 0x10de0a83: return "MCP79 Host Bridge";
			case 0x10de0a84: return "MCP79 Host Bridge";
			case 0x10de0a85: return "MCP79 Host Bridge";
			case 0x10de0a86: return "MCP79 Host Bridge";
			case 0x10de0a87: return "MCP79 Host Bridge";
			case 0x10de0a88: return "MCP79 Memory Controller";
			case 0x10de0a89: return "MCP79 Memory Controller";
			case 0x10de0a98: return "MCP79 Memory Controller";
			case 0x10de0aa0: return "MCP79 PCI Express Bridge";
			case 0x10de0aa2: return "MCP79 SMBus";
			case 0x10de0aa3: return "MCP79 Co-processor";
			case 0x10de0aa4: return "MCP79 Memory Controller";
			case 0x10de0aa5: return "MCP79 OHCI USB 1.1 Controller";
			case 0x10de0aa6: return "MCP79 EHCI USB 2.0 Controller";
			case 0x10de0aa7: return "MCP79 OHCI USB 1.1 Controller";
			case 0x10de0aa8: return "MCP79 OHCI USB 1.1 Controller";
			case 0x10de0aa9: return "MCP79 EHCI USB 2.0 Controller";
			case 0x10de0aaa: return "MCP79 EHCI USB 2.0 Controller";
			case 0x10de0aab: return "MCP79 PCI Bridge";
			case 0x10de0aac: return "MCP79 LPC Bridge";
			case 0x10de0aad: return "MCP79 LPC Bridge";
			case 0x10de0aae: return "MCP79 LPC Bridge";
			case 0x10de0aaf: return "MCP79 LPC Bridge";
			case 0x10de0ab0: return "MCP79 Ethernet";
			case 0x10de0ab1: return "MCP79 Ethernet";
			case 0x10de0ab2: return "MCP79 Ethernet";
			case 0x10de0ab3: return "MCP79 Ethernet";
			case 0x10de0ab4: return "MCP79 SATA Controller";
			case 0x10de0ab5: return "MCP79 SATA Controller";
			case 0x10de0ab6: return "MCP79 SATA Controller";
			case 0x10de0ab7: return "MCP79 SATA Controller";
			case 0x10de0ab8: return "MCP79 AHCI Controller";
			case 0x10de0ab9: return "MCP79 AHCI Controller";
			case 0x10de0aba: return "MCP79 AHCI Controller";
			case 0x10de0abb: return "MCP79 AHCI Controller";
			case 0x10de0abc: return "MCP79 RAID Controller";
			case 0x10de0abd: return "MCP79 RAID Controller";
			case 0x10de0abe: return "MCP79 RAID Controller";
			case 0x10de0abf: return "MCP79 RAID Controller";
			case 0x10de0ac0: return "MCP79 High Definition Audio";
			case 0x10de0ac1: return "MCP79 High Definition Audio";
			case 0x10de0ac2: return "MCP79 High Definition Audio";
			case 0x10de0ac3: return "MCP79 High Definition Audio";
			case 0x10de0ac4: return "MCP79 PCI Express Bridge";
			case 0x10de0ac5: return "MCP79 PCI Express Bridge";
			case 0x10de0ac6: return "MCP79 PCI Express Bridge";
			case 0x10de0ac7: return "MCP79 PCI Express Bridge";
			case 0x10de0ac8: return "MCP79 PCI Express Bridge";
			case 0x10de0ad0: return "MCP78S [GeForce 8200] SATA Controller (non-AHCI mode)";
			case 0x10de0ad4: return "MCP78S [GeForce 8200] AHCI Controller";
			case 0x10de0ad8: return "MCP78S [GeForce 8200] SATA Controller (RAID mode)";
			case 0x10de0be2: return "GT216 HDMI Audio Controller";
			case 0x10de0be3: return "High Definition Audio Controller";
			case 0x10de0be4: return "High Definition Audio Controller";
			case 0x10de0be5: return "GF100 High Definition Audio Controller";
			case 0x10de0be9: return "GF106 High Definition Audio Controller";
			case 0x10de0bea: return "GF108 High Definition Audio Controller";
			case 0x10de0beb: return "GF104 High Definition Audio Controller";
			case 0x10de0bee: return "GF116 High Definition Audio Controller";
			case 0x10de0bf0: return "Tegra2 PCIe x4 Bridge";
			case 0x10de0bf1: return "Tegra2 PCIe x2 Bridge";
			case 0x10de0ca0: return "GT215 [GeForce GT 330]";
			case 0x10de0ca2: return "GT215 [GeForce GT 320]";
			case 0x10de0ca3: return "GT215 [GeForce GT 240]";
			case 0x10de0ca4: return "GT215 [GeForce GT 340]";
			case 0x10de0ca5: return "GT215 [GeForce GT 220]";
			case 0x10de0ca7: return "GT215 [GeForce GT 330]";
			case 0x10de0ca8: return "GT215M [GeForce GTS 260M]";
			case 0x10de0ca9: return "GT215M [GeForce GTS 250M]";
			case 0x10de0cac: return "GT215 [GeForce GT 220/315]";
			case 0x10de0caf: return "GT215M [GeForce GT 335M]";
			case 0x10de0cb0: return "GT215M [GeForce GTS 350M]";
			case 0x10de0cb1: return "GT215M [GeForce GTS 360M]";
			case 0x10de0cbc: return "GT215GLM [Quadro FX 1800M]";
			case 0x10de0d60: return "MCP89 HOST Bridge";
			case 0x10de0d68: return "MCP89 Memory Controller";
			case 0x10de0d69: return "MCP89 Memory Controller";
			case 0x10de0d76: return "MCP89 PCI Express Bridge";
			case 0x10de0d79: return "MCP89 SMBus";
			case 0x10de0d7a: return "MCP89 Co-Processor";
			case 0x10de0d7b: return "MCP89 Memory Controller";
			case 0x10de0d7d: return "MCP89 Ethernet";
			case 0x10de0d80: return "MCP89 LPC Bridge";
			case 0x10de0d85: return "MCP89 SATA Controller";
			case 0x10de0d88: return "MCP89 SATA Controller (AHCI mode)";
			case 0x10de0d89: return "MCP89 SATA Controller (AHCI mode)";
			case 0x10de0d8d: return "MCP89 SATA Controller (RAID mode)";
			case 0x10de0d94: return "MCP89 High Definition Audio";
			case 0x10de0d9c: return "MCP89 OHCI USB 1.1 Controller";
			case 0x10de0d9d: return "MCP89 EHCI USB 2.0 Controller";
			case 0x10de0dc0: return "GF106 [GeForce GT 440]";
			case 0x10de0dc4: return "GF106 [GeForce GTS 450]";
			case 0x10de0dc5: return "GF106 [GeForce GTS 450 OEM]";
			case 0x10de0dc6: return "GF106 [GeForce GTS 450 OEM]";
			case 0x10de0dcd: return "GF106M [GeForce GT 555M]";
			case 0x10de0dce: return "GF106M [GeForce GT 555M]";
			case 0x10de0dd1: return "GF106M [GeForce GTX 460M]";
			case 0x10de0dd2: return "GF106M [GeForce GT 445M]";
			case 0x10de0dd3: return "GF106M [GeForce GT 435M]";
			case 0x10de0dd6: return "GF106M [GeForce GT 550M]";
			case 0x10de0dd8: return "GF106GL [Quadro 2000]";
			case 0x10de0dda: return "GF106GLM [Quadro 2000M]";
			case 0x10de0de0: return "GF108 [GeForce GT 440]";
			case 0x10de0de1: return "GF108 [GeForce GT 430]";
			case 0x10de0de2: return "GF108 [GeForce GT 420]";
			case 0x10de0de3: return "GF108M [GeForce GT 635M]";
			case 0x10de0de4: return "GF108 [GeForce GT 520]";
			case 0x10de0de5: return "GF108 [GeForce GT 530]";
			case 0x10de0de7: return "GF108 [GeForce GT 610]";
			case 0x10de0de8: return "GF108M [GeForce GT 620M]";
			case 0x10de0de9: return "GF108M [GeForce GT 620M/630M/635M/640M LE]";
			case 0x10de0dea: return "GF108M [GeForce 610M]";
			case 0x10de0deb: return "GF108M [GeForce GT 555M]";
			case 0x10de0dec: return "GF108M [GeForce GT 525M]";
			case 0x10de0ded: return "GF108M [GeForce GT 520M]";
			case 0x10de0dee: return "GF108M [GeForce GT 415M]";
			case 0x10de0def: return "GF108M [NVS 5400M]";
			case 0x10de0df0: return "GF108M [GeForce GT 425M]";
			case 0x10de0df1: return "GF108M [GeForce GT 420M]";
			case 0x10de0df2: return "GF108M [GeForce GT 435M]";
			case 0x10de0df3: return "GF108M [GeForce GT 420M]";
			case 0x10de0df4: return "GF108M [GeForce GT 540M]";
			case 0x10de0df5: return "GF108M [GeForce GT 525M]";
			case 0x10de0df6: return "GF108M [GeForce GT 550M]";
			case 0x10de0df7: return "GF108M [GeForce GT 520M]";
			case 0x10de0df8: return "GF108GL [Quadro 600]";
			case 0x10de0df9: return "GF108GLM [Quadro 500M]";
			case 0x10de0dfa: return "GF108GLM [Quadro 1000M]";
			case 0x10de0dfc: return "GF108GLM [NVS 5200M]";
			case 0x10de0e08: return "GF119 HDMI Audio Controller";
			case 0x10de0e09: return "GF110 High Definition Audio Controller";
			case 0x10de0e0a: return "GK104 HDMI Audio Controller";
			case 0x10de0e0b: return "GK106 HDMI Audio Controller";
			case 0x10de0e0c: return "GF114 HDMI Audio Controller";
			case 0x10de0e0f: return "GK208 HDMI/DP Audio Controller";
			case 0x10de0e12: return "TegraK1 PCIe x4 Bridge";
			case 0x10de0e13: return "TegraK1 PCIe x1 Bridge";
			case 0x10de0e1a: return "GK110 High Definition Audio Controller";
			case 0x10de0e1b: return "GK107 HDMI Audio Controller";
			case 0x10de0e1c: return "Tegra3+ PCIe x4 Bridge";
			case 0x10de0e1d: return "Tegra3+ PCIe x2 Bridge";
			case 0x10de0e22: return "GF104 [GeForce GTX 460]";
			case 0x10de0e23: return "GF104 [GeForce GTX 460 SE]";
			case 0x10de0e24: return "GF104 [GeForce GTX 460 OEM]";
			case 0x10de0e30: return "GF104M [GeForce GTX 470M]";
			case 0x10de0e31: return "GF104M [GeForce GTX 485M]";
			case 0x10de0e3a: return "GF104GLM [Quadro 3000M]";
			case 0x10de0e3b: return "GF104GLM [Quadro 4000M]";
			case 0x10de0f00: return "GF108 [GeForce GT 630]";
			case 0x10de0f01: return "GF108 [GeForce GT 620]";
			case 0x10de0f02: return "GF108 [GeForce GT 730]";
			case 0x10de0f03: return "GF108 [GeForce GT 610]";
			case 0x10de0f06: return "GF108 [GeForce GT 730]";
			case 0x10de0fb0: return "GM200 High Definition Audio";
			case 0x10de0fb8: return "GP108 High Definition Audio Controller";
			case 0x10de0fb9: return "GP107GL High Definition Audio Controller";
			case 0x10de0fba: return "GM206 High Definition Audio Controller";
			case 0x10de0fbb: return "GM204 High Definition Audio Controller";
			case 0x10de0fbc: return "GM107 High Definition Audio Controller [GeForce 940MX]";
			case 0x10de0fc0: return "GK107 [GeForce GT 640 OEM]";
			case 0x10de0fc1: return "GK107 [GeForce GT 640]";
			case 0x10de0fc2: return "GK107 [GeForce GT 630 OEM]";
			case 0x10de0fc5: return "GK107 [GeForce GT 1030]";
			case 0x10de0fc6: return "GK107 [GeForce GTX 650]";
			case 0x10de0fc8: return "GK107 [GeForce GT 740]";
			case 0x10de0fc9: return "GK107 [GeForce GT 730]";
			case 0x10de0fcd: return "GK107M [GeForce GT 755M]";
			case 0x10de0fce: return "GK107M [GeForce GT 640M LE]";
			case 0x10de0fd1: return "GK107M [GeForce GT 650M]";
			case 0x10de0fd2: return "GK107M [GeForce GT 640M]";
			case 0x10de0fd3: return "GK107M [GeForce GT 640M LE]";
			case 0x10de0fd4: return "GK107M [GeForce GTX 660M]";
			case 0x10de0fd5: return "GK107M [GeForce GT 650M Mac Edition]";
			case 0x10de0fd6: return "GK107M";
			case 0x10de0fd8: return "GK107M [GeForce GT 640M Mac Edition]";
			case 0x10de0fd9: return "GK107M [GeForce GT 645M]";
			case 0x10de0fdb: return "GK107M";
			case 0x10de0fdf: return "GK107M [GeForce GT 740M]";
			case 0x10de0fe0: return "GK107M [GeForce GTX 660M Mac Edition]";
			case 0x10de0fe1: return "GK107M [GeForce GT 730M]";
			case 0x10de0fe2: return "GK107M [GeForce GT 745M]";
			case 0x10de0fe3: return "GK107M [GeForce GT 745M]";
			case 0x10de0fe4: return "GK107M [GeForce GT 750M]";
			case 0x10de0fe5: return "GK107 [GeForce K340 USM]";
			case 0x10de0fe6: return "GK107 [GRID K1 NVS USM]";
			case 0x10de0fe7: return "GK107GL [GRID K100 vGPU]";
			case 0x10de0fe8: return "GK107M";
			case 0x10de0fe9: return "GK107M [GeForce GT 750M Mac Edition]";
			case 0x10de0fea: return "GK107M [GeForce GT 755M Mac Edition]";
			case 0x10de0fec: return "GK107M [GeForce 710A]";
			case 0x10de0fed: return "GK107M [GeForce 820M]";
			case 0x10de0fee: return "GK107M [GeForce 810M]";
			case 0x10de0fef: return "GK107GL [GRID K340]";
			case 0x10de0ff1: return "GK107 [NVS 1000]";
			case 0x10de0ff2: return "GK107GL [GRID K1]";
			case 0x10de0ff3: return "GK107GL [Quadro K420]";
			case 0x10de0ff5: return "GK107GL [GRID K1 Tesla USM]";
			case 0x10de0ff6: return "GK107GLM [Quadro K1100M]";
			case 0x10de0ff7: return "GK107GL [GRID K140Q vGPU]";
			case 0x10de0ff8: return "GK107GLM [Quadro K500M]";
			case 0x10de0ff9: return "GK107GL [Quadro K2000D]";
			case 0x10de0ffa: return "GK107GL [Quadro K600]";
			case 0x10de0ffb: return "GK107GLM [Quadro K2000M]";
			case 0x10de0ffc: return "GK107GLM [Quadro K1000M]";
			case 0x10de0ffd: return "GK107 [NVS 510]";
			case 0x10de0ffe: return "GK107GL [Quadro K2000]";
			case 0x10de0fff: return "GK107GL [Quadro 410]";
			case 0x10de1001: return "GK110B [GeForce GTX TITAN Z]";
			case 0x10de1003: return "GK110 [GeForce GTX Titan LE]";
			case 0x10de1004: return "GK110 [GeForce GTX 780]";
			case 0x10de1005: return "GK110 [GeForce GTX TITAN]";
			case 0x10de1007: return "GK110 [GeForce GTX 780 Rev. 2]";
			case 0x10de1008: return "GK110 [GeForce GTX 780 Ti 6GB]";
			case 0x10de100a: return "GK110B [GeForce GTX 780 Ti]";
			case 0x10de100c: return "GK110B [GeForce GTX TITAN Black]";
			case 0x10de101e: return "GK110GL [Tesla K20X]";
			case 0x10de101f: return "GK110GL [Tesla K20]";
			case 0x10de1020: return "GK110GL [Tesla K20X]";
			case 0x10de1021: return "GK110GL [Tesla K20Xm]";
			case 0x10de1022: return "GK110GL [Tesla K20c]";
			case 0x10de1023: return "GK110BGL [Tesla K40m]";
			case 0x10de1024: return "GK180GL [Tesla K40c]";
			case 0x10de1026: return "GK110GL [Tesla K20s]";
			case 0x10de1027: return "GK110BGL [Tesla K40st]";
			case 0x10de1028: return "GK110GL [Tesla K20m]";
			case 0x10de1029: return "GK110BGL [Tesla K40s]";
			case 0x10de102a: return "GK110BGL [Tesla K40t]";
			case 0x10de102d: return "GK210GL [Tesla K80]";
			case 0x10de102e: return "GK110BGL [Tesla K40d]";
			case 0x10de102f: return "GK110BGL [Tesla Stella Solo]";
			case 0x10de103a: return "GK110GL [Quadro K6000]";
			case 0x10de103c: return "GK110GL [Quadro K5200]";
			case 0x10de103f: return "GK110BGL [Tesla Stella SXM]";
			case 0x10de1040: return "GF119 [GeForce GT 520]";
			case 0x10de1042: return "GF119 [GeForce 510]";
			case 0x10de1045: return "GF119";
			case 0x10de1048: return "GF119 [GeForce 605]";
			case 0x10de1049: return "GF119 [GeForce GT 620 OEM]";
			case 0x10de104a: return "GF119 [GeForce GT 610]";
			case 0x10de104b: return "GF119 [GeForce GT 625 OEM]";
			case 0x10de104c: return "GF119 [GeForce GT 705]";
			case 0x10de104d: return "GF119 [GeForce GT 710]";
			case 0x10de1050: return "GF119M [GeForce GT 520M]";
			case 0x10de1051: return "GF119M [GeForce GT 520MX]";
			case 0x10de1052: return "GF119M [GeForce GT 520M]";
			case 0x10de1054: return "GF119M [GeForce 410M]";
			case 0x10de1055: return "GF119M [GeForce 410M]";
			case 0x10de1056: return "GF119M [NVS 4200M]";
			case 0x10de1057: return "GF119M [Quadro NVS 4200M]";
			case 0x10de1058: return "GF119M [GeForce 610M]";
			case 0x10de1059: return "GF119M [GeForce 610M]";
			case 0x10de105a: return "GF119M [GeForce 610M]";
			case 0x10de105b: return "GF119M [GeForce 705M]";
			case 0x10de107c: return "GF119 [NVS 315]";
			case 0x10de107d: return "GF119 [NVS 310]";
			case 0x10de1080: return "GF110 [GeForce GTX 580]";
			case 0x10de1081: return "GF110 [GeForce GTX 570]";
			case 0x10de1082: return "GF110 [GeForce GTX 560 Ti OEM]";
			case 0x10de1084: return "GF110 [GeForce GTX 560 OEM]";
			case 0x10de1086: return "GF110 [GeForce GTX 570 Rev. 2]";
			case 0x10de1087: return "GF110 [GeForce GTX 560 Ti 448 Cores]";
			case 0x10de1088: return "GF110 [GeForce GTX 590]";
			case 0x10de1089: return "GF110 [GeForce GTX 580 Rev. 2]";
			case 0x10de108b: return "GF110 [GeForce GTX 580]";
			case 0x10de108e: return "GF110GL [Tesla C2090]";
			case 0x10de1091: return "GF110GL [Tesla M2090]";
			case 0x10de1094: return "GF110GL [Tesla M2075]";
			case 0x10de1096: return "GF110GL [Tesla C2050 / C2075]";
			case 0x10de109a: return "GF100GLM [Quadro 5010M]";
			case 0x10de109b: return "GF100GL [Quadro 7000]";
			case 0x10de10c0: return "GT218 [GeForce 9300 GS Rev. 2]";
			case 0x10de10c3: return "GT218 [GeForce 8400 GS Rev. 3]";
			case 0x10de10c5: return "GT218 [GeForce 405]";
			case 0x10de10d8: return "GT218 [NVS 300]";
			case 0x10de10ef: return "GP102 HDMI Audio Controller";
			case 0x10de10f0: return "GP104 High Definition Audio Controller";
			case 0x10de10f1: return "GP106 High Definition Audio Controller";
			case 0x10de10f7: return "TU102 High Definition Audio Controller";
			case 0x10de10f8: return "TU104 HD Audio Controller";
			case 0x10de10f9: return "TU106 High Definition Audio Controller";
			case 0x10de1140: return "GF117M [GeForce 610M/710M/810M/820M / GT 620M/625M/630M/720M]";
			case 0x10de1180: return "GK104 [GeForce GTX 680]";
			case 0x10de1182: return "GK104 [GeForce GTX 760 Ti]";
			case 0x10de1183: return "GK104 [GeForce GTX 660 Ti]";
			case 0x10de1184: return "GK104 [GeForce GTX 770]";
			case 0x10de1185: return "GK104 [GeForce GTX 660 OEM]";
			case 0x10de1186: return "GK104 [GeForce GTX 660 Ti]";
			case 0x10de1187: return "GK104 [GeForce GTX 760]";
			case 0x10de1188: return "GK104 [GeForce GTX 690]";
			case 0x10de1189: return "GK104 [GeForce GTX 670]";
			case 0x10de118a: return "GK104GL [GRID K520]";
			case 0x10de118b: return "GK104GL [GRID K2 GeForce USM]";
			case 0x10de118c: return "GK104 [GRID K2 NVS USM]";
			case 0x10de118d: return "GK104GL [GRID K200 vGPU]";
			case 0x10de118e: return "GK104 [GeForce GTX 760 OEM]";
			case 0x10de118f: return "GK104GL [Tesla K10]";
			case 0x10de1191: return "GK104 [GeForce GTX 760 Rev. 2]";
			case 0x10de1193: return "GK104 [GeForce GTX 760 Ti OEM]";
			case 0x10de1194: return "GK104GL [Tesla K8]";
			case 0x10de1195: return "GK104 [GeForce GTX 660 Rev. 2]";
			case 0x10de1198: return "GK104M [GeForce GTX 880M]";
			case 0x10de1199: return "GK104M [GeForce GTX 870M]";
			case 0x10de119a: return "GK104M [GeForce GTX 860M]";
			case 0x10de119d: return "GK104M [GeForce GTX 775M Mac Edition]";
			case 0x10de119e: return "GK104M [GeForce GTX 780M Mac Edition]";
			case 0x10de119f: return "GK104M [GeForce GTX 780M]";
			case 0x10de11a0: return "GK104M [GeForce GTX 680M]";
			case 0x10de11a1: return "GK104M [GeForce GTX 670MX]";
			case 0x10de11a2: return "GK104M [GeForce GTX 675MX Mac Edition]";
			case 0x10de11a3: return "GK104M [GeForce GTX 680MX]";
			case 0x10de11a7: return "GK104M [GeForce GTX 675MX]";
			case 0x10de11a9: return "GK104M [GeForce GTX 870M]";
			case 0x10de11af: return "GK104GLM [GRID IceCube]";
			case 0x10de11b0: return "GK104GL [GRID K240Q / K260Q vGPU]";
			case 0x10de11b1: return "GK104GL [GRID K2 Tesla USM]";
			case 0x10de11b4: return "GK104GL [Quadro K4200]";
			case 0x10de11b6: return "GK104GLM [Quadro K3100M]";
			case 0x10de11b7: return "GK104GLM [Quadro K4100M]";
			case 0x10de11b8: return "GK104GLM [Quadro K5100M]";
			case 0x10de11b9: return "GK104GLM";
			case 0x10de11ba: return "GK104GL [Quadro K5000]";
			case 0x10de11bb: return "GK104GL [Quadro 4100]";
			case 0x10de11bc: return "GK104GLM [Quadro K5000M]";
			case 0x10de11bd: return "GK104GLM [Quadro K4000M]";
			case 0x10de11be: return "GK104GLM [Quadro K3000M]";
			case 0x10de11bf: return "GK104GL [GRID K2]";
			case 0x10de11c0: return "GK106 [GeForce GTX 660]";
			case 0x10de11c2: return "GK106 [GeForce GTX 650 Ti Boost]";
			case 0x10de11c3: return "GK106 [GeForce GTX 650 Ti OEM]";
			case 0x10de11c4: return "GK106 [GeForce GTX 645 OEM]";
			case 0x10de11c5: return "GK106 [GeForce GT 740]";
			case 0x10de11c6: return "GK106 [GeForce GTX 650 Ti]";
			case 0x10de11c7: return "GK106 [GeForce GTX 750 Ti]";
			case 0x10de11c8: return "GK106 [GeForce GTX 650 OEM]";
			case 0x10de11cb: return "GK106 [GeForce GT 740]";
			case 0x10de11e0: return "GK106M [GeForce GTX 770M]";
			case 0x10de11e1: return "GK106M [GeForce GTX 765M]";
			case 0x10de11e2: return "GK106M [GeForce GTX 765M]";
			case 0x10de11e3: return "GK106M [GeForce GTX 760M]";
			case 0x10de11e7: return "GK106M";
			case 0x10de11fa: return "GK106GL [Quadro K4000]";
			case 0x10de11fc: return "GK106GLM [Quadro K2100M]";
			case 0x10de1200: return "GF114 [GeForce GTX 560 Ti]";
			case 0x10de1201: return "GF114 [GeForce GTX 560]";
			case 0x10de1202: return "GF114 [GeForce GTX 560 Ti OEM]";
			case 0x10de1203: return "GF114 [GeForce GTX 460 SE v2]";
			case 0x10de1205: return "GF114 [GeForce GTX 460 v2]";
			case 0x10de1206: return "GF114 [GeForce GTX 555]";
			case 0x10de1207: return "GF114 [GeForce GT 645 OEM]";
			case 0x10de1208: return "GF114 [GeForce GTX 560 SE]";
			case 0x10de1210: return "GF114M [GeForce GTX 570M]";
			case 0x10de1211: return "GF114M [GeForce GTX 580M]";
			case 0x10de1212: return "GF114M [GeForce GTX 675M]";
			case 0x10de1213: return "GF114M [GeForce GTX 670M]";
			case 0x10de1241: return "GF116 [GeForce GT 545 OEM]";
			case 0x10de1243: return "GF116 [GeForce GT 545]";
			case 0x10de1244: return "GF116 [GeForce GTX 550 Ti]";
			case 0x10de1245: return "GF116 [GeForce GTS 450 Rev. 2]";
			case 0x10de1246: return "GF116M [GeForce GT 550M]";
			case 0x10de1247: return "GF116M [GeForce GT 555M/635M]";
			case 0x10de1248: return "GF116M [GeForce GT 555M/635M]";
			case 0x10de1249: return "GF116 [GeForce GTS 450 Rev. 3]";
			case 0x10de124b: return "GF116 [GeForce GT 640 OEM]";
			case 0x10de124d: return "GF116M [GeForce GT 555M/635M]";
			case 0x10de1251: return "GF116M [GeForce GT 560M]";
			case 0x10de1280: return "GK208 [GeForce GT 635]";
			case 0x10de1281: return "GK208 [GeForce GT 710]";
			case 0x10de1282: return "GK208 [GeForce GT 640 Rev. 2]";
			case 0x10de1284: return "GK208 [GeForce GT 630 Rev. 2]";
			case 0x10de1286: return "GK208 [GeForce GT 720]";
			case 0x10de1287: return "GK208B [GeForce GT 730]";
			case 0x10de1288: return "GK208B [GeForce GT 720]";
			case 0x10de1289: return "GK208 [GeForce GT 710]";
			case 0x10de128a: return "GK208B";
			case 0x10de128b: return "GK208B [GeForce GT 710]";
			case 0x10de128c: return "GK208B";
			case 0x10de1290: return "GK208M [GeForce GT 730M]";
			case 0x10de1291: return "GK208M [GeForce GT 735M]";
			case 0x10de1292: return "GK208M [GeForce GT 740M]";
			case 0x10de1293: return "GK208M [GeForce GT 730M]";
			case 0x10de1294: return "GK208M [GeForce GT 740M]";
			case 0x10de1295: return "GK208M [GeForce 710M]";
			case 0x10de1296: return "GK208M [GeForce 825M]";
			case 0x10de1298: return "GK208M [GeForce GT 720M]";
			case 0x10de1299: return "GK208BM [GeForce 920M]";
			case 0x10de129a: return "GK208BM [GeForce 910M]";
			case 0x10de12a0: return "GK208";
			case 0x10de12b9: return "GK208GLM [Quadro K610M]";
			case 0x10de12ba: return "GK208GLM [Quadro K510M]";
			case 0x10de1340: return "GM108M [GeForce 830M]";
			case 0x10de1341: return "GM108M [GeForce 840M]";
			case 0x10de1344: return "GM108M [GeForce 845M]";
			case 0x10de1346: return "GM108M [GeForce 930M]";
			case 0x10de1347: return "GM108M [GeForce 940M]";
			case 0x10de1348: return "GM108M [GeForce 945M / 945A]";
			case 0x10de1349: return "GM108M [GeForce 930M]";
			case 0x10de134b: return "GM108M [GeForce 940MX]";
			case 0x10de134d: return "GM108M [GeForce 940MX]";
			case 0x10de134e: return "GM108M [GeForce 930MX]";
			case 0x10de134f: return "GM108M [GeForce 920MX]";
			case 0x10de137a: return "GM108GLM [Quadro K620M / Quadro M500M]";
			case 0x10de137b: return "GM108GLM [Quadro M520 Mobile]";
			case 0x10de137d: return "GM108M [GeForce 940A]";
			case 0x10de1380: return "GM107 [GeForce GTX 750 Ti]";
			case 0x10de1381: return "GM107 [GeForce GTX 750]";
			case 0x10de1382: return "GM107 [GeForce GTX 745]";
			case 0x10de1389: return "GM107GL [GRID M30]";
			case 0x10de1390: return "GM107M [GeForce 845M]";
			case 0x10de1391: return "GM107M [GeForce GTX 850M]";
			case 0x10de1392: return "GM107M [GeForce GTX 860M]";
			case 0x10de1393: return "GM107M [GeForce 840M]";
			case 0x10de1398: return "GM107M [GeForce 845M]";
			case 0x10de1399: return "GM107M [GeForce 945M]";
			case 0x10de139a: return "GM107M [GeForce GTX 950M]";
			case 0x10de139b: return "GM107M [GeForce GTX 960M]";
			case 0x10de139c: return "GM107M [GeForce 940M]";
			case 0x10de139d: return "GM107M [GeForce GTX 750 Ti]";
			case 0x10de13b0: return "GM107GLM [Quadro M2000M]";
			case 0x10de13b1: return "GM107GLM [Quadro M1000M]";
			case 0x10de13b2: return "GM107GLM [Quadro M600M]";
			case 0x10de13b3: return "GM107GLM [Quadro K2200M]";
			case 0x10de13b4: return "GM107GLM [Quadro M620 Mobile]";
			case 0x10de13b6: return "GM107GLM [Quadro M1200 Mobile]";
			case 0x10de13b9: return "GM107GL [NVS 810]";
			case 0x10de13ba: return "GM107GL [Quadro K2200]";
			case 0x10de13bb: return "GM107GL [Quadro K620]";
			case 0x10de13bc: return "GM107GL [Quadro K1200]";
			case 0x10de13bd: return "GM107GL [Tesla M10]";
			case 0x10de13c0: return "GM204 [GeForce GTX 980]";
			case 0x10de13c1: return "GM204";
			case 0x10de13c2: return "GM204 [GeForce GTX 970]";
			case 0x10de13c3: return "GM204";
			case 0x10de13d7: return "GM204M [GeForce GTX 980M]";
			case 0x10de13d8: return "GM204M [GeForce GTX 970M]";
			case 0x10de13d9: return "GM204M [GeForce GTX 965M]";
			case 0x10de13da: return "GM204M [GeForce GTX 980 Mobile]";
			case 0x10de13e7: return "GM204GL [GeForce GTX 980 Engineering Sample]";
			case 0x10de13f0: return "GM204GL [Quadro M5000]";
			case 0x10de13f1: return "GM204GL [Quadro M4000]";
			case 0x10de13f2: return "GM204GL [Tesla M60]";
			case 0x10de13f3: return "GM204GL [Tesla M6]";
			case 0x10de13f8: return "GM204GLM [Quadro M5000M / M5000 SE]";
			case 0x10de13f9: return "GM204GLM [Quadro M4000M]";
			case 0x10de13fa: return "GM204GLM [Quadro M3000M]";
			case 0x10de13fb: return "GM204GLM [Quadro M5500]";
			case 0x10de1401: return "GM206 [GeForce GTX 960]";
			case 0x10de1402: return "GM206 [GeForce GTX 950]";
			case 0x10de1404: return "GM206 [GeForce GTX 960 FAKE]";
			case 0x10de1406: return "GM206 [GeForce GTX 960 OEM]";
			case 0x10de1407: return "GM206 [GeForce GTX 750 v2]";
			case 0x10de1427: return "GM206M [GeForce GTX 965M]";
			case 0x10de1430: return "GM206GL [Quadro M2000]";
			case 0x10de1431: return "GM206GL [Tesla M4]";
			case 0x10de1436: return "GM206GLM [Quadro M2200 Mobile]";
			case 0x10de15f0: return "GP100GL [Quadro GP100]";
			case 0x10de15f1: return "GP100GL";
			case 0x10de15f7: return "GP100GL [Tesla P100 PCIe 12GB]";
			case 0x10de15f8: return "GP100GL [Tesla P100 PCIe 16GB]";
			case 0x10de15f9: return "GP100GL [Tesla P100 SXM2 16GB]";
			case 0x10de1617: return "GM204M [GeForce GTX 980M]";
			case 0x10de1618: return "GM204M [GeForce GTX 970M]";
			case 0x10de1619: return "GM204M [GeForce GTX 965M]";
			case 0x10de161a: return "GM204M [GeForce GTX 980 Mobile]";
			case 0x10de1667: return "GM204M [GeForce GTX 965M]";
			case 0x10de1725: return "GP100";
			case 0x10de172e: return "GP100";
			case 0x10de172f: return "GP100";
			case 0x10de174d: return "GM108M [GeForce MX130]";
			case 0x10de174e: return "GM108M [GeForce MX110]";
			case 0x10de1789: return "GM107GL [GRID M3-3020]";
			case 0x10de179c: return "GM107 [GeForce 940MX]";
			case 0x10de17c2: return "GM200 [GeForce GTX TITAN X]";
			case 0x10de17c8: return "GM200 [GeForce GTX 980 Ti]";
			case 0x10de17f0: return "GM200GL [Quadro M6000]";
			case 0x10de17f1: return "GM200GL [Quadro M6000 24GB]";
			case 0x10de17fd: return "GM200GL [Tesla M40]";
			case 0x10de1ad0: return "Tegra PCIe x8 Endpoint";
			case 0x10de1ad1: return "Tegra PCIe x4/x8 Endpoint/Root Complex";
			case 0x10de1ad2: return "Tegra PCIe x1 Root Complex";
			case 0x10de1ad3: return "Xavier SATA Controller";
			case 0x10de1ad6: return "TU102 USB 3.1 Host Controller";
			case 0x10de1ad7: return "TU102 USB Type-C UCSI Controller";
			case 0x10de1ad8: return "TU104 USB 3.1 Host Controller";
			case 0x10de1ad9: return "TU104 USB Type-C UCSI Controller";
			case 0x10de1ada: return "TU106 USB 3.1 Host Controller";
			case 0x10de1adb: return "TU106 USB Type-C UCSI Controller";
			case 0x10de1aeb: return "TU116 High Definition Audio Controller";
			case 0x10de1aec: return "TU116 USB 3.1 Host Controller";
			case 0x10de1aed: return "TU116 USB Type-C UCSI Controller";
			case 0x10de1aef: return "GA102 High Definition Audio Controller";
			case 0x10de1b00: return "GP102 [TITAN X]";
			case 0x10de1b01: return "GP102 [GeForce GTX 1080 Ti 10GB]";
			case 0x10de1b02: return "GP102 [TITAN Xp]";
			case 0x10de1b04: return "GP102";
			case 0x10de1b06: return "GP102 [GeForce GTX 1080 Ti]";
			case 0x10de1b07: return "GP102 [P102-100]";
			case 0x10de1b30: return "GP102GL [Quadro P6000]";
			case 0x10de1b38: return "GP102GL [Tesla P40]";
			case 0x10de1b39: return "GP102GL [Tesla P10]";
			case 0x10de1b70: return "GP102GL";
			case 0x10de1b78: return "GP102GL";
			case 0x10de1b80: return "GP104 [GeForce GTX 1080]";
			case 0x10de1b81: return "GP104 [GeForce GTX 1070]";
			case 0x10de1b82: return "GP104 [GeForce GTX 1070 Ti]";
			case 0x10de1b83: return "GP104 [GeForce GTX 1060 6GB]";
			case 0x10de1b84: return "GP104 [GeForce GTX 1060 3GB]";
			case 0x10de1b87: return "GP104 [P104-100]";
			case 0x10de1ba0: return "GP104M [GeForce GTX 1080 Mobile]";
			case 0x10de1ba1: return "GP104M [GeForce GTX 1070 Mobile]";
			case 0x10de1ba2: return "GP104M [GeForce GTX 1070 Mobile]";
			case 0x10de1ba9: return "GP104M";
			case 0x10de1baa: return "GP104M";
			case 0x10de1bad: return "GP104 [GeForce GTX 1070 Engineering Sample]";
			case 0x10de1bb0: return "GP104GL [Quadro P5000]";
			case 0x10de1bb1: return "GP104GL [Quadro P4000]";
			case 0x10de1bb3: return "GP104GL [Tesla P4]";
			case 0x10de1bb4: return "GP104GL [Tesla P6]";
			case 0x10de1bb5: return "GP104GLM [Quadro P5200 Mobile]";
			case 0x10de1bb6: return "GP104GLM [Quadro P5000 Mobile]";
			case 0x10de1bb7: return "GP104GLM [Quadro P4000 Mobile]";
			case 0x10de1bb8: return "GP104GLM [Quadro P3000 Mobile]";
			case 0x10de1bb9: return "GP104GLM [Quadro P4200 Mobile]";
			case 0x10de1bbb: return "GP104GLM [Quadro P3200 Mobile]";
			case 0x10de1bc7: return "GP104 [P104-101]";
			case 0x10de1be0: return "GP104BM [GeForce GTX 1080 Mobile]";
			case 0x10de1be1: return "GP104BM [GeForce GTX 1070 Mobile]";
			case 0x10de1c00: return "GP106";
			case 0x10de1c01: return "GP106";
			case 0x10de1c02: return "GP106 [GeForce GTX 1060 3GB]";
			case 0x10de1c03: return "GP106 [GeForce GTX 1060 6GB]";
			case 0x10de1c04: return "GP106 [GeForce GTX 1060 5GB]";
			case 0x10de1c06: return "GP106 [GeForce GTX 1060 6GB Rev. 2]";
			case 0x10de1c07: return "GP106 [P106-100]";
			case 0x10de1c09: return "GP106 [P106-090]";
			case 0x10de1c20: return "GP106M [GeForce GTX 1060 Mobile]";
			case 0x10de1c21: return "GP106M [GeForce GTX 1050 Ti Mobile]";
			case 0x10de1c22: return "GP106M [GeForce GTX 1050 Mobile]";
			case 0x10de1c23: return "GP106M [GeForce GTX 1060 Mobile Rev. 2]";
			case 0x10de1c2d: return "GP106M";
			case 0x10de1c30: return "GP106GL [Quadro P2000]";
			case 0x10de1c31: return "GP106GL [Quadro P2200]";
			case 0x10de1c35: return "GP106M [Quadro P2000 Mobile]";
			case 0x10de1c36: return "GP106 [P106M]";
			case 0x10de1c60: return "GP106BM [GeForce GTX 1060 Mobile 6GB]";
			case 0x10de1c61: return "GP106BM [GeForce GTX 1050 Ti Mobile]";
			case 0x10de1c62: return "GP106BM [GeForce GTX 1050 Mobile]";
			case 0x10de1c70: return "GP106GL";
			case 0x10de1c81: return "GP107 [GeForce GTX 1050]";
			case 0x10de1c82: return "GP107 [GeForce GTX 1050 Ti]";
			case 0x10de1c83: return "GP107 [GeForce GTX 1050 3GB]";
			case 0x10de1c8c: return "GP107M [GeForce GTX 1050 Ti Mobile]";
			case 0x10de1c8d: return "GP107M [GeForce GTX 1050 Mobile]";
			case 0x10de1c8e: return "GP107M";
			case 0x10de1c8f: return "GP107M [GeForce GTX 1050 Ti Max-Q]";
			case 0x10de1c90: return "GP107M [GeForce MX150]";
			case 0x10de1c91: return "GP107M [GeForce GTX 1050 3 GB Max-Q]";
			case 0x10de1c92: return "GP107M [GeForce GTX 1050 Mobile]";
			case 0x10de1c94: return "GP107M [GeForce MX350]";
			case 0x10de1c96: return "GP107M [GeForce MX350]";
			case 0x10de1ca7: return "GP107GL";
			case 0x10de1ca8: return "GP107GL";
			case 0x10de1caa: return "GP107GL";
			case 0x10de1cb1: return "GP107GL [Quadro P1000]";
			case 0x10de1cb2: return "GP107GL [Quadro P600]";
			case 0x10de1cb3: return "GP107GL [Quadro P400]";
			case 0x10de1cb6: return "GP107GL [Quadro P620]";
			case 0x10de1cba: return "GP107GLM [Quadro P2000 Mobile]";
			case 0x10de1cbb: return "GP107GLM [Quadro P1000 Mobile]";
			case 0x10de1cbc: return "GP107GLM [Quadro P600 Mobile]";
			case 0x10de1cbd: return "GP107GLM [Quadro P620]";
			case 0x10de1ccc: return "GP107BM [GeForce GTX 1050 Ti Mobile]";
			case 0x10de1ccd: return "GP107BM [GeForce GTX 1050 Mobile]";
			case 0x10de1cfa: return "GP107GL [Quadro P2000]";
			case 0x10de1cfb: return "GP107GL [Quadro P1000]";
			case 0x10de1d01: return "GP108 [GeForce GT 1030]";
			case 0x10de1d10: return "GP108M [GeForce MX150]";
			case 0x10de1d11: return "GP108M [GeForce MX230]";
			case 0x10de1d12: return "GP108M [GeForce MX150]";
			case 0x10de1d13: return "GP108M [GeForce MX250]";
			case 0x10de1d16: return "GP108M [GeForce MX330]";
			case 0x10de1d33: return "GP108GLM [Quadro P500 Mobile]";
			case 0x10de1d34: return "GP108GLM [Quadro P520]";
			case 0x10de1d52: return "GP108BM [GeForce MX250]";
			case 0x10de1d56: return "GP108BM [GeForce MX330]";
			case 0x10de1d81: return "GV100 [TITAN V]";
			case 0x10de1db1: return "GV100GL [Tesla V100 SXM2 16GB]";
			case 0x10de1db2: return "GV100GL [Tesla V100 DGXS 16GB]";
			case 0x10de1db3: return "GV100GL [Tesla V100 FHHL 16GB]";
			case 0x10de1db4: return "GV100GL [Tesla V100 PCIe 16GB]";
			case 0x10de1db5: return "GV100GL [Tesla V100 SXM2 32GB]";
			case 0x10de1db6: return "GV100GL [Tesla V100 PCIe 32GB]";
			case 0x10de1db7: return "GV100GL [Tesla V100 DGXS 32GB]";
			case 0x10de1db8: return "GV100GL [Tesla V100 SXM3 32GB]";
			case 0x10de1dba: return "GV100GL [Quadro GV100]";
			case 0x10de1df0: return "GV100GL [Tesla PG500-216]";
			case 0x10de1df2: return "GV100GL [Tesla PG503-216]";
			case 0x10de1df5: return "GV100GL [Tesla V100 SXM2 16GB]";
			case 0x10de1df6: return "GV100GL [Tesla V100S PCIe 32GB]";
			case 0x10de1e02: return "TU102 [TITAN RTX]";
			case 0x10de1e04: return "TU102 [GeForce RTX 2080 Ti]";
			case 0x10de1e07: return "TU102 [GeForce RTX 2080 Ti Rev. A]";
			case 0x10de1e09: return "TU102 [CMP 50HX]";
			case 0x10de1e2d: return "TU102 [GeForce RTX 2080 Ti Engineering Sample]";
			case 0x10de1e2e: return "TU102 [GeForce RTX 2080 Ti 12GB Engineering Sample]";
			case 0x10de1e30: return "TU102GL [Quadro RTX 6000/8000]";
			case 0x10de1e36: return "TU102GL [Quadro RTX 6000]";
			case 0x10de1e37: return "TU102GL [GRID RTX T10-4/T10-8/T10-16]";
			case 0x10de1e38: return "TU102GL";
			case 0x10de1e3c: return "TU102GL";
			case 0x10de1e3d: return "TU102GL";
			case 0x10de1e3e: return "TU102GL";
			case 0x10de1e78: return "TU102GL [Quadro RTX 6000/8000]";
			case 0x10de1e81: return "TU104 [GeForce RTX 2080 SUPER]";
			case 0x10de1e82: return "TU104 [GeForce RTX 2080]";
			case 0x10de1e84: return "TU104 [GeForce RTX 2070 SUPER]";
			case 0x10de1e87: return "TU104 [GeForce RTX 2080 Rev. A]";
			case 0x10de1e89: return "TU104 [GeForce RTX 2060]";
			case 0x10de1e90: return "TU104M [GeForce RTX 2080 Mobile]";
			case 0x10de1e91: return "TU104M [GeForce RTX 2070 SUPER Mobile / Max-Q]";
			case 0x10de1e93: return "TU104M [GeForce RTX 2080 SUPER Mobile / Max-Q]";
			case 0x10de1eab: return "TU104M";
			case 0x10de1eae: return "TU104M";
			case 0x10de1eb0: return "TU104GL [Quadro RTX 5000]";
			case 0x10de1eb1: return "TU104GL [Quadro RTX 4000]";
			case 0x10de1eb5: return "TU104GLM [Quadro RTX 5000 Mobile / Max-Q]";
			case 0x10de1eb6: return "TU104GLM [Quadro RTX 4000 Mobile / Max-Q]";
			case 0x10de1eb8: return "TU104GL [Tesla T4]";
			case 0x10de1eb9: return "TU104GL";
			case 0x10de1ebe: return "TU104GL";
			case 0x10de1ec2: return "TU104 [GeForce RTX 2070 SUPER]";
			case 0x10de1ec7: return "TU104 [GeForce RTX 2070 SUPER]";
			case 0x10de1ed0: return "TU104BM [GeForce RTX 2080 Mobile]";
			case 0x10de1ed1: return "TU104BM [GeForce RTX 2070 SUPER Mobile / Max-Q]";
			case 0x10de1ed3: return "TU104BM [GeForce RTX 2080 SUPER Mobile / Max-Q]";
			case 0x10de1ef5: return "TU104GLM [Quadro RTX 5000 Mobile Refresh]";
			case 0x10de1f02: return "TU106 [GeForce RTX 2070]";
			case 0x10de1f04: return "TU106";
			case 0x10de1f06: return "TU106 [GeForce RTX 2060 SUPER]";
			case 0x10de1f07: return "TU106 [GeForce RTX 2070 Rev. A]";
			case 0x10de1f08: return "TU106 [GeForce RTX 2060 Rev. A]";
			case 0x10de1f09: return "TU106 [GeForce GTX 1660 SUPER]";
			case 0x10de1f0a: return "TU106 [GeForce GTX 1650]";
			case 0x10de1f0b: return "TU106 [CMP 40HX]";
			case 0x10de1f10: return "TU106M [GeForce RTX 2070 Mobile]";
			case 0x10de1f11: return "TU106M [GeForce RTX 2060 Mobile]";
			case 0x10de1f12: return "TU106M [GeForce RTX 2060 Max-Q]";
			case 0x10de1f14: return "TU106M [GeForce RTX 2070 Mobile / Max-Q Refresh]";
			case 0x10de1f15: return "TU106M [GeForce RTX 2060 Mobile]";
			case 0x10de1f2e: return "TU106M";
			case 0x10de1f36: return "TU106GLM [Quadro RTX 3000 Mobile / Max-Q]";
			case 0x10de1f42: return "TU106 [GeForce RTX 2060 SUPER]";
			case 0x10de1f47: return "TU106 [GeForce RTX 2060 SUPER]";
			case 0x10de1f50: return "TU106BM [GeForce RTX 2070 Mobile / Max-Q]";
			case 0x10de1f51: return "TU106BM [GeForce RTX 2060 Mobile]";
			case 0x10de1f54: return "TU106BM [GeForce RTX 2070 Mobile]";
			case 0x10de1f55: return "TU106BM [GeForce RTX 2060 Mobile]";
			case 0x10de1f76: return "TU106GLM [Quadro RTX 3000 Mobile Refresh]";
			case 0x10de1f81: return "TU117";
			case 0x10de1f82: return "TU117 [GeForce GTX 1650]";
			case 0x10de1f91: return "TU117M [GeForce GTX 1650 Mobile / Max-Q]";
			case 0x10de1f92: return "TU117M [GeForce GTX 1650 Mobile]";
			case 0x10de1f94: return "TU117M [GeForce GTX 1650 Mobile]";
			case 0x10de1f95: return "TU117M [GeForce GTX 1650 Ti Mobile]";
			case 0x10de1f96: return "TU117M [GeForce GTX 1650 Mobile / Max-Q]";
			case 0x10de1f97: return "TU117M [GeForce MX450]";
			case 0x10de1f98: return "TU117M [GeForce MX450]";
			case 0x10de1f99: return "TU117M";
			case 0x10de1f9c: return "TU117M [GeForce MX450]";
			case 0x10de1f9d: return "TU117M [GeForce GTX 1650 Mobile / Max-Q]";
			case 0x10de1fae: return "TU117GL";
			case 0x10de1fb0: return "TU117GLM [Quadro T1000 Mobile]";
			case 0x10de1fb1: return "TU117GL [T600]";
			case 0x10de1fb2: return "TU117GLM [Quadro T400 Mobile]";
			case 0x10de1fb8: return "TU117GLM [Quadro T2000 Mobile / Max-Q]";
			case 0x10de1fb9: return "TU117GLM [Quadro T1000 Mobile]";
			case 0x10de1fba: return "TU117GLM [T600 Mobile]";
			case 0x10de1fbb: return "TU117GLM [Quadro T500 Mobile]";
			case 0x10de1fbf: return "TU117GL";
			case 0x10de1fd9: return "TU117BM [GeForce GTX 1650 Mobile Refresh]";
			case 0x10de1fdd: return "TU117BM [GeForce GTX 1650 Mobile Refresh]";
			case 0x10de1ff9: return "TU117GLM [Quadro T1000 Mobile]";
			case 0x10de20b0: return "GA100 [A100 SXM4 40GB]";
			case 0x10de20b1: return "GA100 [A100 PCIe 40GB]";
			case 0x10de20b2: return "GA100 [A100 SXM4 80GB]";
			case 0x10de20b5: return "GA100 [A100 PCIe 80GB]";
			case 0x10de20b6: return "GA100GL [PG506-232]";
			case 0x10de20b7: return "GA100GL [A30 PCIe]";
			case 0x10de20be: return "GA100 [GRID A100A]";
			case 0x10de20bf: return "GA100 [GRID A100B]";
			case 0x10de20f1: return "GA100 [A100 PCIe 40GB]";
			case 0x10de2182: return "TU116 [GeForce GTX 1660 Ti]";
			case 0x10de2183: return "TU116";
			case 0x10de2184: return "TU116 [GeForce GTX 1660]";
			case 0x10de2187: return "TU116 [GeForce GTX 1650 SUPER]";
			case 0x10de2188: return "TU116 [GeForce GTX 1650]";
			case 0x10de2189: return "TU116 [CMP 30HX]";
			case 0x10de2191: return "TU116M [GeForce GTX 1660 Ti Mobile]";
			case 0x10de2192: return "TU116M [GeForce GTX 1650 Ti Mobile]";
			case 0x10de21ae: return "TU116GL";
			case 0x10de21bf: return "TU116GL";
			case 0x10de21c2: return "TU116";
			case 0x10de21c4: return "TU116 [GeForce GTX 1660 SUPER]";
			case 0x10de21d1: return "TU116BM [GeForce GTX 1660 Ti Mobile]";
			case 0x10de2200: return "GA102";
			case 0x10de2204: return "GA102 [GeForce RTX 3090]";
			case 0x10de2205: return "GA102 [GeForce RTX 3080 20GB]";
			case 0x10de2206: return "GA102 [GeForce RTX 3080]";
			case 0x10de2208: return "GA102 [GeForce RTX 3080 Ti]";
			case 0x10de220d: return "GA102 [GeForce RTX 3080 Lite Hash Rate]";
			case 0x10de2216: return "GA102 [GeForce RTX 3080 Lite Hash Rate]";
			case 0x10de222b: return "GA102 [GeForce RTX 3090 Engineering Sample]";
			case 0x10de222f: return "GA102 [GeForce RTX 3080 11GB / 12GB Engineering Sample]";
			case 0x10de2230: return "GA102GL [RTX A6000]";
			case 0x10de2231: return "GA102GL [RTX A5000]";
			case 0x10de2235: return "GA102GL [A40]";
			case 0x10de2236: return "GA102GL [A10]";
			case 0x10de2237: return "GA102GL [A10G]";
			case 0x10de223f: return "GA102GL";
			case 0x10de228b: return "GA104 High Definition Audio Controller";
			case 0x10de2296: return "Tegra PCIe Endpoint Virtual Network";
			case 0x10de2302: return "GA103";
			case 0x10de2321: return "GA103";
			case 0x10de2482: return "GA104 [GeForce RTX 3070 Ti]";
			case 0x10de2483: return "GA104";
			case 0x10de2484: return "GA104 [GeForce RTX 3070]";
			case 0x10de2486: return "GA104 [GeForce RTX 3060 Ti]";
			case 0x10de2488: return "GA104 [GeForce RTX 3070 Lite Hash Rate]";
			case 0x10de2489: return "GA104 [GeForce RTX 3060 Ti Lite Hash Rate]";
			case 0x10de249c: return "GA104M [GeForce RTX 3080 Mobile / Max-Q 8GB/16GB]";
			case 0x10de249d: return "GA104M [GeForce RTX 3070 Mobile / Max-Q]";
			case 0x10de249f: return "GA104M";
			case 0x10de24ac: return "GA104 [GeForce RTX 30x0 Engineering Sample]";
			case 0x10de24ad: return "GA104 [GeForce RTX 3060 Engineering Sample]";
			case 0x10de24af: return "GA104 [GeForce RTX 3070 Engineering Sample]";
			case 0x10de24b0: return "GA104GL [RTX A4000]";
			case 0x10de24b6: return "GA104GLM [RTX A5000 Mobile]";
			case 0x10de24b7: return "GA104GLM [RTX A4000 Mobile]";
			case 0x10de24b8: return "GA104GLM [RTX A3000 Mobile]";
			case 0x10de24bf: return "GA104 [GeForce RTX 3070 Engineering Sample]";
			case 0x10de24dc: return "GA104M [GeForce RTX 3080 Mobile / Max-Q 8GB/16GB]";
			case 0x10de24dd: return "GA104M [GeForce RTX 3070 Mobile / Max-Q]";
			case 0x10de2501: return "GA106 [GeForce RTX 3060]";
			case 0x10de2503: return "GA106 [GeForce RTX 3060]";
			case 0x10de2504: return "GA106 [GeForce RTX 3060 Lite Hash Rate]";
			case 0x10de2505: return "GA106";
			case 0x10de2520: return "GA106M [GeForce RTX 3060 Mobile / Max-Q]";
			case 0x10de2523: return "GA106M [GeForce RTX 3050 Ti Mobile / Max-Q]";
			case 0x10de252f: return "GA106 [GeForce RTX 3060 Engineering Sample]";
			case 0x10de2560: return "GA106M [GeForce RTX 3060 Mobile / Max-Q]";
			case 0x10de2563: return "GA106M [GeForce RTX 3050 Ti Mobile / Max-Q]";
			case 0x10de2583: return "GA107 [GeForce RTX 3050]";
			case 0x10de25a0: return "GA107M [GeForce RTX 3050 Ti Mobile]";
			case 0x10de25a2: return "GA107M [GeForce RTX 3050 Mobile]";
			case 0x10de25a4: return "GA107";
			case 0x10de25a5: return "GA107M [GeForce RTX 3050 Mobile]";
			case 0x10de25af: return "GA107 [GeForce RTX 3050 Engineering Sample]";
			case 0x10de25b5: return "GA107GLM [RTX A4 Mobile]";
			case 0x10de25b8: return "GA107GLM [RTX A2000 Mobile]";
			case 0x10de25e0: return "GA107BM [GeForce RTX 3050 Ti Mobile]";
			case 0x10de25e2: return "GA107BM [GeForce RTX 3050 Mobile]";
			case 0x10de25e5: return "GA107BM [GeForce RTX 3050 Mobile]";
			case 0x10df0720: return "OneConnect NIC (Skyhawk)";
			case 0x10df0722: return "OneConnect iSCSI Initiator (Skyhawk)";
			case 0x10df0723: return "OneConnect iSCSI Initiator + Target (Skyhawk)";
			case 0x10df0724: return "OneConnect FCoE Initiator (Skyhawk)";
			case 0x10df0728: return "OneConnect NIC (Skyhawk-VF)";
			case 0x10df072a: return "OneConnect iSCSI Initiator (Skyhawk-VF)";
			case 0x10df072b: return "OneConnect iSCSI Initiator + Target (Skyhawk-VF)";
			case 0x10df072c: return "OneConnect FCoE Initiator (Skyhawk-VF)";
			case 0x10df1ae5: return "LP6000 Fibre Channel Host Adapter";
			case 0x10dfe100: return "Proteus-X: LightPulse IOV Fibre Channel Host Adapter";
			case 0x10dfe131: return "LightPulse 8Gb/s PCIe Shared I/O Fibre Channel Adapter";
			case 0x10dfe180: return "Proteus-X: LightPulse IOV Fibre Channel Host Adapter";
			case 0x10dfe200: return "LPe15000/LPe16000 Series 8Gb/16Gb Fibre Channel Adapter";
			case 0x10dfe208: return "LightPulse 16Gb Fibre Channel Host Adapter (Lancer-VF)";
			case 0x10dfe220: return "OneConnect NIC (Lancer)";
			case 0x10dfe240: return "OneConnect iSCSI Initiator (Lancer)";
			case 0x10dfe260: return "OneConnect FCoE Initiator (Lancer)";
			case 0x10dfe268: return "OneConnect 10Gb FCoE Converged Network Adapter (Lancer-VF)";
			case 0x10dfe300: return "LPe31000/LPe32000 Series 16Gb/32Gb Fibre Channel Adapter";
			case 0x10dff011: return "Saturn: LightPulse Fibre Channel Host Adapter";
			case 0x10dff015: return "Saturn: LightPulse Fibre Channel Host Adapter";
			case 0x10dff085: return "LP850 Fibre Channel Host Adapter";
			case 0x10dff095: return "LP952 Fibre Channel Host Adapter";
			case 0x10dff098: return "LP982 Fibre Channel Host Adapter";
			case 0x10dff0a1: return "Thor LightPulse Fibre Channel Host Adapter";
			case 0x10dff0a5: return "Thor LightPulse Fibre Channel Host Adapter";
			case 0x10dff0b5: return "Viper LightPulse Fibre Channel Host Adapter";
			case 0x10dff0d1: return "Helios LightPulse Fibre Channel Host Adapter";
			case 0x10dff0d5: return "Helios LightPulse Fibre Channel Host Adapter";
			case 0x10dff0e1: return "Zephyr LightPulse Fibre Channel Host Adapter";
			case 0x10dff0e5: return "Zephyr LightPulse Fibre Channel Host Adapter";
			case 0x10dff0f5: return "Neptune LightPulse Fibre Channel Host Adapter";
			case 0x10dff100: return "LPe12000 Series 8Gb Fibre Channel Adapter";
			case 0x10dff111: return "Saturn-X LightPulse Fibre Channel Host Adapter";
			case 0x10dff112: return "Saturn-X LightPulse Fibre Channel Host Adapter";
			case 0x10dff180: return "LPSe12002 EmulexSecure Fibre Channel Adapter";
			case 0x10dff400: return "LPe35000/LPe36000 Series 32Gb/64Gb Fibre Channel Adapter";
			case 0x10dff500: return "LPe37000/LPe38000 Series 32Gb/64Gb Fibre Channel Adapter";
			case 0x10dff700: return "LP7000 Fibre Channel Host Adapter";
			case 0x10dff701: return "LP7000 Fibre Channel Host Adapter Alternate ID (JX1:2-3, JX2:1-2)";
			case 0x10dff800: return "LP8000 Fibre Channel Host Adapter";
			case 0x10dff801: return "LP8000 Fibre Channel Host Adapter Alternate ID (JX1:2-3, JX2:1-2)";
			case 0x10dff900: return "LP9000 Fibre Channel Host Adapter";
			case 0x10dff901: return "LP9000 Fibre Channel Host Adapter Alternate ID (JX1:2-3, JX2:1-2)";
			case 0x10dff980: return "LP9802 Fibre Channel Host Adapter";
			case 0x10dff981: return "LP9802 Fibre Channel Host Adapter Alternate ID";
			case 0x10dff982: return "LP9802 Fibre Channel Host Adapter Alternate ID";
			case 0x10dffa00: return "Thor-X LightPulse Fibre Channel Host Adapter";
			case 0x10dffb00: return "Viper LightPulse Fibre Channel Host Adapter";
			case 0x10dffc00: return "Thor-X LightPulse Fibre Channel Host Adapter";
			case 0x10dffc10: return "Helios-X LightPulse Fibre Channel Host Adapter";
			case 0x10dffc20: return "Zephyr-X LightPulse Fibre Channel Host Adapter";
			case 0x10dffc40: return "Saturn-X: LightPulse Fibre Channel Host Adapter";
			case 0x10dffc50: return "Proteus-X: LightPulse IOV Fibre Channel Host Adapter";
			case 0x10dffd00: return "Helios-X LightPulse Fibre Channel Host Adapter";
			case 0x10dffd11: return "Helios-X LightPulse Fibre Channel Host Adapter";
			case 0x10dffd12: return "Helios-X LightPulse Fibre Channel Host Adapter";
			case 0x10dffe00: return "Zephyr-X LightPulse Fibre Channel Host Adapter";
			case 0x10dffe05: return "Zephyr-X: LightPulse FCoE Adapter";
			case 0x10dffe11: return "Zephyr-X LightPulse Fibre Channel Host Adapter";
			case 0x10dffe12: return "Zephyr-X LightPulse FCoE Adapter";
			case 0x10dfff00: return "Neptune LightPulse Fibre Channel Host Adapter";
			case 0x10e05026: return "IMS5026/27/28";
			case 0x10e05027: return "IMS5027";
			case 0x10e05028: return "IMS5028";
			case 0x10e08849: return "IMS8849";
			case 0x10e08853: return "IMS8853";
			case 0x10e09128: return "IMS9128 [Twin turbo 128]";
			case 0x10e10391: return "TRM-S1040";
			case 0x10e1690c: return "DC-690c";
			case 0x10e1dc29: return "DC-290";
			case 0x10e30000: return "CA91C042 [Universe]";
			case 0x10e30108: return "Tsi108 Host Bridge for Single PowerPC";
			case 0x10e30148: return "Tsi148 [Tempe]";
			case 0x10e30860: return "CA91C860 [QSpan]";
			case 0x10e30862: return "CA91C862A [QSpan-II]";
			case 0x10e38111: return "Tsi381 PCIe to PCI Bridge";
			case 0x10e38260: return "CA91L8200B [Dual PCI PowerSpan II]";
			case 0x10e38261: return "CA91L8260B [Single PCI PowerSpan II]";
			case 0x10e3a108: return "Tsi109 Host Bridge for Dual PowerPC";
			case 0x10e48029: return "Realtek 8029 Network Card";
			case 0x10e81072: return "INES GPIB-PCI (AMCC5920 based)";
			case 0x10e82011: return "Q-Motion Video Capture/Edit board";
			case 0x10e84750: return "S5930 [Matchmaker]";
			case 0x10e85920: return "S5920";
			case 0x10e88043: return "LANai4.x [Myrinet LANai interface chip]";
			case 0x10e88062: return "S5933_PARASTATION";
			case 0x10e8807d: return "S5933 [Matchmaker]";
			case 0x10e88088: return "Kongsberg Spacetec Format Synchronizer";
			case 0x10e88089: return "Kongsberg Spacetec Serial Output Board";
			case 0x10e8809c: return "S5933_HEPC3";
			case 0x10e880b9: return "Harmonix Hi-Card P8 (4x active ISDN BRI)";
			case 0x10e880d7: return "PCI-9112";
			case 0x10e880d8: return "PCI-7200";
			case 0x10e880d9: return "PCI-9118";
			case 0x10e880da: return "PCI-9812";
			case 0x10e880fc: return "APCI1500 Signal processing controller (16 dig. inputs + 16 dig. outputs)";
			case 0x10e8811a: return "PCI-IEEE1355-DS-DE Interface";
			case 0x10e8814c: return "Fastcom ESCC-PCI (Commtech, Inc.)";
			case 0x10e88170: return "S5933 [Matchmaker] (Chipset Development Tool)";
			case 0x10e881e6: return "Multimedia video controller";
			case 0x10e8828d: return "APCI3001 Signal processing controller (up to 16 analog inputs)";
			case 0x10e88291: return "Fastcom 232/8-PCI (Commtech, Inc.)";
			case 0x10e882c4: return "Fastcom 422/4-PCI (Commtech, Inc.)";
			case 0x10e882c5: return "Fastcom 422/2-PCI (Commtech, Inc.)";
			case 0x10e882c6: return "Fastcom IG422/1-PCI (Commtech, Inc.)";
			case 0x10e882c7: return "Fastcom IG232/2-PCI (Commtech, Inc.)";
			case 0x10e882ca: return "Fastcom 232/4-PCI (Commtech, Inc.)";
			case 0x10e882db: return "AJA HDNTV HD SDI Framestore";
			case 0x10e882e2: return "Fastcom DIO24H-PCI (Commtech, Inc.)";
			case 0x10e88406: return "PCIcanx/PCIcan CAN interface [Kvaser AB]";
			case 0x10e88407: return "PCIcan II CAN interface (A1021, PCB-07, PCB-08) [Kvaser AB]";
			case 0x10e88851: return "S5933 on Innes Corp FM Radio Capture card";
			case 0x10e8e004: return "X-Gene PCIe bridge";
			case 0x10ea1680: return "IGA-1680";
			case 0x10ea1682: return "IGA-1682";
			case 0x10ea1683: return "IGA-1683";
			case 0x10ea2000: return "CyberPro 2000";
			case 0x10ea2010: return "CyberPro 2000A";
			case 0x10ea5000: return "CyberPro 5000";
			case 0x10ea5050: return "CyberPro 5050";
			case 0x10ea5202: return "CyberPro 5202";
			case 0x10ea5252: return "CyberPro5252";
			case 0x10eb0101: return "3GA";
			case 0x10eb8111: return "Twist3 Frame Grabber";
			case 0x10ec0139: return "RTL-8139/8139C/8139C+ Ethernet Controller";
			case 0x10ec3000: return "Killer E3000 2.5GbE Controller";
			case 0x10ec5208: return "RTS5208 PCI Express Card Reader";
			case 0x10ec5209: return "RTS5209 PCI Express Card Reader";
			case 0x10ec5227: return "RTS5227 PCI Express Card Reader";
			case 0x10ec5229: return "RTS5229 PCI Express Card Reader";
			case 0x10ec522a: return "RTS522A PCI Express Card Reader";
			case 0x10ec5249: return "RTS5249 PCI Express Card Reader";
			case 0x10ec524a: return "RTS524A PCI Express Card Reader";
			case 0x10ec5250: return "RTS5250 PCI Express Card Reader";
			case 0x10ec525a: return "RTS525A PCI Express Card Reader";
			case 0x10ec5260: return "RTS5260 PCI Express Card Reader";
			case 0x10ec5286: return "RTS5286 PCI Express Card Reader";
			case 0x10ec5287: return "RTL8411B PCI Express Card Reader";
			case 0x10ec5288: return "RTS5288 PCI Express Card Reader";
			case 0x10ec5289: return "RTL8411 PCI Express Card Reader";
			case 0x10ec5762: return "RTS5763DL NVMe SSD Controller";
			case 0x10ec8029: return "RTL-8029(AS)";
			case 0x10ec8125: return "RTL8125 2.5GbE Controller";
			case 0x10ec8129: return "RTL-8129";
			case 0x10ec8136: return "RTL810xE PCI Express Fast Ethernet controller";
			case 0x10ec8137: return "RTL8104E PCIe Fast Ethernet Controller";
			case 0x10ec8138: return "RT8139 (B/C) Cardbus Fast Ethernet Adapter";
			case 0x10ec8139: return "RTL-8100/8101L/8139 PCI Fast Ethernet Adapter";
			case 0x10ec8161: return "RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller";
			case 0x10ec8167: return "RTL-8110SC/8169SC Gigabit Ethernet";
			case 0x10ec8168: return "RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller";
			case 0x10ec8169: return "RTL8169 PCI Gigabit Ethernet Controller";
			case 0x10ec816a: return "RTL8111xP UART #1";
			case 0x10ec816b: return "RTL8111xP UART #2";
			case 0x10ec816c: return "RTL8111xP IPMI interface";
			case 0x10ec816d: return "RTL811x EHCI host controller";
			case 0x10ec816e: return "Realtek RealManage BMC";
			case 0x10ec8171: return "RTL8191SEvA Wireless LAN Controller";
			case 0x10ec8172: return "RTL8191SEvB Wireless LAN Controller";
			case 0x10ec8173: return "RTL8192SE Wireless LAN Controller";
			case 0x10ec8174: return "RTL8192SE Wireless LAN Controller";
			case 0x10ec8176: return "RTL8188CE 802.11b/g/n WiFi Adapter";
			case 0x10ec8177: return "RTL8191CE PCIe Wireless Network Adapter";
			case 0x10ec8178: return "RTL8192CE PCIe Wireless Network Adapter";
			case 0x10ec8179: return "RTL8188EE Wireless Network Adapter";
			case 0x10ec8180: return "RTL8180L 802.11b MAC";
			case 0x10ec8185: return "RTL-8185 IEEE 802.11a/b/g Wireless LAN Controller";
			case 0x10ec818b: return "RTL8192EE PCIe Wireless Network Adapter";
			case 0x10ec8190: return "RTL8190 802.11n PCI Wireless Network Adapter";
			case 0x10ec8191: return "RTL8192CE PCIe Wireless Network Adapter";
			case 0x10ec8192: return "RTL8192E/RTL8192SE Wireless LAN Controller";
			case 0x10ec8193: return "RTL8192DE Wireless LAN Controller";
			case 0x10ec8196: return "RTL8196 Integrated PCI-e Bridge";
			case 0x10ec8197: return "SmartLAN56 56K Modem";
			case 0x10ec8199: return "RTL8187SE Wireless LAN Controller";
			case 0x10ec8723: return "RTL8723AE PCIe Wireless Network Adapter";
			case 0x10ec8812: return "RTL8812AE 802.11ac PCIe Wireless Network Adapter";
			case 0x10ec8813: return "RTL8813AE 802.11ac PCIe Wireless Network Adapter";
			case 0x10ec8821: return "RTL8821AE 802.11ac PCIe Wireless Network Adapter";
			case 0x10ecb723: return "RTL8723BE PCIe Wireless Network Adapter";
			case 0x10ecb822: return "RTL8822BE 802.11a/b/g/n/ac WiFi adapter";
			case 0x10ecc821: return "RTL8821CE 802.11ac PCIe Wireless Network Adapter";
			case 0x10ecc822: return "RTL8822CE 802.11ac PCIe Wireless Network Adapter";
			case 0x10ecc82f: return "RTL8822CE 802.11ac PCIe Wireless Network Adapter";
			case 0x10ecd723: return "RTL8723DE 802.11b/g/n PCIe Adapter";
			case 0x10ed7310: return "V7310";
			case 0x10ee0001: return "EUROCOM for PCI (ECOMP)";
			case 0x10ee0002: return "Octal E1/T1 for PCI ETP Card";
			case 0x10ee0007: return "Default PCIe endpoint ID";
			case 0x10ee0205: return "Wildcard TE205P";
			case 0x10ee0210: return "Wildcard TE210P";
			case 0x10ee0300: return "Spartan 3 Designs (Xilinx IP)";
			case 0x10ee0314: return "Wildcard TE405P/TE410P (1st Gen)";
			case 0x10ee0405: return "Wildcard TE405P (2nd Gen)";
			case 0x10ee0410: return "Wildcard TE410P (2nd Gen)";
			case 0x10ee0600: return "Xilinx 6 Designs (Xilinx IP)";
			case 0x10ee3fc0: return "RME Digi96";
			case 0x10ee3fc1: return "RME Digi96/8";
			case 0x10ee3fc2: return "RME Digi96/8 Pro";
			case 0x10ee3fc3: return "RME Digi96/8 Pad";
			case 0x10ee3fc4: return "RME Digi9652 (Hammerfall)";
			case 0x10ee3fc5: return "RME Hammerfall DSP";
			case 0x10ee3fc6: return "RME Hammerfall DSP MADI";
			case 0x10ee5005: return "Alveo U250";
			case 0x10ee7038: return "FPGA Card XC7VX690T";
			case 0x10ee8019: return "Memory controller";
			case 0x10ee8380: return "Ellips ProfiXpress Profibus Master";
			case 0x10ee8381: return "Ellips Santos Frame Grabber";
			case 0x10eed154: return "Copley Controls CAN card (PCI-CAN-02)";
			case 0x10eeebf0: return "SED Systems Modulator/Demodulator";
			case 0x10eeebf1: return "SED Systems Audio Interface Card";
			case 0x10eeebf2: return "SED Systems Common PCI Interface";
			case 0x10eeebf3: return "SED Systems PCIe-AXI Bridge";
			case 0x10ef8154: return "M815x Token Ring Adapter";
			case 0x10f12865: return "Tyan Thunder K8E S2865";
			case 0x10f15300: return "Tyan S5380 Mainboard";
			case 0x10f5a001: return "NDR4000 [NR4600 Bridge]";
			case 0x10fa000c: return "TARGA 1000";
			case 0x10fb186f: return "TH 6255";
			case 0x10fc0003: return "Cardbus IDE Controller";
			case 0x10fc0005: return "Cardbus SCSI CBSC II";
			case 0x11010002: return "INI-920 Ultra SCSI Adapter";
			case 0x11011060: return "INI-A100U2W";
			case 0x11011622: return "INI-1623 PCI SATA-II Controller";
			case 0x11019100: return "INI-9100/9100W";
			case 0x11019400: return "INI-940 Fast Wide SCSI Adapter";
			case 0x11019401: return "INI-935 Fast Wide SCSI Adapter";
			case 0x11019500: return "INI-950 SCSI Adapter";
			case 0x11019502: return "INI-950P Ultra Wide SCSI Adapter";
			case 0x11020002: return "EMU10k1 [Sound Blaster Live! Series]";
			case 0x11020003: return "SB AWE64(D)";
			case 0x11020004: return "EMU10k2/CA0100/CA0102/CA10200 [Sound Blaster Audigy Series]";
			case 0x11020005: return "EMU20k1 [Sound Blaster X-Fi Series]";
			case 0x11020006: return "EMU10k1X / CA0103 [SB Live! OEM / SB 5.1 / Ectiva 5.1]";
			case 0x11020007: return "CA0106/CA0111 [SB Live!/Audigy/X-Fi Series]";
			case 0x11020008: return "CA0108/CA10300 [Sound Blaster Audigy Series]";
			case 0x11020009: return "CA0110 [Sound Blaster X-Fi Xtreme Audio]";
			case 0x1102000b: return "EMU20k2 [Sound Blaster X-Fi Titanium Series]";
			case 0x11020012: return "Sound Core3D [Sound Blaster Recon3D / Z-Series]";
			case 0x11024001: return "SB Audigy FireWire Port";
			case 0x11027002: return "SB Live! Game Port";
			case 0x11027003: return "SB Audigy Game Port";
			case 0x11027004: return "[SB Live! Value] Input device controller";
			case 0x11027005: return "SB Audigy LS Game Port";
			case 0x11027006: return "[SB X-Fi Xtreme Audio] CA0110-IBG PCIe to PCI Bridge";
			case 0x11028938: return "Ectiva EV1938";
			case 0x11030003: return "HPT343/345/346/363";
			case 0x11030004: return "HPT366/368/370/370A/372/372N";
			case 0x11030005: return "HPT372A/372N";
			case 0x11030006: return "HPT302/302N";
			case 0x11030007: return "HPT371/371N";
			case 0x11030008: return "HPT374";
			case 0x11030009: return "HPT372N";
			case 0x11030620: return "RocketRAID 620 2 Port SATA-III Controller";
			case 0x11030622: return "RocketRAID 622 2 Port SATA-III Controller";
			case 0x11030640: return "RocketRAID 640 4 Port SATA-III Controller";
			case 0x11030641: return "RocketRAID 640L 4 Port SATA-III Controller";
			case 0x11030642: return "RocketRAID 642L SATA-III Controller (2 eSATA ports + 2 internal SATA ports)";
			case 0x11030644: return "RocketRAID 644 4 Port SATA-III Controller (eSATA)";
			case 0x11030645: return "RocketRAID 644L 4 Port SATA-III Controller (eSATA)";
			case 0x11030646: return "RocketRAID 644LS SATA-III Controller (4 eSATA devices connected by 1 SAS cable)";
			case 0x11031720: return "RocketRAID 1720 (2x SATA II RAID Controller)";
			case 0x11031740: return "RocketRAID 1740";
			case 0x11031742: return "RocketRAID 1742";
			case 0x11032210: return "RocketRAID 2210 SATA-II Controller";
			case 0x11032300: return "RocketRAID 230x 4 Port SATA-II Controller";
			case 0x11032310: return "RocketRAID 2310 4 Port SATA-II Controller";
			case 0x11032320: return "RocketRAID 2320 SATA-II Controller";
			case 0x11032322: return "RocketRAID 2322 SATA-II Controller";
			case 0x11032340: return "RocketRAID 2340 16 Port SATA-II Controller";
			case 0x11032640: return "RocketRAID 2640 SAS/SATA Controller";
			case 0x11032722: return "RocketRAID 2722";
			case 0x11032740: return "RocketRAID 2740";
			case 0x11032744: return "RocketRaid 2744";
			case 0x11032782: return "RocketRAID 2782";
			case 0x11033120: return "RocketRAID 3120";
			case 0x11033220: return "RocketRAID 3220";
			case 0x11033320: return "RocketRAID 3320";
			case 0x11034310: return "RocketRaid 4310";
			case 0x11037505: return "SSD7505 PCIe Gen4 x16 4-Port M.2 NVMe RAID Controller";
			case 0x11051105: return "REALmagic Xcard MPEG 1/2/3/4 DVD Decoder";
			case 0x11058300: return "REALmagic Hollywood Plus DVD Decoder";
			case 0x11058400: return "EM840x REALmagic DVD/MPEG-2 Audio/Video Decoder";
			case 0x11058401: return "EM8401 REALmagic DVD/MPEG-2 A/V Decoder";
			case 0x11058470: return "EM8470 REALmagic DVD/MPEG-4 A/V Decoder";
			case 0x11058471: return "EM8471 REALmagic DVD/MPEG-4 A/V Decoder";
			case 0x11058475: return "EM8475 REALmagic DVD/MPEG-4 A/V Decoder";
			case 0x11058476: return "EM8476 REALmagic DVD/MPEG-4 A/V Decoder";
			case 0x11058485: return "EM8485 REALmagic DVD/MPEG-4 A/V Decoder";
			case 0x11058486: return "EM8486 REALmagic DVD/MPEG-4 A/V Decoder";
			case 0x1105c621: return "EM8621L Digital Media Processor";
			case 0x1105c622: return "EM8622L MPEG-4.10 (H.264) and SMPTE 421M (VC-1) A/V Decoder";
			case 0x11060102: return "Embedded VIA Ethernet Controller";
			case 0x11060130: return "VT6305 1394.A Controller";
			case 0x11060198: return "P4X600 Host Bridge";
			case 0x11060204: return "K8M800 Host Bridge";
			case 0x11060208: return "PT890 Host Bridge";
			case 0x11060238: return "K8T890 Host Bridge";
			case 0x11060258: return "PT880 Host Bridge";
			case 0x11060259: return "CN333/CN400/PM880 Host Bridge";
			case 0x11060269: return "KT880 Host Bridge";
			case 0x11060282: return "K8T800Pro Host Bridge";
			case 0x11060290: return "K8M890 Host Bridge";
			case 0x11060293: return "PM896 Host Bridge";
			case 0x11060296: return "P4M800 Host Bridge";
			case 0x11060305: return "VT8363/8365 [KT133/KM133]";
			case 0x11060308: return "PT880 Ultra/PT894 Host Bridge";
			case 0x11060314: return "CN700/VN800/P4M800CE/Pro Host Bridge";
			case 0x11060324: return "CX700/VX700 Host Bridge";
			case 0x11060327: return "P4M890 Host Bridge";
			case 0x11060336: return "K8M890CE Host Bridge";
			case 0x11060340: return "PT900 Host Bridge";
			case 0x11060351: return "K8T890CF Host Bridge";
			case 0x11060353: return "VX800/820-Series Chipset Host-Bridge Controller";
			case 0x11060364: return "CN896/VN896/P4M900 Host Bridge";
			case 0x11060391: return "VT8371 [KX133]";
			case 0x11060409: return "VX855/VX875 Host Bridge: Host Control";
			case 0x11060410: return "VX900 Series Host Bridge: Host Control";
			case 0x11060415: return "VT6415 PATA IDE Host Controller";
			case 0x11060501: return "VT8501 [Apollo MVP4]";
			case 0x11060505: return "VT82C505";
			case 0x11060561: return "VT82C576MV";
			case 0x11060571: return "VT82C586A/B/VT82C686/A/B/VT823x/A/C PIPC Bus Master IDE";
			case 0x11060576: return "VT82C576 3V [Apollo Master]";
			case 0x11060581: return "CX700/VX700/VX800/820-Series Serial ATA RAID-Controller";
			case 0x11060585: return "VT82C585VP [Apollo VP1/VPX]";
			case 0x11060586: return "VT82C586/A/B PCI-to-ISA [Apollo VP]";
			case 0x11060591: return "VT8237A SATA 2-Port Controller";
			case 0x11060595: return "VT82C595 [Apollo VP2]";
			case 0x11060596: return "VT82C596 ISA [Mobile South]";
			case 0x11060597: return "VT82C597 [Apollo VP3]";
			case 0x11060598: return "VT82C598 [Apollo MVP3]";
			case 0x11060601: return "VT8601 [Apollo ProMedia]";
			case 0x11060605: return "VT8605 [ProSavage PM133]";
			case 0x11060680: return "VT82C680 [Apollo P6]";
			case 0x11060686: return "VT82C686 [Apollo Super South]";
			case 0x11060691: return "VT82C693A/694x [Apollo PRO133x]";
			case 0x11060693: return "VT82C693 [Apollo Pro Plus]";
			case 0x11060698: return "VT82C693A [Apollo Pro133 AGP]";
			case 0x11060709: return "VX11 Standard Host Bridge";
			case 0x1106070a: return "VX11 PCI Express Root Port";
			case 0x1106070b: return "VX11 PCI Express Root Port";
			case 0x1106070c: return "VX11 PCI Express Root Port";
			case 0x1106070d: return "VX11 PCI Express Root Port";
			case 0x1106070e: return "VX11 PCI Express Root Port";
			case 0x11060926: return "VT82C926 [Amazon]";
			case 0x11061000: return "VT82C570MV";
			case 0x11061106: return "VT82C570MV";
			case 0x11061122: return "VX800/VX820 Chrome 9 HC3 Integrated Graphics";
			case 0x11061204: return "K8M800 Host Bridge";
			case 0x11061208: return "PT890 Host Bridge";
			case 0x11061238: return "K8T890 Host Bridge";
			case 0x11061258: return "PT880 Host Bridge";
			case 0x11061259: return "CN333/CN400/PM880 Host Bridge";
			case 0x11061269: return "KT880 Host Bridge";
			case 0x11061282: return "K8T800Pro Host Bridge";
			case 0x11061290: return "K8M890 Host Bridge";
			case 0x11061293: return "PM896 Host Bridge";
			case 0x11061296: return "P4M800 Host Bridge";
			case 0x11061308: return "PT894 Host Bridge";
			case 0x11061314: return "CN700/VN800/P4M800CE/Pro Host Bridge";
			case 0x11061324: return "CX700/VX700-Series Error Reporting";
			case 0x11061327: return "P4M890 Host Bridge";
			case 0x11061336: return "K8M890CE Host Bridge";
			case 0x11061340: return "PT900 Host Bridge";
			case 0x11061351: return "VT3351 Host Bridge";
			case 0x11061353: return "VX800/VX820 Error Reporting";
			case 0x11061364: return "CN896/VN896/P4M900 Host Bridge";
			case 0x11061409: return "VX855/VX875 Error Reporting";
			case 0x11061410: return "VX900 Series Error Reporting";
			case 0x11061571: return "VT82C576M/VT82C586";
			case 0x11061595: return "VT82C595/97 [Apollo VP2/97]";
			case 0x11061732: return "VT1732 [Envy24 II] PCI Multi-Channel Audio Controller";
			case 0x11062106: return "VIA Rhine Family Fast Ethernet Adapter (VT6105)";
			case 0x11062204: return "K8M800 Host Bridge";
			case 0x11062208: return "PT890 Host Bridge";
			case 0x11062238: return "K8T890 Host Bridge";
			case 0x11062258: return "PT880 Host Bridge";
			case 0x11062259: return "CN333/CN400/PM880 CPU Host Bridge";
			case 0x11062269: return "KT880 Host Bridge";
			case 0x11062282: return "K8T800Pro Host Bridge";
			case 0x11062290: return "K8M890 Host Bridge";
			case 0x11062293: return "PM896 Host Bridge";
			case 0x11062296: return "P4M800 Host Bridge";
			case 0x11062308: return "PT894 Host Bridge";
			case 0x11062314: return "CN700/VN800/P4M800CE/Pro Host Bridge";
			case 0x11062324: return "CX700/VX700-Series Host Interface Control";
			case 0x11062327: return "P4M890 Host Bridge";
			case 0x11062336: return "K8M890CE Host Bridge";
			case 0x11062340: return "PT900 Host Bridge";
			case 0x11062351: return "VT3351 Host Bridge";
			case 0x11062353: return "VX800/VX820 Host Bus Control";
			case 0x11062364: return "CN896/VN896/P4M900 Host Bridge";
			case 0x11062409: return "VX855/VX875 Host Bus Control";
			case 0x11062410: return "VX900 Series CPU Bus Controller";
			case 0x1106287a: return "VT8251 PCI to PCI Bridge";
			case 0x1106287b: return "VT8251 Host Bridge";
			case 0x1106287c: return "VT8251 PCIE Root Port";
			case 0x1106287d: return "VT8251 PCIE Root Port";
			case 0x1106287e: return "VT8237/8251 Ultra VLINK Controller";
			case 0x11063022: return "CLE266";
			case 0x11063038: return "VT82xx/62xx/VX700/8x0/900 UHCI USB 1.1 Controller";
			case 0x11063040: return "VT82C586B ACPI";
			case 0x11063043: return "VT86C100A [Rhine]";
			case 0x11063044: return "VT6306/7/8 [Fire II(M)] IEEE 1394 OHCI Controller";
			case 0x11063050: return "VT82C596 Power Management";
			case 0x11063051: return "VT82C596 Power Management";
			case 0x11063053: return "VT6105M [Rhine-III]";
			case 0x11063057: return "VT82C686 [Apollo Super ACPI]";
			case 0x11063058: return "VT82C686 AC97 Audio Controller";
			case 0x11063059: return "VT8233/A/8235/8237 AC97 Audio Controller";
			case 0x11063065: return "VT6102/VT6103 [Rhine-II]";
			case 0x11063068: return "AC'97 Modem Controller";
			case 0x11063074: return "VT8233 PCI to ISA Bridge";
			case 0x11063091: return "VT8633 [Apollo Pro266]";
			case 0x11063099: return "VT8366/A/7 [Apollo KT266/A/333]";
			case 0x11063101: return "VT8653 Host Bridge";
			case 0x11063102: return "VT8662 Host Bridge";
			case 0x11063103: return "VT8615 Host Bridge";
			case 0x11063104: return "USB 2.0 EHCI-Compliant Host-Controller";
			case 0x11063106: return "VT6105/VT6106S [Rhine-III]";
			case 0x11063108: return "K8M800/K8N800/K8N800A [S3 UniChrome Pro]";
			case 0x11063109: return "VT8233C PCI to ISA Bridge";
			case 0x11063112: return "VT8361 [KLE133] Host Bridge";
			case 0x11063113: return "VPX/VPX2 PCI to PCI Bridge Controller";
			case 0x11063116: return "VT8375 [KM266/KL266] Host Bridge";
			case 0x11063118: return "CN400/PM800/PM880/PN800/PN880 [S3 UniChrome Pro]";
			case 0x11063119: return "VT6120/VT6121/VT6122 Gigabit Ethernet Adapter";
			case 0x11063122: return "VT8623 [Apollo CLE266] integrated CastleRock graphics";
			case 0x11063123: return "VT8623 [Apollo CLE266]";
			case 0x11063128: return "VT8753 [P4X266 AGP]";
			case 0x11063133: return "VT3133 Host Bridge";
			case 0x11063142: return "VT6651 WiFi Adapter, 802.11b";
			case 0x11063147: return "VT8233A ISA Bridge";
			case 0x11063148: return "P4M266 Host Bridge";
			case 0x11063149: return "VIA VT6420 SATA RAID Controller";
			case 0x11063156: return "P/KN266 Host Bridge";
			case 0x11063157: return "CX700/VX700 [S3 UniChrome Pro]";
			case 0x11063164: return "VT6410 ATA133 RAID controller";
			case 0x11063168: return "P4X333/P4X400/PT800 AGP Bridge";
			case 0x11063177: return "VT8235 ISA Bridge";
			case 0x11063178: return "ProSavageDDR P4N333 Host Bridge";
			case 0x11063188: return "VT8385 [K8T800 AGP] Host Bridge";
			case 0x11063189: return "VT8377 [KT400/KT600 AGP] Host Bridge";
			case 0x110631b0: return "VX11 Standard Host Bridge";
			case 0x110631b1: return "VX11 Standard Host Bridge";
			case 0x110631b2: return "VX11 DRAM Controller";
			case 0x110631b3: return "VX11 Power Management Controller";
			case 0x110631b4: return "VX11 I/O APIC";
			case 0x110631b5: return "VX11 Scratch Device";
			case 0x110631b7: return "VX11 Standard Host Bridge";
			case 0x110631b8: return "VX11 PCI to PCI Bridge";
			case 0x11063204: return "K8M800 Host Bridge";
			case 0x11063205: return "VT8378 [KM400/A] Chipset Host Bridge";
			case 0x11063208: return "PT890 Host Bridge";
			case 0x11063213: return "VPX/VPX2 PCI to PCI Bridge Controller";
			case 0x11063218: return "K8T800M Host Bridge";
			case 0x11063227: return "VT8237 ISA bridge [KT600/K8T800/K8T890 South]";
			case 0x11063230: return "K8M890CE/K8N890CE [Chrome 9]";
			case 0x11063238: return "K8T890 Host Bridge";
			case 0x11063249: return "VT6421 IDE/SATA Controller";
			case 0x1106324a: return "CX700/VX700 PCI to PCI Bridge";
			case 0x1106324b: return "CX700/VX700 Host Bridge";
			case 0x1106324e: return "CX700/VX700 Internal Module Bus";
			case 0x11063253: return "VT6655 WiFi Adapter, 802.11a/b/g";
			case 0x11063258: return "PT880 Host Bridge";
			case 0x11063259: return "CN333/CN400/PM880 Host Bridge";
			case 0x11063260: return "VIA Chrome9 HC IGP";
			case 0x11063269: return "KT880 Host Bridge";
			case 0x11063282: return "K8T800Pro Host Bridge";
			case 0x11063287: return "VT8251 PCI to ISA Bridge";
			case 0x11063288: return "VX900/VT8xxx High Definition Audio Controller";
			case 0x11063290: return "K8M890 Host Bridge";
			case 0x11063296: return "P4M800 Host Bridge";
			case 0x11063324: return "CX700/VX700-Series DRAM Bus Control";
			case 0x11063327: return "P4M890 Host Bridge";
			case 0x11063336: return "K8M890CE Host Bridge";
			case 0x11063337: return "VT8237A PCI to ISA Bridge";
			case 0x11063340: return "PT900 Host Bridge";
			case 0x11063343: return "P4M890 [S3 UniChrome Pro]";
			case 0x11063344: return "CN700/P4M800 Pro/P4M800 CE/VN800 Graphics [S3 UniChrome Pro]";
			case 0x11063349: return "VT8251 AHCI/SATA 4-Port Controller";
			case 0x11063351: return "VT3351 Host Bridge";
			case 0x11063353: return "VX800/820 PCI to PCI Bridge";
			case 0x11063364: return "CN896/VN896/P4M900 Host Bridge";
			case 0x11063365: return "VT630x IEEE 1394 Host Controller [Fire II/M]";
			case 0x11063371: return "CN896/VN896/P4M900 [Chrome 9 HC]";
			case 0x11063372: return "VT8237S PCI to ISA Bridge";
			case 0x1106337a: return "VT8237A PCI to PCI Bridge";
			case 0x1106337b: return "VT8237A Host Bridge";
			case 0x11063403: return "VT6315 Series Firewire Controller";
			case 0x11063409: return "VX855/VX875 DRAM Bus Control";
			case 0x11063410: return "VX900 Series DRAM Bus Control";
			case 0x11063432: return "VL800/801 xHCI USB 3.0 Controller";
			case 0x11063456: return "VX11 Standard Host Bridge";
			case 0x1106345b: return "VX11 Miscellaneous Bus";
			case 0x11063483: return "VL805/806 xHCI USB 3.0 Controller";
			case 0x11063a01: return "VX11 Graphics [Chrome 645/640]";
			case 0x11064149: return "VIA VT6420 (ATA133) Controller";
			case 0x11064204: return "K8M800 Host Bridge";
			case 0x11064208: return "PT890 Host Bridge";
			case 0x11064238: return "K8T890 Host Bridge";
			case 0x11064258: return "PT880 Host Bridge";
			case 0x11064259: return "CN333/CN400/PM880 Host Bridge";
			case 0x11064269: return "KT880 Host Bridge";
			case 0x11064282: return "K8T800Pro Host Bridge";
			case 0x11064290: return "K8M890 Host Bridge";
			case 0x11064293: return "PM896 Host Bridge";
			case 0x11064296: return "P4M800 Host Bridge";
			case 0x11064308: return "PT894 Host Bridge";
			case 0x11064314: return "CN700/VN800/P4M800CE/Pro Host Bridge";
			case 0x11064324: return "CX700/VX700-Series Power Management and Testing Control";
			case 0x11064327: return "P4M890 Host Bridge";
			case 0x11064336: return "K8M890CE Host Bridge";
			case 0x11064340: return "PT900 Host Bridge";
			case 0x11064351: return "VT3351 Host Bridge";
			case 0x11064353: return "VX800/VX820 Power Management Control";
			case 0x11064364: return "CN896/VN896/P4M900 Host Bridge";
			case 0x11064409: return "VX855/VX875 Power Management Control";
			case 0x11064410: return "VX900 Series Power Management and Chip Testing Control";
			case 0x11065030: return "VT82C596 ACPI [Apollo PRO]";
			case 0x11065122: return "VX855/VX875 Chrome 9 HCM Integrated Graphics";
			case 0x11065208: return "PT890 I/O APIC Interrupt Controller";
			case 0x11065238: return "K8T890 I/O APIC Interrupt Controller";
			case 0x11065287: return "VT8251 Serial ATA Controller";
			case 0x11065290: return "K8M890 I/O APIC Interrupt Controller";
			case 0x11065308: return "PT894 I/O APIC Interrupt Controller";
			case 0x11065324: return "CX700M2/VX700/VX800/820-Series Serial ATA & EIDE-Controller";
			case 0x11065327: return "P4M890 I/O APIC Interrupt Controller";
			case 0x11065336: return "K8M890CE I/O APIC Interrupt Controller";
			case 0x11065340: return "PT900 I/O APIC Interrupt Controller";
			case 0x11065351: return "VT3351 I/O APIC Interrupt Controller";
			case 0x11065353: return "VX800/VX820 APIC and Central Traffic Control";
			case 0x11065364: return "CN896/VN896/P4M900 I/O APIC Interrupt Controller";
			case 0x11065372: return "VT8237/8251 Serial ATA Controller";
			case 0x11065409: return "VX855/VX875 APIC and Central Traffic Control";
			case 0x11065410: return "VX900 Series APIC and Central Traffic Control";
			case 0x11066100: return "VT85C100A [Rhine II]";
			case 0x11066287: return "SATA RAID Controller";
			case 0x11066290: return "K8M890CE Host Bridge";
			case 0x11066327: return "P4M890 Security Device";
			case 0x11066353: return "VX800/VX820 Scratch Registers";
			case 0x11066364: return "CN896/VN896/P4M900 Security Device";
			case 0x11066409: return "VX855/VX875 Scratch Registers";
			case 0x11066410: return "VX900 Series Scratch Registers";
			case 0x11067122: return "VX900 Graphics [Chrome9 HD]";
			case 0x11067204: return "K8M800 Host Bridge";
			case 0x11067205: return "KM400/KN400/P4M800 [S3 UniChrome]";
			case 0x11067208: return "PT890 Host Bridge";
			case 0x11067238: return "K8T890 Host Bridge";
			case 0x11067258: return "PT880 Host Bridge";
			case 0x11067259: return "CN333/CN400/PM880 Host Bridge";
			case 0x11067269: return "KT880 Host Bridge";
			case 0x11067282: return "K8T800Pro Host Bridge";
			case 0x11067290: return "K8M890 Host Bridge";
			case 0x11067293: return "PM896 Host Bridge";
			case 0x11067296: return "P4M800 Host Bridge";
			case 0x11067308: return "PT894 Host Bridge";
			case 0x11067314: return "CN700/VN800/P4M800CE/Pro Host Bridge";
			case 0x11067324: return "CX700/VX700-Series North-South Module Interface Control";
			case 0x11067327: return "P4M890 Host Bridge";
			case 0x11067336: return "K8M890CE Host Bridge";
			case 0x11067340: return "PT900 Host Bridge";
			case 0x11067351: return "VT3351 Host Bridge";
			case 0x11067353: return "VX800/VX820 North-South Module Interface Control";
			case 0x11067364: return "CN896/VN896/P4M900 Host Bridge";
			case 0x11067409: return "VX855/VX875 North-South Module Interface Control";
			case 0x11067410: return "VX900 Series North-South Module Interface Control";
			case 0x11068231: return "VT8231 [PCI-to-ISA Bridge]";
			case 0x11068235: return "VT8235 ACPI";
			case 0x11068305: return "VT8363/8365 [KT133/KM133 AGP]";
			case 0x11068324: return "CX700/VX700-Series Bus Control and Power Management";
			case 0x11068353: return "VX800/VX820 Bus Control and Power Management";
			case 0x11068391: return "VT8371 [KX133 AGP]";
			case 0x11068400: return "MVP4";
			case 0x11068409: return "VX855/VX875 Bus Control and Power Management";
			case 0x11068410: return "VX900 Series Bus Control and Power Management";
			case 0x11068500: return "KLE133/PLE133/PLE133T";
			case 0x11068501: return "VT8501 [Apollo MVP4 AGP]";
			case 0x11068596: return "VT82C596 [Apollo PRO AGP]";
			case 0x11068597: return "VT82C597 [Apollo VP3 AGP]";
			case 0x11068598: return "VT82C598/694x [Apollo MVP3/Pro133x AGP]";
			case 0x11068601: return "VT8601 [Apollo ProMedia AGP]";
			case 0x11068605: return "VT8605 [PM133 AGP]";
			case 0x11068691: return "VT82C691 [Apollo Pro]";
			case 0x11068693: return "VT82C693 [Apollo Pro Plus] PCI Bridge";
			case 0x11068a25: return "PL133/PL133T [S3 ProSavage]";
			case 0x11068a26: return "KL133/KL133A/KM133/KM133A [S3 ProSavage]";
			case 0x11068d01: return "PN133/PN133T [S3 Twister]";
			case 0x11068d04: return "KM266/P4M266/P4M266A/P4N266 [S3 ProSavageDDR]";
			case 0x11069001: return "VX900 Series Serial-ATA Controller";
			case 0x11069082: return "Standard AHCI 1.0 SATA Controller";
			case 0x11069140: return "HDMI Audio Device";
			case 0x11069201: return "USB3.0 Controller";
			case 0x11069530: return "VX800/820/900 Series Secure Digital Memory Card Controller";
			case 0x110695d0: return "VX800/820/900 Series SDIO Host Controller";
			case 0x1106a208: return "PT890 PCI to PCI Bridge Controller";
			case 0x1106a238: return "K8T890 PCI to PCI Bridge Controller";
			case 0x1106a327: return "P4M890 PCI to PCI Bridge Controller";
			case 0x1106a353: return "VX8xx/900 Series South-North Module Interface Control";
			case 0x1106a364: return "CN896/VN896/P4M900 PCI to PCI Bridge Controller";
			case 0x1106a409: return "VX855/VX875/VX900 Series USB Device Controller";
			case 0x1106a410: return "VX900 Series PCI Express Root Port 0";
			case 0x1106b091: return "VT8633 [Apollo Pro266 AGP]";
			case 0x1106b099: return "VT8366/A/7 [Apollo KT266/A/333 AGP]";
			case 0x1106b101: return "VT8653 AGP Bridge";
			case 0x1106b102: return "VT8362 AGP Bridge";
			case 0x1106b103: return "VT8615 AGP Bridge";
			case 0x1106b112: return "VT8361 [KLE133] AGP Bridge";
			case 0x1106b113: return "VPX/VPX2 I/O APIC Interrupt Controller";
			case 0x1106b115: return "VT8363/8365 [KT133/KM133] PCI Bridge";
			case 0x1106b168: return "VT8235 PCI Bridge";
			case 0x1106b188: return "VT8237/8251 PCI bridge [K8M890/K8T800/K8T890 South]";
			case 0x1106b198: return "VT8237/CX700/VX700-Series PCI to PCI Bridge";
			case 0x1106b213: return "VPX/VPX2 I/O APIC Interrupt Controller";
			case 0x1106b353: return "VX855/VX875/VX900 PCI to PCI Bridge";
			case 0x1106b410: return "VX900 Series PCI Express Root Port 1";
			case 0x1106b999: return "[K8T890 North / VT8237 South] PCI Bridge";
			case 0x1106c208: return "PT890 PCI to PCI Bridge Controller";
			case 0x1106c238: return "K8T890 PCI to PCI Bridge Controller";
			case 0x1106c327: return "P4M890 PCI to PCI Bridge Controller";
			case 0x1106c340: return "PT900 PCI to PCI Bridge Controller";
			case 0x1106c353: return "VX800/820-Series PCI-Express Root (PCI-to-PCI Virtual Bridge)";
			case 0x1106c364: return "CN896/VN896/P4M900 PCI to PCI Bridge Controller";
			case 0x1106c409: return "VX855/VX875 EIDE Controller";
			case 0x1106c410: return "VX900 Series PCI Express Root Port 2";
			case 0x1106d104: return "VT8237R USB UDCI Controller";
			case 0x1106d208: return "PT890 PCI to PCI Bridge Controller";
			case 0x1106d213: return "VPX/VPX2 PCI to PCI Bridge Controller";
			case 0x1106d238: return "K8T890 PCI to PCI Bridge Controller";
			case 0x1106d340: return "PT900 PCI to PCI Bridge Controller";
			case 0x1106d410: return "VX900 Series PCI Express Root Port 3";
			case 0x1106e208: return "PT890 PCI to PCI Bridge Controller";
			case 0x1106e238: return "K8T890 PCI to PCI Bridge Controller";
			case 0x1106e340: return "PT900 PCI to PCI Bridge Controller";
			case 0x1106e353: return "VX800/820-Series PCI-Express Root Port 0";
			case 0x1106e410: return "VX900 Series PCI Express Physical Layer Electrical Sub-block";
			case 0x1106f208: return "PT890 PCI to PCI Bridge Controller";
			case 0x1106f238: return "K8T890 PCI to PCI Bridge Controller";
			case 0x1106f340: return "PT900 PCI to PCI Bridge Controller";
			case 0x1106f353: return "VX800/820-Series PCI-Express Root Port 1";
			case 0x1106f410: return "VX900 Series PCI UART Port 0-3";
			case 0x11070576: return "VIA VT82C570MV [Apollo] (Wrong vendor ID!)";
			case 0x11080100: return "p1690plus_AA";
			case 0x11080101: return "p1690plus_AB";
			case 0x11080105: return "P1690Plus";
			case 0x11080108: return "P1690Plus";
			case 0x11080138: return "P1690Plus";
			case 0x11080139: return "P1690Plus";
			case 0x1108013c: return "P1690Plus";
			case 0x1108013d: return "P1690Plus";
			case 0x11091400: return "EM110TX [EX110TX]";
			case 0x110a0002: return "Pirahna 2-port";
			case 0x110a0005: return "Tulip controller, power management, switch extender";
			case 0x110a0006: return "FSC PINC (I/O-APIC)";
			case 0x110a0015: return "FSC Multiprocessor Interrupt Controller";
			case 0x110a001d: return "FSC Copernicus Management Controller";
			case 0x110a007b: return "FSC Remote Service Controller, mailbox device";
			case 0x110a007c: return "FSC Remote Service Controller, shared memory device";
			case 0x110a007d: return "FSC Remote Service Controller, SMIC device";
			case 0x110a2101: return "HST SAPHIR V Primary PCI (ISDN/PMx)";
			case 0x110a2102: return "DSCC4 PEB/PEF 20534 DMA Supported Serial Communication Controller with 4 Channels";
			case 0x110a2104: return "Eicon Diva 2.02 compatible passive ISDN card";
			case 0x110a3141: return "SIMATIC NET CP 5611 / 5621";
			case 0x110a3142: return "SIMATIC NET CP 5613 / 5614";
			case 0x110a3143: return "SIMATIC NET CP 1613";
			case 0x110a4021: return "SIMATIC NET CP 5512 (Profibus and MPI Cardbus Adapter)";
			case 0x110a4029: return "SIMATIC NET CP 5613 A2";
			case 0x110a4035: return "SIMATIC NET CP 1613 A2";
			case 0x110a4036: return "SIMATIC NET CP 1616";
			case 0x110a4038: return "SIMATIC NET CP 1604";
			case 0x110a4069: return "SIMATIC NET CP 5623";
			case 0x110a407c: return "SIMATIC NET CP 5612";
			case 0x110a407d: return "SIMATIC NET CP 5613 A3";
			case 0x110a407e: return "SIMATIC NET CP 5622";
			case 0x110a4083: return "SIMATIC NET CP 5614 A3";
			case 0x110a4084: return "SIMATIC NET CP 1626";
			case 0x110a4942: return "FPGA I-Bus Tracer for MBD";
			case 0x110a6120: return "SZB6120";
			case 0x110b0001: return "Mpact Media Processor";
			case 0x110b0004: return "Mpact 2";
			case 0x11106037: return "Firepower Powerized SMP I/O ASIC";
			case 0x11106073: return "Firepower Powerized SMP I/O ASIC";
			case 0x11122200: return "FDDI Adapter";
			case 0x11122300: return "Fast Ethernet Adapter";
			case 0x11122340: return "4 Port Fast Ethernet Adapter";
			case 0x11122400: return "ATM Adapter";
			case 0x11131211: return "SMC2-1211TX";
			case 0x11131216: return "EN-1216 Ethernet Adapter";
			case 0x11131217: return "EN-1217 Ethernet Adapter";
			case 0x11135105: return "10Mbps Network card";
			case 0x11139211: return "EN-1207D Fast Ethernet Adapter";
			case 0x11139511: return "21x4x DEC-Tulip compatible Fast Ethernet";
			case 0x1113d301: return "CPWNA100 (Philips wireless PCMCIA)";
			case 0x1113ec02: return "SMC 1244TX v3";
			case 0x1113ee23: return "SMCWPCIT-G 108Mbps Wireless PCI adapter";
			case 0x11140506: return "at76c506 802.11b Wireless Network Adaptor";
			case 0x11160022: return "DT3001";
			case 0x11160023: return "DT3002";
			case 0x11160024: return "DT3003";
			case 0x11160025: return "DT3004";
			case 0x11160026: return "DT3005";
			case 0x11160027: return "DT3001-PGL";
			case 0x11160028: return "DT3003-PGL";
			case 0x11160051: return "DT322";
			case 0x11160060: return "DT340";
			case 0x11160069: return "DT332";
			case 0x111680c2: return "DT3162";
			case 0x11179500: return "Max-1C SVGA card";
			case 0x11179501: return "Max-1C image processing";
			case 0x11190000: return "GDT 6000/6020/6050";
			case 0x11190001: return "GDT 6000B/6010";
			case 0x11190002: return "GDT 6110/6510";
			case 0x11190003: return "GDT 6120/6520";
			case 0x11190004: return "GDT 6530";
			case 0x11190005: return "GDT 6550";
			case 0x11190006: return "GDT 6117/6517";
			case 0x11190007: return "GDT 6127/6527";
			case 0x11190008: return "GDT 6537";
			case 0x11190009: return "GDT 6557/6557-ECC";
			case 0x1119000a: return "GDT 6115/6515";
			case 0x1119000b: return "GDT 6125/6525";
			case 0x1119000c: return "GDT 6535";
			case 0x1119000d: return "GDT 6555/6555-ECC";
			case 0x11190100: return "GDT 6117RP/6517RP";
			case 0x11190101: return "GDT 6127RP/6527RP";
			case 0x11190102: return "GDT 6537RP";
			case 0x11190103: return "GDT 6557RP";
			case 0x11190104: return "GDT 6111RP/6511RP";
			case 0x11190105: return "GDT 6121RP/6521RP";
			case 0x11190110: return "GDT 6117RD/6517RD";
			case 0x11190111: return "GDT 6127RD/6527RD";
			case 0x11190112: return "GDT 6537RD";
			case 0x11190113: return "GDT 6557RD";
			case 0x11190114: return "GDT 6111RD/6511RD";
			case 0x11190115: return "GDT 6121RD/6521RD";
			case 0x11190118: return "GDT 6118RD/6518RD/6618RD";
			case 0x11190119: return "GDT 6128RD/6528RD/6628RD";
			case 0x1119011a: return "GDT 6538RD/6638RD";
			case 0x1119011b: return "GDT 6558RD/6658RD";
			case 0x11190120: return "GDT 6117RP2/6517RP2";
			case 0x11190121: return "GDT 6127RP2/6527RP2";
			case 0x11190122: return "GDT 6537RP2";
			case 0x11190123: return "GDT 6557RP2";
			case 0x11190124: return "GDT 6111RP2/6511RP2";
			case 0x11190125: return "GDT 6121RP2/6521RP2";
			case 0x11190136: return "GDT 6113RS/6513RS";
			case 0x11190137: return "GDT 6123RS/6523RS";
			case 0x11190138: return "GDT 6118RS/6518RS/6618RS";
			case 0x11190139: return "GDT 6128RS/6528RS/6628RS";
			case 0x1119013a: return "GDT 6538RS/6638RS";
			case 0x1119013b: return "GDT 6558RS/6658RS";
			case 0x1119013c: return "GDT 6533RS/6633RS";
			case 0x1119013d: return "GDT 6543RS/6643RS";
			case 0x1119013e: return "GDT 6553RS/6653RS";
			case 0x1119013f: return "GDT 6563RS/6663RS";
			case 0x11190166: return "GDT 7113RN/7513RN/7613RN";
			case 0x11190167: return "GDT 7123RN/7523RN/7623RN";
			case 0x11190168: return "GDT 7118RN/7518RN/7518RN";
			case 0x11190169: return "GDT 7128RN/7528RN/7628RN";
			case 0x1119016a: return "GDT 7538RN/7638RN";
			case 0x1119016b: return "GDT 7558RN/7658RN";
			case 0x1119016c: return "GDT 7533RN/7633RN";
			case 0x1119016d: return "GDT 7543RN/7643RN";
			case 0x1119016e: return "GDT 7553RN/7653RN";
			case 0x1119016f: return "GDT 7563RN/7663RN";
			case 0x111901d6: return "GDT 4x13RZ";
			case 0x111901d7: return "GDT 4x23RZ";
			case 0x111901f6: return "GDT 8x13RZ";
			case 0x111901f7: return "GDT 8x23RZ";
			case 0x111901fc: return "GDT 8x33RZ";
			case 0x111901fd: return "GDT 8x43RZ";
			case 0x111901fe: return "GDT 8x53RZ";
			case 0x111901ff: return "GDT 8x63RZ";
			case 0x11190210: return "GDT 6519RD/6619RD";
			case 0x11190211: return "GDT 6529RD/6629RD";
			case 0x11190260: return "GDT 7519RN/7619RN";
			case 0x11190261: return "GDT 7529RN/7629RN";
			case 0x111902ff: return "GDT MAXRP";
			case 0x11190300: return "GDT NEWRX";
			case 0x11190301: return "GDT NEWRX2";
			case 0x111a0000: return "155P-MF1 (FPGA)";
			case 0x111a0002: return "155P-MF1 (ASIC)";
			case 0x111a0003: return "ENI-25P ATM";
			case 0x111a0005: return "SpeedStream (LANAI)";
			case 0x111a0007: return "SpeedStream ADSL";
			case 0x111a1020: return "SpeedStream PCI 10/100 Network Card";
			case 0x111a1203: return "SpeedStream 1023 Wireless PCI Adapter";
			case 0x111c0001: return "Powerbis Bridge";
			case 0x111d0001: return "IDT77201/77211 155Mbps ATM SAR Controller [NICStAR]";
			case 0x111d0003: return "IDT77222/77252 155Mbps ATM MICRO ABR SAR Controller";
			case 0x111d0004: return "IDT77V252 155Mbps ATM MICRO ABR SAR Controller";
			case 0x111d0005: return "IDT77V222 155Mbps ATM MICRO ABR SAR Controller";
			case 0x111d8018: return "PES12N3A 12-lane 3-Port PCI Express Switch";
			case 0x111d801c: return "PES24N3A PCI Express Switch";
			case 0x111d8028: return "PES4T4 PCI Express Switch";
			case 0x111d802b: return "PES8T5A PCI Express Switch";
			case 0x111d802c: return "PES16T4 PCI Express Switch";
			case 0x111d802d: return "PES16T7 PCI Express Switch";
			case 0x111d802e: return "PES24T6 PCI Express Switch";
			case 0x111d802f: return "PES32T8 PCI Express Switch";
			case 0x111d8032: return "PES48T12 PCI Express Switch";
			case 0x111d8034: return "PES16/22/34H16 PCI Express Switch";
			case 0x111d8035: return "PES32H8 PCI Express Switch";
			case 0x111d8036: return "PES48H12 PCI Express Switch";
			case 0x111d8037: return "PES64H16 PCI Express Switch";
			case 0x111d8039: return "PES3T3 PCI Express Switch";
			case 0x111d803a: return "PES4T4 PCI Express Switch";
			case 0x111d803c: return "PES5T5 PCI Express Switch";
			case 0x111d803d: return "PES6T5 PCI Express Switch";
			case 0x111d8048: return "PES8NT2 PCI Express Switch";
			case 0x111d8049: return "PES8NT2 PCI Express Switch";
			case 0x111d804a: return "PES8NT2 PCI Express Internal NTB";
			case 0x111d804b: return "PES8NT2 PCI Express External NTB";
			case 0x111d804c: return "PES16NT2 PCI Express Switch";
			case 0x111d804d: return "PES16NT2 PCI Express Switch";
			case 0x111d804e: return "PES16NT2 PCI Express Internal NTB";
			case 0x111d804f: return "PES16NT2 PCI Express External NTB";
			case 0x111d8058: return "PES12NT3 PCI Express Switch";
			case 0x111d8059: return "PES12NT3 PCI Express Switch";
			case 0x111d805a: return "PES12NT3 PCI Express Internal NTB";
			case 0x111d805b: return "PES12NT3 PCI Express External NTB";
			case 0x111d805c: return "PES24NT3 PCI Express Switch";
			case 0x111d805d: return "PES24NT3 PCI Express Switch";
			case 0x111d805e: return "PES24NT3 PCI Express Internal NTB";
			case 0x111d805f: return "PES24NT3 PCI Express External NTB";
			case 0x111d8060: return "PES16T4G2 PCI Express Gen2 Switch";
			case 0x111d8061: return "PES12T3G2 PCI Express Gen2 Switch";
			case 0x111d8068: return "PES6T6G2 PCI Express Gen2 Switch";
			case 0x111d806a: return "PES24T3G2 PCI Express Gen2 Switch";
			case 0x111d806c: return "PES16T4A/4T4G2 PCI Express Gen2 Switch";
			case 0x111d806e: return "PES24T6G2 PCI Express Gen2 Switch";
			case 0x111d806f: return "HIO524G2 PCI Express Gen2 Switch";
			case 0x111d8077: return "89HPES64H16G2 64-Lane 16-Port PCIe Gen2 System Interconnect Switch";
			case 0x111d8088: return "PES32NT8BG2 PCI Express Switch";
			case 0x111d808a: return "89HPES32NT24BG2 PCI Express Switch";
			case 0x111d808c: return "89HPES32NT24AG2 PCI Express Switch";
			case 0x111d808e: return "PES24NT24G2 PCI Express Switch";
			case 0x111d808f: return "89HPES32NT8AG2 32-Lane 8-Port PCIe Gen2 System Interconnect Switch with Non-Transparent Bridging";
			case 0x111d8090: return "89HPES16NT16G2 16-Lane 16-Port PCIe Gen2 System Interconnect Switch";
			case 0x111d8092: return "89HPES12NT12G2 12-Lane 12-Port PCIe Gen2 System Interconnect Switch";
			case 0x111d80cf: return "F32P08xG3 [PCIe boot mode]";
			case 0x111d80d2: return "F32P08xG3 NVMe controller";
			case 0x111f4a47: return "Precision MX Video engine interface";
			case 0x111f5243: return "Frame capture bus interface";
			case 0x11202306: return "Unity Fibre Channel Controller";
			case 0x11202501: return "Unity Ethernet Controller";
			case 0x11202505: return "Unity Fibre Channel Controller";
			case 0x11242581: return "Picport Monochrome";
			case 0x11270200: return "ForeRunner PCA-200 ATM";
			case 0x11270210: return "PCA-200PC";
			case 0x11270250: return "ATM";
			case 0x11270300: return "ForeRunner PCA-200EPC ATM";
			case 0x11270310: return "ATM";
			case 0x11270400: return "ForeRunnerHE ATM Adapter";
			case 0x112f0000: return "MVC IC-PCI";
			case 0x112f0001: return "MVC IM-PCI Video frame grabber/processor";
			case 0x112f0004: return "PCDig Digital Image Capture";
			case 0x112f0008: return "PC-CamLink PCI framegrabber";
			case 0x11311561: return "USB 1.1 Host Controller";
			case 0x11311562: return "USB 2.0 Host Controller";
			case 0x11313400: return "SmartPCI56(UCB1500) 56K Modem";
			case 0x11315400: return "TriMedia TM1000/1100";
			case 0x11315402: return "TriMedia TM1300";
			case 0x11315405: return "TriMedia TM1500";
			case 0x11315406: return "TriMedia TM1700";
			case 0x1131540b: return "PNX1005 Media Processor";
			case 0x11317130: return "SAA7130 Video Broadcast Decoder";
			case 0x11317133: return "SAA7131/SAA7133/SAA7135 Video Broadcast Decoder";
			case 0x11317134: return "SAA7134/SAA7135HL Video Broadcast Decoder";
			case 0x11317145: return "SAA7145";
			case 0x11317146: return "SAA7146";
			case 0x11317160: return "SAA7160";
			case 0x11317162: return "SAA7162";
			case 0x11317164: return "SAA7164";
			case 0x11317231: return "SAA7231";
			case 0x11319730: return "SAA9730 Integrated Multimedia and Peripheral Controller";
			case 0x11337701: return "Eiconcard C90";
			case 0x11337711: return "Eiconcard C91";
			case 0x11337901: return "EiconCard S90";
			case 0x11337902: return "EiconCard S90";
			case 0x11337911: return "EiconCard S91";
			case 0x11337912: return "EiconCard S91";
			case 0x11337921: return "Eiconcard S92";
			case 0x11337941: return "EiconCard S94";
			case 0x11337942: return "EiconCard S94";
			case 0x11337943: return "EiconCard S94";
			case 0x11337944: return "EiconCard S94";
			case 0x11337945: return "Eiconcard S94";
			case 0x11337948: return "Eiconcard S94 64bit/66MHz";
			case 0x11339711: return "Eiconcard S91 V2";
			case 0x11339911: return "Eiconcard S91 V2";
			case 0x11339941: return "Eiconcard S94 V2";
			case 0x11339a41: return "Eiconcard S94 PCIe";
			case 0x1133b921: return "EiconCard P92";
			case 0x1133b922: return "EiconCard P92";
			case 0x1133b923: return "EiconCard P92";
			case 0x1133e001: return "Diva Pro 2.0 S/T";
			case 0x1133e002: return "Diva 2.0 S/T PCI";
			case 0x1133e003: return "Diva Pro 2.0 U";
			case 0x1133e004: return "Diva 2.0 U PCI";
			case 0x1133e005: return "Diva 2.01 S/T PCI";
			case 0x1133e006: return "Diva CT S/T PCI";
			case 0x1133e007: return "Diva CT U PCI";
			case 0x1133e008: return "Diva CT Lite S/T PCI";
			case 0x1133e009: return "Diva CT Lite U PCI";
			case 0x1133e00a: return "Diva ISDN+V.90 PCI";
			case 0x1133e00b: return "Diva ISDN PCI 2.02";
			case 0x1133e00c: return "Diva 2.02 PCI U";
			case 0x1133e00d: return "Diva Pro 3.0 PCI";
			case 0x1133e00e: return "Diva ISDN+CT S/T PCI Rev 2";
			case 0x1133e010: return "Diva Server BRI-2M PCI";
			case 0x1133e011: return "Diva Server BRI S/T Rev 2";
			case 0x1133e012: return "Diva Server 4BRI-8M PCI";
			case 0x1133e013: return "4BRI";
			case 0x1133e014: return "Diva Server PRI-30M PCI";
			case 0x1133e015: return "Diva PRI PCI v2";
			case 0x1133e016: return "Diva Server Voice 4BRI PCI";
			case 0x1133e017: return "Diva Server Voice 4BRI Rev 2";
			case 0x1133e018: return "BRI";
			case 0x1133e019: return "Diva Server Voice PRI Rev 2";
			case 0x1133e01a: return "Diva BRI-2FX PCI v2";
			case 0x1133e01b: return "Diva Server Voice BRI-2M 2.0 PCI";
			case 0x1133e01c: return "PRI";
			case 0x1133e01e: return "2PRI";
			case 0x1133e020: return "4PRI";
			case 0x1133e022: return "Analog-2";
			case 0x1133e024: return "Analog-4";
			case 0x1133e028: return "Analog-8";
			case 0x1133e02a: return "Diva IPM-300 PCI v1";
			case 0x1133e02c: return "Diva IPM-600 PCI v1";
			case 0x1133e02e: return "4BRI";
			case 0x1133e032: return "BRI";
			case 0x1133e034: return "Diva BRI-CTI PCI v2";
			case 0x11340001: return "Raceway Bridge";
			case 0x11340002: return "Dual PCI to RapidIO Bridge";
			case 0x1134000b: return "POET Serial RapidIO Bridge";
			case 0x1134000d: return "POET PSDMS Device";
			case 0x11350001: return "Printer controller";
			case 0x11360002: return "PCI-JTAG";
			case 0x11370023: return "VIC 81 PCIe Upstream Port";
			case 0x11370040: return "VIC PCIe Upstream Port";
			case 0x11370041: return "VIC PCIe Downstream Port";
			case 0x11370042: return "VIC Management Controller";
			case 0x11370043: return "VIC Ethernet NIC";
			case 0x11370044: return "VIC Ethernet NIC Dynamic";
			case 0x11370045: return "VIC FCoE HBA";
			case 0x11370046: return "VIC SCSI Controller";
			case 0x1137004e: return "VIC 82 PCIe Upstream Port";
			case 0x11370071: return "VIC SR-IOV VF";
			case 0x1137007a: return "VIC 1300 PCIe Upstream Port";
			case 0x113700cf: return "VIC Userspace NIC";
			case 0x1137023e: return "1GigE I350 LOM";
			case 0x11388905: return "8905 [STD 32 Bridge]";
			case 0x11390001: return "VGA Compatible 3D Graphics";
			case 0x113c0000: return "PCI-9060 i960 Bridge";
			case 0x113c0001: return "PCI-SDK [PCI i960 Evaluation Platform]";
			case 0x113c0911: return "PCI-911 [i960Jx-based Intelligent I/O Controller]";
			case 0x113c0912: return "PCI-912 [i960CF-based Intelligent I/O Controller]";
			case 0x113c0913: return "PCI-913";
			case 0x113c0914: return "PCI-914 [I/O Controller w/ secondary PCI bus]";
			case 0x113f0808: return "SST-64P Adapter";
			case 0x113f1010: return "SST-128P Adapter";
			case 0x113f80c0: return "SST-16P DB Adapter";
			case 0x113f80c4: return "SST-16P RJ Adapter";
			case 0x113f80c8: return "SST-16P Adapter";
			case 0x113f8888: return "SST-4P Adapter";
			case 0x113f9090: return "SST-8P Adapter";
			case 0x11423210: return "AP6410";
			case 0x11426422: return "ProVideo 6422";
			case 0x11426424: return "ProVideo 6424";
			case 0x11426425: return "ProMotion AT25";
			case 0x1142643d: return "ProMotion AT3D";
			case 0x11440001: return "Noservo controller";
			case 0x11458007: return "NinjaSCSI-32 Workbit";
			case 0x1145f007: return "NinjaSCSI-32 KME";
			case 0x1145f010: return "NinjaSCSI-32 Workbit";
			case 0x1145f012: return "NinjaSCSI-32 Logitec";
			case 0x1145f013: return "NinjaSCSI-32 Logitec";
			case 0x1145f015: return "NinjaSCSI-32 Melco";
			case 0x1145f020: return "NinjaSCSI-32 Sony PCGA-DVD51";
			case 0x1145f021: return "NinjaPATA-32 Delkin Cardbus UDMA";
			case 0x1145f024: return "NinjaPATA-32 Delkin Cardbus UDMA";
			case 0x1145f103: return "NinjaPATA-32 Delkin Cardbus UDMA";
			case 0x11484000: return "FDDI Adapter";
			case 0x11484200: return "Token Ring adapter";
			case 0x11484300: return "SK-9872 Gigabit Ethernet Server Adapter (SK-NET GE-ZX dual link)";
			case 0x11484320: return "SK-98xx V2.0 Gigabit Ethernet Adapter [Marvell 88E8001]";
			case 0x11484400: return "SK-9Dxx Gigabit Ethernet Adapter";
			case 0x11484500: return "SK-9Mxx Gigabit Ethernet Adapter";
			case 0x11489000: return "SK-9Sxx Gigabit Ethernet Server Adapter PCI-X [Marvell 88E8022]";
			case 0x11489843: return "[Fujitsu] Gigabit Ethernet";
			case 0x11489e00: return "SK-9E21D 10/100/1000Base-T Adapter, Copper RJ-45";
			case 0x11489e01: return "SK-9E21M 10/100/1000Base-T Adapter";
			case 0x114a5565: return "GE-IP PCI5565,PMC5565 Reflective Memory Node";
			case 0x114a5579: return "VMIPCI-5579 (Reflective Memory Card)";
			case 0x114a5587: return "VMIPCI-5587 (Reflective Memory Card)";
			case 0x114a6504: return "VMIC PCI 7755 FPGA";
			case 0x114a7587: return "VMIVME-7587";
			case 0x114f0002: return "AccelePort EPC";
			case 0x114f0003: return "RightSwitch SE-6";
			case 0x114f0004: return "AccelePort Xem";
			case 0x114f0005: return "AccelePort Xr";
			case 0x114f0006: return "AccelePort Xr,C/X";
			case 0x114f0009: return "AccelePort Xr/J";
			case 0x114f000a: return "AccelePort EPC/J";
			case 0x114f000c: return "DataFirePRIme T1 (1-port)";
			case 0x114f000d: return "SyncPort 2-Port (x.25/FR)";
			case 0x114f0011: return "AccelePort 8r EIA-232 (IBM)";
			case 0x114f0012: return "AccelePort 8r EIA-422";
			case 0x114f0013: return "AccelePort Xr";
			case 0x114f0014: return "AccelePort 8r EIA-422";
			case 0x114f0015: return "AccelePort Xem";
			case 0x114f0016: return "AccelePort EPC/X";
			case 0x114f0017: return "AccelePort C/X";
			case 0x114f001a: return "DataFirePRIme E1 (1-port)";
			case 0x114f001b: return "AccelePort C/X (IBM)";
			case 0x114f001c: return "AccelePort Xr (SAIP)";
			case 0x114f001d: return "DataFire RAS T1/E1/PRI";
			case 0x114f0023: return "AccelePort RAS";
			case 0x114f0024: return "DataFire RAS B4 ST/U";
			case 0x114f0026: return "AccelePort 4r 920";
			case 0x114f0027: return "AccelePort Xr 920";
			case 0x114f0028: return "ClassicBoard 4";
			case 0x114f0029: return "ClassicBoard 8";
			case 0x114f0034: return "AccelePort 2r 920";
			case 0x114f0035: return "DataFire DSP T1/E1/PRI cPCI";
			case 0x114f0040: return "AccelePort Xp";
			case 0x114f0042: return "AccelePort 2p";
			case 0x114f0043: return "AccelePort 4p";
			case 0x114f0044: return "AccelePort 8p";
			case 0x114f0045: return "AccelePort 16p";
			case 0x114f004e: return "AccelePort 32p";
			case 0x114f0070: return "Datafire Micro V IOM2 (Europe)";
			case 0x114f0071: return "Datafire Micro V (Europe)";
			case 0x114f0072: return "Datafire Micro V IOM2 (North America)";
			case 0x114f0073: return "Datafire Micro V (North America)";
			case 0x114f00b0: return "Digi Neo 4";
			case 0x114f00b1: return "Digi Neo 8";
			case 0x114f00c8: return "Digi Neo 2 DB9";
			case 0x114f00c9: return "Digi Neo 2 DB9 PRI";
			case 0x114f00ca: return "Digi Neo 2 RJ45";
			case 0x114f00cb: return "Digi Neo 2 RJ45 PRI";
			case 0x114f00cc: return "Digi Neo 1 422";
			case 0x114f00cd: return "Digi Neo 1 422 485";
			case 0x114f00ce: return "Digi Neo 2 422 485";
			case 0x114f00d0: return "ClassicBoard 4 422";
			case 0x114f00d1: return "ClassicBoard 8 422";
			case 0x114f00f1: return "Digi Neo PCI-E 4 port";
			case 0x114f00f4: return "Digi Neo 4 (IBM version)";
			case 0x114f6001: return "Avanstar";
			case 0x11583011: return "Tokenet/vg 1001/10m anylan";
			case 0x11589050: return "Lanfleet/Truevalue";
			case 0x11589051: return "Lanfleet/Truevalue";
			case 0x11590001: return "MV-1000";
			case 0x11590002: return "MV-1500";
			case 0x115d0003: return "Cardbus Ethernet 10/100";
			case 0x115d0005: return "Cardbus Ethernet 10/100";
			case 0x115d0007: return "Cardbus Ethernet 10/100";
			case 0x115d000b: return "Cardbus Ethernet 10/100";
			case 0x115d000c: return "Mini-PCI V.90 56k Modem";
			case 0x115d000f: return "Cardbus Ethernet 10/100";
			case 0x115d00d4: return "Mini-PCI K56Flex Modem";
			case 0x115d0101: return "Cardbus 56k modem";
			case 0x115d0103: return "Cardbus Ethernet + 56k Modem";
			case 0x11630001: return "Verite 1000";
			case 0x11632000: return "Verite V2000/V2100/V2200";
			case 0x11650001: return "Motion TPEG Recorder/Player with audio";
			case 0x11660000: return "CMIC-LE";
			case 0x11660005: return "CNB20-LE Host Bridge";
			case 0x11660006: return "CNB20HE Host Bridge";
			case 0x11660007: return "CNB20-LE Host Bridge";
			case 0x11660008: return "CNB20HE Host Bridge";
			case 0x11660009: return "CNB20LE Host Bridge";
			case 0x11660010: return "CIOB30";
			case 0x11660011: return "CMIC-HE";
			case 0x11660012: return "CMIC-WS Host Bridge (GC-LE chipset)";
			case 0x11660013: return "CNB20-HE Host Bridge";
			case 0x11660014: return "CMIC-LE Host Bridge (GC-LE chipset)";
			case 0x11660015: return "CMIC-GC Host Bridge";
			case 0x11660016: return "CMIC-GC Host Bridge";
			case 0x11660017: return "GCNB-LE Host Bridge";
			case 0x11660031: return "HT1100 HPX0 HT Host Bridge";
			case 0x11660036: return "BCM5785 [HT1000] PCI/PCI-X Bridge";
			case 0x11660101: return "CIOB-X2 PCI-X I/O Bridge";
			case 0x11660103: return "EPB PCI-Express to PCI-X Bridge";
			case 0x11660104: return "BCM5785 [HT1000] PCI/PCI-X Bridge";
			case 0x11660110: return "CIOB-E I/O Bridge with Gigabit Ethernet";
			case 0x11660130: return "BCM5780 [HT2000] PCI-X bridge";
			case 0x11660132: return "BCM5780 [HT2000] PCI-Express Bridge";
			case 0x11660140: return "HT2100 PCI-Express Bridge";
			case 0x11660141: return "HT2100 PCI-Express Bridge";
			case 0x11660142: return "HT2100 PCI-Express Bridge";
			case 0x11660144: return "HT2100 PCI-Express Bridge";
			case 0x11660200: return "OSB4 South Bridge";
			case 0x11660201: return "CSB5 South Bridge";
			case 0x11660203: return "CSB6 South Bridge";
			case 0x11660205: return "BCM5785 [HT1000] Legacy South Bridge";
			case 0x11660211: return "OSB4 IDE Controller";
			case 0x11660212: return "CSB5 IDE Controller";
			case 0x11660213: return "CSB6 RAID/IDE Controller";
			case 0x11660214: return "BCM5785 [HT1000] IDE";
			case 0x11660217: return "CSB6 IDE Controller";
			case 0x1166021b: return "HT1100 HD Audio";
			case 0x11660220: return "OSB4/CSB5 OHCI USB Controller";
			case 0x11660221: return "CSB6 OHCI USB Controller";
			case 0x11660223: return "BCM5785 [HT1000] USB";
			case 0x11660225: return "CSB5 LPC bridge";
			case 0x11660227: return "GCLE-2 Host Bridge";
			case 0x11660230: return "CSB5 LPC bridge";
			case 0x11660234: return "BCM5785 [HT1000] LPC";
			case 0x11660235: return "BCM5785 [HT1000] XIOAPIC0-2";
			case 0x11660238: return "BCM5785 [HT1000] WDTimer";
			case 0x11660240: return "K2 SATA";
			case 0x11660241: return "RAIDCore RC4000";
			case 0x11660242: return "RAIDCore BC4000";
			case 0x1166024a: return "BCM5785 [HT1000] SATA (Native SATA Mode)";
			case 0x1166024b: return "BCM5785 [HT1000] SATA (PATA/IDE Mode)";
			case 0x11660406: return "HT1100 PCI-X Bridge";
			case 0x11660408: return "HT1100 Legacy Device";
			case 0x1166040a: return "HT1100 ISA-LPC Bridge";
			case 0x11660410: return "HT1100 SATA Controller (Native SATA Mode)";
			case 0x11660411: return "HT1100 SATA Controller (PATA / IDE Mode)";
			case 0x11660412: return "HT1100 USB OHCI Controller";
			case 0x11660414: return "HT1100 USB EHCI Controller";
			case 0x11660416: return "HT1100 USB EHCI Controller (with Debug Port)";
			case 0x11660420: return "HT1100 PCI-Express Bridge";
			case 0x11660421: return "HT1100 SAS/SATA Controller";
			case 0x11660422: return "HT1100 PCI-Express Bridge";
			case 0x116a6100: return "Bus/Tag Channel";
			case 0x116a6800: return "Escon Channel";
			case 0x116a7100: return "Bus/Tag Channel";
			case 0x116a7800: return "Escon Channel";
			case 0x117200a7: return "Stratix V";
			case 0x11720530: return "Stratix IV";
			case 0x1172646c: return "KT-500/KT-521 board";
			case 0x1178afa1: return "Fast Ethernet Adapter";
			case 0x11790102: return "Extended IDE Controller";
			case 0x11790103: return "EX-IDE Type-B";
			case 0x1179010e: return "PXP04 NVMe SSD";
			case 0x1179010f: return "NVMe Controller";
			case 0x11790110: return "NVMe SSD Controller Cx5";
			case 0x11790113: return "BG3 NVMe SSD Controller";
			case 0x11790115: return "XG4 NVMe SSD Controller";
			case 0x1179011a: return "XG6 NVMe SSD Controller";
			case 0x11790404: return "DVD Decoder card";
			case 0x11790406: return "Tecra Video Capture device";
			case 0x11790407: return "DVD Decoder card (Version 2)";
			case 0x11790601: return "CPU to PCI bridge";
			case 0x11790602: return "PCI to ISA bridge";
			case 0x11790603: return "ToPIC95 PCI to CardBus Bridge for Notebooks";
			case 0x11790604: return "PCI-Docking Host bridge";
			case 0x1179060a: return "ToPIC95";
			case 0x1179060f: return "ToPIC97";
			case 0x11790617: return "ToPIC100 PCI to Cardbus Bridge with ZV Support";
			case 0x11790618: return "CPU to PCI and PCI to ISA bridge";
			case 0x11790701: return "FIR Port Type-O";
			case 0x11790803: return "TC6371AF SD Host Controller";
			case 0x11790804: return "TC6371AF SmartMedia Controller";
			case 0x11790805: return "SD TypA Controller";
			case 0x11790d01: return "FIR Port Type-DO";
			case 0x117c002c: return "ExpressSAS R380";
			case 0x117c002d: return "ExpressSAS R348";
			case 0x117c0030: return "Ultra320 SCSI Host Adapter";
			case 0x117c0033: return "SAS Adapter";
			case 0x117c0041: return "ExpressSAS R30F";
			case 0x117c0042: return "ExpressSAS 6Gb/s SAS/SATA HBA";
			case 0x117c0049: return "ExpressSAS 6Gb SAS/SATA RAID Adapter";
			case 0x117c0064: return "Celerity FC 16Gb/s Gen 5 Fibre Channel HBA";
			case 0x117c0094: return "Celerity FC 16/32Gb/s Gen 6 Fibre Channel HBA";
			case 0x117c00bb: return "Celerity FC 32/64Gb/s Gen 7 Fibre Channel HBA";
			case 0x117c00c5: return "ExpressNVM PCIe Gen4 Switch";
			case 0x117c00e6: return "ExpressSAS GT 12Gb/s SAS/SATA HBA";
			case 0x117c8013: return "ExpressPCI UL4D";
			case 0x117c8014: return "ExpressPCI UL4S";
			case 0x117c8027: return "ExpressPCI UL5D";
			case 0x117c8070: return "ExpressSAS 12Gb/s SAS/SATA HBA";
			case 0x117c8072: return "ExpressSAS 12Gb/s SAS/SATA HBA";
			case 0x11800465: return "RL5c465";
			case 0x11800466: return "RL5c466";
			case 0x11800475: return "RL5c475";
			case 0x11800476: return "RL5c476 II";
			case 0x11800477: return "RL5c477";
			case 0x11800478: return "RL5c478";
			case 0x11800511: return "R5C511";
			case 0x11800522: return "R5C522 IEEE 1394 Controller";
			case 0x11800551: return "R5C551 IEEE 1394 Controller";
			case 0x11800552: return "R5C552 IEEE 1394 Controller";
			case 0x11800554: return "R5C554";
			case 0x11800575: return "R5C575 SD Bus Host Adapter";
			case 0x11800576: return "R5C576 SD Bus Host Adapter";
			case 0x11800592: return "R5C592 Memory Stick Bus Host Adapter";
			case 0x11800811: return "R5C811";
			case 0x11800822: return "R5C822 SD/SDIO/MMC/MS/MSPro Host Adapter";
			case 0x11800832: return "R5C832 IEEE 1394 Controller";
			case 0x11800841: return "R5C841 CardBus/SD/SDIO/MMC/MS/MSPro/xD/IEEE1394";
			case 0x11800843: return "R5C843 MMC Host Controller";
			case 0x11800852: return "xD-Picture Card Controller";
			case 0x1180e230: return "R5U2xx (R5U230 / R5U231 / R5U241) [Memory Stick Host Controller]";
			case 0x1180e476: return "CardBus bridge";
			case 0x1180e822: return "MMC/SD Host Controller";
			case 0x1180e823: return "PCIe SDXC/MMC Host Controller";
			case 0x1180e832: return "R5C832 PCIe IEEE 1394 Controller";
			case 0x1180e852: return "PCIe xD-Picture Card Controller";
			case 0x11861002: return "DL10050 Sundance Ethernet";
			case 0x11861025: return "AirPlus Xtreme G DWL-G650 Adapter";
			case 0x11861026: return "AirXpert DWL-AG650 Wireless Cardbus Adapter";
			case 0x11861043: return "AirXpert DWL-AG650 Wireless Cardbus Adapter";
			case 0x11861300: return "RTL8139 Ethernet";
			case 0x11861340: return "DFE-690TXD CardBus PC Card";
			case 0x11861540: return "DFE-680TX";
			case 0x11861541: return "DFE-680TXD CardBus PC Card";
			case 0x11861561: return "DRP-32TXD Cardbus PC Card";
			case 0x11863300: return "DWL-510 / DWL-610 802.11b [Realtek RTL8180L]";
			case 0x11863a10: return "AirXpert DWL-AG650 Wireless Cardbus Adapter(rev.B)";
			case 0x11863a11: return "AirXpert DWL-AG520 Wireless PCI Adapter(rev.B)";
			case 0x11864000: return "DL2000-based Gigabit Ethernet";
			case 0x11864001: return "DGE-550SX PCI-X Gigabit Ethernet Adapter";
			case 0x11864200: return "DFE-520TX Fast Ethernet PCI Adapter";
			case 0x11864300: return "DGE-528T Gigabit Ethernet Adapter";
			case 0x11864302: return "DGE-530T Gigabit Ethernet Adapter (rev.C1) [Realtek RTL8169]";
			case 0x11864b00: return "DGE-560T PCI Express Gigabit Ethernet Adapter";
			case 0x11864b01: return "DGE-530T Gigabit Ethernet Adapter (rev 11)";
			case 0x11864b02: return "DGE-560SX PCI Express Gigabit Ethernet Adapter";
			case 0x11864b03: return "DGE-550T Gigabit Ethernet Adapter V.B1";
			case 0x11864c00: return "Gigabit Ethernet Adapter";
			case 0x11868400: return "D-Link DWL-650+ CardBus PC Card";
			case 0x118c0014: return "PCIB [C-bus II to PCI bus host bridge chip]";
			case 0x118c1117: return "Intel 8-way XEON Profusion Chipset [Cache Coherency Filter]";
			case 0x118d0001: return "Raptor-PCI framegrabber";
			case 0x118d0012: return "Model 12 Road Runner Frame Grabber";
			case 0x118d0014: return "Model 14 Road Runner Frame Grabber";
			case 0x118d0024: return "Model 24 Road Runner Frame Grabber";
			case 0x118d0044: return "Model 44 Road Runner Frame Grabber";
			case 0x118d0112: return "Model 12 Road Runner Frame Grabber";
			case 0x118d0114: return "Model 14 Road Runner Frame Grabber";
			case 0x118d0124: return "Model 24 Road Runner Frame Grabber";
			case 0x118d0144: return "Model 44 Road Runner Frame Grabber";
			case 0x118d0212: return "Model 12 Road Runner Frame Grabber";
			case 0x118d0214: return "Model 14 Road Runner Frame Grabber";
			case 0x118d0224: return "Model 24 Road Runner Frame Grabber";
			case 0x118d0244: return "Model 44 Road Runner Frame Grabber";
			case 0x118d0312: return "Model 12 Road Runner Frame Grabber";
			case 0x118d0314: return "Model 14 Road Runner Frame Grabber";
			case 0x118d0324: return "Model 24 Road Runner Frame Grabber";
			case 0x118d0344: return "Model 44 Road Runner Frame Grabber";
			case 0x118db04e: return "Claxon CXP4 CoaXPress frame grabber";
			case 0x1190c731: return "TP-910/920/940 PCI Ultra(Wide) SCSI Adapter";
			case 0x11910003: return "SCSI Cache Host Adapter";
			case 0x11910004: return "ATP8400";
			case 0x11910005: return "ATP850UF";
			case 0x11910006: return "ATP860 NO-BIOS";
			case 0x11910007: return "ATP860";
			case 0x11910008: return "ATP865 NO-ROM";
			case 0x11910009: return "ATP865";
			case 0x1191000a: return "ATP867-A";
			case 0x1191000b: return "ATP867-B";
			case 0x1191000d: return "ATP8620";
			case 0x1191000e: return "ATP8620";
			case 0x11918002: return "AEC6710 SCSI-2 Host Adapter";
			case 0x11918010: return "AEC6712UW SCSI";
			case 0x11918020: return "AEC6712U SCSI";
			case 0x11918030: return "AEC6712S SCSI";
			case 0x11918040: return "AEC6712D SCSI";
			case 0x11918050: return "AEC6712SUW SCSI";
			case 0x11918060: return "AEC6712 SCSI";
			case 0x11918080: return "AEC67160 SCSI";
			case 0x11918081: return "AEC67160S SCSI";
			case 0x1191808a: return "AEC67162 2-ch. LVD SCSI";
			case 0x11930001: return "1221";
			case 0x11930002: return "1225";
			case 0x1197010c: return "CompuScope 82G 8bit 2GS/s Analog Input Card";
			case 0x11990101: return "Advanced ISCA/PCI Adapter";
			case 0x119b1221: return "82C092G";
			case 0x119e0001: return "FireStream 155";
			case 0x119e0003: return "FireStream 50";
			case 0x119f1081: return "BXI Host Channel Adapter";
			case 0x119f1101: return "BXI Host Channel Adapter v1.2";
			case 0x119f1121: return "BXI Host Channel Adapter v1.3";
			case 0x11a94240: return "AMCC S933Q Intelligent Serial Card";
			case 0x11ab0100: return "88F3700 [Armada 3700 Family] ARM SoC";
			case 0x11ab0110: return "88F8040 PCI Express controller";
			case 0x11ab0146: return "GT-64010/64010A System Controller";
			case 0x11ab0f53: return "88E6318 Link Street network controller";
			case 0x11ab11ab: return "MV88SE614x SATA II PCI-E controller";
			case 0x11ab138f: return "W8300 802.11 Adapter (rev 07)";
			case 0x11ab1fa6: return "Marvell W8300 802.11 Adapter";
			case 0x11ab1fa7: return "88W8310 and 88W8000G [Libertas] 802.11g client chipset";
			case 0x11ab1faa: return "88w8335 [Libertas] 802.11b/g Wireless";
			case 0x11ab2211: return "88SB2211 PCI Express to PCI Bridge";
			case 0x11ab2a01: return "88W8335 [Libertas] 802.11b/g Wireless";
			case 0x11ab2a02: return "88W8361 [TopDog] 802.11n Wireless";
			case 0x11ab2a08: return "88W8362e [TopDog] 802.11a/b/g/n Wireless";
			case 0x11ab2a0a: return "88W8363 [TopDog] 802.11n Wireless";
			case 0x11ab2a0c: return "88W8363 [TopDog] 802.11n Wireless";
			case 0x11ab2a24: return "88W8363 [TopDog] 802.11n Wireless";
			case 0x11ab2a2b: return "88W8687 [TopDog] 802.11b/g Wireless";
			case 0x11ab2a30: return "88W8687 [TopDog] 802.11b/g Wireless";
			case 0x11ab2a40: return "88W8366 [TopDog] 802.11n Wireless";
			case 0x11ab2a41: return "88W8366 [TopDog] 802.11n Wireless";
			case 0x11ab2a42: return "88W8366 [TopDog] 802.11n Wireless";
			case 0x11ab2a43: return "88W8366 [TopDog] 802.11n Wireless";
			case 0x11ab2a55: return "88W8864 [Avastar] 802.11ac Wireless";
			case 0x11ab2b36: return "88W8764 [Avastar] 802.11n Wireless";
			case 0x11ab2b38: return "88W8897 [AVASTAR] 802.11ac Wireless";
			case 0x11ab2b40: return "88W8964 [Avastar] 802.11ac Wireless";
			case 0x11ab4101: return "OLPC Cafe Controller Secure Digital Controller";
			case 0x11ab4320: return "88E8001 Gigabit Ethernet Controller";
			case 0x11ab4340: return "88E8021 PCI-X IPMI Gigabit Ethernet Controller";
			case 0x11ab4341: return "88E8022 PCI-X IPMI Gigabit Ethernet Controller";
			case 0x11ab4342: return "88E8061 PCI-E IPMI Gigabit Ethernet Controller";
			case 0x11ab4343: return "88E8062 PCI-E IPMI Gigabit Ethernet Controller";
			case 0x11ab4344: return "88E8021 PCI-X IPMI Gigabit Ethernet Controller";
			case 0x11ab4345: return "88E8022 PCI-X IPMI Gigabit Ethernet Controller";
			case 0x11ab4346: return "88E8061 PCI-E IPMI Gigabit Ethernet Controller";
			case 0x11ab4347: return "88E8062 PCI-E IPMI Gigabit Ethernet Controller";
			case 0x11ab4350: return "88E8035 PCI-E Fast Ethernet Controller";
			case 0x11ab4351: return "88E8036 PCI-E Fast Ethernet Controller";
			case 0x11ab4352: return "88E8038 PCI-E Fast Ethernet Controller";
			case 0x11ab4353: return "88E8039 PCI-E Fast Ethernet Controller";
			case 0x11ab4354: return "88E8040 PCI-E Fast Ethernet Controller";
			case 0x11ab4355: return "88E8040T PCI-E Fast Ethernet Controller";
			case 0x11ab4356: return "88EC033 PCI-E Fast Ethernet Controller";
			case 0x11ab4357: return "88E8042 PCI-E Fast Ethernet Controller";
			case 0x11ab435a: return "88E8048 PCI-E Fast Ethernet Controller";
			case 0x11ab4360: return "88E8052 PCI-E ASF Gigabit Ethernet Controller";
			case 0x11ab4361: return "88E8050 PCI-E ASF Gigabit Ethernet Controller";
			case 0x11ab4362: return "88E8053 PCI-E Gigabit Ethernet Controller";
			case 0x11ab4363: return "88E8055 PCI-E Gigabit Ethernet Controller";
			case 0x11ab4364: return "88E8056 PCI-E Gigabit Ethernet Controller";
			case 0x11ab4365: return "88E8070 based Ethernet Controller";
			case 0x11ab4366: return "88EC036 PCI-E Gigabit Ethernet Controller";
			case 0x11ab4367: return "88EC032 Ethernet Controller";
			case 0x11ab4368: return "88EC034 Ethernet Controller";
			case 0x11ab4369: return "88EC042 Ethernet Controller";
			case 0x11ab436a: return "88E8058 PCI-E Gigabit Ethernet Controller";
			case 0x11ab436b: return "88E8071 PCI-E Gigabit Ethernet Controller";
			case 0x11ab436c: return "88E8072 PCI-E Gigabit Ethernet Controller";
			case 0x11ab436d: return "88E8055 PCI-E Gigabit Ethernet Controller";
			case 0x11ab4370: return "88E8075 PCI-E Gigabit Ethernet Controller";
			case 0x11ab4380: return "88E8057 PCI-E Gigabit Ethernet Controller";
			case 0x11ab4381: return "Yukon Optima 88E8059 [PCIe Gigabit Ethernet Controller with AVB]";
			case 0x11ab4611: return "GT-64115 System Controller";
			case 0x11ab4620: return "GT-64120/64120A/64121A System Controller";
			case 0x11ab4801: return "GT-48001";
			case 0x11ab5005: return "Belkin F5D5005 Gigabit Desktop Network PCI Card";
			case 0x11ab5040: return "MV88SX5040 4-port SATA I PCI-X Controller";
			case 0x11ab5041: return "MV88SX5041 4-port SATA I PCI-X Controller";
			case 0x11ab5080: return "MV88SX5080 8-port SATA I PCI-X Controller";
			case 0x11ab5081: return "MV88SX5081 8-port SATA I PCI-X Controller";
			case 0x11ab5181: return "88f5181 [Orion-1] ARM SoC";
			case 0x11ab5182: return "88f5182 [Orion-NAS] ARM SoC";
			case 0x11ab5281: return "88f5281 [Orion-2] ARM SoC";
			case 0x11ab6041: return "MV88SX6041 4-port SATA II PCI-X Controller";
			case 0x11ab6042: return "88SX6042 PCI-X 4-Port SATA-II";
			case 0x11ab6081: return "MV88SX6081 8-port SATA II PCI-X Controller";
			case 0x11ab6101: return "88SE6101/6102 single-port PATA133 interface";
			case 0x11ab6121: return "88SE6111/6121 SATA II / PATA Controller";
			case 0x11ab6141: return "88SE614x SATA II PCI-E controller";
			case 0x11ab6145: return "88SE6145 SATA II PCI-E controller";
			case 0x11ab6180: return "88F6180 [Kirkwood] ARM SoC";
			case 0x11ab6192: return "88F6190/6192 [Kirkwood] ARM SoC";
			case 0x11ab6281: return "88F6281 [Kirkwood] ARM SoC";
			case 0x11ab6381: return "MV78xx0 [Discovery Innovation] ARM SoC";
			case 0x11ab6440: return "88SE6440 SAS/SATA PCIe controller";
			case 0x11ab6450: return "64560 System Controller";
			case 0x11ab6460: return "MV64360/64361/64362 System Controller";
			case 0x11ab6480: return "MV64460/64461/64462 System Controller";
			case 0x11ab6485: return "MV64460/64461/64462 System Controller, Revision B";
			case 0x11ab6820: return "88F6820 [Armada 385] ARM SoC";
			case 0x11ab6828: return "88F6828 [Armada 388] ARM SoC";
			case 0x11ab7042: return "88SX7042 PCI-e 4-port SATA-II";
			case 0x11ab7810: return "MV78100 [Discovery Innovation] ARM SoC";
			case 0x11ab7820: return "MV78200 [Discovery Innovation] ARM SoC";
			case 0x11ab7823: return "MV78230 [Armada XP] ARM SoC";
			case 0x11ab7846: return "88F6820 [Armada 385] ARM SoC";
			case 0x11abd40f: return "Bobcat3 Ethernet Switch";
			case 0x11abf003: return "GT-64010 Primary Image Piranha Image Generator";
			case 0x11ad0002: return "LNE100TX";
			case 0x11adc115: return "LNE100TX [Linksys EtherFast 10/100]";
			case 0x11af0001: return "Cinema";
			case 0x11afee40: return "Digidesign Audiomedia III";
			case 0x11b00002: return "V300PSC";
			case 0x11b00292: return "V292PBC [Am29030/40 Bridge]";
			case 0x11b00960: return "V96xPBC";
			case 0x11b0880a: return "Deltacast Delta-HD-22";
			case 0x11b0c960: return "V96DPC";
			case 0x11b80001: return "Quad PeerMaster";
			case 0x11b9c0ed: return "SSA Controller";
			case 0x11bc0001: return "NP-PCI";
			case 0x11bd002e: return "PCTV 40i";
			case 0x11bd0040: return "Royal TS Function 1";
			case 0x11bd0041: return "RoyalTS Function 2";
			case 0x11bd0042: return "Royal TS Function 3";
			case 0x11bd0051: return "PCTV HD 800i";
			case 0x11bdbede: return "AV/DV Studio Capture Card";
			case 0x11c10440: return "56k WinModem";
			case 0x11c10441: return "56k WinModem";
			case 0x11c10442: return "56k WinModem";
			case 0x11c10443: return "LT WinModem";
			case 0x11c10444: return "LT WinModem";
			case 0x11c10445: return "LT WinModem";
			case 0x11c10446: return "LT WinModem";
			case 0x11c10447: return "LT WinModem";
			case 0x11c10448: return "WinModem 56k";
			case 0x11c10449: return "L56xM+S [Mars-2] WinModem 56k";
			case 0x11c1044a: return "F-1156IV WinModem (V90, 56KFlex)";
			case 0x11c1044b: return "LT WinModem";
			case 0x11c1044c: return "LT WinModem";
			case 0x11c1044d: return "LT WinModem";
			case 0x11c1044e: return "LT WinModem";
			case 0x11c1044f: return "V90 WildWire Modem";
			case 0x11c10450: return "LT WinModem";
			case 0x11c10451: return "LT WinModem";
			case 0x11c10452: return "LT WinModem";
			case 0x11c10453: return "LT WinModem";
			case 0x11c10454: return "LT WinModem";
			case 0x11c10455: return "LT WinModem";
			case 0x11c10456: return "LT WinModem";
			case 0x11c10457: return "LT WinModem";
			case 0x11c10458: return "LT WinModem";
			case 0x11c10459: return "LT WinModem";
			case 0x11c1045a: return "LT WinModem";
			case 0x11c1045c: return "LT WinModem";
			case 0x11c10461: return "V90 WildWire Modem";
			case 0x11c10462: return "V90 WildWire Modem";
			case 0x11c10480: return "Venus Modem (V90, 56KFlex)";
			case 0x11c1048c: return "V.92 56K WinModem";
			case 0x11c1048f: return "V.92 56k WinModem";
			case 0x11c10620: return "Lucent V.92 Data/Fax Modem";
			case 0x11c12600: return "StarPro26XX family (SP2601, SP2603, SP2612) DSP";
			case 0x11c15400: return "OR3TP12 FPSC";
			case 0x11c15656: return "Venus Modem";
			case 0x11c15801: return "USB";
			case 0x11c15802: return "USS-312 USB Controller";
			case 0x11c15803: return "USS-344S USB Controller";
			case 0x11c15811: return "FW322/323 [TrueFire] 1394a Controller";
			case 0x11c15901: return "FW643 [TrueFire] PCIe 1394b Controller";
			case 0x11c15903: return "FW533 [TrueFire] PCIe 1394a Controller";
			case 0x11c18110: return "T8110 H.100/H.110 TDM switch";
			case 0x11c1ab10: return "WL60010 Wireless LAN MAC";
			case 0x11c1ab11: return "WL60040 Multimode Wireles LAN MAC";
			case 0x11c1ab20: return "ORiNOCO PCI Adapter";
			case 0x11c1ab21: return "Agere Wireless PCI Adapter";
			case 0x11c1ab30: return "Hermes2 Mini-PCI WaveLAN a/b/g";
			case 0x11c1ed00: return "ET-131x PCI-E Ethernet Controller";
			case 0x11c1ed01: return "ET-131x PCI-E Ethernet Controller";
			case 0x11c80658: return "PSB32 SCI-Adapter D31x";
			case 0x11c8d665: return "PSB64 SCI-Adapter D32x";
			case 0x11c8d667: return "PSB66 SCI-Adapter D33x";
			case 0x11c90010: return "16-line serial port w/- DMA";
			case 0x11c90011: return "4-line serial port w/- DMA";
			case 0x11cb2000: return "PCI_9050";
			case 0x11cb4000: return "SUPI_1";
			case 0x11cb8000: return "T225";
			case 0x11d101f7: return "VxP524";
			case 0x11d101f9: return "VxP951";
			case 0x11d41535: return "Blackfin BF535 processor";
			case 0x11d41805: return "SM56 PCI modem";
			case 0x11d50115: return "10115";
			case 0x11d50117: return "10117";
			case 0x11de6017: return "miroVIDEO DC30";
			case 0x11de6057: return "ZR36057PQC Video cutting chipset";
			case 0x11de6120: return "ZR36120";
			case 0x11e30001: return "COM-ON-AIR Dosch&Amand DECT";
			case 0x11e30560: return "QL5064 Companion Design Demo Board";
			case 0x11e35030: return "PC Watchdog";
			case 0x11e38417: return "QL5064 [QuickPCI] PCI v2.2 bridge for SMT417 Dual TMS320C6416T PMC Module";
			case 0x11ec000d: return "Oculus-F/64P";
			case 0x11ec1800: return "Cobra/C6";
			case 0x11f04231: return "FDDI";
			case 0x11f04232: return "FASTline UTP Quattro";
			case 0x11f04233: return "FASTline FO";
			case 0x11f04234: return "FASTline UTP";
			case 0x11f04235: return "FASTline-II UTP";
			case 0x11f04236: return "FASTline-II FO";
			case 0x11f04731: return "GIGAline";
			case 0x11f30011: return "KPCI-PIO24";
			case 0x11f42915: return "CAMAC controller";
			case 0x11f60112: return "ENet100VG4";
			case 0x11f60113: return "FreedomLine 100";
			case 0x11f61401: return "ReadyLink 2000";
			case 0x11f62011: return "RL100-ATX 10/100";
			case 0x11f62201: return "ReadyLink 100TX (Winbond W89C840)";
			case 0x11f69881: return "RL100TX Fast Ethernet";
			case 0x11f85220: return "BR522x [PMC-Sierra maxRAID SAS Controller]";
			case 0x11f87364: return "PM7364 [FREEDM - 32 Frame Engine & Datalink Mgr]";
			case 0x11f87375: return "PM7375 [LASAR-155 ATM SAR]";
			case 0x11f87384: return "PM7384 [FREEDM - 84P672 Frm Engine & Datalink Mgr]";
			case 0x11f88000: return "PM8000";
			case 0x11f88009: return "PM8009 SPCve 8x6G";
			case 0x11f88018: return "PM8018 Adaptec SAS Adaptor ASA-70165H PCIe Gen3 x8 6 Gbps 16-lane 4x SFF-8644";
			case 0x11f88032: return "PM8032 Tachyon QE8";
			case 0x11f88053: return "PM8053 SXP 12G 24-port SAS/SATA expander";
			case 0x11f88054: return "PM8054 SXP 12G 36-port SAS/SATA expander";
			case 0x11f88055: return "PM8055 SXP 12G 48-port SAS/SATA expander";
			case 0x11f88056: return "PM8056 SXP 12G 68-port SAS/SATA expander";
			case 0x11f88060: return "PM8060 SRCv 12G eight-port SAS/SATA RoC";
			case 0x11f88063: return "PM8063 SRCv 12G 16-port SAS/SATA RoC";
			case 0x11f88070: return "PM8070 Tachyon SPCv 12G eight-port SAS/SATA controller";
			case 0x11f88071: return "PM8071 Tachyon SPCve 12G eight-port SAS/SATA controller";
			case 0x11f88072: return "PM8072 Tachyon SPCv 12G 16-port SAS/SATA controller";
			case 0x11f88073: return "PM8073 Tachyon SPCve 12G 16-port SAS/SATA controller";
			case 0x11f88531: return "PM8531 PFX 24xG3 PCIe Fanout Switch";
			case 0x11f88532: return "PM8532 PFX 32xG3 PCIe Fanout Switch";
			case 0x11f88533: return "PM8533 PFX 48xG3 PCIe Fanout Switch";
			case 0x11f88534: return "PM8534 PFX 64xG3 PCIe Fanout Switch";
			case 0x11f88535: return "PM8535 PFX 80xG3 PCIe Fanout Switch";
			case 0x11f88536: return "PM8536 PFX 96xG3 PCIe Fanout Switch";
			case 0x11f88546: return "PM8546 B-FEIP PSX 96xG3 PCIe Storage Switch";
			case 0x11f88562: return "PM8562 Switchtec PFX-L 32xG3 Fanout-Lite PCIe Gen3 Switch";
			case 0x11fe0001: return "RocketPort PCI 32-port w/external I/F";
			case 0x11fe0002: return "RocketPort PCI 8-port w/external I/F";
			case 0x11fe0003: return "RocketPort PCI 16-port w/external I/F";
			case 0x11fe0004: return "RocketPort PCI 4-port w/Quad Cable";
			case 0x11fe0005: return "RocketPort PCI 8-port w/Octa Cable";
			case 0x11fe0006: return "RocketPort PCI 8-port w/RJ11 connectors";
			case 0x11fe0007: return "RocketPort PCI 4-port w/RJ45 connectors";
			case 0x11fe0008: return "RocketPort PCI 8-port w/DB78 SNI connector (Siemens)";
			case 0x11fe0009: return "RocketPort PCI 16-port w/DB78 SNI connector (Siemens)";
			case 0x11fe000a: return "RocketPort PCI Plus 4-port w/Quad Cable";
			case 0x11fe000b: return "RocketPort PCI Plus 8-port w/Octa Cable";
			case 0x11fe000c: return "RocketModem II 6-port";
			case 0x11fe000d: return "RocketModem 4-port";
			case 0x11fe000e: return "RocketPort PCI Plus 2-port RS-232 w/DB9 connectors";
			case 0x11fe000f: return "RocketPort PCI Plus 2-port SMPTE w/DB9 connectors";
			case 0x11fe0040: return "RocketPort INFINITY 8-port w/Octa Cable RJ45";
			case 0x11fe0041: return "RocketPort INFINITY 32-port w/external I/F";
			case 0x11fe0042: return "RocketPort INFINITY 8-port w/external I/F";
			case 0x11fe0043: return "RocketPort INFINITY 16-port w/external I/F";
			case 0x11fe0044: return "RocketPort INFINITY 4-port w/Quad Cable DB";
			case 0x11fe0045: return "RocketPort INFINITY 8-port w/Octa Cable DB";
			case 0x11fe0046: return "RocketPort INFINITY 4-port w/external I/F";
			case 0x11fe0047: return "RocketPort INFINITY 4J (4-port) w/RJ45 connectors";
			case 0x11fe0048: return "RocketPort INFINITY 4J (4-port) w/RJ45 connectors";
			case 0x11fe004a: return "RocketPort INFINITY Plus 4-port";
			case 0x11fe004b: return "RocketPort INFINITY Plus 8-port";
			case 0x11fe004c: return "RocketModem INFINITY III 8-port";
			case 0x11fe004d: return "RocketModem INFINITY III 4-port";
			case 0x11fe004e: return "RocketPort INFINITY Plus 2-port";
			case 0x11fe004f: return "RocketPort INFINITY 2-port SMPTE w/DB9 connectors";
			case 0x11fe0050: return "RocketPort INFINITY Plus 4-port RJ45";
			case 0x11fe0051: return "RocketPort INFINITY Plus 8-port RJ11";
			case 0x11fe0052: return "RocketPort INFINITY 8-port SMPTE w/DB9 Connectors";
			case 0x11fe0060: return "RocketPort EXPRESS 8-port w/Octa Cable";
			case 0x11fe0061: return "RocketPort EXPRESS 32-port w/external I/F";
			case 0x11fe0062: return "RocketPort EXPRESS 8-Port w/external I/F";
			case 0x11fe0063: return "RocketPort EXPRESS 16-port w/external I/F";
			case 0x11fe0064: return "RocketPort EXPRESS 4-port w/Quad Cable";
			case 0x11fe0065: return "RocketPort EXPRESS 8-port w/Octa Cable";
			case 0x11fe0066: return "RocketPort EXPRESS 4-port w/external I/F";
			case 0x11fe0067: return "RocketPort EXPRESS 4J (4-port) w/RJ45 connectors";
			case 0x11fe0068: return "RocketPort EXPRESS 8J (8-port) w/RJ11 connectors";
			case 0x11fe006f: return "RocketPort EXPRESS SMPTE 2-port";
			case 0x11fe0072: return "RocketPort EXPRESS SMPTE 8-port w/external I/F";
			case 0x11fe0801: return "RocketPort uPCI 32-port w/external I/F";
			case 0x11fe0802: return "RocketPort uPCI 8-port w/external I/F";
			case 0x11fe0803: return "RocketPort uPCI 16-port w/external I/F";
			case 0x11fe0805: return "RocketPort uPCI 8-port w/Octa Cable";
			case 0x11fe080b: return "RocketPort Plus uPCI 8-port w/Octa Cable";
			case 0x11fe080c: return "RocketModem III 8-port";
			case 0x11fe080d: return "RocketModem III 4-port";
			case 0x11fe080e: return "RocketPort uPCI 2-port RS232 w/DB9 connectors";
			case 0x11fe080f: return "RocketPort uPCI SMPTE 2-port";
			case 0x11fe0810: return "RocketPort Plus uPCI 4J (4-port) w/RJ45 connectors";
			case 0x11fe0811: return "RocketPort Plus uPCI 8J (8-port) w/RJ11 connectors";
			case 0x11fe0812: return "RocketPort Plus uPCI 422 8-port";
			case 0x11fe0813: return "RocketModem IV uPCI 8-port";
			case 0x11fe0814: return "RocketModem IV uPCI 4-port";
			case 0x11fe0903: return "RocketPort Compact PCI 16 port w/external I/F";
			case 0x11fe8015: return "RocketPort 550 4-port";
			case 0x11fe8805: return "RocketPort uPCI 4-port w/Quad Cable";
			case 0x11fe880b: return "RocketPort Plus uPCI 4-port w/Quad Cable";
			case 0x11fe8812: return "RocketPort Plus uPCI 4-port RS422 w/Quad Cable";
			case 0x11ff0003: return "AG-5";
			case 0x12024300: return "Gigabit Ethernet Adapter";
			case 0x12041965: return "SB6501 802.11ad Wireless Network Adapter";
			case 0x12084853: return "HS-Link Device";
			case 0x120e0100: return "Cyclom-Y below first megabyte";
			case 0x120e0101: return "Cyclom-Y above first megabyte";
			case 0x120e0102: return "Cyclom-4Y below first megabyte";
			case 0x120e0103: return "Cyclom-4Y above first megabyte";
			case 0x120e0104: return "Cyclom-8Y below first megabyte";
			case 0x120e0105: return "Cyclom-8Y above first megabyte";
			case 0x120e0200: return "Cyclades-Z below first megabyte";
			case 0x120e0201: return "Cyclades-Z above first megabyte";
			case 0x120e0300: return "PC300/RSV or /X21 (2 ports)";
			case 0x120e0301: return "PC300/RSV or /X21 (1 port)";
			case 0x120e0310: return "PC300/TE (2 ports)";
			case 0x120e0311: return "PC300/TE (1 port)";
			case 0x120e0320: return "PC300/TE-M (2 ports)";
			case 0x120e0321: return "PC300/TE-M (1 port)";
			case 0x120e0400: return "PC400";
			case 0x120f0001: return "Roadrunner serial HIPPI";
			case 0x121700f7: return "Firewire (IEEE 1394)";
			case 0x121710f7: return "1394 OHCI Compliant Host Controller";
			case 0x121711f7: return "OZ600 1394a-2000 Controller";
			case 0x121713f7: return "1394 OHCI Compliant Host Controller";
			case 0x12176729: return "OZ6729";
			case 0x1217673a: return "OZ6730";
			case 0x12176832: return "OZ6832/6833 CardBus Controller";
			case 0x12176836: return "OZ6836/6860 CardBus Controller";
			case 0x12176872: return "OZ6812 CardBus Controller";
			case 0x12176925: return "OZ6922 CardBus Controller";
			case 0x12176933: return "OZ6933/711E1 CardBus/SmartCardBus Controller";
			case 0x12176972: return "OZ601/6912/711E0 CardBus/SmartCardBus Controller";
			case 0x12177110: return "OZ711Mx 4-in-1 MemoryCardBus Accelerator";
			case 0x12177112: return "OZ711EC1/M1 SmartCardBus/MemoryCardBus Controller";
			case 0x12177113: return "OZ711EC1 SmartCardBus Controller";
			case 0x12177114: return "OZ711M1/MC1 4-in-1 MemoryCardBus Controller";
			case 0x12177120: return "Integrated MMC/SD Controller";
			case 0x12177130: return "Integrated MS/xD Controller";
			case 0x12177134: return "OZ711MP1/MS1 MemoryCardBus Controller";
			case 0x12177135: return "Cardbus bridge";
			case 0x12177136: return "OZ711SP1 Memory CardBus Controller";
			case 0x121771e2: return "OZ711E2 SmartCardBus Controller";
			case 0x12177212: return "OZ711M2 4-in-1 MemoryCardBus Controller";
			case 0x12177213: return "OZ6933E CardBus Controller";
			case 0x12177223: return "OZ711M3/MC3 4-in-1 MemoryCardBus Controller";
			case 0x12177233: return "OZ711MP3/MS3 4-in-1 MemoryCardBus Controller";
			case 0x12178120: return "Integrated MMC/SD Controller";
			case 0x12178130: return "Integrated MS/MSPRO/xD Controller";
			case 0x12178220: return "OZ600FJ1/OZ900FJ1 SD/MMC Card Reader Controller";
			case 0x12178221: return "OZ600FJ0/OZ900FJ0/OZ600FJS SD/MMC Card Reader Controller";
			case 0x12178320: return "OZ600RJ1/OZ900RJ1 SD/MMC Card Reader Controller";
			case 0x12178321: return "OZ600RJ0/OZ900RJ0/OZ600RJS SD/MMC Card Reader Controller";
			case 0x12178330: return "OZ600 MS/xD Controller";
			case 0x12178331: return "O2 Flash Memory Card";
			case 0x12178520: return "SD/MMC Card Reader Controller";
			case 0x12178621: return "SD/MMC Card Reader Controller";
			case 0x121a0001: return "Voodoo";
			case 0x121a0002: return "Voodoo 2";
			case 0x121a0003: return "Voodoo Banshee";
			case 0x121a0004: return "Voodoo Banshee [Velocity 100]";
			case 0x121a0005: return "Voodoo 3";
			case 0x121a0009: return "Voodoo 4 / Voodoo 5";
			case 0x121a0057: return "Voodoo 3/3000 [Avenger]";
			case 0x121e0201: return "Myrinet 2000 Scalable Cluster Interconnect";
			case 0x12201220: return "AMCC 5933 TMS320C80 DSP/Imaging board";
			case 0x12219172: return "PO-64L(PCI)H [Isolated Digital Output Board for PCI]";
			case 0x122191a2: return "PO-32L(PCI)H [Isolated Digital Output Board for PCI]";
			case 0x122191c3: return "DA16-16(LPCI)L [Un-insulated highly precise analog output board for Low Profile PCI]";
			case 0x1221b152: return "DIO-96D2-LPCI";
			case 0x1221c103: return "ADA16-32/2(PCI)F [High-Speed Analog I/O Board for PCI]";
			case 0x12230003: return "PM/Link";
			case 0x12230004: return "PM/T1";
			case 0x12230005: return "PM/E1";
			case 0x12230008: return "PM/SLS";
			case 0x12230009: return "BajaSpan Resource Target";
			case 0x1223000a: return "BajaSpan Section 0";
			case 0x1223000b: return "BajaSpan Section 1";
			case 0x1223000c: return "BajaSpan Section 2";
			case 0x1223000d: return "BajaSpan Section 3";
			case 0x1223000e: return "PM/PPC";
			case 0x12270006: return "Raptor GFX 8P";
			case 0x12270023: return "Raptor GFX [1100T]";
			case 0x12270045: return "Raptor 4000-L [Linux version]";
			case 0x1227004a: return "Raptor 4000-LR-L [Linux version]";
			case 0x122d1206: return "368DSP";
			case 0x122d1400: return "Trident PCI288-Q3DII (NX)";
			case 0x122d50dc: return "3328 Audio";
			case 0x122d80da: return "3328 Audio";
			case 0x122e7722: return "Napatech XL1";
			case 0x122e7724: return "Napatech XL2/XA";
			case 0x122e7729: return "Napatech XD";
			case 0x123104e1: return "Desktop PCI Telephony 4";
			case 0x123105e1: return "Desktop PCI Telephony 5/6";
			case 0x12310d00: return "LightParser";
			case 0x12310d02: return "LightParser 2";
			case 0x12310d13: return "Desktop PCI L1/L3 Telephony";
			case 0x12360000: return "RealMagic64/GX";
			case 0x12366401: return "REALmagic 64/GX (SD 6425)";
			case 0x123d0000: return "EasyConnect 8/32";
			case 0x123d0002: return "EasyConnect 8/64";
			case 0x123d0003: return "EasyIO";
			case 0x123f00e4: return "MPEG";
			case 0x123f8120: return "DVxplore Codec";
			case 0x123f8888: return "Cinemaster C 3.0 DVD Decoder";
			case 0x12421560: return "JNIC-1560 PCI-X Fibre Channel Controller";
			case 0x12424643: return "FCI-1063 Fibre Channel Adapter";
			case 0x12426562: return "FCX2-6562 Dual Channel PCI-X Fibre Channel Adapter";
			case 0x1242656a: return "FCX-6562 PCI-X Fibre Channel Adapter";
			case 0x12440700: return "B1 ISDN";
			case 0x12440800: return "C4 ISDN";
			case 0x12440a00: return "A1 ISDN [Fritz]";
			case 0x12440e00: return "Fritz!Card PCI v2.0 ISDN";
			case 0x12440e80: return "Fritz!Card PCI v2.1 ISDN";
			case 0x12441100: return "C2 ISDN";
			case 0x12441200: return "T1 ISDN";
			case 0x12442700: return "Fritz!Card DSL SL";
			case 0x12442900: return "Fritz!Card DSL v2.0";
			case 0x124b0040: return "PCI-40A or cPCI-200 Quad IndustryPack carrier";
			case 0x124d0000: return "EasyConnection 8/32";
			case 0x124d0002: return "EasyConnection 8/64";
			case 0x124d0003: return "EasyIO";
			case 0x124d0004: return "EasyConnection/RA";
			case 0x124f0041: return "IFT-2000 Series RAID Controller";
			case 0x12540065: return "DVB Master FD";
			case 0x1254007c: return "DVB Master Quad/o";
			case 0x12551110: return "MPEG Forge";
			case 0x12551210: return "MPEG Fusion";
			case 0x12552110: return "VideoPlex";
			case 0x12552120: return "VideoPlex CC";
			case 0x12552130: return "VideoQuest";
			case 0x12564201: return "PCI-2220I";
			case 0x12564401: return "PCI-2240I";
			case 0x12565201: return "PCI-2000";
			case 0x12592560: return "AT-2560 Fast Ethernet Adapter (i82557B)";
			case 0x12592801: return "AT-2801FX (RTL-8139)";
			case 0x1259a117: return "RTL81xx Fast Ethernet";
			case 0x1259a11e: return "RTL81xx Fast Ethernet";
			case 0x1259a120: return "21x4x DEC-Tulip compatible 10/100 Ethernet";
			case 0x125b1400: return "AX88141 Fast Ethernet Controller";
			case 0x125b9100: return "AX99100 PCIe to Multi I/O Controller";
			case 0x125c0101: return "Saturn 4520P";
			case 0x125c0640: return "Aries 16000P";
			case 0x125d0000: return "ES336H Fax Modem (Early Model)";
			case 0x125d1948: return "ES1948 Maestro-1";
			case 0x125d1968: return "ES1968 Maestro 2";
			case 0x125d1969: return "ES1938/ES1946/ES1969 Solo-1 Audiodrive";
			case 0x125d1978: return "ES1978 Maestro 2E";
			case 0x125d1988: return "ES1988 Allegro-1";
			case 0x125d1989: return "ESS Modem";
			case 0x125d1998: return "ES1983S Maestro-3i PCI Audio Accelerator";
			case 0x125d1999: return "ES1983S Maestro-3i PCI Modem Accelerator";
			case 0x125d199a: return "ES1983S Maestro-3i PCI Audio Accelerator";
			case 0x125d199b: return "ES1983S Maestro-3i PCI Modem Accelerator";
			case 0x125d2808: return "ES336H Fax Modem (Later Model)";
			case 0x125d2838: return "ES2838/2839 SuperLink Modem";
			case 0x125d2898: return "ES2898 Modem";
			case 0x125f2071: return "CC PMC/232";
			case 0x125f2084: return "CC PMC/23P";
			case 0x125f2091: return "CC PMC/422";
			case 0x12603872: return "ISL3872 [Prism 3]";
			case 0x12603873: return "ISL3874 [Prism 2.5]/ISL3872 [Prism 3]";
			case 0x12603877: return "ISL3877 [Prism Indigo]";
			case 0x12603886: return "ISL3886 [Prism Javelin/Prism Xbow]";
			case 0x12603890: return "ISL3890 [Prism GT/Prism Duette]/ISL3886 [Prism Javelin/Prism Xbow]";
			case 0x12608130: return "HMP8130 NTSC/PAL Video Decoder";
			case 0x12608131: return "HMP8131 NTSC/PAL Video Decoder";
			case 0x1260ffff: return "ISL3886IK";
			case 0x12660001: return "NE10/100 Adapter (i82557B)";
			case 0x12661910: return "NE2000Plus (RT8029) Ethernet Adapter";
			case 0x12675352: return "PCR2101";
			case 0x12675a4b: return "Telsat Turbo";
			case 0x126900b3: return "5G Data Card [Cinterion MV31-W]";
			case 0x126c1211: return "10/100BaseTX [RTL81xx]";
			case 0x126c126c: return "802.11b Wireless Ethernet Adapter";
			case 0x126f0501: return "SM501 VoyagerGX Rev. AA";
			case 0x126f0510: return "SM501 VoyagerGX Rev. B";
			case 0x126f0710: return "SM710 LynxEM";
			case 0x126f0712: return "SM712 LynxEM+";
			case 0x126f0718: return "SM718 LynxSE+";
			case 0x126f0720: return "SM720 Lynx3DM";
			case 0x126f0730: return "SM731 Cougar3DR";
			case 0x126f0750: return "SM750";
			case 0x126f0810: return "SM810 LynxE";
			case 0x126f0811: return "SM811 LynxE";
			case 0x126f0820: return "SM820 Lynx3D";
			case 0x126f0910: return "SM910";
			case 0x126f2262: return "SM2262/SM2262EN SSD Controller";
			case 0x126f2263: return "SM2263EN/SM2263XT SSD Controller";
			case 0x12730002: return "DirecPC";
			case 0x12741171: return "ES1373 / Creative Labs CT5803 [AudioPCI]";
			case 0x12741371: return "ES1371/ES1373 / Creative Labs CT2518";
			case 0x12745000: return "ES1370 [AudioPCI]";
			case 0x12745880: return "5880B / Creative Labs CT5880";
			case 0x12748001: return "CT5880 [AudioPCI]";
			case 0x12748002: return "5880A [AudioPCI]";
			case 0x12780701: return "TPE3/TM3 PowerPC Node";
			case 0x12780710: return "TPE5 PowerPC PCI board";
			case 0x12781100: return "PMC-FPGA02";
			case 0x12781101: return "TS-C43 card with 4 ADSP-TS101 processors";
			case 0x12790060: return "TM8000 Northbridge";
			case 0x12790061: return "TM8000 AGP bridge";
			case 0x12790295: return "Northbridge";
			case 0x12790395: return "LongRun Northbridge";
			case 0x12790396: return "SDRAM controller";
			case 0x12790397: return "BIOS scratchpad";
			case 0x127a1002: return "HCF 56k Data/Fax Modem";
			case 0x127a1003: return "HCF 56k Data/Fax Modem";
			case 0x127a1004: return "HCF 56k Data/Fax/Voice Modem";
			case 0x127a1005: return "HCF 56k Data/Fax/Voice/Spkp (w/Handset) Modem";
			case 0x127a1022: return "HCF 56k Modem";
			case 0x127a1023: return "HCF 56k Data/Fax Modem";
			case 0x127a1024: return "HCF 56k Data/Fax/Voice Modem";
			case 0x127a1025: return "HCF 56k Data/Fax/Voice/Spkp (w/Handset) Modem";
			case 0x127a1026: return "HCF 56k PCI Speakerphone Modem";
			case 0x127a1032: return "HCF 56k Modem";
			case 0x127a1033: return "HCF 56k Modem";
			case 0x127a1034: return "HCF 56k Modem";
			case 0x127a1035: return "HCF 56k PCI Speakerphone Modem";
			case 0x127a1036: return "HCF 56k Modem";
			case 0x127a1085: return "HCF 56k Volcano PCI Modem";
			case 0x127a2004: return "HSF 56k Data/Fax/Voice/Spkp (w/Handset) Modem";
			case 0x127a2005: return "HCF 56k Data/Fax Modem";
			case 0x127a2013: return "HSF 56k Data/Fax Modem";
			case 0x127a2014: return "HSF 56k Data/Fax/Voice Modem";
			case 0x127a2015: return "HSF 56k Data/Fax/Voice/Spkp (w/Handset) Modem";
			case 0x127a2016: return "HSF 56k Data/Fax/Voice/Spkp Modem";
			case 0x127a4311: return "Riptide HSF 56k PCI Modem";
			case 0x127a4320: return "Riptide PCI Audio Controller";
			case 0x127a4321: return "Riptide HCF 56k PCI Modem";
			case 0x127a4322: return "Riptide PCI Game Controller";
			case 0x127a8234: return "RapidFire 616X ATM155 Adapter";
			case 0x127e0010: return "Videum 1000 Plus";
			case 0x12826585: return "DM562P V90 Modem";
			case 0x12829009: return "DM9009 Ethernet Controller";
			case 0x12829100: return "21x4x DEC-Tulip compatible 10/100 Ethernet";
			case 0x12829102: return "DM9102 Fast Ethernet Controller";
			case 0x12829132: return "Ethernet 100/10 MBit";
			case 0x1283673a: return "IT8330G";
			case 0x12838152: return "IT8152F/G Advanced RISC-to-PCI Companion Chip";
			case 0x12838211: return "ITE 8211F Single Channel UDMA 133";
			case 0x12838212: return "IT8212 Dual channel ATA RAID controller";
			case 0x12838213: return "IT8213 IDE Controller";
			case 0x12838330: return "IT8330G";
			case 0x12838872: return "IT887xF PCI to ISA I/O chip with SMB, GPIO, Serial or Parallel Port";
			case 0x12838888: return "IT8888F/G PCI to ISA Bridge with SMB [Golden Gate]";
			case 0x12838889: return "IT8889F PCI to ISA Bridge";
			case 0x12838892: return "IT8892E PCIe to PCI Bridge";
			case 0x12838893: return "IT8893E PCIe to PCI Bridge";
			case 0x1283e886: return "IT8330G";
			case 0x12850100: return "AGOGO sound chip (aka ESS Maestro 1)";
			case 0x1287001e: return "LS220D DVD Decoder";
			case 0x1287001f: return "LS220C DVD Decoder";
			case 0x128d0021: return "ATM155 Adapter";
			case 0x128e0008: return "ST128 WSS/SB";
			case 0x128e0009: return "ST128 SAM9407";
			case 0x128e000a: return "ST128 Game Port";
			case 0x128e000b: return "ST128 MPU Port";
			case 0x128e000c: return "ST128 Ctrl Port";
			case 0x1292fc02: return "Pyramid3D TR25202";
			case 0x12950800: return "PXR800";
			case 0x12951000: return "PXD1000";
			case 0x129a0615: return "PBT-615 PCI-X Bus Analyzer";
			case 0x129a1100: return "PMC-FPGA05";
			case 0x129a1106: return "XMC-FPGA05F, PCI interface";
			case 0x129a1107: return "XMC-FPGA05F, PCIe interface";
			case 0x129a1108: return "XMC-FPGA05D, PCI interface";
			case 0x129a1109: return "XMC-FPGA05D, PCIe interface";
			case 0x12a38105: return "T8105 H100 Digital Switch";
			case 0x12ab0000: return "MPG160/Kuroutoshikou ITVC15-STVLP";
			case 0x12ab0002: return "AU8830 [Vortex2] Based Sound Card With A3D Support";
			case 0x12ab0003: return "T507 (DVB-T) TV tuner/capture device";
			case 0x12ab2300: return "Club-3D Zap TV2100";
			case 0x12ab3000: return "MPG-200C PCI DVD Decoder Card";
			case 0x12ab4789: return "MPC788 MiniPCI Hybrid TV Tuner";
			case 0x12abfff3: return "MPG600/Kuroutoshikou ITVC16-STVLP";
			case 0x12abffff: return "MPG600/Kuroutoshikou ITVC16-STVLP";
			case 0x12ae0001: return "AceNIC Gigabit Ethernet";
			case 0x12ae0002: return "AceNIC Gigabit Ethernet (Copper)";
			case 0x12ae00fa: return "Farallon PN9100-T Gigabit Ethernet";
			case 0x12b91006: return "WinModem";
			case 0x12b91007: return "USR 56k Internal WinModem";
			case 0x12b91008: return "56K FaxModem Model 5610";
			case 0x12be3041: return "AN3041Q CO-MEM";
			case 0x12be3042: return "AN3042Q CO-MEM Lite";
			case 0x12c30058: return "PCI NE2K Ethernet";
			case 0x12c35598: return "PCI NE2K Ethernet";
			case 0x12c40001: return "Blue HEAT/PCI 8 (RS232/CL/RJ11)";
			case 0x12c40002: return "Blue HEAT/PCI 4 (RS232)";
			case 0x12c40003: return "Blue HEAT/PCI 2 (RS232)";
			case 0x12c40004: return "Blue HEAT/PCI 8 (UNIV, RS485)";
			case 0x12c40005: return "Blue HEAT/PCI 4+4/6+2 (UNIV, RS232/485)";
			case 0x12c40006: return "Blue HEAT/PCI 4 (OPTO, RS485)";
			case 0x12c40007: return "Blue HEAT/PCI 2+2 (RS232/485)";
			case 0x12c40008: return "Blue HEAT/PCI 2 (OPTO, Tx, RS485)";
			case 0x12c40009: return "Blue HEAT/PCI 2+6 (RS232/485)";
			case 0x12c4000a: return "Blue HEAT/PCI 8 (Tx, RS485)";
			case 0x12c4000b: return "Blue HEAT/PCI 4 (Tx, RS485)";
			case 0x12c4000c: return "Blue HEAT/PCI 2 (20 MHz, RS485)";
			case 0x12c4000d: return "Blue HEAT/PCI 2 PTM";
			case 0x12c40100: return "NT960/PCI";
			case 0x12c40201: return "cPCI Titan - 2 Port";
			case 0x12c40202: return "cPCI Titan - 4 Port";
			case 0x12c40300: return "CTI PCI UART 2 (RS232)";
			case 0x12c40301: return "CTI PCI UART 4 (RS232)";
			case 0x12c40302: return "CTI PCI UART 8 (RS232)";
			case 0x12c40310: return "CTI PCI UART 1+1 (RS232/485)";
			case 0x12c40311: return "CTI PCI UART 2+2 (RS232/485)";
			case 0x12c40312: return "CTI PCI UART 4+4 (RS232/485)";
			case 0x12c40320: return "CTI PCI UART 2";
			case 0x12c40321: return "CTI PCI UART 4";
			case 0x12c40322: return "CTI PCI UART 8";
			case 0x12c40330: return "CTI PCI UART 2 (RS485)";
			case 0x12c40331: return "CTI PCI UART 4 (RS485)";
			case 0x12c40332: return "CTI PCI UART 8 (RS485)";
			case 0x12c5007e: return "Imaging/Scanning Subsystem Engine";
			case 0x12c5007f: return "Imaging/Scanning Subsystem Engine";
			case 0x12c50081: return "PCIVST [Grayscale Thresholding Engine]";
			case 0x12c50085: return "Video Simulator/Sender";
			case 0x12c50086: return "THR2 Multi-scale Thresholder";
			case 0x12c70546: return "Springware D/120JCT-LS";
			case 0x12c70647: return "Springware D/240JCT-T1";
			case 0x12c70676: return "Springware D/41JCT-LS";
			case 0x12c70685: return "Springware D/480JCT-2T1";
			case 0x12cb0027: return "SC4 (StudioCard)";
			case 0x12cb002e: return "StudioCard 2000";
			case 0x12d20008: return "NV1";
			case 0x12d20009: return "DAC64";
			case 0x12d20018: return "Riva128";
			case 0x12d20019: return "Riva128ZX";
			case 0x12d20020: return "TNT";
			case 0x12d20028: return "TNT2";
			case 0x12d20029: return "UTNT2";
			case 0x12d2002c: return "VTNT2";
			case 0x12d200a0: return "ITNT2";
			case 0x12d40200: return "T1 Card";
			case 0x12d50003: return "BSP16";
			case 0x12d51000: return "BSP15";
			case 0x12d801a7: return "7C21P100 2-port PCI-X to PCI-X Bridge";
			case 0x12d80303: return "PCI Express Switch 3-3";
			case 0x12d80508: return "PI7C9X20508GP PCI Express Switch 5Port-8Lane";
			case 0x12d82304: return "PI7C9X2G304 EL/SL PCIe2 3-Port/4-Lane Packet Switch";
			case 0x12d82404: return "PI7C9X2G404 EL/SL PCIe2 4-Port/4-Lane Packet Switch";
			case 0x12d82608: return "PI7C9X2G608GP PCIe2 6-Port/8-Lane Packet Switch";
			case 0x12d8400a: return "PI7C9X442SL PCI Express Bridge Port";
			case 0x12d8400e: return "PI7C9X442SL USB OHCI Controller";
			case 0x12d8400f: return "PI7C9X442SL USB EHCI Controller";
			case 0x12d871e2: return "PI7C7300A/PI7C7300D PCI-to-PCI Bridge";
			case 0x12d871e3: return "PI7C7300A/PI7C7300D PCI-to-PCI Bridge (Secondary Bus 2)";
			case 0x12d88140: return "PI7C8140A PCI-to-PCI Bridge";
			case 0x12d88148: return "PI7C8148A/PI7C8148B PCI-to-PCI Bridge";
			case 0x12d88150: return "PCI to PCI Bridge";
			case 0x12d88152: return "PI7C8152A/PI7C8152B/PI7C8152BI PCI-to-PCI Bridge";
			case 0x12d88154: return "PI7C8154A/PI7C8154B/PI7C8154BI PCI-to-PCI Bridge";
			case 0x12d88619: return "PI7C9X2G1616PR PCIe2 16-Port/16-Lane Packet Switch";
			case 0x12d8e110: return "PI7C9X110 PCI Express to PCI bridge";
			case 0x12d8e111: return "PI7C9X111SL PCIe-to-PCI Reversible Bridge";
			case 0x12d8e130: return "PCI Express to PCI-XPI7C9X130 PCI-X Bridge";
			case 0x12d90002: return "PCI Prosody";
			case 0x12d90004: return "cPCI Prosody";
			case 0x12d90005: return "Aculab E1/T1 PCI card";
			case 0x12d91078: return "Prosody X class e1000 device";
			case 0x12de0200: return "CryptoSwift CS200";
			case 0x12e00010: return "ST16C654 Quad UART";
			case 0x12e00020: return "ST16C654 Quad UART";
			case 0x12e00030: return "ST16C654 Quad UART";
			case 0x12eb0001: return "Vortex 1";
			case 0x12eb0002: return "Vortex 2";
			case 0x12eb0003: return "AU8810 Vortex Digital Audio Processor";
			case 0x12eb8803: return "Vortex 56k Software Modem";
			case 0x12f80002: return "VideoMaker";
			case 0x12fb0001: return "PMC-MAI";
			case 0x12fb00f5: return "F5 Dakar";
			case 0x12fb02ad: return "PMC-2MAI";
			case 0x12fb2adc: return "ePMC-2ADC";
			case 0x12fb3100: return "PRO-3100";
			case 0x12fb3500: return "PRO-3500";
			case 0x12fb4d4f: return "Modena";
			case 0x12fb8120: return "ePMC-8120";
			case 0x12fbda62: return "Daytona C6201 PCI (Hurricane)";
			case 0x12fbdb62: return "Ingliston XBIF";
			case 0x12fbdc62: return "Ingliston PLX9054";
			case 0x12fbdd62: return "Ingliston JTAG/ISP";
			case 0x12fbeddc: return "ePMC-MSDDC";
			case 0x12fbfa01: return "ePMC-FPGA";
			case 0x13030030: return "X3-SDF 4-channel XMC acquisition board";
			case 0x13070001: return "PCI-DAS1602/16";
			case 0x1307000b: return "PCI-DIO48H";
			case 0x1307000c: return "PCI-PDISO8";
			case 0x1307000d: return "PCI-PDISO16";
			case 0x1307000f: return "PCI-DAS1200";
			case 0x13070010: return "PCI-DAS1602/12";
			case 0x13070014: return "PCI-DIO24H";
			case 0x13070015: return "PCI-DIO24H/CTR3";
			case 0x13070016: return "PCI-DIO48H/CTR15";
			case 0x13070017: return "PCI-DIO96H";
			case 0x13070018: return "PCI-CTR05";
			case 0x13070019: return "PCI-DAS1200/JR";
			case 0x1307001a: return "PCI-DAS1001";
			case 0x1307001b: return "PCI-DAS1002";
			case 0x1307001c: return "PCI-DAS1602JR/16";
			case 0x1307001d: return "PCI-DAS6402/16";
			case 0x1307001e: return "PCI-DAS6402/12";
			case 0x1307001f: return "PCI-DAS16/M1";
			case 0x13070020: return "PCI-DDA02/12";
			case 0x13070021: return "PCI-DDA04/12";
			case 0x13070022: return "PCI-DDA08/12";
			case 0x13070023: return "PCI-DDA02/16";
			case 0x13070024: return "PCI-DDA04/16";
			case 0x13070025: return "PCI-DDA08/16";
			case 0x13070026: return "PCI-DAC04/12-HS";
			case 0x13070027: return "PCI-DAC04/16-HS";
			case 0x13070028: return "PCI-DIO24";
			case 0x13070029: return "PCI-DAS08";
			case 0x1307002c: return "PCI-INT32";
			case 0x13070033: return "PCI-DUAL-AC5";
			case 0x13070034: return "PCI-DAS-TC";
			case 0x13070035: return "PCI-DAS64/M1/16";
			case 0x13070036: return "PCI-DAS64/M2/16";
			case 0x13070037: return "PCI-DAS64/M3/16";
			case 0x1307004c: return "PCI-DAS1000";
			case 0x1307004d: return "PCI-QUAD04";
			case 0x13070052: return "PCI-DAS4020/12";
			case 0x13070053: return "PCIM-DDA06/16";
			case 0x13070054: return "PCI-DIO96";
			case 0x1307005d: return "PCI-DAS6023";
			case 0x1307005e: return "PCI-DAS6025";
			case 0x1307005f: return "PCI-DAS6030";
			case 0x13070060: return "PCI-DAS6031";
			case 0x13070061: return "PCI-DAS6032";
			case 0x13070062: return "PCI-DAS6033";
			case 0x13070063: return "PCI-DAS6034";
			case 0x13070064: return "PCI-DAS6035";
			case 0x13070065: return "PCI-DAS6040";
			case 0x13070066: return "PCI-DAS6052";
			case 0x13070067: return "PCI-DAS6070";
			case 0x13070068: return "PCI-DAS6071";
			case 0x1307006f: return "PCI-DAS6036";
			case 0x13070070: return "PCI-DAC6702";
			case 0x13070078: return "PCI-DAS6013";
			case 0x13070079: return "PCI-DAS6014";
			case 0x13070115: return "PCIe-DAS1602/16";
			case 0x13080001: return "NetCelerator Adapter";
			case 0x13170981: return "21x4x DEC-Tulip compatible 10/100 Ethernet";
			case 0x13170985: return "NC100 Network Everywhere Fast Ethernet 10/100";
			case 0x13171985: return "21x4x DEC-Tulip compatible 10/100 Ethernet";
			case 0x13172850: return "HSP MicroModem 56";
			case 0x13175120: return "ADM5120 OpenGate System-on-Chip";
			case 0x13178201: return "ADM8211 802.11b Wireless Interface";
			case 0x13178211: return "ADM8211 802.11b Wireless Interface";
			case 0x13179511: return "21x4x DEC-Tulip compatible 10/100 Ethernet";
			case 0x13180911: return "GNIC-II PCI Gigabit Ethernet [Hamachi]";
			case 0x13190801: return "Xwave QS3000A [FM801]";
			case 0x13190802: return "Xwave QS3000A [FM801 game port]";
			case 0x13191000: return "FM801 PCI Audio";
			case 0x13191001: return "FM801 PCI Joystick";
			case 0x131f1000: return "CyberSerial (1-port) 16550";
			case 0x131f1001: return "CyberSerial (1-port) 16650";
			case 0x131f1002: return "CyberSerial (1-port) 16850";
			case 0x131f1010: return "Duet 1S(16550)+1P";
			case 0x131f1011: return "Duet 1S(16650)+1P";
			case 0x131f1012: return "Duet 1S(16850)+1P";
			case 0x131f1020: return "CyberParallel (1-port)";
			case 0x131f1021: return "CyberParallel (2-port)";
			case 0x131f1030: return "CyberSerial (2-port) 16550";
			case 0x131f1031: return "CyberSerial (2-port) 16650";
			case 0x131f1032: return "CyberSerial (2-port) 16850";
			case 0x131f1034: return "Trio 2S(16550)+1P";
			case 0x131f1035: return "Trio 2S(16650)+1P";
			case 0x131f1036: return "Trio 2S(16850)+1P";
			case 0x131f1050: return "CyberSerial (4-port) 16550";
			case 0x131f1051: return "CyberSerial (4-port) 16650";
			case 0x131f1052: return "CyberSerial (4-port) 16850";
			case 0x131f2000: return "CyberSerial (1-port) 16550";
			case 0x131f2001: return "CyberSerial (1-port) 16650";
			case 0x131f2002: return "CyberSerial (1-port) 16850";
			case 0x131f2010: return "Duet 1S(16550)+1P";
			case 0x131f2011: return "Duet 1S(16650)+1P";
			case 0x131f2012: return "Duet 1S(16850)+1P";
			case 0x131f2020: return "CyberParallel (1-port)";
			case 0x131f2021: return "CyberParallel (2-port)";
			case 0x131f2030: return "CyberSerial (2-port) 16550";
			case 0x131f2031: return "CyberSerial (2-port) 16650";
			case 0x131f2032: return "CyberSerial (2-port) 16850";
			case 0x131f2040: return "Trio 1S(16550)+2P";
			case 0x131f2041: return "Trio 1S(16650)+2P";
			case 0x131f2042: return "Trio 1S(16850)+2P";
			case 0x131f2050: return "CyberSerial (4-port) 16550";
			case 0x131f2051: return "CyberSerial (4-port) 16650";
			case 0x131f2052: return "CyberSerial (4-port) 16850";
			case 0x131f2060: return "Trio 2S(16550)+1P";
			case 0x131f2061: return "Trio 2S(16650)+1P";
			case 0x131f2062: return "Trio 2S(16850)+1P";
			case 0x131f2081: return "CyberSerial (8-port) ST16654";
			case 0x13310030: return "ENP-2611";
			case 0x13318200: return "82600 Host Bridge";
			case 0x13318201: return "82600 IDE";
			case 0x13318202: return "82600 USB";
			case 0x13318210: return "82600 PCI Bridge";
			case 0x13325415: return "MM-5415CN PCI Memory Module with Battery Backup";
			case 0x13325425: return "MM-5425CN PCI 64/66 Memory Module with Battery Backup";
			case 0x13326140: return "MM-6140D";
			case 0x13445150: return "RealSSD P320h";
			case 0x13445151: return "RealSSD P320m";
			case 0x13445152: return "RealSSD P320s";
			case 0x13445153: return "RealSSD P325m";
			case 0x13445160: return "RealSSD P420h";
			case 0x13445161: return "RealSSD P420m";
			case 0x13445163: return "RealSSD P425m";
			case 0x13445180: return "9100 PRO NVMe SSD";
			case 0x13445181: return "9100 MAX NVMe SSD";
			case 0x13445190: return "9200 ECO NVMe SSD";
			case 0x13445191: return "9200 PRO NVMe SSD";
			case 0x13445192: return "9200 MAX NVMe SSD";
			case 0x134a0001: return "Domex 536";
			case 0x134a0002: return "Domex DMX3194UP SCSI Adapter";
			case 0x134d2189: return "HSP56 MicroModem";
			case 0x134d2486: return "2304WT V.92 MDC Modem";
			case 0x134d7890: return "HSP MicroModem 56";
			case 0x134d7891: return "HSP MicroModem 56";
			case 0x134d7892: return "HSP MicroModem 56";
			case 0x134d7893: return "HSP MicroModem 56";
			case 0x134d7894: return "HSP MicroModem 56";
			case 0x134d7895: return "HSP MicroModem 56";
			case 0x134d7896: return "HSP MicroModem 56";
			case 0x134d7897: return "HSP MicroModem 56";
			case 0x13530002: return "Proserver";
			case 0x13530003: return "PCI-FUT";
			case 0x13530004: return "PCI-S0";
			case 0x13530005: return "PCI-FUT-S0";
			case 0x13530006: return "OTDU-1U (FPGA Zynq-7000)";
			case 0x13530007: return "OTDU-EX";
			case 0x135a0a61: return "UC-324 [VELOCITY RS422/485]";
			case 0x135c0010: return "QSC-100";
			case 0x135c0020: return "DSC-100";
			case 0x135c0030: return "DSC-200/300";
			case 0x135c0040: return "QSC-200/300";
			case 0x135c0050: return "ESC-100D";
			case 0x135c0060: return "ESC-100M";
			case 0x135c00f0: return "MPAC-100 Synchronous Serial Card (Zilog 85230)";
			case 0x135c0170: return "QSCLP-100";
			case 0x135c0180: return "DSCLP-100";
			case 0x135c0190: return "SSCLP-100";
			case 0x135c01a0: return "QSCLP-200/300";
			case 0x135c01b0: return "DSCLP-200/300";
			case 0x135c01c0: return "SSCLP-200/300";
			case 0x135c0258: return "DSPSX-200/300";
			case 0x135e5101: return "Route 56.PCI - Multi-Protocol Serial Interface (Zilog Z16C32)";
			case 0x135e7101: return "Single Port RS-232/422/485/530";
			case 0x135e7201: return "Dual Port RS-232/422/485 Interface";
			case 0x135e7202: return "Dual Port RS-232 Interface";
			case 0x135e7401: return "Four Port RS-232 Interface";
			case 0x135e7402: return "Four Port RS-422/485 Interface";
			case 0x135e7801: return "Eight Port RS-232 Interface";
			case 0x135e7804: return "Eight Port RS-232/422/485 Interface";
			case 0x135e8001: return "8001 Digital I/O Adapter";
			case 0x13600101: return "PCI32 DCF77 Radio Clock";
			case 0x13600102: return "PCI509 DCF77 Radio Clock";
			case 0x13600103: return "PCI510 DCF77 Radio Clock";
			case 0x13600104: return "PCI511 DCF77 Radio Clock";
			case 0x13600105: return "PEX511 DCF77 Radio Clock (PCI Express)";
			case 0x13600106: return "PZF180PEX High Precision DCF77 Radio Clock (PCI Express)";
			case 0x13600201: return "GPS167PCI GPS Receiver";
			case 0x13600202: return "GPS168PCI GPS Receiver";
			case 0x13600203: return "GPS169PCI GPS Receiver";
			case 0x13600204: return "GPS170PCI GPS Receiver";
			case 0x13600205: return "GPS170PEX GPS Receiver (PCI Express)";
			case 0x13600206: return "GPS180PEX GPS Receiver (PCI Express)";
			case 0x13600207: return "GLN180PEX GPS/GLONASS receiver (PCI Express)";
			case 0x13600208: return "GPS180AMC GPS Receiver (PCI Express / MicroTCA / AdvancedMC)";
			case 0x13600209: return "GNS181PEX GPS/Galileo/GLONASS/BEIDOU receiver (PCI Express)";
			case 0x13600301: return "TCR510PCI IRIG Timecode Reader";
			case 0x13600302: return "TCR167PCI IRIG Timecode Reader";
			case 0x13600303: return "TCR511PCI IRIG Timecode Reader";
			case 0x13600304: return "TCR511PEX IRIG Timecode Reader (PCI Express)";
			case 0x13600305: return "TCR170PEX IRIG Timecode Reader (PCI Express)";
			case 0x13600306: return "TCR180PEX IRIG Timecode Reader (PCI Express)";
			case 0x13600501: return "PTP270PEX PTP/IEEE1588 slave card (PCI Express)";
			case 0x13600601: return "FRC511PEX Free Running Clock (PCI Express)";
			case 0x136a0004: return "HST Saphir VII mini PCI";
			case 0x136a0007: return "HST Saphir III E MultiLink 4";
			case 0x136a0008: return "HST Saphir III E MultiLink 8";
			case 0x136a000a: return "HST Saphir III E MultiLink 2";
			case 0x136bff01: return "KL5A72002 Motion JPEG";
			case 0x1371434e: return "GigaCard Network Adapter";
			case 0x13740024: return "Silicom Dual port Giga Ethernet BGE Bypass Server Adapter";
			case 0x13740025: return "Silicom Quad port Giga Ethernet BGE Bypass Server Adapter";
			case 0x13740026: return "Silicom Dual port Fiber Giga Ethernet 546 Bypass Server Adapter";
			case 0x13740027: return "Silicom Dual port Fiber LX Giga Ethernet 546 Bypass Server Adapter";
			case 0x13740029: return "Silicom Dual port Copper Giga Ethernet 546GB Bypass Server Adapter";
			case 0x1374002a: return "Silicom Dual port Fiber Giga Ethernet 546 TAP/Bypass Server Adapter";
			case 0x1374002b: return "Silicom Dual port Copper Fast Ethernet 546 TAP/Bypass Server Adapter (PXE2TBI)";
			case 0x1374002c: return "Silicom Quad port Copper Giga Ethernet 546GB Bypass Server Adapter (PXG4BPI)";
			case 0x1374002d: return "Silicom Quad port Fiber-SX Giga Ethernet 546GB Bypass Server Adapter (PXG4BPFI)";
			case 0x1374002e: return "Silicom Quad port Fiber-LX Giga Ethernet 546GB Bypass Server Adapter (PXG4BPFI-LX)";
			case 0x1374002f: return "Silicom Dual port Fiber-SX Giga Ethernet 546GB Low profile Bypass Server Adapter (PXG2BPFIL)";
			case 0x13740030: return "Silicom Dual port Fiber-LX Giga Ethernet 546GB Low profile Bypass Server Adapter";
			case 0x13740031: return "Silicom Quad port Copper Giga Ethernet PCI-E Bypass Server Adapter";
			case 0x13740032: return "Silicom Dual port Copper Fast Ethernet 546 TAP/Bypass Server Adapter";
			case 0x13740034: return "Silicom Dual port Copper Giga Ethernet PCI-E BGE Bypass Server Adapter";
			case 0x13740035: return "Silicom Quad port Copper Giga Ethernet PCI-E BGE Bypass Server Adapter";
			case 0x13740036: return "Silicom Dual port Fiber Giga Ethernet PCI-E BGE Bypass Server Adapter";
			case 0x13740037: return "Silicom Dual port Copper Ethernet PCI-E Intel based Bypass Server Adapter";
			case 0x13740038: return "Silicom Quad port Copper Ethernet PCI-E Intel based Bypass Server Adapter";
			case 0x13740039: return "Silicom Dual port Fiber-SX Ethernet PCI-E Intel based Bypass Server Adapter";
			case 0x1374003a: return "Silicom Dual port Fiber-LX Ethernet PCI-E Intel based Bypass Server Adapter";
			case 0x1374003b: return "Silicom Dual port Fiber Ethernet PMC Intel based Bypass Server Adapter (PMCX2BPFI)";
			case 0x1374003c: return "Silicom Dual port Copper Ethernet PCI-X BGE based Bypass Server Adapter (PXG2BPRB)";
			case 0x1374003d: return "2-port Copper GBE Bypass with Caviume 1010 PCI-X";
			case 0x1374003e: return "Silicom Dual port Fiber Giga Ethernet PCI-E 571 TAP/Bypass Server Adapter (PEG2TBFI)";
			case 0x1374003f: return "Silicom Dual port Copper Giga Ethernet PCI-X 546 TAP/Bypass Server Adapter (PXG2TBI)";
			case 0x13740040: return "Silicom Quad port Fiber-SX Giga Ethernet 571 Bypass Server Adapter (PEG4BPFI)";
			case 0x13740042: return "4-port Copper GBE PMC-X Bypass";
			case 0x13740043: return "Silicom Quad port Fiber-SX Giga Ethernet 546 Bypass Server Adapter (PXG4BPFID)";
			case 0x13740045: return "Silicom 6 port Copper Giga Ethernet 546 Bypass Server Adapter (PXG6BPI)";
			case 0x13740046: return "4-port bypass PCI-E w disconnect low profile";
			case 0x13740047: return "Silicom Dual port Fiber-SX Giga Ethernet 571 Bypass Disconnect Server Adapter (PEG2BPFID)";
			case 0x1374004a: return "Silicom Quad port Fiber-LX Giga Ethernet 571 Bypass Server Adapter (PEG4BPFI-LX)";
			case 0x1374004d: return "Dual port Copper Giga Ethernet PCI-E Bypass Server Adapter";
			case 0x13740401: return "Gigabit Ethernet ExpressModule Bypass Server Adapter";
			case 0x13740420: return "Gigabit Ethernet ExpressModule Bypass Server Adapter";
			case 0x13740460: return "Gigabit Ethernet Express Module Bypass Server Adapter";
			case 0x13740461: return "Gigabit Ethernet ExpressModule Bypass Server Adapter";
			case 0x13740462: return "Gigabit Ethernet ExpressModule Bypass Server Adapter";
			case 0x13740470: return "Octal-port Copper Gigabit Ethernet Express Module Bypass Server Adapter";
			case 0x13740482: return "Dual-port Fiber (SR) 10 Gigabit Ethernet ExpressModule Bypass Server Adapter";
			case 0x13740483: return "Dual-port Fiber (LR) 10 Gigabit Ethernet ExpressModule Bypass Server Adapter";
			case 0x137a0001: return "PCI-324 Audiowire Interface";
			case 0x13820001: return "ARC88 audio recording card";
			case 0x13822008: return "Prodif 96 Pro sound system";
			case 0x13822048: return "Prodif Plus sound system";
			case 0x13822088: return "Marc 8 Midi sound system";
			case 0x138220c8: return "Marc A sound system";
			case 0x13824008: return "Marc 2 sound system";
			case 0x13824010: return "Marc 2 Pro sound system";
			case 0x13824048: return "Marc 4 MIDI sound system";
			case 0x13824088: return "Marc 4 Digi sound system";
			case 0x13824248: return "Marc X sound system";
			case 0x13824424: return "TRACE D4 Sound System";
			case 0x1385006b: return "WA301 802.11b Wireless PCI Adapter";
			case 0x13854100: return "MA301 802.11b Wireless PCI Adapter";
			case 0x13854601: return "WAG511 802.11a/b/g Dual Band Wireless PC Card";
			case 0x1385620a: return "GA620 Gigabit Ethernet";
			case 0x1385630a: return "GA630 Gigabit Ethernet";
			case 0x13890001: return "PCI1500PFB [Intelligent fieldbus adaptor]";
			case 0x138a003d: return "VFS491 Validity Sensor";
			case 0x13930001: return "UC7000 Serial";
			case 0x13931020: return "CP-102 (2-port RS-232 PCI)";
			case 0x13931021: return "CP-102UL (2-port RS-232 Universal PCI)";
			case 0x13931022: return "CP-102U (2-port RS-232 Universal PCI)";
			case 0x13931023: return "CP-102UF";
			case 0x13931024: return "CP-102E (2-port RS-232 Smart PCI Express Serial Board)";
			case 0x13931025: return "CP-102EL (2-port RS-232 Smart PCI Express Serial Board)";
			case 0x13931040: return "Smartio C104H/PCI";
			case 0x13931041: return "CP104U (4-port RS-232 Universal PCI)";
			case 0x13931042: return "CP104JU (4-port RS-232 Universal PCI)";
			case 0x13931043: return "CP104EL (4-port RS-232 Smart PCI Express)";
			case 0x13931044: return "POS104UL (4-port RS-232 Universal PCI)";
			case 0x13931045: return "CP-104EL-A (4-port RS-232 PCI Express Serial Board)";
			case 0x13931080: return "CB108 (8-port RS-232 PC/104-plus Module)";
			case 0x13931140: return "CT-114 series";
			case 0x13931141: return "Industrio CP-114";
			case 0x13931142: return "CB114 (4-port RS-232/422/485 PC/104-plus Module)";
			case 0x13931143: return "CP-114UL (4-port RS-232/422/485 Smart Universal PCI Serial Board)";
			case 0x13931144: return "CP-114EL (4-port RS-232/422/485 Smart PCI Express Serial Board)";
			case 0x13931180: return "CP118U (8-port RS-232/422/485 Smart Universal PCI)";
			case 0x13931181: return "CP118EL (8-port RS-232/422/485 Smart PCI Express)";
			case 0x13931182: return "CP-118EL-A (8-port RS-232/422/485 PCI Express Serial Board)";
			case 0x13931320: return "CP132 (2-port RS-422/485 PCI)";
			case 0x13931321: return "CP132U (2-Port RS-422/485 Universal PCI)";
			case 0x13931322: return "CP-132EL (2-port RS-422/485 Smart PCI Express Serial Board)";
			case 0x13931340: return "CP134U (4-Port RS-422/485 Universal PCI)";
			case 0x13931341: return "CB134I (4-port RS-422/485 PC/104-plus Module)";
			case 0x13931380: return "CP138U (8-port RS-232/422/485 Smart Universal PCI)";
			case 0x13931680: return "Smartio C168H/PCI";
			case 0x13931681: return "CP-168U V2 Smart Serial Board (8-port RS-232)";
			case 0x13931682: return "CP-168EL (8-port RS-232 Smart PCI Express)";
			case 0x13931683: return "CP-168EL-A (8-port RS-232 PCI Express Serial Board)";
			case 0x13932040: return "Intellio CP-204J";
			case 0x13932180: return "Intellio C218 Turbo PCI";
			case 0x13933200: return "Intellio C320 Turbo PCI";
			case 0x13940001: return "LXT1001 Gigabit Ethernet";
			case 0x139708b4: return "ISDN network Controller [HFC-4S]";
			case 0x139716b8: return "ISDN network Controller [HFC-8S]";
			case 0x13972bd0: return "ISDN network controller [HFC-PCI]";
			case 0x139730b1: return "ISDN network Controller [HFC-E1]";
			case 0x1397b700: return "ISDN network controller PrimuX S0 [HFC-PCI]";
			case 0x1397f001: return "GSM Network Controller [HFC-4GSM]";
			case 0x139a0001: return "Quad Port 10/100 Server Accelerator";
			case 0x139a0003: return "Single Port 10/100 Server Accelerator";
			case 0x139a0005: return "Single Port Gigabit Server Accelerator";
			case 0x13a30005: return "7751 Security Processor";
			case 0x13a30006: return "6500 Public Key Processor";
			case 0x13a30007: return "7811 Security Processor";
			case 0x13a30012: return "7951 Security Processor";
			case 0x13a30014: return "78XX Security Processor";
			case 0x13a30016: return "8065 Security Processor";
			case 0x13a30017: return "8165 Security Processor";
			case 0x13a30018: return "8154 Security Processor";
			case 0x13a3001d: return "7956 Security Processor";
			case 0x13a3001f: return "7855 Security Processor";
			case 0x13a30020: return "7955 Security Processor";
			case 0x13a30026: return "8155 Security Processor";
			case 0x13a3002e: return "9630 Compression Processor";
			case 0x13a3002f: return "9725 Compression and Security Processor";
			case 0x13a30033: return "8201 Acceleration Processor";
			case 0x13a30034: return "8202 Acceleration Processor";
			case 0x13a30035: return "8203 Acceleration Processor";
			case 0x13a30037: return "8204 Acceleration Processor";
			case 0x13a80152: return "XR17C/D152 Dual PCI UART";
			case 0x13a80154: return "XR17C154 Quad UART";
			case 0x13a80158: return "XR17C158 Octal UART";
			case 0x13a80252: return "XR17V252 Dual UART PCI controller";
			case 0x13a80254: return "XR17V254 Quad UART PCI controller";
			case 0x13a80258: return "XR17V258 Octal UART PCI controller";
			case 0x13a80352: return "XR17V3521 Dual PCIe UART";
			case 0x13c00010: return "SyncLink Adapter v1";
			case 0x13c00020: return "SyncLink SCC Adapter";
			case 0x13c00030: return "SyncLink Multiport Adapter";
			case 0x13c00070: return "SyncLink GT Adapter";
			case 0x13c00080: return "SyncLink GT4 Adapter";
			case 0x13c000a0: return "SyncLink GT2 Adapter";
			case 0x13c00210: return "SyncLink Adapter v2";
			case 0x13c11000: return "5xxx/6xxx-series PATA-RAID";
			case 0x13c11001: return "7xxx/8xxx-series PATA/SATA-RAID";
			case 0x13c11002: return "9xxx-series SATA-RAID";
			case 0x13c11003: return "9550SX SATA-II RAID PCI-X";
			case 0x13c11004: return "9650SE SATA-II RAID PCIe";
			case 0x13c11005: return "9690SA SAS/SATA-II RAID PCIe";
			case 0x13c11010: return "9750 SAS2/SATA-II RAID PCIe";
			case 0x13c2000e: return "Technotrend/Hauppauge DVB card rev2.3";
			case 0x13c21019: return "TTechnoTrend-budget DVB S2-3200";
			case 0x13c60520: return "CEI-520 A429 Card";
			case 0x13c60620: return "CEI-620 A429 Card";
			case 0x13c60820: return "CEI-820 A429 Card";
			case 0x13c60830: return "CEI-830 A429 Card";
			case 0x13c61004: return "P-SER Multi-channel PMC to RS-485/422/232 adapter";
			case 0x13c70adc: return "PCI-ADC";
			case 0x13c70b10: return "PCI-PIO";
			case 0x13c70d10: return "PCI-DIO";
			case 0x13c7524c: return "PCI-RLY";
			case 0x13c75744: return "PCI-WDT";
			case 0x13d02103: return "B2C2 FlexCopII DVB chip / Technisat SkyStar2 DVB card";
			case 0x13d02104: return "B2C2 FlexCopIII DVB chip / Technisat SkyStar2 DVB card (rev 01)";
			case 0x13d02200: return "B2C2 FlexCopIII DVB chip / Technisat SkyStar2 DVB card";
			case 0x13d1ab02: return "ADMtek Centaur-C rev 17 [D-Link DFE-680TX] CardBus Fast Ethernet Adapter";
			case 0x13d1ab03: return "21x4x DEC-Tulip compatible 10/100 Ethernet";
			case 0x13d1ab06: return "RTL8139 [FE2000VX] CardBus Fast Ethernet Attached Port Adapter";
			case 0x13d1ab08: return "21x4x DEC-Tulip compatible 10/100 Ethernet";
			case 0x13df0001: return "PCI56RVP Modem";
			case 0x13ec000a: return "NPC-RC01 Remote control receiver";
			case 0x13f00200: return "IC Plus IP100A Integrated 10/100 Ethernet MAC + PHY";
			case 0x13f00201: return "ST201 Sundance Ethernet";
			case 0x13f01021: return "TC902x Gigabit Ethernet";
			case 0x13f01023: return "IP1000 Family Gigabit Ethernet";
			case 0x13f41401: return "Zentai Fibre Channel Adapter";
			case 0x13f60011: return "CMI8738";
			case 0x13f60100: return "CM8338A";
			case 0x13f60101: return "CM8338B";
			case 0x13f60111: return "CMI8738/CMI8768 PCI Audio";
			case 0x13f60211: return "CM8738";
			case 0x13f65011: return "CM8888 [Oxygen Express]";
			case 0x13f68788: return "CMI8788 [Oxygen HD Audio]";
			case 0x13fe1240: return "PCI-1240 4-channel stepper motor controller card";
			case 0x13fe1600: return "PCI-16xx series PCI multiport serial board (function 0)";
			case 0x13fe1603: return "PCI-1603 2-port isolated RS-232/current loop";
			case 0x13fe1604: return "PCI-1604 2-port RS-232";
			case 0x13fe1680: return "PCI-1680 Rev.A1 2-port CAN-bus with isolation protection";
			case 0x13fe16ff: return "PCI-16xx series PCI multiport serial board (function 1: RX/TX steering CPLD)";
			case 0x13fe1711: return "PCI-1711 16-channel data acquisition card 12-bit, 100kS/s";
			case 0x13fe1713: return "PCI-1713 32-channel isolated analog input card";
			case 0x13fe1733: return "PCI-1733 32-channel isolated digital input card";
			case 0x13fe1734: return "PCI-1734 32-channel isolated digital output card";
			case 0x13fe1752: return "PCI-1752 64-channel Isolated Digital Output Card";
			case 0x13fe1754: return "PCI-1754 64-channel Isolated Digital Input Card";
			case 0x13fe1756: return "PCI-1756 64-ch Isolated Digital I/O PCI Card";
			case 0x13fea004: return "PCI-1612 4-port RS-232/422/485";
			case 0x13fec302: return "MIOe-3680 2-Port CAN-Bus MIOe Module with Isolation Protection";
			case 0x14001401: return "9432 TX";
			case 0x14020630: return "ME-630";
			case 0x14020940: return "ME-94";
			case 0x14020950: return "ME-95";
			case 0x14020960: return "ME-96";
			case 0x14021000: return "ME-1000";
			case 0x1402100a: return "ME-1000";
			case 0x1402100b: return "ME-1000";
			case 0x14021400: return "ME-1400";
			case 0x1402140a: return "ME-1400A";
			case 0x1402140b: return "ME-1400B";
			case 0x1402140c: return "ME-1400C";
			case 0x1402140d: return "ME-1400D";
			case 0x1402140e: return "ME-1400E";
			case 0x140214ea: return "ME-1400EA";
			case 0x140214eb: return "ME-1400EB";
			case 0x14021604: return "ME-1600/4U";
			case 0x14021608: return "ME-1600/8U";
			case 0x1402160c: return "ME-1600/12U";
			case 0x1402160f: return "ME-1600/16U";
			case 0x1402168f: return "ME-1600/16U8I";
			case 0x14024610: return "ME-4610";
			case 0x14024650: return "ME-4650";
			case 0x14024660: return "ME-4660";
			case 0x14024661: return "ME-4660I";
			case 0x14024662: return "ME-4660";
			case 0x14024663: return "ME-4660I";
			case 0x14024670: return "ME-4670";
			case 0x14024671: return "ME-4670I";
			case 0x14024672: return "ME-4670S";
			case 0x14024673: return "ME-4670IS";
			case 0x14024680: return "ME-4680";
			case 0x14024681: return "ME-4680I";
			case 0x14024682: return "ME-4680S";
			case 0x14024683: return "ME-4680IS";
			case 0x14026004: return "ME-6000/4";
			case 0x14026008: return "ME-6000/8";
			case 0x1402600f: return "ME-6000/16";
			case 0x14026014: return "ME-6000I/4";
			case 0x14026018: return "ME-6000I/8";
			case 0x1402601f: return "ME-6000I/16";
			case 0x14026034: return "ME-6000ISLE/4";
			case 0x14026038: return "ME-6000ISLE/8";
			case 0x1402603f: return "ME-6000ISLE/16";
			case 0x14026044: return "ME-6000/4/DIO";
			case 0x14026048: return "ME-6000/8/DIO";
			case 0x1402604f: return "ME-6000/16/DIO";
			case 0x14026054: return "ME-6000I/4/DIO";
			case 0x14026058: return "ME-6000I/8/DIO";
			case 0x1402605f: return "ME-6000I/16/DIO";
			case 0x14026074: return "ME-6000ISLE/4/DIO";
			case 0x14026078: return "ME-6000ISLE/8/DIO";
			case 0x1402607f: return "ME-6000ISLE/16/DIO";
			case 0x14026104: return "ME-6100/4";
			case 0x14026108: return "ME-6100/8";
			case 0x1402610f: return "ME-6100/16";
			case 0x14026114: return "ME-6100I/4";
			case 0x14026118: return "ME-6100I/8";
			case 0x1402611f: return "ME-6100I/16";
			case 0x14026134: return "ME-6100ISLE/4";
			case 0x14026138: return "ME-6100ISLE/8";
			case 0x1402613f: return "ME-6100ISLE/16";
			case 0x14026144: return "ME-6100/4/DIO";
			case 0x14026148: return "ME-6100/8/DIO";
			case 0x1402614f: return "ME-6100/16/DIO";
			case 0x14026154: return "ME-6100I/4/DIO";
			case 0x14026158: return "ME-6100I/8/DIO";
			case 0x1402615f: return "ME-6100I/16/DIO";
			case 0x14026174: return "ME-6100ISLE/4/DIO";
			case 0x14026178: return "ME-6100ISLE/8/DIO";
			case 0x1402617f: return "ME-6100ISLE/16/DIO";
			case 0x14026259: return "ME-6200I/9/DIO";
			case 0x14026359: return "ME-6300I/9/DIO";
			case 0x1402810a: return "ME-8100A";
			case 0x1402810b: return "ME-8100B";
			case 0x1402820a: return "ME-8200A";
			case 0x1402820b: return "ME-8200B";
			case 0x14070100: return "Lava Dual Serial";
			case 0x14070101: return "Lava Quatro A";
			case 0x14070102: return "Lava Quatro B";
			case 0x14070110: return "Lava DSerial-PCI Port A";
			case 0x14070111: return "Lava DSerial-PCI Port B";
			case 0x14070120: return "Quattro-PCI A";
			case 0x14070121: return "Quattro-PCI B";
			case 0x14070180: return "Lava Octo A";
			case 0x14070181: return "Lava Octo B";
			case 0x14070200: return "Lava Port Plus";
			case 0x14070201: return "Lava Quad A";
			case 0x14070202: return "Lava Quad B";
			case 0x14070220: return "Lava Quattro PCI Ports A/B";
			case 0x14070221: return "Lava Quattro PCI Ports C/D";
			case 0x14070400: return "Lava 8255-PIO-PCI";
			case 0x14070500: return "Lava Single Serial";
			case 0x14070520: return "Lava RS422-SS-PCI";
			case 0x14070600: return "Lava Port 650";
			case 0x14078000: return "Lava Parallel";
			case 0x14078001: return "Dual parallel port controller A";
			case 0x14078002: return "Lava Dual Parallel port A";
			case 0x14078003: return "Lava Dual Parallel port B";
			case 0x14078800: return "BOCA Research IOPPAR";
			case 0x14097168: return "PCI2S550 (Dual 16550 UART)";
			case 0x14097268: return "SUN1888 (Dual IEEE1284 parallel port)";
			case 0x14121712: return "ICE1712 [Envy24] PCI Multi-Channel I/O Controller";
			case 0x14121724: return "VT1720/24 [Envy24PT/HT] PCI Multi-Channel Audio Controller";
			case 0x14140001: return "MN-120 (ADMtek Centaur-C based)";
			case 0x14140002: return "MN-130 (ADMtek Centaur-P based)";
			case 0x1414008c: return "Basic Render Driver";
			case 0x14145353: return "Hyper-V virtual VGA";
			case 0x14145801: return "XMA Decoder (Xenon)";
			case 0x14145802: return "SATA Controller - CdRom (Xenon)";
			case 0x14145803: return "SATA Controller - Disk (Xenon)";
			case 0x14145804: return "OHCI Controller 0 (Xenon)";
			case 0x14145805: return "EHCI Controller 0 (Xenon)";
			case 0x14145806: return "OHCI Controller 1 (Xenon)";
			case 0x14145807: return "EHCI Controller 1 (Xenon)";
			case 0x1414580a: return "Fast Ethernet Adapter (Xenon)";
			case 0x1414580b: return "Secure Flash Controller (Xenon)";
			case 0x1414580d: return "System Management Controller (Xenon)";
			case 0x14145811: return "Xenos GPU (Xenon)";
			case 0x14158401: return "OX9162 Mode 1 (8-bit bus)";
			case 0x14158403: return "OX9162 Mode 0 (parallel port)";
			case 0x14159500: return "OX16PCI954 (Quad 16950 UART) function 0 (Disabled)";
			case 0x14159501: return "OX16PCI954 (Quad 16950 UART) function 0 (Uart)";
			case 0x14159505: return "OXuPCI952 (Dual 16C950 UART)";
			case 0x1415950a: return "EXSYS EX-41092 Dual 16950 Serial adapter";
			case 0x1415950b: return "OXCB950 Cardbus 16950 UART";
			case 0x14159510: return "OX16PCI954 (Quad 16950 UART) function 1 (Disabled)";
			case 0x14159511: return "OX16PCI954 (Quad 16950 UART) function 1 (8bit bus)";
			case 0x14159512: return "OX16PCI954 (Quad 16950 UART) function 1 (32bit bus)";
			case 0x14159513: return "OX16PCI954 (Quad 16950 UART) function 1 (parallel port)";
			case 0x14159521: return "OX16PCI952 (Dual 16950 UART)";
			case 0x14159523: return "OX16PCI952 Integrated Parallel Port";
			case 0x1415c000: return "OXPCIe840 Parallel Port";
			case 0x1415c004: return "OXPCIe840 Parallel Port";
			case 0x1415c006: return "OXPCIe840 GPIO";
			case 0x1415c100: return "OXPCIe952 Parallel Port";
			case 0x1415c101: return "OXPCIe952 Legacy 950 UART";
			case 0x1415c104: return "OXPCIe952 Parallel Port";
			case 0x1415c105: return "OXPCIe952 Legacy 950 UART";
			case 0x1415c106: return "OXPCIe952 GPIO";
			case 0x1415c108: return "OXPCIe952 Parallel Port";
			case 0x1415c109: return "OXPCIe952 Legacy 950 UART";
			case 0x1415c10c: return "OXPCIe952 Parallel Port";
			case 0x1415c10d: return "OXPCIe952 Legacy 950 UART";
			case 0x1415c10e: return "OXPCIe952 GPIO";
			case 0x1415c110: return "OXPCIe952 Parallel Port";
			case 0x1415c114: return "OXPCIe952 Parallel Port";
			case 0x1415c118: return "OXPCIe952 Parallel Port";
			case 0x1415c11b: return "OXPCIe952 Native 950 UART";
			case 0x1415c11c: return "OXPCIe952 Parallel Port";
			case 0x1415c11e: return "OXPCIe952 GPIO";
			case 0x1415c11f: return "OXPCIe952 Native 950 UART";
			case 0x1415c120: return "OXPCIe952 Legacy 950 UART";
			case 0x1415c124: return "OXPCIe952 Legacy 950 UART";
			case 0x1415c126: return "OXPCIe952 GPIO";
			case 0x1415c128: return "OXPCIe952 Legacy 950 UART";
			case 0x1415c12c: return "OXPCIe952 Legacy 950 UART";
			case 0x1415c12e: return "OXPCIe952 GPIO";
			case 0x1415c134: return "OXPCIe952 GPIO";
			case 0x1415c138: return "OXPCIe952 Native 950 UART";
			case 0x1415c13c: return "OXPCIe952 GPIO";
			case 0x1415c13d: return "OXPCIe952 Native 950 UART";
			case 0x1415c140: return "OXPCIe952 Legacy 950 UART #1";
			case 0x1415c141: return "OXPCIe952 Legacy 950 UART #2";
			case 0x1415c144: return "OXPCIe952 Legacy 950 UART #1";
			case 0x1415c145: return "OXPCIe952 Legacy 950 UART #2";
			case 0x1415c146: return "OXPCIe952 GPIO";
			case 0x1415c148: return "OXPCIe952 Legacy 950 UART #1";
			case 0x1415c149: return "OXPCIe952 Legacy 950 UART #2";
			case 0x1415c14c: return "OXPCIe952 Legacy 950 UART #1";
			case 0x1415c14d: return "OXPCIe952 Legacy 950 UART #2";
			case 0x1415c14e: return "OXPCIe952 GPIO";
			case 0x1415c154: return "OXPCIe952 GPIO";
			case 0x1415c158: return "OXPCIe952 Dual Native 950 UART";
			case 0x1415c15c: return "OXPCIe952 GPIO";
			case 0x1415c15d: return "OXPCIe952 Dual Native 950 UART";
			case 0x1415c204: return "OXPCIe954 GPIO";
			case 0x1415c208: return "OXPCIe954 Quad Native 950 UART";
			case 0x1415c20c: return "OXPCIe954 GPIO";
			case 0x1415c20d: return "OXPCIe954 Quad Native 950 UART";
			case 0x1415c304: return "OXPCIe958 GPIO";
			case 0x1415c308: return "OXPCIe958 Quad Native 950 UART";
			case 0x1415c30c: return "OXPCIe958 GPIO";
			case 0x1415c30d: return "OXPCIe958 Quad Native 950 UART";
			case 0x1415c530: return "OXPCIe200 Dual OHCI USB Controller (ULPI/R-ULPI)";
			case 0x1415c531: return "OXPCIe200 Dual EHCI USB Controller (ULPI/R-ULPI)";
			case 0x1415c534: return "OXPCIe200 Dual OHCI USB Controller (ULPI/R-ULPI)";
			case 0x1415c535: return "OXPCIe200 Dual EHCI USB Controller (ULPI/R-ULPI)";
			case 0x1415c536: return "OXPCIe200 GPIO";
			case 0x1415c538: return "OXPCIe200 Dual OHCI USB Controller (ULPI/R-ULPI)";
			case 0x1415c539: return "OXPCIe200 Dual EHCI USB Controller (ULPI/R-ULPI)";
			case 0x1415c53b: return "OXPCIe200 Native 950 UART";
			case 0x1415c53c: return "OXPCIe200 Dual OHCI USB Controller (ULPI/R-ULPI)";
			case 0x1415c53d: return "OXPCIe200 Dual EHCI USB Controller (ULPI/R-ULPI)";
			case 0x1415c53e: return "OXPCIe200 GPIO";
			case 0x1415c53f: return "OXPCIe200 Native 950 UART";
			case 0x1415c540: return "OXPCIe200 Dual OHCI USB Controller (R-ULPI)";
			case 0x1415c541: return "OXPCIe200 Dual EHCI USB Controller (R-ULPI)";
			case 0x1415c544: return "OXPCIe200 Dual OHCI USB Controller (R-ULPI)";
			case 0x1415c545: return "OXPCIe200 Dual EHCI USB Controller (R-ULPI)";
			case 0x1415c546: return "OXPCIe200 GPIO";
			case 0x1415c548: return "OXPCIe200 Dual OHCI USB Controller (R-ULPI)";
			case 0x1415c549: return "OXPCIe200 Dual EHCI USB Controller (R-ULPI)";
			case 0x1415c54b: return "OXPCIe200 Native 950 UART";
			case 0x1415c54c: return "OXPCIe200 Dual OHCI USB Controller (R-ULPI)";
			case 0x1415c54d: return "OXPCIe200 Dual EHCI USB Controller (R-ULPI)";
			case 0x1415c54e: return "OXPCIe200 Dual GPIO";
			case 0x1415c54f: return "OXPCIe200 Native 950 UART";
			case 0x1415c560: return "OXPCIe200 Dual OHCI USB Controller (ULPI/analog)";
			case 0x1415c561: return "OXPCIe200 EHCI USB Controller (ULPI)";
			case 0x1415c564: return "OXPCIe200 Dual OHCI USB Controller (ULPI/analog)";
			case 0x1415c565: return "OXPCIe200 EHCI USB Controller (ULPI)";
			case 0x1415c566: return "OXPCIe200 GPIO";
			case 0x1415c568: return "OXPCIe200 Dual OHCI USB Controller (ULPI/analog)";
			case 0x1415c569: return "OXPCIe200 EHCI USB Controller (ULPI)";
			case 0x1415c56b: return "OXPCIe200 Native 950 UART";
			case 0x1415c56c: return "OXPCIe200 Dual OHCI USB Controller (ULPI/analog)";
			case 0x1415c56d: return "OXPCIe200 EHCI USB Controller (ULPI)";
			case 0x1415c56e: return "OXPCIe200 GPIO";
			case 0x1415c56f: return "OXPCIe200 Native 950 UART";
			case 0x1415c570: return "OXPCIe200 Dual OHCI USB Controller (R-ULPI/analog)";
			case 0x1415c571: return "OXPCIe200 EHCI USB Controller (R-ULPI)";
			case 0x1415c574: return "OXPCIe200 Dual OHCI USB Controller (R-ULPI/analog)";
			case 0x1415c575: return "OXPCIe200 EHCI USB Controller (R-ULPI)";
			case 0x1415c576: return "OXPCIe200 GPIO";
			case 0x1415c578: return "OXPCIe200 Dual OHCI USB Controller (R-ULPI/analog)";
			case 0x1415c579: return "OXPCIe200 EHCI USB Controller (R-ULPI)";
			case 0x1415c57b: return "OXPCIe200 Native 950 UART";
			case 0x1415c57c: return "OXPCIe200 Dual OHCI USB Controller (R-ULPI/analog)";
			case 0x1415c57d: return "OXPCIe200 EHCI USB Controller (R-ULPI)";
			case 0x1415c57e: return "OXPCIe200 GPIO";
			case 0x1415c57f: return "OXPCIe200 Native 950 UART";
			case 0x1415c5a0: return "OXPCIe200 OHCI USB Controller (ULPI)";
			case 0x1415c5a1: return "OXPCIe200 EHCI USB Controller (ULPI)";
			case 0x1415c5a2: return "OXPCIe200 Programmable Memory Interface";
			case 0x1415c5a4: return "OXPCIe200 OHCI USB Controller (ULPI)";
			case 0x1415c5a5: return "OXPCIe200 EHCI USB Controller (ULPI)";
			case 0x1415c5a6: return "OXPCIe200 Programmable Memory Interface & GPIO";
			case 0x1415c5a8: return "OXPCIe200 OHCI USB Controller (ULPI)";
			case 0x1415c5a9: return "OXPCIe200 EHCI USB Controller (ULPI)";
			case 0x1415c5aa: return "OXPCIe200 Programmable Memory Interface";
			case 0x1415c5ab: return "OXPCIe200 Native 950 UART";
			case 0x1415c5ac: return "OXPCIe200 OHCI USB Controller (ULPI)";
			case 0x1415c5ad: return "OXPCIe200 EHCI USB Controller (ULPI)";
			case 0x1415c5ae: return "OXPCIe200 Programmable Memory Interface & GPIO";
			case 0x1415c5af: return "OXPCIe200 Native 950 UART";
			case 0x1415c5b0: return "OXPCIe200 OHCI USB Controller (R-ULPI)";
			case 0x1415c5b1: return "OXPCIe200 EHCI USB Controller (R-ULPI)";
			case 0x1415c5b2: return "OXPCIe200 Programmable Memory Interface";
			case 0x1415c5b4: return "OXPCIe200 OHCI USB Controller (R-ULPI)";
			case 0x1415c5b5: return "OXPCIe200 EHCI USB Controller (R-ULPI)";
			case 0x1415c5b6: return "OXPCIe200 Programmable Memory Interface & GPIO";
			case 0x1415c5b8: return "OXPCIe200 OHCI USB Controller (R-ULPI)";
			case 0x1415c5b9: return "OXPCIe200 EHCI USB Controller (R-ULPI)";
			case 0x1415c5ba: return "OXPCIe200 Programmable Memory Interface";
			case 0x1415c5bb: return "OXPCIe200 Native 950 UART";
			case 0x1415c5bc: return "OXPCIe200 OHCI USB Controller (R-ULPI)";
			case 0x1415c5bd: return "OXPCIe200 EHCI USB Controller (R-ULPI)";
			case 0x1415c5be: return "OXPCIe200 Programmable Memory Interface & GPIO";
			case 0x1415c5bf: return "OXPCIe200 Native 950 UART";
			case 0x1415c5c0: return "OXPCIe200 OHCI USB Controller (analog)";
			case 0x1415c5c2: return "OXPCIe200 Programmable Memory Interface";
			case 0x1415c5c4: return "OXPCIe200 OHCI USB Controller (analog)";
			case 0x1415c5c6: return "OXPCIe200 Programmable Memory Interface & GPIO";
			case 0x1415c5c8: return "OXPCIe200 OHCI USB Controller (analog)";
			case 0x1415c5ca: return "OXPCIe200 Programmable Memory Interface";
			case 0x1415c5cb: return "OXPCIe200 Native 950 UART";
			case 0x1415c5cc: return "OXPCIe200 OHCI USB Controller (analog)";
			case 0x1415c5ce: return "OXPCIe200 Programmable Memory Interface & GPIO";
			case 0x1415c5cf: return "OXPCIe200 Native 950 UART";
			case 0x14208002: return "Gold Card NetGlobal 56k+10/100Mb CardBus (Ethernet part)";
			case 0x14208003: return "Gold Card NetGlobal 56k+10/100Mb CardBus (Modem part)";
			case 0x1425000b: return "T210 Protocol Engine";
			case 0x1425000c: return "T204 Protocol Engine";
			case 0x14250022: return "10GbE Ethernet Adapter";
			case 0x14250030: return "T310 10GbE Single Port Adapter";
			case 0x14250031: return "T320 10GbE Dual Port Adapter";
			case 0x14250032: return "T302 1GbE Dual Port Adapter";
			case 0x14250033: return "T304 1GbE Quad Port Adapter";
			case 0x14250034: return "B320 10GbE Dual Port Adapter";
			case 0x14250035: return "S310-CR 10GbE Single Port Adapter";
			case 0x14250036: return "S320-LP-CR 10GbE Dual Port Adapter";
			case 0x14250037: return "N320-G2-CR 10GbE Dual Port Adapter";
			case 0x14254001: return "T420-CR Unified Wire Ethernet Controller";
			case 0x14254002: return "T422-CR Unified Wire Ethernet Controller";
			case 0x14254003: return "T440-CR Unified Wire Ethernet Controller";
			case 0x14254004: return "T420-BCH Unified Wire Ethernet Controller";
			case 0x14254005: return "T440-BCH Unified Wire Ethernet Controller";
			case 0x14254006: return "T440-CH Unified Wire Ethernet Controller";
			case 0x14254007: return "T420-SO Unified Wire Ethernet Controller";
			case 0x14254008: return "T420-CX Unified Wire Ethernet Controller";
			case 0x14254009: return "T420-BT Unified Wire Ethernet Controller";
			case 0x1425400a: return "T404-BT Unified Wire Ethernet Controller";
			case 0x1425400b: return "B420-SR Unified Wire Ethernet Controller";
			case 0x1425400c: return "B404-BT Unified Wire Ethernet Controller";
			case 0x1425400d: return "T480 Unified Wire Ethernet Controller";
			case 0x1425400e: return "T440-LP-CR Unified Wire Ethernet Controller";
			case 0x1425400f: return "T440 [Amsterdam] Unified Wire Ethernet Controller";
			case 0x14254080: return "T480-4080 T480 Unified Wire Ethernet Controller";
			case 0x14254081: return "T440F-4081 T440-FCoE Unified Wire Ethernet Controller";
			case 0x14254082: return "T420-4082";
			case 0x14254083: return "T420X-4083 Unified Wire Ethernet Controller";
			case 0x14254084: return "T440-4084 Unified Wire Ethernet Controller";
			case 0x14254085: return "T420-4085 SFP+ Unified Wire Ethernet Controller";
			case 0x14254086: return "T440-4086 10Gbase-T Unified Wire Ethernet Controller";
			case 0x14254087: return "T440T-4087 Unified Wire Ethernet Controller";
			case 0x14254088: return "T440-4088 Unified Wire Ethernet Controller";
			case 0x14254401: return "T420-CR Unified Wire Ethernet Controller";
			case 0x14254402: return "T422-CR Unified Wire Ethernet Controller";
			case 0x14254403: return "T440-CR Unified Wire Ethernet Controller";
			case 0x14254404: return "T420-BCH Unified Wire Ethernet Controller";
			case 0x14254405: return "T440-BCH Unified Wire Ethernet Controller";
			case 0x14254406: return "T440-CH Unified Wire Ethernet Controller";
			case 0x14254407: return "T420-SO Unified Wire Ethernet Controller";
			case 0x14254408: return "T420-CX Unified Wire Ethernet Controller";
			case 0x14254409: return "T420-BT Unified Wire Ethernet Controller";
			case 0x1425440a: return "T404-BT Unified Wire Ethernet Controller";
			case 0x1425440b: return "B420-SR Unified Wire Ethernet Controller";
			case 0x1425440c: return "B404-BT Unified Wire Ethernet Controller";
			case 0x1425440d: return "T480 Unified Wire Ethernet Controller";
			case 0x1425440e: return "T440-LP-CR Unified Wire Ethernet Controller";
			case 0x1425440f: return "T440 [Amsterdam] Unified Wire Ethernet Controller";
			case 0x14254480: return "T480-4080 T480 Unified Wire Ethernet Controller";
			case 0x14254481: return "T440F-4081 T440-FCoE Unified Wire Ethernet Controller";
			case 0x14254482: return "T420-4082";
			case 0x14254483: return "T420X-4083 Unified Wire Ethernet Controller";
			case 0x14254484: return "T440-4084 Unified Wire Ethernet Controller";
			case 0x14254485: return "T420-4085 SFP+ Unified Wire Ethernet Controller";
			case 0x14254486: return "T440-4086 10Gbase-T Unified Wire Ethernet Controller";
			case 0x14254487: return "T440T-4087 Unified Wire Ethernet Controller";
			case 0x14254488: return "T440-4088 Unified Wire Ethernet Controller";
			case 0x14254501: return "T420-CR Unified Wire Storage Controller";
			case 0x14254502: return "T422-CR Unified Wire Storage Controller";
			case 0x14254503: return "T440-CR Unified Wire Storage Controller";
			case 0x14254504: return "T420-BCH Unified Wire Storage Controller";
			case 0x14254505: return "T440-BCH Unified Wire Storage Controller";
			case 0x14254506: return "T440-CH Unified Wire Storage Controller";
			case 0x14254507: return "T420-SO Unified Wire Storage Controller";
			case 0x14254508: return "T420-CX Unified Wire Storage Controller";
			case 0x14254509: return "T420-BT Unified Wire Storage Controller";
			case 0x1425450a: return "T404-BT Unified Wire Storage Controller";
			case 0x1425450b: return "B420-SR Unified Wire Storage Controller";
			case 0x1425450c: return "B404-BT Unified Wire Storage Controller";
			case 0x1425450d: return "T480 Unified Wire Storage Controller";
			case 0x1425450e: return "T440-LP-CR Unified Wire Storage Controller";
			case 0x1425450f: return "T440 [Amsterdam] Unified Wire Storage Controller";
			case 0x14254580: return "T480-4080 T480 Unified Wire Storage Controller";
			case 0x14254581: return "T440F-4081 T440-FCoE Unified Wire Storage Controller";
			case 0x14254582: return "T420-4082";
			case 0x14254583: return "T420X-4083 Unified Wire Storage Controller";
			case 0x14254584: return "T440-4084 Unified Wire Storage Controller";
			case 0x14254585: return "T420-4085 SFP+ Unified Wire Storage Controller";
			case 0x14254586: return "T440-4086 10Gbase-T Unified Wire Storage Controller";
			case 0x14254587: return "T440T-4087 Unified Wire Storage Controller";
			case 0x14254588: return "T440-4088 Unified Wire Storage Controller";
			case 0x14254601: return "T420-CR Unified Wire Storage Controller";
			case 0x14254602: return "T422-CR Unified Wire Storage Controller";
			case 0x14254603: return "T440-CR Unified Wire Storage Controller";
			case 0x14254604: return "T420-BCH Unified Wire Storage Controller";
			case 0x14254605: return "T440-BCH Unified Wire Storage Controller";
			case 0x14254606: return "T440-CH Unified Wire Storage Controller";
			case 0x14254607: return "T420-SO Unified Wire Storage Controller";
			case 0x14254608: return "T420-CX Unified Wire Storage Controller";
			case 0x14254609: return "T420-BT Unified Wire Storage Controller";
			case 0x1425460a: return "T404-BT Unified Wire Storage Controller";
			case 0x1425460b: return "B420-SR Unified Wire Storage Controller";
			case 0x1425460c: return "B404-BT Unified Wire Storage Controller";
			case 0x1425460d: return "T480 Unified Wire Storage Controller";
			case 0x1425460e: return "T440-LP-CR Unified Wire Storage Controller";
			case 0x1425460f: return "T440 [Amsterdam] Unified Wire Storage Controller";
			case 0x14254680: return "T480-4080 T480 Unified Wire Storage Controller";
			case 0x14254681: return "T440F-4081 T440-FCoE Unified Wire Storage Controller";
			case 0x14254682: return "T420-4082";
			case 0x14254683: return "T420X-4083 Unified Wire Storage Controller";
			case 0x14254684: return "T440-4084 Unified Wire Storage Controller";
			case 0x14254685: return "T420-4085 SFP+ Unified Wire Storage Controller";
			case 0x14254686: return "T440-4086 10Gbase-T Unified Wire Storage Controller";
			case 0x14254687: return "T440T-4087 Unified Wire Storage Controller";
			case 0x14254688: return "T440-4088 Unified Wire Storage Controller";
			case 0x14254701: return "T420-CR Unified Wire Ethernet Controller";
			case 0x14254702: return "T422-CR Unified Wire Ethernet Controller";
			case 0x14254703: return "T440-CR Unified Wire Ethernet Controller";
			case 0x14254704: return "T420-BCH Unified Wire Ethernet Controller";
			case 0x14254705: return "T440-BCH Unified Wire Ethernet Controller";
			case 0x14254706: return "T440-CH Unified Wire Ethernet Controller";
			case 0x14254707: return "T420-SO Unified Wire Ethernet Controller";
			case 0x14254708: return "T420-CX Unified Wire Ethernet Controller";
			case 0x14254709: return "T420-BT Unified Wire Ethernet Controller";
			case 0x1425470a: return "T404-BT Unified Wire Ethernet Controller";
			case 0x1425470b: return "B420-SR Unified Wire Ethernet Controller";
			case 0x1425470c: return "B404-BT Unified Wire Ethernet Controller";
			case 0x1425470d: return "T480 Unified Wire Ethernet Controller";
			case 0x1425470e: return "T440-LP-CR Unified Wire Ethernet Controller";
			case 0x1425470f: return "T440 [Amsterdam] Unified Wire Ethernet Controller";
			case 0x14254780: return "T480-4080 T480 Unified Wire Ethernet Controller";
			case 0x14254781: return "T440F-4081 T440-FCoE Unified Wire Ethernet Controller";
			case 0x14254782: return "T420-4082";
			case 0x14254783: return "T420X-4083 Unified Wire Ethernet Controller";
			case 0x14254784: return "T440-4084 Unified Wire Ethernet Controller";
			case 0x14254785: return "T420-4085 SFP+ Unified Wire Ethernet Controller";
			case 0x14254786: return "T440-4086 10Gbase-T Unified Wire Ethernet Controller";
			case 0x14254787: return "T440T-4087 Unified Wire Ethernet Controller";
			case 0x14254788: return "T440-4088 Unified Wire Ethernet Controller";
			case 0x14254801: return "T420-CR Unified Wire Ethernet Controller [VF]";
			case 0x14254802: return "T422-CR Unified Wire Ethernet Controller [VF]";
			case 0x14254803: return "T440-CR Unified Wire Ethernet Controller [VF]";
			case 0x14254804: return "T420-BCH Unified Wire Ethernet Controller [VF]";
			case 0x14254805: return "T440-BCH Unified Wire Ethernet Controller [VF]";
			case 0x14254806: return "T440-CH Unified Wire Ethernet Controller [VF]";
			case 0x14254807: return "T420-SO Unified Wire Ethernet Controller [VF]";
			case 0x14254808: return "T420-CX Unified Wire Ethernet Controller [VF]";
			case 0x14254809: return "T420-BT Unified Wire Ethernet Controller [VF]";
			case 0x1425480a: return "T404-BT Unified Wire Ethernet Controller [VF]";
			case 0x1425480b: return "B420-SR Unified Wire Ethernet Controller [VF]";
			case 0x1425480c: return "B404-BT Unified Wire Ethernet Controller [VF]";
			case 0x1425480d: return "T480 Unified Wire Ethernet Controller [VF]";
			case 0x1425480e: return "T440-LP-CR Unified Wire Ethernet Controller [VF]";
			case 0x1425480f: return "T440 [Amsterdam] Unified Wire Ethernet Controller [VF]";
			case 0x14254880: return "T480-4080 T480 Unified Wire Ethernet Controller [VF]";
			case 0x14254881: return "T440F-4081 T440-FCoE Unified Wire Ethernet Controller [VF]";
			case 0x14254882: return "T420-4082 Unified Wire Ethernet Controller [VF]";
			case 0x14254883: return "T420X-4083 Unified Wire Ethernet Controller [VF]";
			case 0x14254884: return "T440-4084 Unified Wire Ethernet Controller [VF]";
			case 0x14254885: return "T420-4085 SFP+ Unified Wire Ethernet Controller [VF]";
			case 0x14254886: return "T440-4086 10Gbase-T Unified Wire Ethernet Controller [VF]";
			case 0x14254887: return "T440T-4087 Unified Wire Ethernet Controller [VF]";
			case 0x14254888: return "T440-4088 Unified Wire Ethernet Controller [VF]";
			case 0x14255001: return "T520-CR Unified Wire Ethernet Controller";
			case 0x14255002: return "T522-CR Unified Wire Ethernet Controller";
			case 0x14255003: return "T540-CR Unified Wire Ethernet Controller";
			case 0x14255004: return "T520-BCH Unified Wire Ethernet Controller";
			case 0x14255005: return "T540-BCH Unified Wire Ethernet Controller";
			case 0x14255006: return "T540-CH Unified Wire Ethernet Controller";
			case 0x14255007: return "T520-SO Unified Wire Ethernet Controller";
			case 0x14255008: return "T520-CX Unified Wire Ethernet Controller";
			case 0x14255009: return "T520-BT Unified Wire Ethernet Controller";
			case 0x1425500a: return "T504-BT Unified Wire Ethernet Controller";
			case 0x1425500b: return "B520-SR Unified Wire Ethernet Controller";
			case 0x1425500c: return "B504-BT Unified Wire Ethernet Controller";
			case 0x1425500d: return "T580-CR Unified Wire Ethernet Controller";
			case 0x1425500e: return "T540-LP-CR Unified Wire Ethernet Controller";
			case 0x1425500f: return "T540 [Amsterdam] Unified Wire Ethernet Controller";
			case 0x14255010: return "T580-LP-CR Unified Wire Ethernet Controller";
			case 0x14255011: return "T520-LL-CR Unified Wire Ethernet Controller";
			case 0x14255012: return "T560-CR Unified Wire Ethernet Controller";
			case 0x14255013: return "T580-CHR Unified Wire Ethernet Controller";
			case 0x14255014: return "T580-SO-CR Unified Wire Ethernet Controller";
			case 0x14255015: return "T502-BT Unified Wire Ethernet Controller";
			case 0x14255016: return "T580-OCP-SO Unified Wire Ethernet Controller";
			case 0x14255017: return "T520-OCP-SO Unified Wire Ethernet Controller";
			case 0x14255018: return "T540-BT Unified Wire Ethernet Controller";
			case 0x14255019: return "T540-LP-BT Unified Wire Ethernet Controller";
			case 0x1425501a: return "T540-SO-BT Unified Wire Ethernet Controller";
			case 0x1425501b: return "T540-SO-CR Unified Wire Ethernet Controller";
			case 0x14255080: return "T540-5080 Unified Wire Ethernet Controller";
			case 0x14255081: return "T540-5081 Unified Wire Ethernet Controller";
			case 0x14255082: return "T504-5082 Unified Wire Ethernet Controller";
			case 0x14255083: return "T540-5083 Unified Wire Ethernet Controller";
			case 0x14255084: return "T540-5084 Unified Wire Ethernet Controller";
			case 0x14255085: return "T580-5085 Unified Wire Ethernet Controller";
			case 0x14255086: return "T580-5086 Unified Wire Ethernet Controller";
			case 0x14255087: return "T580-5087 Unified Wire Ethernet Controller";
			case 0x14255088: return "T570-5088 Unified Wire Ethernet Controller";
			case 0x14255089: return "T520-5089 Unified Wire Ethernet Controller";
			case 0x14255090: return "T540-5090 Unified Wire Ethernet Controller";
			case 0x14255091: return "T522-5091 Unified Wire Ethernet Controller";
			case 0x14255092: return "T520-5092 Unified Wire Ethernet Controller";
			case 0x14255093: return "T580-5093 Unified Wire Ethernet Controller";
			case 0x14255094: return "T540-5094 Unified Wire Ethernet Controller";
			case 0x14255095: return "T540-5095 Unified Wire Ethernet Controller";
			case 0x14255096: return "T580-5096 Unified Wire Ethernet Controller";
			case 0x14255097: return "T520-5097 Unified Wire Ethernet Controller";
			case 0x14255098: return "T580-5098 Unified Wire Ethernet Controller";
			case 0x14255099: return "T580-5099 Unified Wire Ethernet Controller";
			case 0x1425509a: return "T520-509A Unified Wire Ethernet Controller";
			case 0x1425509b: return "T540-509B Unified Wire Ethernet Controller";
			case 0x1425509c: return "T520-509C Unified Wire Ethernet Controller";
			case 0x1425509d: return "T540-509D Unified Wire Ethernet Controller";
			case 0x1425509e: return "T520-509E Unified Wire Ethernet Controller";
			case 0x1425509f: return "T540-509F Unified Wire Ethernet Controller";
			case 0x142550a0: return "T540-50A0 Unified Wire Ethernet Controller";
			case 0x142550a1: return "T540-50A1 Unified Wire Ethernet Controller";
			case 0x142550a2: return "T580-50A2 Unified Wire Ethernet Controller";
			case 0x142550a3: return "T580-50A3 Unified Wire Ethernet Controller";
			case 0x142550a4: return "T540-50A4 Unified Wire Ethernet Controller";
			case 0x142550a5: return "T522-50A5 Unified Wire Ethernet Controller";
			case 0x142550a6: return "T522-50A6 Unified Wire Ethernet Controller";
			case 0x142550a7: return "T580-50A7 Unified Wire Ethernet Controller";
			case 0x142550a8: return "T580-50A8 Unified Wire Ethernet Controller";
			case 0x142550a9: return "T580-50A9 Unified Wire Ethernet Controller";
			case 0x142550aa: return "T580-50AA Unified Wire Ethernet Controller";
			case 0x142550ab: return "T520-50AB Unified Wire Ethernet Controller";
			case 0x142550ac: return "T540-50AC Unified Wire Ethernet Controller";
			case 0x142550ad: return "T520-50AD Unified Wire Ethernet Controller";
			case 0x142550ae: return "T540-50AE Unified Wire Ethernet Controller";
			case 0x142550af: return "T580-50AF Unified Wire Ethernet Controller";
			case 0x142550b0: return "T520-50B0 Unified Wire Ethernet Controller";
			case 0x14255401: return "T520-CR Unified Wire Ethernet Controller";
			case 0x14255402: return "T522-CR Unified Wire Ethernet Controller";
			case 0x14255403: return "T540-CR Unified Wire Ethernet Controller";
			case 0x14255404: return "T520-BCH Unified Wire Ethernet Controller";
			case 0x14255405: return "T540-BCH Unified Wire Ethernet Controller";
			case 0x14255406: return "T540-CH Unified Wire Ethernet Controller";
			case 0x14255407: return "T520-SO Unified Wire Ethernet Controller";
			case 0x14255408: return "T520-CX Unified Wire Ethernet Controller";
			case 0x14255409: return "T520-BT Unified Wire Ethernet Controller";
			case 0x1425540a: return "T504-BT Unified Wire Ethernet Controller";
			case 0x1425540b: return "B520-SR Unified Wire Ethernet Controller";
			case 0x1425540c: return "B504-BT Unified Wire Ethernet Controller";
			case 0x1425540d: return "T580-CR Unified Wire Ethernet Controller";
			case 0x1425540e: return "T540-LP-CR Unified Wire Ethernet Controller";
			case 0x1425540f: return "T540 [Amsterdam] Unified Wire Ethernet Controller";
			case 0x14255410: return "T580-LP-CR Unified Wire Ethernet Controller";
			case 0x14255411: return "T520-LL-CR Unified Wire Ethernet Controller";
			case 0x14255412: return "T560-CR Unified Wire Ethernet Controller";
			case 0x14255413: return "T580-CHR Unified Wire Ethernet Controller";
			case 0x14255414: return "T580-SO-CR Unified Wire Ethernet Controller";
			case 0x14255415: return "T502-BT Unified Wire Ethernet Controller";
			case 0x14255416: return "T580-OCP-SO Unified Wire Ethernet Controller";
			case 0x14255417: return "T520-OCP-SO Unified Wire Ethernet Controller";
			case 0x14255418: return "T540-BT Unified Wire Ethernet Controller";
			case 0x14255419: return "T540-LP-BT Unified Wire Ethernet Controller";
			case 0x1425541a: return "T540-SO-BT Unified Wire Ethernet Controller";
			case 0x1425541b: return "T540-SO-CR Unified Wire Ethernet Controller";
			case 0x14255480: return "T540-5080 Unified Wire Ethernet Controller";
			case 0x14255481: return "T540-5081 Unified Wire Ethernet Controller";
			case 0x14255482: return "T504-5082 Unified Wire Ethernet Controller";
			case 0x14255483: return "T540-5083 Unified Wire Ethernet Controller";
			case 0x14255484: return "T540-5084 Unified Wire Ethernet Controller";
			case 0x14255485: return "T580-5085 Unified Wire Ethernet Controller";
			case 0x14255486: return "T580-5086 Unified Wire Ethernet Controller";
			case 0x14255487: return "T580-5087 Unified Wire Ethernet Controller";
			case 0x14255488: return "T570-5088 Unified Wire Ethernet Controller";
			case 0x14255489: return "T520-5089 Unified Wire Ethernet Controller";
			case 0x14255490: return "T540-5090 Unified Wire Ethernet Controller";
			case 0x14255491: return "T522-5091 Unified Wire Ethernet Controller";
			case 0x14255492: return "T520-5092 Unified Wire Ethernet Controller";
			case 0x14255493: return "T580-5093 Unified Wire Ethernet Controller";
			case 0x14255494: return "T540-5094 Unified Wire Ethernet Controller";
			case 0x14255495: return "T540-5095 Unified Wire Ethernet Controller";
			case 0x14255496: return "T580-5096 Unified Wire Ethernet Controller";
			case 0x14255497: return "T520-5097 Unified Wire Ethernet Controller";
			case 0x14255498: return "T580-5098 Unified Wire Ethernet Controller";
			case 0x14255499: return "T580-5099 Unified Wire Ethernet Controller";
			case 0x1425549a: return "T520-509A Unified Wire Ethernet Controller";
			case 0x1425549b: return "T540-509B Unified Wire Ethernet Controller";
			case 0x1425549c: return "T520-509C Unified Wire Ethernet Controller";
			case 0x1425549d: return "T540-509D Unified Wire Ethernet Controller";
			case 0x1425549e: return "T520-509E Unified Wire Ethernet Controller";
			case 0x1425549f: return "T540-509F Unified Wire Ethernet Controller";
			case 0x142554a0: return "T540-50A0 Unified Wire Ethernet Controller";
			case 0x142554a1: return "T540-50A1 Unified Wire Ethernet Controller";
			case 0x142554a2: return "T580-50A2 Unified Wire Ethernet Controller";
			case 0x142554a3: return "T580-50A3 Unified Wire Ethernet Controller";
			case 0x142554a4: return "T540-50A4 Unified Wire Ethernet Controller";
			case 0x142554a5: return "T522-50A5 Unified Wire Ethernet Controller";
			case 0x142554a6: return "T522-50A6 Unified Wire Ethernet Controller";
			case 0x142554a7: return "T580-50A7 Unified Wire Ethernet Controller";
			case 0x142554a8: return "T580-50A8 Unified Wire Ethernet Controller";
			case 0x142554a9: return "T580-50A9 Unified Wire Ethernet Controller";
			case 0x142554aa: return "T580-50AA Unified Wire Ethernet Controller";
			case 0x142554ab: return "T520-50AB Unified Wire Ethernet Controller";
			case 0x142554ac: return "T540-50AC Unified Wire Ethernet Controller";
			case 0x142554ad: return "T520-50AD Unified Wire Ethernet Controller";
			case 0x142554ae: return "T540-50AE Unified Wire Ethernet Controller";
			case 0x142554af: return "T580-50AF Unified Wire Ethernet Controller";
			case 0x142554b0: return "T520-50B0 Unified Wire Ethernet Controller";
			case 0x14255501: return "T520-CR Unified Wire Storage Controller";
			case 0x14255502: return "T522-CR Unified Wire Storage Controller";
			case 0x14255503: return "T540-CR Unified Wire Storage Controller";
			case 0x14255504: return "T520-BCH Unified Wire Storage Controller";
			case 0x14255505: return "T540-BCH Unified Wire Storage Controller";
			case 0x14255506: return "T540-CH Unified Wire Storage Controller";
			case 0x14255507: return "T520-SO Unified Wire Storage Controller";
			case 0x14255508: return "T520-CX Unified Wire Storage Controller";
			case 0x14255509: return "T520-BT Unified Wire Storage Controller";
			case 0x1425550a: return "T504-BT Unified Wire Storage Controller";
			case 0x1425550b: return "B520-SR Unified Wire Storage Controller";
			case 0x1425550c: return "B504-BT Unified Wire Storage Controller";
			case 0x1425550d: return "T580-CR Unified Wire Storage Controller";
			case 0x1425550e: return "T540-LP-CR Unified Wire Storage Controller";
			case 0x1425550f: return "T540 [Amsterdam] Unified Wire Storage Controller";
			case 0x14255510: return "T580-LP-CR Unified Wire Storage Controller";
			case 0x14255511: return "T520-LL-CR Unified Wire Storage Controller";
			case 0x14255512: return "T560-CR Unified Wire Storage Controller";
			case 0x14255513: return "T580-CHR Unified Wire Storage Controller";
			case 0x14255514: return "T580-SO-CR Unified Wire Storage Controller";
			case 0x14255515: return "T502-BT Unified Wire Storage Controller";
			case 0x14255516: return "T580-OCP-SO Unified Wire Storage Controller";
			case 0x14255517: return "T520-OCP-SO Unified Wire Storage Controller";
			case 0x14255518: return "T540-BT Unified Wire Storage Controller";
			case 0x14255519: return "T540-LP-BT Unified Wire Storage Controller";
			case 0x1425551a: return "T540-SO-BT Unified Wire Storage Controller";
			case 0x1425551b: return "T540-SO-CR Unified Wire Storage Controller";
			case 0x14255580: return "T540-5080 Unified Wire Storage Controller";
			case 0x14255581: return "T540-5081 Unified Wire Storage Controller";
			case 0x14255582: return "T504-5082 Unified Wire Storage Controller";
			case 0x14255583: return "T540-5083 Unified Wire Storage Controller";
			case 0x14255584: return "T540-5084 Unified Wire Storage Controller";
			case 0x14255585: return "T580-5085 Unified Wire Storage Controller";
			case 0x14255586: return "T580-5086 Unified Wire Storage Controller";
			case 0x14255587: return "T580-5087 Unified Wire Storage Controller";
			case 0x14255588: return "T570-5088 Unified Wire Storage Controller";
			case 0x14255589: return "T520-5089 Unified Wire Storage Controller";
			case 0x14255590: return "T540-5090 Unified Wire Storage Controller";
			case 0x14255591: return "T522-5091 Unified Wire Storage Controller";
			case 0x14255592: return "T520-5092 Unified Wire Storage Controller";
			case 0x14255593: return "T580-5093 Unified Wire Storage Controller";
			case 0x14255594: return "T540-5094 Unified Wire Storage Controller";
			case 0x14255595: return "T540-5095 Unified Wire Storage Controller";
			case 0x14255596: return "T580-5096 Unified Wire Storage Controller";
			case 0x14255597: return "T520-5097 Unified Wire Storage Controller";
			case 0x14255598: return "T580-5098 Unified Wire Storage Controller";
			case 0x14255599: return "T580-5099 Unified Wire Storage Controller";
			case 0x1425559a: return "T520-509A Unified Wire Storage Controller";
			case 0x1425559b: return "T540-509B Unified Wire Storage Controller";
			case 0x1425559c: return "T520-509C Unified Wire Storage Controller";
			case 0x1425559d: return "T540-509D Unified Wire Storage Controller";
			case 0x1425559e: return "T520-509E Unified Wire Storage Controller";
			case 0x1425559f: return "T540-509F Unified Wire Storage Controller";
			case 0x142555a0: return "T540-50A0 Unified Wire Storage Controller";
			case 0x142555a1: return "T540-50A1 Unified Wire Storage Controller";
			case 0x142555a2: return "T580-50A2 Unified Wire Storage Controller";
			case 0x142555a3: return "T580-50A3 Unified Wire Storage Controller";
			case 0x142555a4: return "T540-50A4 Unified Wire Storage Controller";
			case 0x142555a5: return "T522-50A5 Unified Wire Storage Controller";
			case 0x142555a6: return "T522-50A6 Unified Wire Storage Controller";
			case 0x142555a7: return "T580-50A7 Unified Wire Storage Controller";
			case 0x142555a8: return "T580-50A8 Unified Wire Storage Controller";
			case 0x142555a9: return "T580-50A9 Unified Wire Storage Controller";
			case 0x142555aa: return "T580-50AA Unified Wire Storage Controller";
			case 0x142555ab: return "T520-50AB Unified Wire Storage Controller";
			case 0x142555ac: return "T540-50AC Unified Wire Storage Controller";
			case 0x142555ad: return "T520-50AD Unified Wire Storage Controller";
			case 0x142555ae: return "T540-50AE Unified Wire Storage Controller";
			case 0x142555af: return "T580-50AF Unified Wire Storage Controller";
			case 0x142555b0: return "T520-50B0 Unified Wire Storage Controller";
			case 0x14255601: return "T520-CR Unified Wire Storage Controller";
			case 0x14255602: return "T522-CR Unified Wire Storage Controller";
			case 0x14255603: return "T540-CR Unified Wire Storage Controller";
			case 0x14255604: return "T520-BCH Unified Wire Storage Controller";
			case 0x14255605: return "T540-BCH Unified Wire Storage Controller";
			case 0x14255606: return "T540-CH Unified Wire Storage Controller";
			case 0x14255607: return "T520-SO Unified Wire Storage Controller";
			case 0x14255608: return "T520-CX Unified Wire Storage Controller";
			case 0x14255609: return "T520-BT Unified Wire Storage Controller";
			case 0x1425560a: return "T504-BT Unified Wire Storage Controller";
			case 0x1425560b: return "B520-SR Unified Wire Storage Controller";
			case 0x1425560c: return "B504-BT Unified Wire Storage Controller";
			case 0x1425560d: return "T580-CR Unified Wire Storage Controller";
			case 0x1425560e: return "T540-LP-CR Unified Wire Storage Controller";
			case 0x1425560f: return "T540 [Amsterdam] Unified Wire Storage Controller";
			case 0x14255610: return "T580-LP-CR Unified Wire Storage Controller";
			case 0x14255611: return "T520-LL-CR Unified Wire Storage Controller";
			case 0x14255612: return "T560-CR Unified Wire Storage Controller";
			case 0x14255613: return "T580-CHR Unified Wire Storage Controller";
			case 0x14255614: return "T580-SO-CR Unified Wire Storage Controller";
			case 0x14255615: return "T502-BT Unified Wire Storage Controller";
			case 0x14255616: return "T580-OCP-SO Unified Wire Storage Controller";
			case 0x14255617: return "T520-OCP-SO Unified Wire Storage Controller";
			case 0x14255618: return "T540-BT Unified Wire Storage Controller";
			case 0x14255619: return "T540-LP-BT Unified Wire Storage Controller";
			case 0x1425561a: return "T540-SO-BT Unified Wire Storage Controller";
			case 0x1425561b: return "T540-SO-CR Unified Wire Storage Controller";
			case 0x14255680: return "T540-5080 Unified Wire Storage Controller";
			case 0x14255681: return "T540-5081 Unified Wire Storage Controller";
			case 0x14255682: return "T504-5082 Unified Wire Storage Controller";
			case 0x14255683: return "T540-5083 Unified Wire Storage Controller";
			case 0x14255684: return "T540-5084 Unified Wire Storage Controller";
			case 0x14255685: return "T580-5085 Unified Wire Storage Controller";
			case 0x14255686: return "T580-5086 Unified Wire Storage Controller";
			case 0x14255687: return "T580-5087 Unified Wire Storage Controller";
			case 0x14255688: return "T570-5088 Unified Wire Storage Controller";
			case 0x14255689: return "T520-5089 Unified Wire Storage Controller";
			case 0x14255690: return "T540-5090 Unified Wire Storage Controller";
			case 0x14255691: return "T522-5091 Unified Wire Storage Controller";
			case 0x14255692: return "T520-5092 Unified Wire Storage Controller";
			case 0x14255693: return "T580-5093 Unified Wire Storage Controller";
			case 0x14255694: return "T540-5094 Unified Wire Storage Controller";
			case 0x14255695: return "T540-5095 Unified Wire Storage Controller";
			case 0x14255696: return "T580-5096 Unified Wire Storage Controller";
			case 0x14255697: return "T520-5097 Unified Wire Storage Controller";
			case 0x14255698: return "T580-5098 Unified Wire Storage Controller";
			case 0x14255699: return "T580-5099 Unified Wire Storage Controller";
			case 0x1425569a: return "T520-509A Unified Wire Storage Controller";
			case 0x1425569b: return "T540-509B Unified Wire Storage Controller";
			case 0x1425569c: return "T520-509C Unified Wire Storage Controller";
			case 0x1425569d: return "T540-509D Unified Wire Storage Controller";
			case 0x1425569e: return "T520-509E Unified Wire Storage Controller";
			case 0x1425569f: return "T540-509F Unified Wire Storage Controller";
			case 0x142556a0: return "T540-50A0 Unified Wire Storage Controller";
			case 0x142556a1: return "T540-50A1 Unified Wire Storage Controller";
			case 0x142556a2: return "T580-50A2 Unified Wire Storage Controller";
			case 0x142556a3: return "T580-50A3 Unified Wire Storage Controller";
			case 0x142556a4: return "T540-50A4 Unified Wire Storage Controller";
			case 0x142556a5: return "T522-50A5 Unified Wire Storage Controller";
			case 0x142556a6: return "T522-50A6 Unified Wire Storage Controller";
			case 0x142556a7: return "T580-50A7 Unified Wire Storage Controller";
			case 0x142556a8: return "T580-50A8 Unified Wire Storage Controller";
			case 0x142556a9: return "T580-50A9 Unified Wire Storage Controller";
			case 0x142556aa: return "T580-50AA Unified Wire Storage Controller";
			case 0x142556ab: return "T520-50AB Unified Wire Storage Controller";
			case 0x142556ac: return "T540-50AC Unified Wire Storage Controller";
			case 0x142556ad: return "T520-50AD Unified Wire Storage Controller";
			case 0x142556ae: return "T540-50AE Unified Wire Storage Controller";
			case 0x142556af: return "T580-50AF Unified Wire Storage Controller";
			case 0x142556b0: return "T520-50B0 Unified Wire Storage Controller";
			case 0x14255701: return "T520-CR Unified Wire Ethernet Controller";
			case 0x14255702: return "T522-CR Unified Wire Ethernet Controller";
			case 0x14255703: return "T540-CR Unified Wire Ethernet Controller";
			case 0x14255704: return "T520-BCH Unified Wire Ethernet Controller";
			case 0x14255705: return "T540-BCH Unified Wire Ethernet Controller";
			case 0x14255706: return "T540-CH Unified Wire Ethernet Controller";
			case 0x14255707: return "T520-SO Unified Wire Ethernet Controller";
			case 0x14255708: return "T520-CX Unified Wire Ethernet Controller";
			case 0x14255709: return "T520-BT Unified Wire Ethernet Controller";
			case 0x1425570a: return "T504-BT Unified Wire Ethernet Controller";
			case 0x1425570b: return "B520-SR Unified Wire Ethernet Controller";
			case 0x1425570c: return "B504-BT Unified Wire Ethernet Controller";
			case 0x1425570d: return "T580-CR Unified Wire Ethernet Controller";
			case 0x1425570e: return "T540-LP-CR Unified Wire Ethernet Controller";
			case 0x1425570f: return "T540 [Amsterdam] Unified Wire Ethernet Controller";
			case 0x14255710: return "T580-LP-CR Unified Wire Ethernet Controller";
			case 0x14255711: return "T520-LL-CR Unified Wire Ethernet Controller";
			case 0x14255712: return "T560-CR Unified Wire Ethernet Controller";
			case 0x14255713: return "T580-CR Unified Wire Ethernet Controller";
			case 0x14255714: return "T580-SO-CR Unified Wire Ethernet Controller";
			case 0x14255715: return "T502-BT Unified Wire Ethernet Controller";
			case 0x14255780: return "T540-5080 Unified Wire Ethernet Controller";
			case 0x14255781: return "T540-5081 Unified Wire Ethernet Controller";
			case 0x14255782: return "T504-5082 Unified Wire Ethernet Controller";
			case 0x14255783: return "T540-5083 Unified Wire Ethernet Controller";
			case 0x14255784: return "T580-5084 Unified Wire Ethernet Controller";
			case 0x14255785: return "T580-5085 Unified Wire Ethernet Controller";
			case 0x14255786: return "T580-5086 Unified Wire Ethernet Controller";
			case 0x14255787: return "T580-5087 Unified Wire Ethernet Controller";
			case 0x14255788: return "T570-5088 Unified Wire Ethernet Controller";
			case 0x14255789: return "T520-5089 Unified Wire Ethernet Controller";
			case 0x14255790: return "T540-5090 Unified Wire Ethernet Controller";
			case 0x14255791: return "T522-5091 Unified Wire Ethernet Controller";
			case 0x14255792: return "T520-5092 Unified Wire Ethernet Controller";
			case 0x14255793: return "T580-5093 Unified Wire Ethernet Controller";
			case 0x14255794: return "T540-5094 Unified Wire Ethernet Controller";
			case 0x14255795: return "T540-5095 Unified Wire Ethernet Controller";
			case 0x14255796: return "T580-5096 Unified Wire Ethernet Controller";
			case 0x14255797: return "T520-5097 Unified Wire Ethernet Controller";
			case 0x14255801: return "T520-CR Unified Wire Ethernet Controller [VF]";
			case 0x14255802: return "T522-CR Unified Wire Ethernet Controller [VF]";
			case 0x14255803: return "T540-CR Unified Wire Ethernet Controller [VF]";
			case 0x14255804: return "T520-BCH Unified Wire Ethernet Controller [VF]";
			case 0x14255805: return "T540-BCH Unified Wire Ethernet Controller [VF]";
			case 0x14255806: return "T540-CH Unified Wire Ethernet Controller [VF]";
			case 0x14255807: return "T520-SO Unified Wire Ethernet Controller [VF]";
			case 0x14255808: return "T520-CX Unified Wire Ethernet Controller [VF]";
			case 0x14255809: return "T520-BT Unified Wire Ethernet Controller [VF]";
			case 0x1425580a: return "T504-BT Unified Wire Ethernet Controller [VF]";
			case 0x1425580b: return "B520-SR Unified Wire Ethernet Controller [VF]";
			case 0x1425580c: return "B504-BT Unified Wire Ethernet Controller [VF]";
			case 0x1425580d: return "T580-CR Unified Wire Ethernet Controller [VF]";
			case 0x1425580e: return "T540-LP-CR Unified Wire Ethernet Controller [VF]";
			case 0x1425580f: return "T540 [Amsterdam] Unified Wire Ethernet Controller [VF]";
			case 0x14255810: return "T580-LP-CR Unified Wire Ethernet Controller [VF]";
			case 0x14255811: return "T520-LL-CR Unified Wire Ethernet Controller [VF]";
			case 0x14255812: return "T560-CR Unified Wire Ethernet Controller [VF]";
			case 0x14255813: return "T580-CHR Unified Wire Ethernet Controller [VF]";
			case 0x14255814: return "T580-SO-CR Unified Wire Ethernet Controller [VF]";
			case 0x14255815: return "T502-BT Unified Wire Ethernet Controller [VF]";
			case 0x14255816: return "T580-OCP-SO Unified Wire Ethernet Controller [VF]";
			case 0x14255817: return "T520-OCP-SO Unified Wire Ethernet Controller [VF]";
			case 0x14255818: return "T540-BT Unified Wire Ethernet Controller [VF]";
			case 0x14255819: return "T540-LP-BT Unified Wire Ethernet Controller [VF]";
			case 0x1425581a: return "T540-SO-BT Unified Wire Ethernet Controller [VF]";
			case 0x1425581b: return "T540-SO-CR Unified Wire Ethernet Controller [VF]";
			case 0x14255880: return "T540-5080 Unified Wire Ethernet Controller [VF]";
			case 0x14255881: return "T540-5081 Unified Wire Ethernet Controller [VF]";
			case 0x14255882: return "T504-5082 Unified Wire Ethernet Controller [VF]";
			case 0x14255883: return "T540-5083 Unified Wire Ethernet Controller [VF]";
			case 0x14255884: return "T540-5084 Unified Wire Ethernet Controller [VF]";
			case 0x14255885: return "T580-5085 Unified Wire Ethernet Controller [VF]";
			case 0x14255886: return "T580-5086 Unified Wire Ethernet Controller [VF]";
			case 0x14255887: return "T580-5087 Unified Wire Ethernet Controller [VF]";
			case 0x14255888: return "T570-5088 Unified Wire Ethernet Controller [VF]";
			case 0x14255889: return "T520-5089 Unified Wire Ethernet Controller [VF]";
			case 0x14255890: return "T540-5090 Unified Wire Ethernet Controller [VF]";
			case 0x14255891: return "T522-5091 Unified Wire Ethernet Controller [VF]";
			case 0x14255892: return "T520-5092 Unified Wire Ethernet Controller [VF]";
			case 0x14255893: return "T580-5093 Unified Wire Ethernet Controller [VF]";
			case 0x14255894: return "T540-5094 Unified Wire Ethernet Controller [VF]";
			case 0x14255895: return "T540-5095 Unified Wire Ethernet Controller [VF]";
			case 0x14255896: return "T580-5096 Unified Wire Ethernet Controller [VF]";
			case 0x14255897: return "T520-5097 Unified Wire Ethernet Controller [VF]";
			case 0x14255898: return "T580-5098 Unified Wire Ethernet Controller [VF]";
			case 0x14255899: return "T580-5099 Unified Wire Ethernet Controller [VF]";
			case 0x1425589a: return "T520-509A Unified Wire Ethernet Controller [VF]";
			case 0x1425589b: return "T540-509B Unified Wire Ethernet Controller [VF]";
			case 0x1425589c: return "T520-509C Unified Wire Ethernet Controller [VF]";
			case 0x1425589d: return "T540-509D Unified Wire Ethernet Controller [VF]";
			case 0x1425589e: return "T520-509E Unified Wire Ethernet Controller [VF]";
			case 0x1425589f: return "T540-509F Unified Wire Ethernet Controller [VF]";
			case 0x142558a0: return "T540-50A0 Unified Wire Ethernet Controller [VF]";
			case 0x142558a1: return "T540-50A1 Unified Wire Ethernet Controller [VF]";
			case 0x142558a2: return "T580-50A2 Unified Wire Ethernet Controller [VF]";
			case 0x142558a3: return "T580-50A3 Unified Wire Ethernet Controller [VF]";
			case 0x142558a4: return "T540-50A4 Unified Wire Ethernet Controller [VF]";
			case 0x142558a5: return "T522-50A5 Unified Wire Ethernet Controller [VF]";
			case 0x142558a6: return "T522-50A6 Unified Wire Ethernet Controller [VF]";
			case 0x142558a7: return "T580-50A7 Unified Wire Ethernet Controller [VF]";
			case 0x142558a8: return "T580-50A8 Unified Wire Ethernet Controller [VF]";
			case 0x142558a9: return "T580-50A9 Unified Wire Ethernet Controller [VF]";
			case 0x142558aa: return "T580-50AA Unified Wire Ethernet Controller [VF]";
			case 0x142558ab: return "T520-50AB Unified Wire Ethernet Controller [VF]";
			case 0x142558ac: return "T540-50AC Unified Wire Ethernet Controller [VF]";
			case 0x142558ad: return "T520-50AD Unified Wire Ethernet Controller [VF]";
			case 0x142558ae: return "T540-50AE Unified Wire Ethernet Controller [VF]";
			case 0x142558af: return "T580-50AF Unified Wire Ethernet Controller [VF]";
			case 0x142558b0: return "T520-50B0 Unified Wire Ethernet Controller [VF]";
			case 0x14256001: return "T6225-CR Unified Wire Ethernet Controller";
			case 0x14256002: return "T6225-SO-CR Unified Wire Ethernet Controller";
			case 0x14256003: return "T6425-CR Unified Wire Ethernet Controller";
			case 0x14256004: return "T6425-SO-CR Unified Wire Ethernet Controller";
			case 0x14256005: return "T6225-OCP-SO Unified Wire Ethernet Controller";
			case 0x14256006: return "T62100-OCP-SO Unified Wire Ethernet Controller";
			case 0x14256007: return "T62100-LP-CR Unified Wire Ethernet Controller";
			case 0x14256008: return "T62100-SO-CR Unified Wire Ethernet Controller";
			case 0x14256009: return "T6210-BT Unified Wire Ethernet Controller";
			case 0x1425600d: return "T62100-CR Unified Wire Ethernet Controller";
			case 0x14256011: return "T6225-LL-CR Unified Wire Ethernet Controller";
			case 0x14256014: return "T61100-OCP-SO Unified Wire Ethernet Controller";
			case 0x14256015: return "T6201-BT Unified Wire Ethernet Controller";
			case 0x14256080: return "T6225-6080 Unified Wire Ethernet Controller";
			case 0x14256081: return "T62100-6081 Unified Wire Ethernet Controller";
			case 0x14256082: return "T6225-6082 Unified Wire Ethernet Controller";
			case 0x14256083: return "T62100-6083 Unified Wire Ethernet Controller";
			case 0x14256084: return "T64100-6084 Unified Wire Ethernet Controller";
			case 0x14256085: return "T6240-6085 Unified Wire Ethernet Controller";
			case 0x14256086: return "T6225-6086 Unified Wire Ethernet Controller";
			case 0x14256087: return "T6225-6087 Unified Wire Ethernet Controller";
			case 0x14256088: return "T62100-6088 Unified Wire Ethernet Controller";
			case 0x14256089: return "T62100-6089 Unified Wire Ethernet Controller";
			case 0x1425608a: return "T62100-608a Unified Wire Ethernet Controller";
			case 0x14256401: return "T6225-CR Unified Wire Ethernet Controller";
			case 0x14256402: return "T6225-SO-CR Unified Wire Ethernet Controller";
			case 0x14256403: return "T6425-CR Unified Wire Ethernet Controller";
			case 0x14256404: return "T6425-SO-CR Unified Wire Ethernet Controller";
			case 0x14256405: return "T6225-OCP-SO Unified Wire Ethernet Controller";
			case 0x14256406: return "T62100-OCP-SO Unified Wire Ethernet Controller";
			case 0x14256407: return "T62100-LP-CR Unified Wire Ethernet Controller";
			case 0x14256408: return "T62100-SO-CR Unified Wire Ethernet Controller";
			case 0x14256409: return "T6210-BT Unified Wire Ethernet Controller";
			case 0x1425640d: return "T62100-CR Unified Wire Ethernet Controller";
			case 0x14256411: return "T6225-LL-CR Unified Wire Ethernet Controller";
			case 0x14256414: return "T61100-OCP-SO Unified Wire Ethernet Controller";
			case 0x14256415: return "T6201-BT Unified Wire Ethernet Controller";
			case 0x14256480: return "T6225-6080 Unified Wire Ethernet Controller";
			case 0x14256481: return "T62100-6081 Unified Wire Ethernet Controller";
			case 0x14256482: return "T6225-6082 Unified Wire Ethernet Controller";
			case 0x14256483: return "T62100-6083 Unified Wire Ethernet Controller";
			case 0x14256484: return "T64100-6084 Unified Wire Ethernet Controller";
			case 0x14256485: return "T6240-6085 Unified Wire Ethernet Controller";
			case 0x14256486: return "T6225-6086 Unified Wire Ethernet Controller";
			case 0x14256487: return "T6225-6087 Unified Wire Ethernet Controller";
			case 0x14256488: return "T62100-6088 Unified Wire Ethernet Controller";
			case 0x14256489: return "T62100-6089 Unified Wire Ethernet Controller";
			case 0x1425648a: return "T62100-608a Unified Wire Ethernet Controller";
			case 0x14256501: return "T6225-CR Unified Wire Storage Controller";
			case 0x14256502: return "T6225-SO-CR Unified Wire Storage Controller";
			case 0x14256503: return "T6425-CR Unified Wire Storage Controller";
			case 0x14256504: return "T6425-SO-CR Unified Wire Storage Controller";
			case 0x14256505: return "T6225-OCP-SO Unified Wire Storage Controller";
			case 0x14256506: return "T62100-OCP-SO Unified Wire Storage Controller";
			case 0x14256507: return "T62100-LP-CR Unified Wire Storage Controller";
			case 0x14256508: return "T62100-SO-CR Unified Wire Storage Controller";
			case 0x14256509: return "T6210-BT Unified Wire Storage Controller";
			case 0x1425650d: return "T62100-CR Unified Wire Storage Controller";
			case 0x14256511: return "T6225-LL-CR Unified Wire Storage Controller";
			case 0x14256514: return "T61100-OCP-SO Unified Wire Storage Controller";
			case 0x14256515: return "T6201-BT Unified Wire Storage Controller";
			case 0x14256580: return "T6225-6080 Unified Wire Storage Controller";
			case 0x14256581: return "T62100-6081 Unified Wire Storage Controller";
			case 0x14256582: return "T6225-6082 Unified Wire Storage Controller";
			case 0x14256583: return "T62100-6083 Unified Wire Storage Controller";
			case 0x14256584: return "T64100-6084 Unified Wire Storage Controller";
			case 0x14256585: return "T6240-6085 Unified Wire Storage Controller";
			case 0x14256586: return "T6225-6086 Unified Wire Storage Controller";
			case 0x14256587: return "T6225-6087 Unified Wire Storage Controller";
			case 0x14256588: return "T62100-6088 Unified Wire Storage Controller";
			case 0x14256589: return "T62100-6089 Unified Wire Storage Controller";
			case 0x1425658a: return "T62100-608a Unified Wire Storage Controller";
			case 0x14256601: return "T6225-CR Unified Wire Storage Controller";
			case 0x14256602: return "T6225-SO-CR Unified Wire Storage Controller";
			case 0x14256603: return "T6425-CR Unified Wire Storage Controller";
			case 0x14256604: return "T6425-SO-CR Unified Wire Storage Controller";
			case 0x14256605: return "T6225-OCP-SO Unified Wire Storage Controller";
			case 0x14256606: return "T62100-OCP-SO Unified Wire Storage Controller";
			case 0x14256607: return "T62100-LP-CR Unified Wire Storage Controller";
			case 0x14256608: return "T62100-SO-CR Unified Wire Storage Controller";
			case 0x14256609: return "T6210-BT Unified Wire Storage Controller";
			case 0x1425660d: return "T62100-CR Unified Wire Storage Controller";
			case 0x14256611: return "T6225-LL-CR Unified Wire Storage Controller";
			case 0x14256614: return "T61100-OCP-SO Unified Wire Storage Controller";
			case 0x14256615: return "T6201-BT Unified Wire Storage Controller";
			case 0x14256680: return "T6225-6080 Unified Wire Storage Controller";
			case 0x14256681: return "T62100-6081 Unified Wire Storage Controller";
			case 0x14256682: return "T6225-6082 Unified Wire Storage Controller";
			case 0x14256683: return "T62100-6083 Unified Wire Storage Controller";
			case 0x14256684: return "T64100-6084 Unified Wire Storage Controller";
			case 0x14256685: return "T6240-6085 Unified Wire Storage Controller";
			case 0x14256686: return "T6225-6086 Unified Wire Storage Controller";
			case 0x14256687: return "T6225-6087 Unified Wire Storage Controller";
			case 0x14256688: return "T62100-6088 Unified Wire Storage Controller";
			case 0x14256689: return "T62100-6089 Unified Wire Storage Controller";
			case 0x1425668a: return "T62100-608a Unified Wire Storage Controller";
			case 0x14256801: return "T6225-CR Unified Wire Ethernet Controller [VF]";
			case 0x14256802: return "T6225-SO-CR Unified Wire Ethernet Controller [VF]";
			case 0x14256803: return "T6425-CR Unified Wire Ethernet Controller [VF]";
			case 0x14256804: return "T6425-SO-CR Unified Wire Ethernet Controller [VF]";
			case 0x14256805: return "T6225-OCP-SO Unified Wire Ethernet Controller [VF]";
			case 0x14256806: return "T62100-OCP-SO Unified Wire Ethernet Controller [VF]";
			case 0x14256807: return "T62100-LP-CR Unified Wire Ethernet Controller [VF]";
			case 0x14256808: return "T62100-SO-CR Unified Wire Ethernet Controller [VF]";
			case 0x14256809: return "T6210-BT Unified Wire Ethernet Controller [VF]";
			case 0x1425680d: return "T62100-CR Unified Wire Ethernet Controller [VF]";
			case 0x14256811: return "T6225-LL-CR Unified Wire Ethernet Controller [VF]";
			case 0x14256814: return "T61100-OCP-SO Unified Wire Ethernet Controller [VF]";
			case 0x14256815: return "T6201-BT Unified Wire Ethernet Controller [VF]";
			case 0x14256880: return "T6225-6080 Unified Wire Ethernet Controller [VF]";
			case 0x14256881: return "T62100-6081 Unified Wire Ethernet Controller [VF]";
			case 0x14256882: return "T6225-6082 Unified Wire Ethernet Controller [VF]";
			case 0x14256883: return "T62100-6083 Unified Wire Ethernet Controller [VF]";
			case 0x14256884: return "T64100-6084 Unified Wire Ethernet Controller [VF]";
			case 0x14256885: return "T6240-6085 Unified Wire Ethernet Controller [VF]";
			case 0x14256886: return "T6225-6086 Unified Wire Ethernet Controller [VF]";
			case 0x14256887: return "T6225-6087 Unified Wire Ethernet Controller [VF]";
			case 0x14256888: return "T62100-6088 Unified Wire Ethernet Controller [VF]";
			case 0x14256889: return "T62100-6089 Unified Wire Ethernet Controller [VF]";
			case 0x1425688a: return "T62100-608a Unified Wire Ethernet Controller [VF]";
			case 0x1425a000: return "PE10K Unified Wire Ethernet Controller";
			case 0x142e4020: return "VM2-2 [Video Maker 2] MPEG1/2 Encoder";
			case 0x142e4337: return "VM2-2-C7 [Video Maker 2 rev. C7] MPEG1/2 Encoder";
			case 0x14329130: return "RTL81xx Fast Ethernet";
			case 0x14354520: return "PCI4520";
			case 0x14356020: return "SPM6020";
			case 0x14356030: return "SPM6030";
			case 0x14356420: return "SPM186420";
			case 0x14356430: return "SPM176430";
			case 0x14356431: return "SPM176431";
			case 0x14357520: return "DM7520";
			case 0x14357540: return "SDM7540";
			case 0x14357820: return "DM7820";
			case 0x144a6208: return "PCI-6208V";
			case 0x144a7250: return "PCI-7250";
			case 0x144a7296: return "PCI-7296";
			case 0x144a7432: return "PCI-7432";
			case 0x144a7433: return "PCI-7433";
			case 0x144a7434: return "PCI-7434";
			case 0x144a7841: return "PCI-7841";
			case 0x144a8133: return "PCI-8133";
			case 0x144a8164: return "PCI-8164";
			case 0x144a8554: return "PCI-8554";
			case 0x144a9111: return "PCI-9111";
			case 0x144a9113: return "PCI-9113";
			case 0x144a9114: return "PCI-9114";
			case 0x144aa001: return "ADi-BSEC";
			case 0x144d1600: return "Apple PCIe SSD";
			case 0x144da544: return "Exynos 8890 PCIe Root Complex";
			case 0x144da800: return "XP941 PCIe SSD";
			case 0x144da802: return "NVMe SSD Controller SM951/PM951";
			case 0x144da804: return "NVMe SSD Controller SM961/PM961/SM963";
			case 0x144da808: return "NVMe SSD Controller SM981/PM981/PM983";
			case 0x144da80a: return "NVMe SSD Controller PM9A1/PM9A3/980PRO";
			case 0x144da820: return "NVMe SSD Controller 171X";
			case 0x144da821: return "NVMe SSD Controller 172X";
			case 0x144da822: return "NVMe SSD Controller 172Xa/172Xb";
			case 0x144da824: return "NVMe SSD Controller PM173X";
			case 0x144da825: return "NVMe SSD Controller PM173Xa";
			case 0x144da826: return "NVMe SSD Controller PM174X";
			case 0x144decec: return "Exynos 8895 PCIe Root Complex";
			case 0x14583483: return "USB 3.0 Controller (VIA VL80x-based xHCI Controller)";
			case 0x145f0001: return "NextMove PCI";
			case 0x1461a3ce: return "M179";
			case 0x1461a3cf: return "M179";
			case 0x1461a836: return "M115 DVB-T, PAL/SECAM/NTSC Tuner";
			case 0x1461e836: return "M115S Hybrid Analog/DVB PAL/SECAM/NTSC Tuner";
			case 0x1461f436: return "AVerTV Hybrid+FM";
			case 0x14623483: return "MSI USB 3.0 (VIA VL80x-based xHCI USB Controller)";
			case 0x14627c56: return "Realtek Ethernet controller RTL8111H";
			case 0x1462aaf0: return "Radeon RX 580 Gaming X 8G";
			case 0x146a3010: return "3010 RF Synthesizer";
			case 0x146a3a11: return "3011A PXI RF Synthesizer";
			case 0x146c1430: return "FE-1430TX Fast Ethernet PCI Adapter";
			case 0x147b1084: return "IP35 [Dark Raider]";
			case 0x14820001: return "PCI-16 Host Interface for ITC-16";
			case 0x148c2391: return "Radeon RX 590 [Red Devil]";
			case 0x148d1003: return "HCF 56k Data/Fax Modem";
			case 0x14971497: return "SMA Technologie AG";
			case 0x14980330: return "TPMC816 2 Channel CAN bus controller.";
			case 0x1498035d: return "TPMC861 4-Channel Isolated Serial Interface RS422/RS485";
			case 0x14980385: return "TPMC901 Extended CAN bus with 2/4/6 CAN controller";
			case 0x149821cc: return "TCP460 CompactPCI 16 Channel Serial Interface RS232/RS422";
			case 0x149821cd: return "TCP461 CompactPCI 8 Channel Serial Interface RS232/RS422";
			case 0x14983064: return "TPCI100 (2 Slot IndustryPack PCI Carrier)";
			case 0x149830c8: return "TPCI200 4 Slot IndustryPack PCI Carrier";
			case 0x149870c8: return "TPCE200 4 Slot IndustryPack PCIe Carrier";
			case 0x14989177: return "TXMC375 8 channel RS232/RS422/RS485 programmable serial interface";
			case 0x149d0001: return "Video Toaster for PC";
			case 0x14a422f1: return "M8Pe Series NVMe SSD";
			case 0x14a44318: return "Broadcom BCM4318 [AirForce One 54g] 802.11g WLAN Controller";
			case 0x14af7102: return "3D Prophet II MX";
			case 0x14b30000: return "DSL NIC";
			case 0x14b50200: return "Scope";
			case 0x14b50300: return "Pulsar";
			case 0x14b50400: return "PulsarSRB";
			case 0x14b50600: return "Pulsar2";
			case 0x14b50800: return "DSP-Board";
			case 0x14b50900: return "DSP-Board";
			case 0x14b50a00: return "DSP-Board";
			case 0x14b50b00: return "DSP-Board";
			case 0x14b70001: return "Symphony 4110";
			case 0x14b90001: return "PC4800";
			case 0x14b90340: return "PC4800";
			case 0x14b90350: return "350 series 802.11b Wireless LAN Adapter";
			case 0x14b94500: return "PC4500";
			case 0x14b94800: return "Cisco Aironet 340 802.11b Wireless LAN Adapter/Aironet PC4800";
			case 0x14b9a504: return "Cisco Aironet Wireless 802.11b";
			case 0x14b9a505: return "Cisco Aironet CB20a 802.11a Wireless LAN Adapter";
			case 0x14b9a506: return "Cisco Aironet Mini PCI b/g";
			case 0x14ba0600: return "ARC-PCI/22";
			case 0x14bcd002: return "Pulsar [PCI ADSL Card]";
			case 0x14bcd00f: return "Pulsar [PCI ADSL Card]";
			case 0x14c01201: return "X550 10Gb 2P RJ45 OCP Mezz";
			case 0x14c10008: return "Myri-10G Dual-Protocol NIC";
			case 0x14c18043: return "Myrinet 2000 Scalable Cluster Interconnect";
			case 0x14c37612: return "MT7612E 802.11acbgn PCI Express Wireless Network Adapter";
			case 0x14c37630: return "MT7630e 802.11bgn Wireless Network Adapter";
			case 0x14c37662: return "MT7662E 802.11ac PCI Express Wireless Network Adapter";
			case 0x14c37915: return "MT7915E 802.11ax PCI Express Wireless Network Adapter";
			case 0x14cd0001: return "USI-1514-1GbaseT [OCP1]";
			case 0x14cd0002: return "USI-4227-SFP [OCP2]";
			case 0x14cd0003: return "USI-X557-10GbaseT [OCP3]";
			case 0x14d28001: return "VScom 010L 1 port parallel adaptor";
			case 0x14d28002: return "VScom 020L 2 port parallel adaptor";
			case 0x14d28010: return "VScom 100L 1 port serial adaptor";
			case 0x14d28011: return "VScom 110L 1 port serial and 1 port parallel adaptor";
			case 0x14d28020: return "VScom 200L 1 or 2 port serial adaptor";
			case 0x14d28021: return "VScom 210L 2 port serial and 1 port parallel adaptor";
			case 0x14d28028: return "VScom 200I/200I-SI 2-port serial adapter";
			case 0x14d28040: return "VScom 400L 4 port serial adaptor";
			case 0x14d28043: return "VScom 430L 4-port serial and 3-port parallel adapter";
			case 0x14d28048: return "VScom 400I 4-port serial adapter";
			case 0x14d28080: return "VScom 800L 8 port serial adaptor";
			case 0x14d28088: return "VScom 800I 8-port serial adapter";
			case 0x14d2a000: return "VScom 010H 1 port parallel adaptor";
			case 0x14d2a001: return "VScom 100H 1 port serial adaptor";
			case 0x14d2a003: return "VScom 400H 4 port serial adaptor";
			case 0x14d2a004: return "VScom 400HF1 4 port serial adaptor";
			case 0x14d2a005: return "VScom 200H 2 port serial adaptor";
			case 0x14d2a007: return "VScom PCI800EH (PCIe) 8-port serial adapter Port 1-4";
			case 0x14d2a008: return "VScom PCI800EH (PCIe) 8-port serial adapter Port 5-8";
			case 0x14d2a009: return "VScom PCI400EH (PCIe) 4-port serial adapter";
			case 0x14d2e001: return "VScom 010HV2 1 port parallel adaptor";
			case 0x14d2e010: return "VScom 100HV2 1 port serial adaptor";
			case 0x14d2e020: return "VScom 200HV2 2 port serial adaptor";
			case 0x14d30002: return "DTL-T14000 Rev. 1 [PS2 TOOL CD/DVD Emulator]";
			case 0x14d30003: return "DTL-T14000 Rev. 2 [PS2 TOOL CD/DVD Emulator]";
			case 0x14d30004: return "DTL-T14000 Rev. 3 [PS2 TOOL CD/DVD Emulator]";
			case 0x14d66101: return "ACS-61xxx, PCIe to SAS/SATA RAID HBA";
			case 0x14d66201: return "ACS-62xxx, External PCIe to SAS/SATA RAID controller";
			case 0x14d90010: return "AP1011/SP1011 HyperTransport-PCI Bridge [Sturgeon]";
			case 0x14d99000: return "AS90L10204/10208 HyperTransport to PCI-X Bridge";
			case 0x14db2120: return "TK9902";
			case 0x14db2182: return "AFAVLAB Technology Inc. 8-port serial card";
			case 0x14dc0000: return "PCI230";
			case 0x14dc0001: return "PCI242";
			case 0x14dc0002: return "PCI244";
			case 0x14dc0003: return "PCI247";
			case 0x14dc0004: return "PCI248";
			case 0x14dc0005: return "PCI249";
			case 0x14dc0006: return "PCI260";
			case 0x14dc0007: return "PCI224";
			case 0x14dc0008: return "PCI234";
			case 0x14dc0009: return "PCI236";
			case 0x14dc000a: return "PCI272";
			case 0x14dc000b: return "PCI215";
			case 0x14e40576: return "BCM43224 802.11a/b/g/n";
			case 0x14e40800: return "Sentry5 Chipcommon I/O Controller";
			case 0x14e40804: return "Sentry5 PCI Bridge";
			case 0x14e40805: return "Sentry5 MIPS32 CPU";
			case 0x14e40806: return "Sentry5 Ethernet Controller";
			case 0x14e4080b: return "Sentry5 Crypto Accelerator";
			case 0x14e4080f: return "Sentry5 DDR/SDR RAM Controller";
			case 0x14e40811: return "Sentry5 External Interface Core";
			case 0x14e40816: return "BCM3302 Sentry5 MIPS32 CPU";
			case 0x14e41570: return "720p FaceTime HD Camera";
			case 0x14e41600: return "NetXtreme BCM5752 Gigabit Ethernet PCI Express";
			case 0x14e41601: return "NetXtreme BCM5752M Gigabit Ethernet PCI Express";
			case 0x14e41604: return "BCM5745X NetXtreme-E Ethernet Partition";
			case 0x14e41605: return "BCM5745X NetXtreme-E RDMA Partition";
			case 0x14e41606: return "BCM5745X NetXtreme-E RDMA Virtual Function";
			case 0x14e41609: return "BCM5745X NetXtreme-E Ethernet Virtual Function";
			case 0x14e41612: return "BCM70012 Video Decoder [Crystal HD]";
			case 0x14e41614: return "BCM57454 NetXtreme-E 10Gb/25Gb/40Gb/50Gb/100Gb Ethernet";
			case 0x14e41615: return "BCM70015 Video Decoder [Crystal HD]";
			case 0x14e41639: return "NetXtreme II BCM5709 Gigabit Ethernet";
			case 0x14e4163a: return "NetXtreme II BCM5709S Gigabit Ethernet";
			case 0x14e4163b: return "NetXtreme II BCM5716 Gigabit Ethernet";
			case 0x14e4163c: return "NetXtreme II BCM5716S Gigabit Ethernet";
			case 0x14e4163d: return "NetXtreme II BCM57811 10-Gigabit Ethernet";
			case 0x14e4163e: return "NetXtreme II BCM57811 10 Gigabit Ethernet Multi Function";
			case 0x14e4163f: return "NetXtreme II BCM57811 10-Gigabit Ethernet Virtual Function";
			case 0x14e41641: return "NetXtreme BCM57787 Gigabit Ethernet PCIe";
			case 0x14e41642: return "NetXtreme BCM57764 Gigabit Ethernet PCIe";
			case 0x14e41643: return "NetXtreme BCM5725 Gigabit Ethernet PCIe";
			case 0x14e41644: return "NetXtreme BCM5700 Gigabit Ethernet";
			case 0x14e41645: return "NetXtreme BCM5701 Gigabit Ethernet";
			case 0x14e41646: return "NetXtreme BCM5702 Gigabit Ethernet";
			case 0x14e41647: return "NetXtreme BCM5703 Gigabit Ethernet";
			case 0x14e41648: return "NetXtreme BCM5704 Gigabit Ethernet";
			case 0x14e41649: return "NetXtreme BCM5704S_2 Gigabit Ethernet";
			case 0x14e4164a: return "NetXtreme II BCM5706 Gigabit Ethernet";
			case 0x14e4164c: return "NetXtreme II BCM5708 Gigabit Ethernet";
			case 0x14e4164d: return "NetXtreme BCM5702FE Gigabit Ethernet";
			case 0x14e4164e: return "NetXtreme II BCM57710 10-Gigabit PCIe [Everest]";
			case 0x14e4164f: return "NetXtreme II BCM57711 10-Gigabit PCIe";
			case 0x14e41650: return "NetXtreme II BCM57711E 10-Gigabit PCIe";
			case 0x14e41653: return "NetXtreme BCM5705 Gigabit Ethernet";
			case 0x14e41654: return "NetXtreme BCM5705_2 Gigabit Ethernet";
			case 0x14e41655: return "NetXtreme BCM5717 Gigabit Ethernet PCIe";
			case 0x14e41656: return "NetXtreme BCM5718 Gigabit Ethernet PCIe";
			case 0x14e41657: return "NetXtreme BCM5719 Gigabit Ethernet PCIe";
			case 0x14e41659: return "NetXtreme BCM5721 Gigabit Ethernet PCI Express";
			case 0x14e4165a: return "NetXtreme BCM5722 Gigabit Ethernet PCI Express";
			case 0x14e4165b: return "NetXtreme BCM5723 Gigabit Ethernet PCIe";
			case 0x14e4165c: return "NetXtreme BCM5724 Gigabit Ethernet PCIe";
			case 0x14e4165d: return "NetXtreme BCM5705M Gigabit Ethernet";
			case 0x14e4165e: return "NetXtreme BCM5705M_2 Gigabit Ethernet";
			case 0x14e4165f: return "NetXtreme BCM5720 Gigabit Ethernet PCIe";
			case 0x14e41662: return "NetXtreme II BCM57712 10 Gigabit Ethernet";
			case 0x14e41663: return "NetXtreme II BCM57712 10 Gigabit Ethernet Multi Function";
			case 0x14e41665: return "NetXtreme BCM5717 Gigabit Ethernet PCIe";
			case 0x14e41668: return "NetXtreme BCM5714 Gigabit Ethernet";
			case 0x14e41669: return "NetXtreme 5714S Gigabit Ethernet";
			case 0x14e4166a: return "NetXtreme BCM5780 Gigabit Ethernet";
			case 0x14e4166b: return "NetXtreme BCM5780S Gigabit Ethernet";
			case 0x14e4166e: return "570x 10/100 Integrated Controller";
			case 0x14e4166f: return "NetXtreme II BCM57712 10 Gigabit Ethernet Virtual Function";
			case 0x14e41672: return "NetXtreme BCM5754M Gigabit Ethernet PCI Express";
			case 0x14e41673: return "NetXtreme BCM5755M Gigabit Ethernet PCI Express";
			case 0x14e41674: return "NetXtreme BCM5756ME Gigabit Ethernet PCI Express";
			case 0x14e41677: return "NetXtreme BCM5751 Gigabit Ethernet PCI Express";
			case 0x14e41678: return "NetXtreme BCM5715 Gigabit Ethernet";
			case 0x14e41679: return "NetXtreme BCM5715S Gigabit Ethernet";
			case 0x14e4167a: return "NetXtreme BCM5754 Gigabit Ethernet PCI Express";
			case 0x14e4167b: return "NetXtreme BCM5755 Gigabit Ethernet PCI Express";
			case 0x14e4167d: return "NetXtreme BCM5751M Gigabit Ethernet PCI Express";
			case 0x14e4167e: return "NetXtreme BCM5751F Fast Ethernet PCI Express";
			case 0x14e4167f: return "NetLink BCM5787F Fast Ethernet PCI Express";
			case 0x14e41680: return "NetXtreme BCM5761e Gigabit Ethernet PCIe";
			case 0x14e41681: return "NetXtreme BCM5761 Gigabit Ethernet PCIe";
			case 0x14e41682: return "NetXtreme BCM57762 Gigabit Ethernet PCIe";
			case 0x14e41683: return "NetXtreme BCM57767 Gigabit Ethernet PCIe";
			case 0x14e41684: return "NetXtreme BCM5764M Gigabit Ethernet PCIe";
			case 0x14e41685: return "NetXtreme II BCM57500S Gigabit Ethernet";
			case 0x14e41686: return "NetXtreme BCM57766 Gigabit Ethernet PCIe";
			case 0x14e41687: return "NetXtreme BCM5762 Gigabit Ethernet PCIe";
			case 0x14e41688: return "NetXtreme BCM5761 10/100/1000BASE-T Ethernet";
			case 0x14e4168a: return "NetXtreme II BCM57800 1/10 Gigabit Ethernet";
			case 0x14e4168d: return "NetXtreme II BCM57840 10/20 Gigabit Ethernet";
			case 0x14e4168e: return "NetXtreme II BCM57810 10 Gigabit Ethernet";
			case 0x14e41690: return "NetXtreme BCM57760 Gigabit Ethernet PCIe";
			case 0x14e41691: return "NetLink BCM57788 Gigabit Ethernet PCIe";
			case 0x14e41692: return "NetLink BCM57780 Gigabit Ethernet PCIe";
			case 0x14e41693: return "NetLink BCM5787M Gigabit Ethernet PCI Express";
			case 0x14e41694: return "NetLink BCM57790 Gigabit Ethernet PCIe";
			case 0x14e41696: return "NetXtreme BCM5782 Gigabit Ethernet";
			case 0x14e41698: return "NetLink BCM5784M Gigabit Ethernet PCIe";
			case 0x14e41699: return "NetLink BCM5785 Gigabit Ethernet";
			case 0x14e4169a: return "NetLink BCM5786 Gigabit Ethernet PCI Express";
			case 0x14e4169b: return "NetLink BCM5787 Gigabit Ethernet PCI Express";
			case 0x14e4169c: return "NetXtreme BCM5788 Gigabit Ethernet";
			case 0x14e4169d: return "NetLink BCM5789 Gigabit Ethernet PCI Express";
			case 0x14e416a0: return "NetLink BCM5785 Fast Ethernet";
			case 0x14e416a1: return "BCM57840 NetXtreme II 10 Gigabit Ethernet";
			case 0x14e416a2: return "BCM57840 NetXtreme II 10/20-Gigabit Ethernet";
			case 0x14e416a3: return "NetXtreme BCM57786 Gigabit Ethernet PCIe";
			case 0x14e416a4: return "BCM57840 NetXtreme II Ethernet Multi Function";
			case 0x14e416a5: return "NetXtreme II BCM57800 1/10 Gigabit Ethernet Multi Function";
			case 0x14e416a6: return "NetXtreme BCM5702X Gigabit Ethernet";
			case 0x14e416a7: return "NetXtreme BCM5703X Gigabit Ethernet";
			case 0x14e416a8: return "NetXtreme BCM5704S Gigabit Ethernet";
			case 0x14e416a9: return "NetXtreme II BCM57800 1/10 Gigabit Ethernet Virtual Function";
			case 0x14e416aa: return "NetXtreme II BCM5706S Gigabit Ethernet";
			case 0x14e416ab: return "NetXtreme II BCM57840 10/20 Gigabit Ethernet Multi Function";
			case 0x14e416ac: return "NetXtreme II BCM5708S Gigabit Ethernet";
			case 0x14e416ad: return "NetXtreme II BCM57840 10/20 Gigabit Ethernet Virtual Function";
			case 0x14e416ae: return "NetXtreme II BCM57810 10 Gigabit Ethernet Multi Function";
			case 0x14e416af: return "NetXtreme II BCM57810 10 Gigabit Ethernet Virtual Function";
			case 0x14e416b0: return "NetXtreme BCM57761 Gigabit Ethernet PCIe";
			case 0x14e416b1: return "NetLink BCM57781 Gigabit Ethernet PCIe";
			case 0x14e416b2: return "NetLink BCM57791 Gigabit Ethernet PCIe";
			case 0x14e416b3: return "NetXtreme BCM57786 Gigabit Ethernet PCIe";
			case 0x14e416b4: return "NetXtreme BCM57765 Gigabit Ethernet PCIe";
			case 0x14e416b5: return "NetLink BCM57785 Gigabit Ethernet PCIe";
			case 0x14e416b6: return "NetLink BCM57795 Gigabit Ethernet PCIe";
			case 0x14e416b7: return "NetXtreme BCM57782 Gigabit Ethernet PCIe";
			case 0x14e416bc: return "BCM57765/57785 SDXC/MMC Card Reader";
			case 0x14e416be: return "BCM57765/57785 MS Card Reader";
			case 0x14e416bf: return "BCM57765/57785 xD-Picture Card Reader";
			case 0x14e416c1: return "NetXtreme-E RDMA Virtual Function";
			case 0x14e416c6: return "NetXtreme BCM5702A3 Gigabit Ethernet";
			case 0x14e416c7: return "NetXtreme BCM5703 Gigabit Ethernet";
			case 0x14e416c8: return "BCM57301 NetXtreme-C 10Gb Ethernet Controller";
			case 0x14e416c9: return "BCM57302 NetXtreme-C 10Gb/25Gb Ethernet Controller";
			case 0x14e416ca: return "BCM57304 NetXtreme-C 10Gb/25Gb/40Gb/50Gb Ethernet Controller";
			case 0x14e416cb: return "NetXtreme-C Ethernet Virtual Function";
			case 0x14e416cc: return "BCM57417 NetXtreme-E Ethernet Partition";
			case 0x14e416ce: return "BCM57311 NetXtreme-C 10Gb RDMA Ethernet Controller";
			case 0x14e416cf: return "BCM57312 NetXtreme-C 10Gb/25Gb RDMA Ethernet Controller";
			case 0x14e416d0: return "BCM57402 NetXtreme-E 10Gb Ethernet Controller";
			case 0x14e416d1: return "BCM57404 NetXtreme-E 10Gb/25Gb Ethernet Controller";
			case 0x14e416d2: return "BCM57406 NetXtreme-E 10GBASE-T Ethernet Controller";
			case 0x14e416d3: return "NetXtreme-E Ethernet Virtual Function";
			case 0x14e416d4: return "BCM57402 NetXtreme-E Ethernet Partition";
			case 0x14e416d5: return "BCM57407 NetXtreme-E 10GBase-T Ethernet Controller";
			case 0x14e416d6: return "BCM57412 NetXtreme-E 10Gb RDMA Ethernet Controller";
			case 0x14e416d7: return "BCM57414 NetXtreme-E 10Gb/25Gb RDMA Ethernet Controller";
			case 0x14e416d8: return "BCM57416 NetXtreme-E Dual-Media 10G RDMA Ethernet Controller";
			case 0x14e416d9: return "BCM57417 NetXtreme-E 10GBASE-T RDMA Ethernet Controller";
			case 0x14e416dc: return "NetXtreme-E Ethernet Virtual Function";
			case 0x14e416dd: return "NetLink BCM5781 Gigabit Ethernet PCI Express";
			case 0x14e416de: return "BCM57412 NetXtreme-E Ethernet Partition";
			case 0x14e416df: return "BCM57314 NetXtreme-C 10Gb/25Gb/40Gb/50Gb RDMA Ethernet Controller";
			case 0x14e416e1: return "NetXtreme-C Ethernet Virtual Function";
			case 0x14e416e2: return "BCM57417 NetXtreme-E 10Gb/25Gb RDMA Ethernet Controller";
			case 0x14e416e3: return "BCM57416 NetXtreme-E 10Gb RDMA Ethernet Controller";
			case 0x14e416e5: return "NetXtreme-C RDMA Virtual Function";
			case 0x14e416e7: return "BCM57404 NetXtreme-E Ethernet Partition";
			case 0x14e416e8: return "BCM57406 NetXtreme-E Ethernet Partition";
			case 0x14e416e9: return "BCM57407 NetXtreme-E 25Gb Ethernet Controller";
			case 0x14e416eb: return "BCM57412 NetXtreme-E RDMA Partition";
			case 0x14e416ec: return "BCM57414 NetXtreme-E Ethernet Partition";
			case 0x14e416ed: return "BCM57414 NetXtreme-E RDMA Partition";
			case 0x14e416ee: return "BCM57416 NetXtreme-E Ethernet Partition";
			case 0x14e416ef: return "BCM57416 NetXtreme-E RDMA Partition";
			case 0x14e416f1: return "BCM57452 NetXtreme-E 10Gb/25Gb/40Gb/50Gb Ethernet";
			case 0x14e416f3: return "NetXtreme BCM5727 Gigabit Ethernet PCIe";
			case 0x14e416f7: return "NetXtreme BCM5753 Gigabit Ethernet PCI Express";
			case 0x14e416fd: return "NetXtreme BCM5753M Gigabit Ethernet PCI Express";
			case 0x14e416fe: return "NetXtreme BCM5753F Fast Ethernet PCI Express";
			case 0x14e4170c: return "BCM4401-B0 100Base-TX";
			case 0x14e4170d: return "NetXtreme BCM5901 100Base-TX";
			case 0x14e4170e: return "NetXtreme BCM5901 100Base-TX";
			case 0x14e41712: return "NetLink BCM5906 Fast Ethernet PCI Express";
			case 0x14e41713: return "NetLink BCM5906M Fast Ethernet PCI Express";
			case 0x14e41750: return "BCM57508 NetXtreme-E 10Gb/25Gb/40Gb/50Gb/100Gb/200Gb Ethernet";
			case 0x14e41751: return "BCM57504 NetXtreme-E 10Gb/25Gb/40Gb/50Gb/100Gb/200Gb Ethernet";
			case 0x14e41752: return "BCM57502 NetXtreme-E 10Gb/25Gb/40Gb/50Gb Ethernet";
			case 0x14e41800: return "BCM57502 NetXtreme-E Ethernet Partition";
			case 0x14e41801: return "BCM57504 NetXtreme-E Ethernet Partition";
			case 0x14e41802: return "BCM57508 NetXtreme-E Ethernet Partition";
			case 0x14e41803: return "BCM57502 NetXtreme-E RDMA Partition";
			case 0x14e41804: return "BCM57504 NetXtreme-E RDMA Partition";
			case 0x14e41805: return "BCM57508 NetXtreme-E RDMA Partition";
			case 0x14e41806: return "BCM5750X NetXtreme-E Ethernet Virtual Function";
			case 0x14e41807: return "BCM5750X NetXtreme-E RDMA Virtual Function";
			case 0x14e41808: return "BCM5750X NetXtreme-E Ethernet Virtual Function";
			case 0x14e41809: return "BCM5750X NetXtreme-E RDMA Virtual Function";
			case 0x14e42711: return "BCM2711 PCIe Bridge";
			case 0x14e43352: return "BCM3352";
			case 0x14e43360: return "BCM3360";
			case 0x14e44210: return "BCM4210 iLine10 HomePNA 2.0";
			case 0x14e44211: return "BCM4211 iLine10 HomePNA 2.0 + V.90 56k modem";
			case 0x14e44212: return "BCM4212 v.90 56k modem";
			case 0x14e44220: return "802-11b/g Wireless PCI controller, packaged as a Linksys WPC54G ver 1.2 PCMCIA card";
			case 0x14e44222: return "NetXtreme BCM5753M Gigabit Ethernet PCI Express";
			case 0x14e44301: return "BCM4301 802.11b Wireless LAN Controller";
			case 0x14e44305: return "BCM4307 V.90 56k Modem";
			case 0x14e44306: return "BCM4306 802.11bg Wireless LAN controller";
			case 0x14e44307: return "BCM4306 802.11bg Wireless LAN Controller";
			case 0x14e44310: return "BCM4310 Chipcommon I/OController";
			case 0x14e44311: return "BCM4311 802.11b/g WLAN";
			case 0x14e44312: return "BCM4311 802.11a/b/g";
			case 0x14e44313: return "BCM4311 802.11a";
			case 0x14e44315: return "BCM4312 802.11b/g LP-PHY";
			case 0x14e44318: return "BCM4318 [AirForce One 54g] 802.11g Wireless LAN Controller";
			case 0x14e44319: return "BCM4318 [AirForce 54g] 802.11a/b/g PCI Express Transceiver";
			case 0x14e44320: return "BCM4306 802.11b/g Wireless LAN Controller";
			case 0x14e44321: return "BCM4321 802.11a Wireless Network Controller";
			case 0x14e44322: return "BCM4322 802.11bgn Wireless Network Controller";
			case 0x14e44324: return "BCM4309 802.11abg Wireless Network Controller";
			case 0x14e44325: return "BCM4306 802.11bg Wireless Network Controller";
			case 0x14e44326: return "BCM4307 Chipcommon I/O Controller?";
			case 0x14e44328: return "BCM4321 802.11a/b/g/n";
			case 0x14e44329: return "BCM4321 802.11b/g/n";
			case 0x14e4432a: return "BCM4321 802.11an Wireless Network Controller";
			case 0x14e4432b: return "BCM4322 802.11a/b/g/n Wireless LAN Controller";
			case 0x14e4432c: return "BCM4322 802.11b/g/n";
			case 0x14e4432d: return "BCM4322 802.11an Wireless Network Controller";
			case 0x14e44331: return "BCM4331 802.11a/b/g/n";
			case 0x14e44333: return "Serial (EDGE/GPRS modem part of Option GT Combo Edge)";
			case 0x14e44344: return "EDGE/GPRS data and 802.11b/g combo cardbus [GC89]";
			case 0x14e44350: return "BCM43222 Wireless Network Adapter";
			case 0x14e44351: return "BCM43222 802.11abgn Wireless Network Adapter";
			case 0x14e44353: return "BCM43224 802.11a/b/g/n";
			case 0x14e44357: return "BCM43225 802.11b/g/n";
			case 0x14e44358: return "BCM43227 802.11b/g/n";
			case 0x14e44359: return "BCM43228 802.11a/b/g/n";
			case 0x14e44360: return "BCM4360 802.11ac Wireless Network Adapter";
			case 0x14e44365: return "BCM43142 802.11b/g/n";
			case 0x14e443a0: return "BCM4360 802.11ac Wireless Network Adapter";
			case 0x14e443a1: return "BCM4360 802.11ac Wireless Network Adapter";
			case 0x14e443a2: return "BCM4360 802.11ac Wireless Network Adapter";
			case 0x14e443a3: return "BCM4350 802.11ac Wireless Network Adapter";
			case 0x14e443a9: return "BCM43217 802.11b/g/n";
			case 0x14e443aa: return "BCM43131 802.11b/g/n";
			case 0x14e443ae: return "BCM43162 802.11ac Wireless Network Adapter";
			case 0x14e443b1: return "BCM4352 802.11ac Wireless Network Adapter";
			case 0x14e443ba: return "BCM43602 802.11ac Wireless LAN SoC";
			case 0x14e443bb: return "BCM43602 802.11ac Wireless LAN SoC";
			case 0x14e443bc: return "BCM43602 802.11ac Wireless LAN SoC";
			case 0x14e443d3: return "BCM43567 802.11ac Wireless Network Adapter";
			case 0x14e443d9: return "BCM43570 802.11ac Wireless Network Adapter";
			case 0x14e443dc: return "BCM4355 802.11ac Wireless LAN SoC";
			case 0x14e443df: return "BCM4354 802.11ac Wireless LAN SoC";
			case 0x14e443e9: return "BCM4358 802.11ac Wireless LAN SoC";
			case 0x14e443ec: return "BCM4356 802.11ac Wireless Network Adapter";
			case 0x14e44401: return "BCM4401 100Base-T";
			case 0x14e44402: return "BCM4402 Integrated 10/100BaseT";
			case 0x14e44403: return "BCM4402 V.90 56k Modem";
			case 0x14e44410: return "BCM4413 iLine32 HomePNA 2.0";
			case 0x14e44411: return "BCM4413 V.90 56k modem";
			case 0x14e44412: return "BCM4412 10/100BaseT";
			case 0x14e44415: return "BCM4359 802.11ac Dual-Band Wireless Network Controller";
			case 0x14e4441f: return "BCM4361 802.11ac Dual-Band Wireless Network Controller";
			case 0x14e44420: return "BCM4361 802.11ac 2.4 GHz Wireless Network Controller";
			case 0x14e44421: return "BCM4361 802.11ac 5 GHz Wireless Network Controller";
			case 0x14e44430: return "BCM44xx CardBus iLine32 HomePNA 2.0";
			case 0x14e44432: return "BCM4432 CardBus 10/100BaseT";
			case 0x14e44464: return "BCM4364 802.11ac Wireless Network Adapter";
			case 0x14e44488: return "BCM4377b Wireless Network Adapter";
			case 0x14e44610: return "BCM4610 Sentry5 PCI to SB Bridge";
			case 0x14e44611: return "BCM4610 Sentry5 iLine32 HomePNA 1.0";
			case 0x14e44612: return "BCM4610 Sentry5 V.90 56k Modem";
			case 0x14e44613: return "BCM4610 Sentry5 Ethernet Controller";
			case 0x14e44614: return "BCM4610 Sentry5 External Interface";
			case 0x14e44615: return "BCM4610 Sentry5 USB Controller";
			case 0x14e44704: return "BCM4704 PCI to SB Bridge";
			case 0x14e44705: return "BCM4704 Sentry5 802.11b Wireless LAN Controller";
			case 0x14e44706: return "BCM4704 Sentry5 Ethernet Controller";
			case 0x14e44707: return "BCM4704 Sentry5 USB Controller";
			case 0x14e44708: return "BCM4704 Crypto Accelerator";
			case 0x14e44710: return "BCM4710 Sentry5 PCI to SB Bridge";
			case 0x14e44711: return "BCM47xx Sentry5 iLine32 HomePNA 2.0";
			case 0x14e44712: return "BCM47xx V.92 56k modem";
			case 0x14e44713: return "Sentry5 Ethernet Controller";
			case 0x14e44714: return "BCM47xx Sentry5 External Interface";
			case 0x14e44715: return "BCM47xx Sentry5 USB / Ethernet Controller";
			case 0x14e44716: return "BCM47xx Sentry5 USB Host Controller";
			case 0x14e44717: return "BCM47xx Sentry5 USB Device Controller";
			case 0x14e44718: return "Sentry5 Crypto Accelerator";
			case 0x14e44719: return "BCM47xx/53xx RoboSwitch Core";
			case 0x14e44720: return "BCM4712 MIPS CPU";
			case 0x14e44727: return "BCM4313 802.11bgn Wireless Network Adapter";
			case 0x14e45365: return "BCM5365P Sentry5 Host Bridge";
			case 0x14e45600: return "BCM5600 StrataSwitch 24+2 Ethernet Switch Controller";
			case 0x14e45605: return "BCM5605 StrataSwitch 24+2 Ethernet Switch Controller";
			case 0x14e45615: return "BCM5615 StrataSwitch 24+2 Ethernet Switch Controller";
			case 0x14e45625: return "BCM5625 StrataSwitch 24+2 Ethernet Switch Controller";
			case 0x14e45645: return "BCM5645 StrataSwitch 24+2 Ethernet Switch Controller";
			case 0x14e45670: return "BCM5670 8-Port 10GE Ethernet Switch Fabric";
			case 0x14e45680: return "BCM5680 G-Switch 8 Port Gigabit Ethernet Switch Controller";
			case 0x14e45690: return "BCM5690 12-port Multi-Layer Gigabit Ethernet Switch";
			case 0x14e45691: return "BCM5691 GE/10GE 8+2 Gigabit Ethernet Switch Controller";
			case 0x14e45692: return "BCM5692 12-port Multi-Layer Gigabit Ethernet Switch";
			case 0x14e45695: return "BCM5695 12-port + HiGig Multi-Layer Gigabit Ethernet Switch";
			case 0x14e45698: return "BCM5698 12-port Multi-Layer Gigabit Ethernet Switch";
			case 0x14e45820: return "BCM5820 Crypto Accelerator";
			case 0x14e45821: return "BCM5821 Crypto Accelerator";
			case 0x14e45822: return "BCM5822 Crypto Accelerator";
			case 0x14e45823: return "BCM5823 Crypto Accelerator";
			case 0x14e45824: return "BCM5824 Crypto Accelerator";
			case 0x14e45840: return "BCM5840 Crypto Accelerator";
			case 0x14e45841: return "BCM5841 Crypto Accelerator";
			case 0x14e45850: return "BCM5850 Crypto Accelerator";
			case 0x14e45e87: return "Valkyrie offload engine";
			case 0x14e45e88: return "Viper Offload Engine";
			case 0x14e48602: return "BCM7400/BCM7405 Serial ATA Controller";
			case 0x14e49026: return "CN99xx [ThunderX2] Integrated USB 3.0 xHCI Host Controller";
			case 0x14e49027: return "CN99xx [ThunderX2] Integrated AHCI/SATA 3 Host Controller";
			case 0x14e4a8d8: return "BCM43224/5 Wireless Network Adapter";
			case 0x14e4aa52: return "BCM43602 802.11ac Wireless LAN SoC";
			case 0x14e4b302: return "BCM56302 StrataXGS 24x1GE 2x10GE Switch Controller";
			case 0x14e4b334: return "BCM56334 StrataXGS 24x1GE 4x10GE Switch Controller";
			case 0x14e4b370: return "BCM56370 Switch ASIC";
			case 0x14e4b371: return "BCM56371 Switch ASIC";
			case 0x14e4b372: return "BCM56372 Switch ASIC";
			case 0x14e4b375: return "BCM56375 Switch ASIC";
			case 0x14e4b376: return "BCM56376 Switch ASIC";
			case 0x14e4b377: return "BCM56377 Switch ASIC";
			case 0x14e4b379: return "Broadcom BCM56379 Switch ASIC";
			case 0x14e4b470: return "BCM56470 SWITCH ASIC";
			case 0x14e4b471: return "BCM56471 SWITCH ASIC";
			case 0x14e4b472: return "BCM56472 SWITCH ASIC";
			case 0x14e4b800: return "BCM56800 StrataXGS 10GE Switch Controller";
			case 0x14e4b842: return "BCM56842 Trident 10GE Switch Controller";
			case 0x14e4b850: return "Broadcom BCM56850 Switch ASIC";
			case 0x14e4b880: return "BCM56880 Switch ASIC";
			case 0x14e4b960: return "Broadcom BCM56960 Switch ASIC";
			case 0x14e4b990: return "BCM56990 Switch ASIC";
			case 0x14e4d802: return "BCM58802 Stingray 50Gb Ethernet SoC";
			case 0x14e4d804: return "BCM58804 Stingray 100Gb Ethernet SoC";
			case 0x14eaab06: return "FNW-3603-TX CardBus Fast Ethernet";
			case 0x14eaab07: return "RTL81xx RealTek Ethernet";
			case 0x14eaab08: return "FNW-3602-TX CardBus Fast Ethernet";
			case 0x14ec0000: return "Aciris Digitizer (malformed ID)";
			case 0x14f11002: return "HCF 56k Modem";
			case 0x14f11003: return "HCF 56k Modem";
			case 0x14f11004: return "HCF 56k Modem";
			case 0x14f11005: return "HCF 56k Modem";
			case 0x14f11006: return "HCF 56k Modem";
			case 0x14f11022: return "HCF 56k Modem";
			case 0x14f11023: return "HCF 56k Modem";
			case 0x14f11024: return "HCF 56k Modem";
			case 0x14f11025: return "HCF 56k Modem";
			case 0x14f11026: return "HCF 56k Modem";
			case 0x14f11032: return "HCF 56k Modem";
			case 0x14f11033: return "HCF 56k Data/Fax Modem";
			case 0x14f11034: return "HCF 56k Data/Fax/Voice Modem";
			case 0x14f11035: return "HCF 56k Data/Fax/Voice/Spkp (w/Handset) Modem";
			case 0x14f11036: return "HCF 56k Data/Fax/Voice/Spkp Modem";
			case 0x14f11052: return "HCF 56k Data/Fax Modem (Worldwide)";
			case 0x14f11053: return "HCF 56k Data/Fax Modem (Worldwide)";
			case 0x14f11054: return "HCF 56k Data/Fax/Voice Modem (Worldwide)";
			case 0x14f11055: return "HCF 56k Data/Fax/Voice/Spkp (w/Handset) Modem (Worldwide)";
			case 0x14f11056: return "HCF 56k Data/Fax/Voice/Spkp Modem (Worldwide)";
			case 0x14f11057: return "HCF 56k Data/Fax/Voice/Spkp Modem (Worldwide)";
			case 0x14f11059: return "HCF 56k Data/Fax/Voice Modem (Worldwide)";
			case 0x14f11063: return "HCF 56k Data/Fax Modem";
			case 0x14f11064: return "HCF 56k Data/Fax/Voice Modem";
			case 0x14f11065: return "HCF 56k Data/Fax/Voice/Spkp (w/Handset) Modem";
			case 0x14f11066: return "HCF 56k Data/Fax/Voice/Spkp Modem";
			case 0x14f11085: return "HCF V90 56k Data/Fax/Voice/Spkp PCI Modem";
			case 0x14f110b6: return "CX06834-11 HCF V.92 56k Data/Fax/Voice/Spkp Modem";
			case 0x14f11433: return "HCF 56k Data/Fax Modem";
			case 0x14f11434: return "HCF 56k Data/Fax/Voice Modem";
			case 0x14f11435: return "HCF 56k Data/Fax/Voice/Spkp (w/Handset) Modem";
			case 0x14f11436: return "HCF 56k Data/Fax Modem";
			case 0x14f11453: return "HCF 56k Data/Fax Modem";
			case 0x14f11454: return "HCF 56k Data/Fax/Voice Modem";
			case 0x14f11455: return "HCF 56k Data/Fax/Voice/Spkp (w/Handset) Modem";
			case 0x14f11456: return "HCF 56k Data/Fax/Voice/Spkp Modem";
			case 0x14f11610: return "ADSL AccessRunner PCI Arbitration Device";
			case 0x14f11611: return "AccessRunner PCI ADSL Interface Device";
			case 0x14f11620: return "AccessRunner V2 PCI ADSL Arbitration Device";
			case 0x14f11621: return "AccessRunner V2 PCI ADSL Interface Device";
			case 0x14f11622: return "AccessRunner V2 PCI ADSL Yukon WAN Adapter";
			case 0x14f11803: return "HCF 56k Modem";
			case 0x14f11811: return "MiniPCI Network Adapter";
			case 0x14f11815: return "HCF 56k Modem";
			case 0x14f11830: return "CX861xx Integrated Host Bridge";
			case 0x14f12003: return "HSF 56k Data/Fax Modem";
			case 0x14f12004: return "HSF 56k Data/Fax/Voice Modem";
			case 0x14f12005: return "HSF 56k Data/Fax/Voice/Spkp (w/Handset) Modem";
			case 0x14f12006: return "HSF 56k Data/Fax/Voice/Spkp Modem";
			case 0x14f12013: return "HSF 56k Data/Fax Modem";
			case 0x14f12014: return "HSF 56k Data/Fax/Voice Modem";
			case 0x14f12015: return "HSF 56k Data/Fax/Voice/Spkp (w/Handset) Modem";
			case 0x14f12016: return "HSF 56k Data/Fax/Voice/Spkp Modem";
			case 0x14f12043: return "HSF 56k Data/Fax Modem (WorldW SmartDAA)";
			case 0x14f12044: return "HSF 56k Data/Fax/Voice Modem (WorldW SmartDAA)";
			case 0x14f12045: return "HSF 56k Data/Fax/Voice/Spkp (w/Handset) Modem (WorldW SmartDAA)";
			case 0x14f12046: return "HSF 56k Data/Fax/Voice/Spkp Modem (WorldW SmartDAA)";
			case 0x14f12063: return "HSF 56k Data/Fax Modem (SmartDAA)";
			case 0x14f12064: return "HSF 56k Data/Fax/Voice Modem (SmartDAA)";
			case 0x14f12065: return "HSF 56k Data/Fax/Voice/Spkp (w/Handset) Modem (SmartDAA)";
			case 0x14f12066: return "HSF 56k Data/Fax/Voice/Spkp Modem (SmartDAA)";
			case 0x14f12093: return "HSF 56k Modem";
			case 0x14f12143: return "HSF 56k Data/Fax/Cell Modem (Mob WorldW SmartDAA)";
			case 0x14f12144: return "HSF 56k Data/Fax/Voice/Cell Modem (Mob WorldW SmartDAA)";
			case 0x14f12145: return "HSF 56k Data/Fax/Voice/Spkp (w/HS)/Cell Modem (Mob WorldW SmartDAA)";
			case 0x14f12146: return "HSF 56k Data/Fax/Voice/Spkp/Cell Modem (Mob WorldW SmartDAA)";
			case 0x14f12163: return "HSF 56k Data/Fax/Cell Modem (Mob SmartDAA)";
			case 0x14f12164: return "HSF 56k Data/Fax/Voice/Cell Modem (Mob SmartDAA)";
			case 0x14f12165: return "HSF 56k Data/Fax/Voice/Spkp (w/HS)/Cell Modem (Mob SmartDAA)";
			case 0x14f12166: return "HSF 56k Data/Fax/Voice/Spkp/Cell Modem (Mob SmartDAA)";
			case 0x14f12343: return "HSF 56k Data/Fax CardBus Modem (Mob WorldW SmartDAA)";
			case 0x14f12344: return "HSF 56k Data/Fax/Voice CardBus Modem (Mob WorldW SmartDAA)";
			case 0x14f12345: return "HSF 56k Data/Fax/Voice/Spkp (w/HS) CardBus Modem (Mob WorldW SmartDAA)";
			case 0x14f12346: return "HSF 56k Data/Fax/Voice/Spkp CardBus Modem (Mob WorldW SmartDAA)";
			case 0x14f12363: return "HSF 56k Data/Fax CardBus Modem (Mob SmartDAA)";
			case 0x14f12364: return "HSF 56k Data/Fax/Voice CardBus Modem (Mob SmartDAA)";
			case 0x14f12365: return "HSF 56k Data/Fax/Voice/Spkp (w/HS) CardBus Modem (Mob SmartDAA)";
			case 0x14f12366: return "HSF 56k Data/Fax/Voice/Spkp CardBus Modem (Mob SmartDAA)";
			case 0x14f12443: return "HSF 56k Data/Fax Modem (Mob WorldW SmartDAA)";
			case 0x14f12444: return "HSF 56k Data/Fax/Voice Modem (Mob WorldW SmartDAA)";
			case 0x14f12445: return "HSF 56k Data/Fax/Voice/Spkp (w/HS) Modem (Mob WorldW SmartDAA)";
			case 0x14f12446: return "HSF 56k Data/Fax/Voice/Spkp Modem (Mob WorldW SmartDAA)";
			case 0x14f12463: return "HSF 56k Data/Fax Modem (Mob SmartDAA)";
			case 0x14f12464: return "HSF 56k Data/Fax/Voice Modem (Mob SmartDAA)";
			case 0x14f12465: return "HSF 56k Data/Fax/Voice/Spkp (w/HS) Modem (Mob SmartDAA)";
			case 0x14f12466: return "HSF 56k Data/Fax/Voice/Spkp Modem (Mob SmartDAA)";
			case 0x14f12702: return "HSFi modem RD01-D270";
			case 0x14f12f00: return "HSF 56k HSFi Modem";
			case 0x14f12f02: return "HSF 56k HSFi Data/Fax";
			case 0x14f12f11: return "HSF 56k HSFi Modem";
			case 0x14f12f20: return "HSF 56k Data/Fax Modem";
			case 0x14f12f30: return "SoftV92 SpeakerPhone SoftRing Modem with SmartSP";
			case 0x14f12f50: return "Conexant SoftK56 Data/Fax Modem";
			case 0x14f15b7a: return "CX23418 Single-Chip MPEG-2 Encoder with Integrated Analog Video/Broadcast Audio Decoder";
			case 0x14f18200: return "CX25850";
			case 0x14f18234: return "RS8234 ATM SAR Controller [ServiceSAR Plus]";
			case 0x14f18800: return "CX23880/1/2/3 PCI Video and Audio Decoder";
			case 0x14f18801: return "CX23880/1/2/3 PCI Video and Audio Decoder [Audio Port]";
			case 0x14f18802: return "CX23880/1/2/3 PCI Video and Audio Decoder [MPEG Port]";
			case 0x14f18804: return "CX23880/1/2/3 PCI Video and Audio Decoder [IR Port]";
			case 0x14f18811: return "CX23880/1/2/3 PCI Video and Audio Decoder [Audio Port]";
			case 0x14f18852: return "CX23885 PCI Video and Audio Decoder";
			case 0x14f18880: return "CX23887/8 PCIe Broadcast Audio and Video Decoder with 3D Comb";
			case 0x14f20120: return "EV1000 bridge";
			case 0x14f20121: return "EV1000 Parallel port";
			case 0x14f20122: return "EV1000 Serial port";
			case 0x14f20123: return "EV1000 Keyboard controller";
			case 0x14f20124: return "EV1000 Mouse controller";
			case 0x14f32030: return "2030 DVB-S Satellite Receiver";
			case 0x14f32035: return "2035 DVB-S Satellite Receiver";
			case 0x14f32050: return "2050 DVB-T Terrestrial (Cable) Receiver";
			case 0x14f32060: return "2060 ATSC Terrestrial (Cable) Receiver";
			case 0x14f82077: return "TP-240 dual span E1 VoIP PCI card";
			case 0x14fc0000: return "QsNet Elan3 Network Adapter";
			case 0x14fc0001: return "QsNetII Elan4 Network Adapter";
			case 0x14fc0002: return "QsNetIII Elan5 Network Adapter";
			case 0x15001360: return "RTL81xx RealTek Ethernet";
			case 0x15070001: return "MPC105 [Eagle]";
			case 0x15070002: return "MPC106 [Grackle]";
			case 0x15070003: return "MPC8240 [Kahlua]";
			case 0x15070100: return "MC145575 [HFC-PCI]";
			case 0x15070431: return "KTI829c 100VG";
			case 0x15074801: return "Raven";
			case 0x15074802: return "Falcon";
			case 0x15074803: return "Hawk";
			case 0x15074806: return "CPX8216";
			case 0x15160800: return "MTD-8xx 100/10M Ethernet PCI Adapter";
			case 0x15160803: return "SURECOM EP-320X-S 100/10M Ethernet PCI Adapter";
			case 0x15160891: return "MTD-8xx 100/10M Ethernet PCI Adapter";
			case 0x151a1002: return "PCI-1002";
			case 0x151a1004: return "PCI-1004";
			case 0x151a1008: return "PCI-1008";
			case 0x151c0003: return "Prodif T 2496";
			case 0x151c4000: return "Prodif 88";
			case 0x151f0000: return "TP560 Data/Fax/Voice 56k modem";
			case 0x15220100: return "PCI <-> IOBus Bridge";
			case 0x15224000: return "PCI Express UART";
			case 0x15240510: return "CB710 Memory Card Reader Controller";
			case 0x15240520: return "FLASH memory: ENE Technology Inc:";
			case 0x15240530: return "ENE PCI Memory Stick Card Reader Controller";
			case 0x15240550: return "ENE PCI Secure Digital Card Reader Controller";
			case 0x15240551: return "SD/MMC Card Reader Controller";
			case 0x15240610: return "PCI Smart Card Reader Controller";
			case 0x15240720: return "Memory Stick Card Reader Controller";
			case 0x15240730: return "ENE PCI Memory Stick Card Reader Controller";
			case 0x15240750: return "ENE PCI SmartMedia / xD Card Reader Controller";
			case 0x15240751: return "ENE PCI Secure Digital / MMC Card Reader Controller";
			case 0x15241211: return "CB1211 Cardbus Controller";
			case 0x15241225: return "CB1225 Cardbus Controller";
			case 0x15241410: return "CB1410 Cardbus Controller";
			case 0x15241411: return "CB-710/2/4 Cardbus Controller";
			case 0x15241412: return "CB-712/4 Cardbus Controller";
			case 0x15241420: return "CB1420 Cardbus Controller";
			case 0x15241421: return "CB-720/2/4 Cardbus Controller";
			case 0x15241422: return "CB-722/4 Cardbus Controller";
			case 0x15320020: return "LonWorks PCLTA-20 PCI LonTalk Adapter";
			case 0x15380303: return "ARS106S Ultra ATA 133/100/66 Host Controller";
			case 0x153b1144: return "Aureon 5.1";
			case 0x153b1147: return "Aureon 5.1 Sky";
			case 0x153b1158: return "Philips Semiconductors SAA7134 (rev 01) [Terratec Cinergy 600 TV]";
			case 0x153f0001: return "SOC-it 101 System Controller";
			case 0x15429260: return "RCIM-II Real-Time Clock & Interrupt Module";
			case 0x15429271: return "RCIM-III Real-Time Clock & Interrupt Module (PCIe)";
			case 0x15429272: return "Pulse Width Modulator Card";
			case 0x15429273: return "RCIM-IV Real-Time Clock & Interrupt Module (PCIe)";
			case 0x15429277: return "5 Volt Delta Sigma Converter Card";
			case 0x15429278: return "10 Volt Delta Sigma Converter Card";
			case 0x15429287: return "Analog Output Card";
			case 0x15429290: return "FPGA Card";
			case 0x15429300: return "Universal Exhaust Gas Oxygen Sensor Simulator";
			case 0x15429310: return "Digital Programmable Resistor";
			case 0x15429350: return "Analog Input Card";
			case 0x15433052: return "Intel 537 [Winmodem]";
			case 0x15434c22: return "Si3036 MC'97 DAA";
			case 0x15561100: return "PCI Express Core Reference Design";
			case 0x1556110f: return "PCI Express Core Reference Design Virtual Function";
			case 0x15561110: return "XpressRich Reference Design";
			case 0x15561111: return "XpressRich-AXI Ref Design";
			case 0x15561112: return "QuickPCIe";
			case 0x15561113: return "XpressSwitch";
			case 0x15561114: return "Inspector";
			case 0x15561115: return "XpressLINK Ref Design";
			case 0x15561116: return "XpressLINK-SOC Ref Design";
			case 0x1556be00: return "PCI Express Bridge";
			case 0x1571a001: return "CCSI PCI20-485 ARCnet";
			case 0x1571a002: return "CCSI PCI20-485D ARCnet";
			case 0x1571a003: return "CCSI PCI20-485X ARCnet";
			case 0x1571a004: return "CCSI PCI20-CXB ARCnet";
			case 0x1571a005: return "CCSI PCI20-CXS ARCnet";
			case 0x1571a006: return "CCSI PCI20-FOG-SMA ARCnet";
			case 0x1571a007: return "CCSI PCI20-FOG-ST ARCnet";
			case 0x1571a008: return "CCSI PCI20-TB5 ARCnet";
			case 0x1571a009: return "CCSI PCI20-5-485 5Mbit ARCnet";
			case 0x1571a00a: return "CCSI PCI20-5-485D 5Mbit ARCnet";
			case 0x1571a00b: return "CCSI PCI20-5-485X 5Mbit ARCnet";
			case 0x1571a00c: return "CCSI PCI20-5-FOG-ST 5Mbit ARCnet";
			case 0x1571a00d: return "CCSI PCI20-5-FOG-SMA 5Mbit ARCnet";
			case 0x1571a201: return "CCSI PCI22-485 10Mbit ARCnet";
			case 0x1571a202: return "CCSI PCI22-485D 10Mbit ARCnet";
			case 0x1571a203: return "CCSI PCI22-485X 10Mbit ARCnet";
			case 0x1571a204: return "CCSI PCI22-CHB 10Mbit ARCnet";
			case 0x1571a205: return "CCSI PCI22-FOG_ST 10Mbit ARCnet";
			case 0x1571a206: return "CCSI PCI22-THB 10Mbit ARCnet";
			case 0x15784d34: return "VPMK4 [Video Processor Mk IV]";
			case 0x15785615: return "VPMK3 [Video Processor Mk III]";
			case 0x157c8001: return "Fix2000 PCI Y2K Compliance Card";
			case 0x15890008: return "Leutron Vision PicPortExpress CL";
			case 0x15890009: return "Leutron Vision PicPortExpress CL Stereo";
			case 0x15900001: return "Eagle Cluster Manager";
			case 0x15900002: return "Osprey Cluster Manager";
			case 0x15900003: return "Harrier Cluster Manager";
			case 0x1590a01d: return "FC044X Fibre Channel HBA";
			case 0x15920781: return "Multi-IO Card";
			case 0x15920782: return "Parallel Port Card 2xEPP";
			case 0x15920783: return "Multi-IO Card";
			case 0x15920785: return "Multi-IO Card";
			case 0x15920786: return "Multi-IO Card";
			case 0x15920787: return "Multi-IO Card";
			case 0x15920788: return "Multi-IO Card";
			case 0x1592078a: return "Multi-IO Card";
			case 0x159b4321: return "StorLink SL3516 (Gemini) Host Bridge";
			case 0x15a20001: return "TA700 PCI Bus Analyzer/Exerciser";
			case 0x15ac6893: return "3U OpenVPX Multi-function I/O Board [Model 68C3]";
			case 0x15ad0405: return "SVGA II Adapter";
			case 0x15ad0710: return "SVGA Adapter";
			case 0x15ad0720: return "VMXNET Ethernet Controller";
			case 0x15ad0740: return "Virtual Machine Communication Interface";
			case 0x15ad0770: return "USB2 EHCI Controller";
			case 0x15ad0774: return "USB1.1 UHCI Controller";
			case 0x15ad0778: return "USB3 xHCI 0.96 Controller";
			case 0x15ad0779: return "USB3 xHCI 1.0 Controller";
			case 0x15ad0790: return "PCI bridge";
			case 0x15ad07a0: return "PCI Express Root Port";
			case 0x15ad07b0: return "VMXNET3 Ethernet Controller";
			case 0x15ad07c0: return "PVSCSI SCSI Controller";
			case 0x15ad07e0: return "SATA AHCI controller";
			case 0x15ad0801: return "Virtual Machine Interface";
			case 0x15ad0820: return "Paravirtual RDMA controller";
			case 0x15ad1977: return "HD Audio Controller";
			case 0x15b30191: return "MT25408 [ConnectX IB Flash Recovery]";
			case 0x15b301f6: return "MT27500 Family [ConnectX-3 Flash Recovery]";
			case 0x15b301f8: return "MT27520 Family [ConnectX-3 Pro Flash Recovery]";
			case 0x15b301ff: return "MT27600 Family [Connect-IB Flash Recovery]";
			case 0x15b30209: return "MT27700 Family [ConnectX-4 Flash Recovery]";
			case 0x15b3020b: return "MT27710 Family [ConnectX-4 Lx Flash Recovery]";
			case 0x15b3020d: return "MT28800 Family [ConnectX-5 Flash Recovery]";
			case 0x15b3020f: return "MT28908A0 Family [ConnectX-6 Flash Recovery]";
			case 0x15b30210: return "MT28908A0 Family [ConnectX-6 Secure Flash Recovery]";
			case 0x15b30211: return "MT416842 Family [BlueField SoC Flash Recovery]";
			case 0x15b30212: return "MT2892 Family [ConnectX-6 Dx Flash Recovery]";
			case 0x15b30213: return "MT2892 Family [ConnectX-6 Dx Secure Flash Recovery]";
			case 0x15b30214: return "MT42822 Family [BlueField-2 SoC Flash Recovery]";
			case 0x15b30215: return "MT42822 Family [BlueField-2 Secure Flash Recovery]";
			case 0x15b30216: return "MT2894 Family [ConnectX-6 Lx Flash Recovery]";
			case 0x15b30217: return "MT2894 Family [ConnectX-6 Lx Secure Flash Recovery]";
			case 0x15b30218: return "MT2910 Family [ConnectX-7 Flash Recovery]";
			case 0x15b30219: return "MT2910 Family [ConnectX-7 Secure Flash Recovery]";
			case 0x15b3021a: return "MT43162 Family [BlueField-3 Lx SoC Flash Recovery]";
			case 0x15b3021b: return "MT43162 Family [BlueField-3 Lx Secure Flash Recovery]";
			case 0x15b3021c: return "MT43244 Family [BlueField-3 SoC Flash Recovery]";
			case 0x15b3021d: return "MT43244 Family [BlueField-3 Secure Flash Recovery]";
			case 0x15b3024e: return "MT53100 [Spectrum-2, Flash recovery mode]";
			case 0x15b3024f: return "MT53100 [Spectrum-2, Secure Flash recovery mode]";
			case 0x15b30250: return "Spectrum-3, Flash recovery mode";
			case 0x15b30251: return "Spectrum-3, Secure Flash recovery mode";
			case 0x15b30252: return "Amos chiplet";
			case 0x15b30253: return "Amos GearBox Manager";
			case 0x15b30254: return "Spectrum-4, Flash recovery mode";
			case 0x15b30255: return "Spectrum-4 RMA";
			case 0x15b30256: return "Abir GearBox";
			case 0x15b30257: return "Quantum-2 in Flash Recovery Mode";
			case 0x15b30258: return "Quantum-2 RMA";
			case 0x15b30262: return "MT27710 [ConnectX-4 Lx Programmable] EN";
			case 0x15b30263: return "MT27710 [ConnectX-4 Lx Programmable Virtual Function] EN";
			case 0x15b30264: return "Innova-2 Flex Burn image";
			case 0x15b30281: return "NPS-600 Flash Recovery";
			case 0x15b30357: return "Abir GearBox in Flash Recovery Mode";
			case 0x15b30358: return "Abir GearBox in RMA";
			case 0x15b31002: return "MT25400 Family [ConnectX-2 Virtual Function]";
			case 0x15b31003: return "MT27500 Family [ConnectX-3]";
			case 0x15b31004: return "MT27500/MT27520 Family [ConnectX-3/ConnectX-3 Pro Virtual Function]";
			case 0x15b31005: return "MT27510 Family";
			case 0x15b31006: return "MT27511 Family";
			case 0x15b31007: return "MT27520 Family [ConnectX-3 Pro]";
			case 0x15b31009: return "MT27530 Family";
			case 0x15b3100a: return "MT27531 Family";
			case 0x15b3100b: return "MT27540 Family";
			case 0x15b3100c: return "MT27541 Family";
			case 0x15b3100d: return "MT27550 Family";
			case 0x15b3100e: return "MT27551 Family";
			case 0x15b3100f: return "MT27560 Family";
			case 0x15b31010: return "MT27561 Family";
			case 0x15b31011: return "MT27600 [Connect-IB]";
			case 0x15b31012: return "MT27600 Family [Connect-IB Virtual Function]";
			case 0x15b31013: return "MT27700 Family [ConnectX-4]";
			case 0x15b31014: return "MT27700 Family [ConnectX-4 Virtual Function]";
			case 0x15b31015: return "MT27710 Family [ConnectX-4 Lx]";
			case 0x15b31016: return "MT27710 Family [ConnectX-4 Lx Virtual Function]";
			case 0x15b31017: return "MT27800 Family [ConnectX-5]";
			case 0x15b31018: return "MT27800 Family [ConnectX-5 Virtual Function]";
			case 0x15b31019: return "MT28800 Family [ConnectX-5 Ex]";
			case 0x15b3101a: return "MT28800 Family [ConnectX-5 Ex Virtual Function]";
			case 0x15b3101b: return "MT28908 Family [ConnectX-6]";
			case 0x15b3101c: return "MT28908 Family [ConnectX-6 Virtual Function]";
			case 0x15b3101d: return "MT2892 Family [ConnectX-6 Dx]";
			case 0x15b3101e: return "ConnectX Family mlx5Gen Virtual Function";
			case 0x15b3101f: return "MT2894 Family [ConnectX-6 Lx]";
			case 0x15b31020: return "MT28860";
			case 0x15b31021: return "MT2910 Family [ConnectX-7]";
			case 0x15b31974: return "MT28800 Family [ConnectX-5 PCIe Bridge]";
			case 0x15b31975: return "MT416842 Family [BlueField SoC PCIe Bridge]";
			case 0x15b31976: return "MT28908 Family [ConnectX-6 PCIe Bridge]";
			case 0x15b31977: return "MT2892 Family [ConnectX-6 Dx PCIe Bridge]";
			case 0x15b31978: return "MT42822 Family [BlueField-2 SoC PCIe Bridge]";
			case 0x15b31979: return "MT2910 Family [ConnectX-7 PCIe Bridge]";
			case 0x15b3197a: return "MT43162 Family [BlueField-3 Lx SoC PCIe Bridge]";
			case 0x15b3197b: return "MT43244 Family [BlueField-3 SoC PCIe Bridge]";
			case 0x15b32020: return "MT2892 Family [ConnectX-6 Dx Emulated PCIe Bridge]";
			case 0x15b32021: return "MT42822 Family [BlueField-2 SoC Emulated PCIe Bridge]";
			case 0x15b32023: return "MT2910 Family [ConnectX-7 Emulated PCIe Bridge]";
			case 0x15b32024: return "MT43244 Family [BlueField-3 SoC Emulated PCIe Bridge]";
			case 0x15b34117: return "MT27712A0-FDCF-AE";
			case 0x15b35274: return "MT21108 InfiniBridge";
			case 0x15b35a44: return "MT23108 InfiniHost";
			case 0x15b35a45: return "MT23108 [Infinihost HCA Flash Recovery]";
			case 0x15b35a46: return "MT23108 PCI Bridge";
			case 0x15b35e8c: return "MT24204 [InfiniHost III Lx HCA]";
			case 0x15b35e8d: return "MT25204 [InfiniHost III Lx HCA Flash Recovery]";
			case 0x15b36001: return "NVMe SNAP Controller";
			case 0x15b36274: return "MT25204 [InfiniHost III Lx HCA]";
			case 0x15b36278: return "MT25208 InfiniHost III Ex (Tavor compatibility mode)";
			case 0x15b36279: return "MT25208 [InfiniHost III Ex HCA Flash Recovery]";
			case 0x15b36282: return "MT25208 [InfiniHost III Ex]";
			case 0x15b36340: return "MT25408A0-FCC-SI ConnectX, Dual Port 10Gb/s InfiniBand / 10GigE Adapter IC with PCIe 2.0 x8 2.5GT/s Interface";
			case 0x15b3634a: return "MT25408A0-FCC-DI ConnectX, Dual Port 20Gb/s InfiniBand / 10GigE Adapter IC with PCIe 2.0 x8 2.5GT/s Interface";
			case 0x15b36368: return "MT25448 [ConnectX EN 10GigE, PCIe 2.0 2.5GT/s]";
			case 0x15b36372: return "MT25458 ConnectX EN 10GBASE-T PCIe 2.5 GT/s";
			case 0x15b36732: return "MT25408A0-FCC-GI ConnectX, Dual Port 20Gb/s InfiniBand / 10GigE Adapter IC with PCIe 2.0 x8 5.0GT/s Interface";
			case 0x15b3673c: return "MT25408A0-FCC-QI ConnectX, Dual Port 40Gb/s InfiniBand / 10GigE Adapter IC with PCIe 2.0 x8 5.0GT/s Interface";
			case 0x15b36746: return "MT26438 [ConnectX VPI PCIe 2.0 5GT/s - IB QDR / 10GigE Virtualization+]";
			case 0x15b36750: return "MT26448 [ConnectX EN 10GigE, PCIe 2.0 5GT/s]";
			case 0x15b3675a: return "MT26458 ConnectX EN 10GBASE-T PCIe Gen2 5.0 GT/s";
			case 0x15b36764: return "MT26468 [ConnectX EN 10GigE, PCIe 2.0 5GT/s Virtualization+]";
			case 0x15b3676e: return "MT26478 [ConnectX EN 40GigE, PCIe 2.0 5GT/s]";
			case 0x15b36778: return "MT26488 [ConnectX VPI PCIe 2.0 5GT/s - IB DDR / 10GigE Virtualization+]";
			case 0x15b37101: return "NPS-400 configuration and management interface";
			case 0x15b37102: return "NPS-400 network interface PF";
			case 0x15b37103: return "NPS-400 network interface VF";
			case 0x15b37121: return "NPS-600 configuration and management interface";
			case 0x15b37122: return "NPS-600 network interface PF";
			case 0x15b37123: return "NPS-600 network interface VF";
			case 0x15b38200: return "Innova-2 Flex Shell Logic";
			case 0x15b3a2d0: return "MT416842 BlueField SoC Crypto enabled";
			case 0x15b3a2d1: return "MT416842 BlueField SoC Crypto disabled";
			case 0x15b3a2d2: return "MT416842 BlueField integrated ConnectX-5 network controller";
			case 0x15b3a2d3: return "MT416842 BlueField multicore SoC family VF";
			case 0x15b3a2d4: return "MT42822 BlueField-2 SoC Crypto enabled";
			case 0x15b3a2d5: return "MT42822 BlueField-2 SoC Crypto disabled";
			case 0x15b3a2d6: return "MT42822 BlueField-2 integrated ConnectX-6 Dx network controller";
			case 0x15b3a2d7: return "MT43162 BlueField-3 Lx SoC Crypto enabled";
			case 0x15b3a2d8: return "MT43162 BlueField-3 Lx SoC Crypto disabled";
			case 0x15b3a2d9: return "MT43162 BlueField-3 Lx integrated ConnectX-7 network controller";
			case 0x15b3a2da: return "MT43244 BlueField-3 SoC Crypto enabled";
			case 0x15b3a2db: return "MT43244 BlueField-3 SoC Crypto disabled";
			case 0x15b3a2dc: return "MT43244 BlueField-3 integrated ConnectX-7 network controller";
			case 0x15b3c2d2: return "MT416842 BlueField SoC management interfac";
			case 0x15b3c2d3: return "MT42822 BlueField-2 SoC Management Interface";
			case 0x15b3c2d4: return "MT43162 BlueField-3 Lx SoC Management Interface";
			case 0x15b3c2d5: return "MT43244 BlueField-3 SoC Management Interface";
			case 0x15b3c738: return "MT51136";
			case 0x15b3c739: return "MT51136 GW";
			case 0x15b3c838: return "MT52236";
			case 0x15b3c839: return "MT52236 router";
			case 0x15b3caf1: return "ConnectX-4 CAPI Function";
			case 0x15b3cb84: return "MT52100";
			case 0x15b3cf08: return "Switch-IB2";
			case 0x15b3cf6c: return "MT53100 [Spectrum-2]";
			case 0x15b3cf70: return "Spectrum-3";
			case 0x15b3cf80: return "Spectrum-4";
			case 0x15b3d2f0: return "Quantum HDR (200Gbps) switch";
			case 0x15b3d2f2: return "Quantum-2 NDR (400Gbps) switch";
			case 0x15b60001: return "XP15 DSP Accelerator";
			case 0x15b60002: return "XP30 DSP Accelerator";
			case 0x15b60003: return "XP00 Data Acquisition Device";
			case 0x15b60004: return "XP35 DSP Accelerator";
			case 0x15b60007: return "XP100 DSP Accelerator [XP100-T0]";
			case 0x15b60008: return "XP100 DSP Accelerator [XP100-T1]";
			case 0x15b60009: return "XP100 DSP Accelerator [XP100-E0]";
			case 0x15b6000a: return "XP100 DSP Accelerator [XP100-E1]";
			case 0x15b6000e: return "XP100 DSP Accelerator [XP100-0]";
			case 0x15b6000f: return "XP100 DSP Accelerator [XP100-1]";
			case 0x15b60010: return "XP100 DSP Accelerator [XP100-P0]";
			case 0x15b60011: return "XP100 DSP Accelerator [XP100-P1]";
			case 0x15b60012: return "XP100 DSP Accelerator [XP100-P2]";
			case 0x15b60013: return "XP100 DSP Accelerator [XP100-P3]";
			case 0x15b60014: return "RamSan Flash SSD";
			case 0x15b60015: return "ZBox";
			case 0x15b72001: return "Skyhawk Series NVME SSD";
			case 0x15b75001: return "WD Black NVMe SSD";
			case 0x15b75002: return "WD Black 2018/SN750 / PC SN720 NVMe SSD";
			case 0x15b75003: return "WD Blue SN500 / PC SN520 NVMe SSD";
			case 0x15b75004: return "PC SN520 NVMe SSD";
			case 0x15b75005: return "PC SN520 NVMe SSD";
			case 0x15b75006: return "WD Black SN750 / PC SN730 NVMe SSD";
			case 0x15b75009: return "WD Blue SN550 NVMe SSD";
			case 0x15b7500b: return "PC SN530 NVMe SSD";
			case 0x15b7500d: return "WD Ultrastar DC SN340 NVMe SSD";
			case 0x15b75011: return "WD Black SN850";
			case 0x15b81001: return "APCI1516 SP controller (16 digi outputs)";
			case 0x15b81003: return "APCI1032 SP controller (32 digi inputs w/ opto coupler)";
			case 0x15b81004: return "APCI2032 SP controller (32 digi outputs)";
			case 0x15b81005: return "APCI2200 SP controller (8/16 digi outputs (relay))";
			case 0x15b81006: return "APCI1564 SP controller (32 digi ins, 32 digi outs)";
			case 0x15b8100a: return "APCI1696 SP controller (96 TTL I/Os)";
			case 0x15b83001: return "APCI3501 SP controller (analog output board)";
			case 0x15b8300f: return "APCI3600 Noise and vibration measurement board";
			case 0x15b87001: return "APCI7420 2-port Serial Controller";
			case 0x15b87002: return "APCI7300 Serial Controller";
			case 0x15bc0100: return "HPFC-5600 Tachyon DX2+ FC";
			case 0x15bc0103: return "QX4 PCI Express quad 4-gigabit Fibre Channel controller";
			case 0x15bc0105: return "Celerity FC-44XS/FC-42XS/FC-41XS/FC-44ES/FC-42ES/FC-41ES";
			case 0x15bc1100: return "E8001-66442 PCI Express CIC";
			case 0x15bc2922: return "64 Bit, 133MHz PCI-X Exerciser & Protocol Checker";
			case 0x15bc2928: return "64 Bit, 66MHz PCI Exerciser & Analyzer";
			case 0x15bc2929: return "64 Bit, 133MHz PCI-X Analyzer & Exerciser";
			case 0x15c58010: return "1394b - 1394 Firewire 3-Port Host Adapter Card";
			case 0x15c70349: return "Tateyama C-PCI PLC/NC card Rev.01A";
			case 0x15cf0000: return "CIFX 50E-DP(M/S)";
			case 0x15dc0001: return "Argus 300 PCI Cryptography Module";
			case 0x15e20500: return "PhoneJack-PCI";
			case 0x15e80130: return "Wireless PCI Card";
			case 0x15e80131: return "NCP130A2 Wireless NIC";
			case 0x15e91841: return "ADMA-100 DiscStaQ ATA Controller";
			case 0x15ec3101: return "FC3101 Profibus DP 1 Channel PCI";
			case 0x15ec5102: return "FC5102";
			case 0x16180001: return "RDX 11";
			case 0x16180002: return "HFT-01";
			case 0x16180400: return "FarSync T2P (2 port X.21/V.35/V.24)";
			case 0x16180440: return "FarSync T4P (4 port X.21/V.35/V.24)";
			case 0x16180610: return "FarSync T1U (1 port X.21/V.35/V.24)";
			case 0x16180620: return "FarSync T2U (2 port X.21/V.35/V.24)";
			case 0x16180640: return "FarSync T4U (4 port X.21/V.35/V.24)";
			case 0x16181610: return "FarSync TE1 (T1,E1)";
			case 0x16182610: return "FarSync DSL-S1 (SHDSL)";
			case 0x16183640: return "FarSync T4E (4-port X.21/V.35/V.24)";
			case 0x16184620: return "FarSync T2Ue PCI Express (2-port X.21/V.35/V.24)";
			case 0x16184640: return "FarSync T4Ue PCI Express (4-port X.21/V.35/V.24)";
			case 0x16190400: return "FarSync T2P (2 port X.21/V.35/V.24)";
			case 0x16190440: return "FarSync T4P (4 port X.21/V.35/V.24)";
			case 0x16190610: return "FarSync T1U (1 port X.21/V.35/V.24)";
			case 0x16190620: return "FarSync T2U (2 port X.21/V.35/V.24)";
			case 0x16190640: return "FarSync T4U (4 port X.21/V.35/V.24)";
			case 0x16191610: return "FarSync TE1 (T1,E1)";
			case 0x16191612: return "FarSync TE1 PCI Express (T1,E1)";
			case 0x16192610: return "FarSync DSL-S1 (SHDSL)";
			case 0x16193640: return "FarSync T4E (4-port X.21/V.35/V.24)";
			case 0x16194620: return "FarSync T2Ue PCI Express (2-port X.21/V.35/V.24)";
			case 0x16194640: return "FarSync T4Ue PCI Express (4-port X.21/V.35/V.24)";
			case 0x16195621: return "FarSync T2Ee PCI Express (2 port X.21/V.35/V.24)";
			case 0x16195641: return "FarSync T4Ee PCI Express (4 port X.21/V.35/V.24)";
			case 0x16196620: return "FarSync T2U-PMC PCI Express (2 port X.21/V.35/V.24)";
			case 0x16210020: return "LynxTWO-A";
			case 0x16210021: return "LynxTWO-B";
			case 0x16210022: return "LynxTWO-C";
			case 0x16210023: return "Lynx L22";
			case 0x16210024: return "Lynx AES16";
			case 0x16210025: return "Lynx AES16-SRC";
			case 0x16210028: return "Lynx AES16e";
			case 0x16268410: return "RTL81xx Fast Ethernet";
			case 0x16291003: return "Format synchronizer v3.0";
			case 0x16291006: return "Format synchronizer, model 10500";
			case 0x16291007: return "Format synchronizer, model 21000";
			case 0x16292002: return "Fast Universal Data Output";
			case 0x16293100: return "IO31000 Frame Synchronizer and I/O";
			case 0x16293200: return "IO32000 Frame Synchronizer and I/O";
			case 0x16294002: return "High Rate Demodulator";
			case 0x16295001: return "High Rate FEC";
			case 0x16296001: return "High Rate Demodulator and FEC";
			case 0x16381100: return "SMC2602W EZConnect / Addtron AWA-100 / Eumitcom PCI WL11000";
			case 0x163c3052: return "SmartLink SmartPCI562 56K Modem";
			case 0x163c5449: return "SmartPCI561 Modem";
			case 0x16570013: return "425/825/42B/82B 4Gbps/8Gbps PCIe dual port FC HBA";
			case 0x16570014: return "1010/1020/1007/1741 10Gbps CNA";
			case 0x16570017: return "415/815/41B/81B 4Gbps/8Gbps PCIe single port FC HBA";
			case 0x16570021: return "804 8Gbps FC HBA for HP Bladesystem c-class";
			case 0x16570022: return "BR-1860 Fabric Adapter";
			case 0x16570023: return "1867/1869 16Gbps FC HBA";
			case 0x16570646: return "400 4Gbps PCIe FC HBA";
			case 0x165ac100: return "PIXCI(R) CL1 Camera Link Video Capture Board [custom QL5232]";
			case 0x165ad200: return "PIXCI(R) D2X Digital Video Capture Board [custom QL5232]";
			case 0x165ad300: return "PIXCI(R) D3X Digital Video Capture Board [custom QL5232]";
			case 0x165aeb01: return "PIXCI(R) EB1 PCI Camera Link Video Capture Board";
			case 0x165c5361: return "PROCStarII60-1";
			case 0x165c5362: return "PROCStarII60-2";
			case 0x165c5364: return "PROCStarII60-4";
			case 0x165c5435: return "ProcSparkII";
			case 0x165c5661: return "ProcE60";
			case 0x165c56e1: return "ProcE180";
			case 0x165c5911: return "ProcStarIII110-1";
			case 0x165c5912: return "ProcStarIII110-2";
			case 0x165c5913: return "ProcStarIII110-3";
			case 0x165c5914: return "ProcStarIII110-4";
			case 0x165c5921: return "ProcStarIII150-1";
			case 0x165c5922: return "ProcStarIII150-2";
			case 0x165c5923: return "ProcStarIII150-3";
			case 0x165c5924: return "ProcStarIII150-4";
			case 0x165c5931: return "ProcStarIII260-1";
			case 0x165c5932: return "ProcStarIII260-2";
			case 0x165c5933: return "ProcStarIII260-3";
			case 0x165c5934: return "ProcStarIII260-4";
			case 0x165c5941: return "ProcStarIII340-1";
			case 0x165c5942: return "ProcStarIII340-2";
			case 0x165c5943: return "ProcStarIII340-3";
			case 0x165c5944: return "ProcStarIII340-4";
			case 0x165c5a01: return "ProceIII80";
			case 0x165c5a11: return "ProceIII110";
			case 0x165c5a21: return "ProceIII150";
			case 0x165c5a31: return "ProceIII260";
			case 0x165c5a41: return "ProceIII340";
			case 0x165c5b51: return "ProceIV360";
			case 0x165c5b61: return "ProceIV530";
			case 0x165c5b71: return "ProceIV820";
			case 0x165c5c01: return "ProcStarIV80-1";
			case 0x165c5c02: return "ProcStarIV80-2";
			case 0x165c5c03: return "ProcStarIV80-3";
			case 0x165c5c04: return "ProcStarIV80-4";
			case 0x165c5c11: return "ProcStarIV110-1";
			case 0x165c5c12: return "ProcStarIV110-2";
			case 0x165c5c13: return "ProcStarIV110-3";
			case 0x165c5c14: return "ProcStarIV110-4";
			case 0x165c5c51: return "ProcStarIV360-1";
			case 0x165c5c52: return "ProcStarIV360-2";
			case 0x165c5c53: return "ProcStarIV360-3";
			case 0x165c5c54: return "ProcStarIV360-4";
			case 0x165c5c61: return "ProcStarIV530-1";
			case 0x165c5c62: return "ProcStarIV530-2";
			case 0x165c5c63: return "ProcStarIV530-3";
			case 0x165c5c64: return "ProcStarIV530-4";
			case 0x165c5c71: return "ProcStarIV820-1";
			case 0x165c5c72: return "ProcStarIV820-2";
			case 0x165c5c73: return "ProcStarIV820-3";
			case 0x165c5c74: return "ProcStarIV820-4";
			case 0x165c5d01: return "Proc10480";
			case 0x165c5d11: return "Proc104110";
			case 0x165c5f01: return "ProceV_A3";
			case 0x165c5f11: return "ProceV_A7";
			case 0x165c5f21: return "ProceV_AB";
			case 0x165c5f31: return "ProceV_D5";
			case 0x165c5f41: return "ProceV_D8";
			case 0x165c6732: return "Proc6M";
			case 0x165c6832: return "Proc12M";
			case 0x165c7101: return "Proc10a_27";
			case 0x165c7111: return "Proc10a_48";
			case 0x165c7121: return "Proc10a_66";
			case 0x165c7141: return "Proc10a_115";
			case 0x165c7181: return "Proc10a_27S";
			case 0x165c7191: return "Proc10a_48S";
			case 0x165c71a1: return "Proc10a_66S";
			case 0x165c71b1: return "Proc10A";
			case 0x165c72b1: return "HawkEye";
			case 0x165c73b1: return "Proc10s";
			case 0x165f1020: return "LMLM4 MPEG-4 encoder";
			case 0x16680100: return "Mini-PCI bridge";
			case 0x166d0001: return "SiByte BCM1125/1125H/1250 System-on-a-Chip PCI";
			case 0x166d0002: return "SiByte BCM1125H/1250 System-on-a-Chip HyperTransport";
			case 0x166d0012: return "SiByte BCM1280/BCM1480 System-on-a-Chip PCI-X";
			case 0x166d0014: return "Sibyte BCM1280/BCM1480 System-on-a-Chip HyperTransport";
			case 0x1677104e: return "5LS172.6 B&R Dual CAN Interface Card";
			case 0x167712d7: return "5LS172.61 B&R Dual CAN Interface Card";
			case 0x167720ad: return "5ACPCI.MFIO-K01 Profibus DP / K-Feldbus / COM";
			case 0x16780100: return "NE020 10Gb Accelerated Ethernet Adapter (iWARP RNIC)";
			case 0x16793000: return "SD Standard host controller [Ellen]";
			case 0x167b2102: return "ZyDAS ZD1202";
			case 0x167b2116: return "ZD1212B Wireless Adapter";
			case 0x167da000: return "MagicLAN SWL-2210P 802.11b [Intersil ISL3874]";
			case 0x16825701: return "Radeon 5700 XT Thicc III Ultra";
			case 0x1682c580: return "Radeon RX 580";
			case 0x16881170: return "WLAN 802.11b card";
			case 0x168a2086: return "CryptoServer Se-Series Hardware Security Module";
			case 0x168ac040: return "CryptoServer CSe-Series Hardware Security Module";
			case 0x168ac051: return "CryptoServer Se-Series Gen2 Hardware Security Module";
			case 0x168ac070: return "u.trust Anchor Hardware Security Module cs7.2 Series";
			case 0x168ac071: return "u.trust Anchor Hardware Security Module cs7.3 Series";
			case 0x168ac072: return "u.trust Anchor Hardware Security Module cs7.3 Series Virtual Function";
			case 0x168c0007: return "AR5210 Wireless Network Adapter [AR5000 802.11a]";
			case 0x168c0011: return "AR5211 Wireless Network Adapter [AR5001A 802.11a]";
			case 0x168c0012: return "AR5211 Wireless Network Adapter [AR5001X 802.11ab]";
			case 0x168c0013: return "AR5212/5213/2414 Wireless Network Adapter";
			case 0x168c001a: return "AR2413/AR2414 Wireless Network Adapter [AR5005G(S) 802.11bg]";
			case 0x168c001b: return "AR5413/AR5414 Wireless Network Adapter [AR5006X(S) 802.11abg]";
			case 0x168c001c: return "AR242x / AR542x Wireless Network Adapter (PCI-Express)";
			case 0x168c001d: return "AR2417 Wireless Network Adapter [AR5007G 802.11bg]";
			case 0x168c0020: return "AR5513 802.11abg Wireless NIC";
			case 0x168c0023: return "AR5416 Wireless Network Adapter [AR5008 802.11(a)bgn]";
			case 0x168c0024: return "AR5418 Wireless Network Adapter [AR5008E 802.11(a)bgn] (PCI-Express)";
			case 0x168c0027: return "AR9160 Wireless Network Adapter [AR9001 802.11(a)bgn]";
			case 0x168c0029: return "AR922X Wireless Network Adapter";
			case 0x168c002a: return "AR928X Wireless Network Adapter (PCI-Express)";
			case 0x168c002b: return "AR9285 Wireless Network Adapter (PCI-Express)";
			case 0x168c002c: return "AR2427 802.11bg Wireless Network Adapter (PCI-Express)";
			case 0x168c002d: return "AR9227 Wireless Network Adapter";
			case 0x168c002e: return "AR9287 Wireless Network Adapter (PCI-Express)";
			case 0x168c0030: return "AR93xx Wireless Network Adapter";
			case 0x168c0032: return "AR9485 Wireless Network Adapter";
			case 0x168c0033: return "AR958x 802.11abgn Wireless Network Adapter";
			case 0x168c0034: return "AR9462 Wireless Network Adapter";
			case 0x168c0036: return "QCA9565 / AR9565 Wireless Network Adapter";
			case 0x168c0037: return "AR9485 Wireless Network Adapter";
			case 0x168c003c: return "QCA986x/988x 802.11ac Wireless Network Adapter";
			case 0x168c003e: return "QCA6174 802.11ac Wireless Network Adapter";
			case 0x168c0040: return "QCA9980/9990 802.11ac Wireless Network Adapter";
			case 0x168c0041: return "QCA6164 802.11ac Wireless Network Adapter";
			case 0x168c0042: return "QCA9377 802.11ac Wireless Network Adapter";
			case 0x168c0046: return "QCA9984 802.11ac Wave 2 Wireless Network Adapter";
			case 0x168c0050: return "QCA9887 802.11ac Wireless Network Adapter";
			case 0x168c0207: return "AR5210 Wireless Network Adapter [AR5000 802.11a]";
			case 0x168c1014: return "AR5212 802.11abg NIC";
			case 0x168c9013: return "AR5002X Wireless Network Adapter";
			case 0x168cff19: return "AR5006X Wireless Network Adapter";
			case 0x168cff1b: return "AR2425 Wireless Network Adapter [AR5007EG 802.11bg]";
			case 0x168cff1c: return "AR5008 Wireless Network Adapter";
			case 0x168cff1d: return "AR922x Wireless Network Adapter";
			case 0x169c0044: return "Revolution Storage Processing Card";
			case 0x16ab1100: return "GL24110P";
			case 0x16ab1101: return "PLX9052 PCMCIA-to-PCI Wireless LAN";
			case 0x16ab1102: return "PCMCIA-to-PCI Wireless Network Bridge";
			case 0x16ab8501: return "WL-8305 Wireless LAN PCI Adapter";
			case 0x16ae0001: return "SafeXcel 1140";
			case 0x16ae000a: return "SafeXcel 1841";
			case 0x16ae1141: return "SafeXcel 1141";
			case 0x16ae1841: return "SafeXcel 1842";
			case 0x16c3abcd: return "DWC_usb3 / PCIe bridge";
			case 0x16c3abce: return "DWC_usb3";
			case 0x16c3abcf: return "DWC_usb31";
			case 0x16c3edda: return "EPMockUp";
			case 0x16c68695: return "Centaur KS8695 ARM processor";
			case 0x16c68842: return "KSZ8842-PMQL 2-Port Ethernet Switch";
			case 0x16ca0001: return "Rocket Drive DL";
			case 0x16cd0101: return "DirectPCI SRAM for DPX-11x series";
			case 0x16cd0102: return "DirectPCI SRAM for DPX-S/C/E-series";
			case 0x16cd0103: return "DirectPCI ROM for DPX-11x series";
			case 0x16cd0104: return "DirectPCI ROM for DPX-S/C/E-series";
			case 0x16cd0105: return "DirectPCI I/O for DPX-114/DPX-115";
			case 0x16cd0106: return "DirectPCI I/O for DPX-116";
			case 0x16cd0107: return "DirectPCI I/O for DPX-116U";
			case 0x16cd0108: return "DirectPCI I/O for DPX-117";
			case 0x16cd0109: return "DirectPCI I/O for DPX-112";
			case 0x16cd010a: return "DirectPCI I/O for DPX-C/E-series";
			case 0x16cd010b: return "DirectPCI I/O for DPX-S series";
			case 0x16d50504: return "PMC-DX504 Reconfigurable FPGA with LVDS I/O";
			case 0x16d50520: return "PMC520 Serial Communication, 232 Octal";
			case 0x16d50521: return "PMC521 Serial Communication, 422/485 Octal";
			case 0x16d51020: return "PMC-AX1020 Reconfigurable FPGA with A/D & D/A";
			case 0x16d51065: return "PMC-AX1065 Reconfigurable FPGA with A/D & D/A";
			case 0x16d52004: return "PMC-DX2004 Reconfigurable FPGA with LVDS I/O";
			case 0x16d52020: return "PMC-AX2020 Reconfigurable FPGA with A/D & D/A";
			case 0x16d52065: return "PMC-AX2065 Reconfigurable FPGA with A/D & D/A";
			case 0x16d53020: return "PMC-AX3020 Reconfigurable FPGA with A/D & D/A";
			case 0x16d53065: return "PMC-AX3065 Reconfigurable FPGA with A/D & D/A";
			case 0x16d54243: return "PMC424, APC424, AcPC424 Digital I/O and Counter Timer Module";
			case 0x16d54248: return "PMC464, APC464, AcPC464 Digital I/O and Counter Timer Module";
			case 0x16d5424b: return "PMC-DX2002 Reconfigurable FPGA with Differential I/O";
			case 0x16d54253: return "PMC-DX503 Reconfigurable FPGA with TTL and Differential I/O";
			case 0x16d54312: return "PMC-CX1002 Reconfigurable Conduction-Cooled FPGA Virtex-II with Differential I/O";
			case 0x16d54313: return "PMC-CX1003 Reconfigurable Conduction-Cooled FPGA Virtex-II with CMOS and Differential I/O";
			case 0x16d54322: return "PMC-CX2002 Reconfigurable Conduction-Cooled FPGA Virtex-II with Differential I/O";
			case 0x16d54323: return "PMC-CX2003 Reconfigurable Conduction-Cooled FPGA Virtex-II with CMOS and Differential I/O";
			case 0x16d54350: return "PMC-DX501 Reconfigurable Digital I/O Module";
			case 0x16d54353: return "PMC-DX2003 Reconfigurable FPGA with TTL and Differential I/O";
			case 0x16d54357: return "PMC-DX502 Reconfigurable Differential I/O Module";
			case 0x16d54457: return "PMC730, APC730, AcPC730 Multifunction Module";
			case 0x16d54471: return "XMC730 Multi-function I/O module with front I/O";
			case 0x16d54473: return "XMC730CC Multi-function I/O module with rear I/O Conduction-cooled";
			case 0x16d5464d: return "PMC408 32-Channel Digital Input/Output Module";
			case 0x16d54850: return "PMC220-16 12-Bit Analog Output Module";
			case 0x16d54a42: return "PMC483, APC483, AcPC483 Counter Timer Module";
			case 0x16d54a50: return "PMC484, APC484, AcPC484 Counter Timer Module";
			case 0x16d54a56: return "PMC230 16-Bit Analog Output Module";
			case 0x16d54b47: return "PMC330, APC330, AcPC330 Analog Input Module, 16-bit A/D";
			case 0x16d54c40: return "PMC-LX40 Reconfigurable Virtex-4 FPGA with plug-in I/O";
			case 0x16d54c60: return "PMC-LX60 Reconfigurable Virtex-4 FPGA with plug-in I/O";
			case 0x16d54d4d: return "PMC341, APC341, AcPC341 Analog Input Module, Simultaneous Sample & Hold";
			case 0x16d54d4e: return "PMC482, APC482, AcPC482 Counter Timer Board";
			case 0x16d5524d: return "PMC-DX2001 Reconfigurable FPGA with TTL I/O";
			case 0x16d55335: return "PMC-SX35 Reconfigurable Virtex-4 FPGA with plug-in I/O";
			case 0x16d55456: return "PMC470 48-Channel Digital Input/Output Module";
			case 0x16d55601: return "PMC-VLX85 Reconfigurable Virtex-5 FPGA with plug-in I/O";
			case 0x16d55602: return "PMC-VLX110 Reconfigurable Virtex-5 FPGA with plug-in I/O";
			case 0x16d55603: return "PMC-VSX95 Reconfigurable Virtex-5 FPGA with plug-in I/O";
			case 0x16d55604: return "PMC-VLX155 Reconfigurable Virtex-5 FPGA with plug-in I/O";
			case 0x16d55605: return "PMC-VFX70 Reconfigurable Virtex-5 FPGA with plug-in I/O";
			case 0x16d55606: return "PMC-VLX155-1M Reconfigurable Virtex-5 FPGA with plug-in I/O";
			case 0x16d55701: return "PMC-SLX150: Reconfigurable Spartan-6 FPGA with plug-in I/O";
			case 0x16d55702: return "PMC-SLX150-1M: Reconfigurable Spartan-6 FPGA with plug-in I/O";
			case 0x16d55801: return "XMC-VLX85 Reconfigurable Virtex-5 FPGA with plug-in I/O";
			case 0x16d55802: return "XMC-VLX110 Reconfigurable Virtex-5 FPGA with plug-in I/O";
			case 0x16d55803: return "XMC-VSX95 Reconfigurable Virtex-5 FPGA with plug-in I/O";
			case 0x16d55804: return "XMC-VLX155 Reconfigurable Virtex-5 FPGA with plug-in I/O";
			case 0x16d55807: return "XMC-SLX150: Reconfigurable Spartan-6 FPGA with plug-in I/O";
			case 0x16d55808: return "XMC-SLX150-1M: Reconfigurable Spartan-6 FPGA with plug-in I/O";
			case 0x16d55901: return "APCe8650 PCI Express IndustryPack Carrier Card";
			case 0x16d56301: return "XMC Module with user-configurable Virtex-6 FPGA, 240k logic cells, SFP front I/O";
			case 0x16d56302: return "XMC Module with user-configurable Virtex-6 FPGA, 365k logic cells, SFP front I/O";
			case 0x16d56303: return "XMC Module with user-configurable Virtex-6 FPGA, 240k logic cells, no front I/O";
			case 0x16d56304: return "XMC Module with user-configurable Virtex-6 FPGA, 365k logic cells, no front I/O";
			case 0x16d57000: return "XMC-7K325F: User-configurable Kintex-7 FPGA, 325k logic cells plus SFP front I/O";
			case 0x16d57001: return "XMC-7K410F: User-configurable Kintex-7 FPGA, 410k logic cells plus SFP front I/O";
			case 0x16d57002: return "XMC-7K325AX: User-Configurable Kintex-7 FPGA, 325k logic cells with AXM Plug-In I/O";
			case 0x16d57003: return "XMC-7K410AX: User-Configurable Kintex-7 FPGA, 410k logic cells with AXM Plug-In I/O";
			case 0x16d57004: return "XMC-7K325CC: User-Configurable Kintex-7 FPGA, 325k logic cells, conduction-cooled";
			case 0x16d57005: return "XMC-7K410CC: User-Configurable Kintex-7 FPGA, 410k logic cells, conduction-cooled";
			case 0x16d57006: return "XMC-7A200: User-Configurable Artix-7 FPGA, 200k logic cells with Plug-In I/O";
			case 0x16d57007: return "XMC-7A200CC: User-Configurable Conduction-Cooled Artix-7 FPGA, with 200k logic cells";
			case 0x16d57011: return "AP440-1: 32-Channel Isolated Digital Input Module";
			case 0x16d57012: return "AP440-2: 32-Channel Isolated Digital Input Module";
			case 0x16d57013: return "AP440-3: 32-Channel Isolated Digital Input Module";
			case 0x16d57014: return "AP445: 32-Channel Isolated Digital Output Module";
			case 0x16d57015: return "AP471 48-Channel TTL Level Digital Input/Output Module";
			case 0x16d57016: return "AP470 48-Channel TTL Level Digital Input/Output Module";
			case 0x16d57017: return "AP323 16-bit, 20 or 40 Channel Analog Input Module";
			case 0x16d57018: return "AP408: 32-Channel Digital I/O Module";
			case 0x16d57019: return "AP341 14-bit, 16-Channel Simultaneous Conversion Analog Input Module";
			case 0x16d5701a: return "AP220-16 12-Bit, 16-Channel Analog Output Module";
			case 0x16d5701b: return "AP231-16 16-Bit, 16-Channel Analog Output Module";
			case 0x16d5701c: return "AP225 12-Bit, 16-Channel Analog Output Module with Waveform Memory";
			case 0x16d5701d: return "AP235 16-Bit, 16-Channel Analog Output Module with Waveform Memory";
			case 0x16d57021: return "APA7-201 Reconfigurable Artix-7 FPGA module 48 TTL channels";
			case 0x16d57022: return "APA7-202 Reconfigurable Artix-7 FPGA module 24 RS485 channels";
			case 0x16d57023: return "APA7-203 Reconfigurable Artix-7 FPGA module 24 TTL & 12 RS485 channels";
			case 0x16d57024: return "APA7-204 Reconfigurable Artix-7 FPGA module 24 LVDS channels";
			case 0x16d57027: return "AP418 16-Channel High Voltage Digital Input/Output Module";
			case 0x16d57029: return "AP342 14-bit, 12-Channel Isolated Simultaneous Conversion Analog Input Module";
			case 0x16d5702a: return "AP226 12-Bit, 8-Channel Isolated Analog Output Module";
			case 0x16d5702b: return "AP236 16-Bit, 8-Channel Isolated Analog Output Module";
			case 0x16d5702c: return "AP560A Module 4 Independent isolated CAN bus channels";
			case 0x16d57031: return "AP441-1: 32-Channel Isolated Digital Input Module";
			case 0x16d57032: return "AP441-2: 32-Channel Isolated Digital Input Module";
			case 0x16d57033: return "AP441-3: 32-Channel Isolated Digital Input Module";
			case 0x16d57042: return "AP482 Counter Timer Module with TTL Level Input/Output";
			case 0x16d57043: return "AP483 Counter Timer Module with TTL Level and RS422 Input/Output";
			case 0x16d57044: return "AP484 Counter Timer Module with RS422 Input/Output";
			case 0x16d57051: return "APA7-501 Reconfigurable Artix-7 52,160 Cell FPGA module 48 TTL channels";
			case 0x16d57052: return "APA7-502 Reconfigurable Artix-7 52,160 Cell FPGA module 24 RS485 channels";
			case 0x16d57053: return "APA7-503 Reconfigurable Artix-7 52,160 Cell FPGA module 24 TTL & 12 RS485 channels";
			case 0x16d57054: return "APA7-504 Reconfigurable Artix-7 52,160 Cell FPGA module 24 LVDS channels";
			case 0x16d57073: return "AP730 Multi-function I/O Module 16 Digital I/O 8 Differential Analog In 4 Analog Out";
			case 0x16da0011: return "INES GPIB-PCI";
			case 0x16e31e0f: return "LEON2FT Processor";
			case 0x16e56000: return "INT6000 Ethernet-to-Powerline Bridge [HomePlug AV]";
			case 0x16e56300: return "INT6300 Ethernet-to-Powerline Bridge [HomePlug AV]";
			case 0x16ec00ed: return "USR997900";
			case 0x16ec0116: return "USR997902 10/100/1000 Mbps PCI Network Card";
			case 0x16ec2f00: return "USR5660A (USR265660A, USR5660A-BP) 56K PCI Faxmodem";
			case 0x16ec3685: return "Wireless Access PCI Adapter Model 022415";
			case 0x16ec4320: return "USR997904 10/100/1000 64-bit NIC (Marvell Yukon)";
			case 0x16ecab06: return "USR997901A 10/100 Cardbus NIC";
			case 0x16ed1001: return "UMIO communication card";
			case 0x16f20200: return "I/O board";
			case 0x16f48000: return "VW2010";
			case 0x170b0100: return "NSP2000-SSL crypto accelerator";
			case 0x17191000: return "NPA Access Network Processor Family";
			case 0x17257174: return "VSC7174 PCI/PCI-X Serial ATA Host Bus Controller";
			case 0x172a13c8: return "AEP SureWare Runner 1000V3";
			case 0x17370029: return "WPG54G ver. 4 PCI Card";
			case 0x17371032: return "Gigabit Network Adapter";
			case 0x17371064: return "Gigabit Network Adapter";
			case 0x1737ab08: return "21x4x DEC-Tulip compatible 10/100 Ethernet";
			case 0x1737ab09: return "21x4x DEC-Tulip compatible 10/100 Ethernet";
			case 0x173b0001: return "AC1002 PCI Gigabit Ethernet controller";
			case 0x173b03e8: return "AC1000 Gigabit Ethernet";
			case 0x173b03e9: return "AC1001 Gigabit Ethernet";
			case 0x173b03ea: return "AC9100 Gigabit Ethernet";
			case 0x173b03eb: return "AC1003 Gigabit Ethernet";
			case 0x17438139: return "ROL/F-100 Fast Ethernet Adapter with ROL";
			case 0x17452020: return "XCode II Series";
			case 0x17452100: return "XCode 2100 Series";
			case 0x17600101: return "PCD-7004 Digital Bi-Directional Ports PCI Card";
			case 0x17600102: return "PCD-7104 Digital Input & Output PCI Card";
			case 0x17600121: return "PCT-7303A PC card with IRC counters";
			case 0x17600122: return "PCT-7408A PC card with counters and timers";
			case 0x17600123: return "PCT-7424 PCI card with standard counters";
			case 0x17600141: return "PCA7208AL - Analog Inputs/Outputs";
			case 0x17600142: return "PCA7208AS - Analog inputs/Outputs";
			case 0x17600143: return "PCA7408AL - Analog Inputs/Outputs";
			case 0x17600144: return "PCA7408AS - Analog Inputs/Outputs";
			case 0x17600145: return "PCA-7228AL Multifunction PCI IO card";
			case 0x17600146: return "PCA-7228AS Multifunction PCI IO card";
			case 0x17600147: return "PCA7428AL Multifunction PCI IO card";
			case 0x17600148: return "PCA7428AS Multifunction PCI IO card";
			case 0x17600149: return "PCA7228EL Multifunction PCI IO card with isolated analog inputs";
			case 0x17600150: return "PCA7428EL Multifunction PCI IO card with isolated analog inputs";
			case 0x17600151: return "PCA7628AL - PCI card with analog inputs, counters and DIO";
			case 0x17600152: return "PCA7628AS PCI card with analog inputs, outputs, counters and DIO";
			case 0x17600161: return "PCA7288A PCI card with analog outputs, counters and DIO";
			case 0x17600180: return "PCI1052 Communication card for MicroUnit network";
			case 0x17600214: return "PCT-7424C (F0) PC card with standard counters";
			case 0x17600215: return "PCT-7424C (F1) PC card with standard counters";
			case 0x17600216: return "PCT-7424E (F0) PC card with standard counters";
			case 0x17600217: return "PCT-7424E (F1) PC card with standard counters";
			case 0x17600240: return "PCA7428CL_F0 - analog Inputs";
			case 0x17600241: return "PCA7428CL_F1 - analog Inputs";
			case 0x17600242: return "PCA7428CS_F0 - Analog Inputs/Outputs non isolated";
			case 0x17600243: return "PCA7428CS_F1 - Analog Inputs/Outputs non isolated";
			case 0x17600244: return "PCA7428CE_F0 - Analog Inputs isolated";
			case 0x17600245: return "PCA7428CE_F1 - Analog Inputs isolated";
			case 0x17600303: return "PCD-7006C Digital Input & Output PCI Card";
			case 0x17600800: return "PCD8006 - PCIe digital Inputs/Outputs";
			case 0x17600840: return "PCA-8428 General-purpose multifunctional PCIe card with 8 analog inputs and 2 analog outputs";
			case 0x17600841: return "PCA-8429 General-purpose multifunctional PCIe card with 8 analog inputs";
			case 0x17600842: return "PCA-8438 General-purpose multifunctional PCIe card with 16 analog inputs and 2 analog outputs";
			case 0x17600843: return "PCA-8439 General-purpose multifunctional PCIe card with 16 analog inputs";
			case 0x1760ff00: return "CTU CAN FD PCIe Card";
			case 0x177d0001: return "Nitrox XL N1";
			case 0x177d0003: return "Nitrox XL N1 Lite";
			case 0x177d0004: return "Octeon (and older) FIPS";
			case 0x177d0005: return "Octeon CN38XX Network Processor Pass 3.x";
			case 0x177d0006: return "RoHS";
			case 0x177d0010: return "CN15XX/CN16XX [Nitrox PX]";
			case 0x177d0011: return "CNN35XX [Nitrox III]";
			case 0x177d0012: return "CNN55XX [Nitrox V]";
			case 0x177d0020: return "Octeon CN31XX Network Processor";
			case 0x177d0030: return "Octeon CN30XX Network Processor";
			case 0x177d0040: return "Octeon CN58XX Network Processor";
			case 0x177d0050: return "Octeon CN57XX Network Processor (CN54XX/CN55XX/CN56XX)";
			case 0x177d0070: return "Octeon CN50XX Network Processor";
			case 0x177d0080: return "Octeon CN52XX Network Processor";
			case 0x177d0090: return "Octeon II CN63XX Network Processor";
			case 0x177d0091: return "Octeon II CN68XX Network Processor";
			case 0x177d0092: return "Octeon II CN65XX Network Processor";
			case 0x177d0093: return "Octeon II CN61XX Network Processor";
			case 0x177d0094: return "Octeon Fusion CNF71XX Cell processor";
			case 0x177d0095: return "Octeon III CN78XX Network Processor";
			case 0x177d0096: return "Octeon III CN70XX Network Processor";
			case 0x177d9700: return "Octeon III CN73XX Network Processor";
			case 0x177d9702: return "CN23XX [LiquidIO II] Intelligent Adapter";
			case 0x177d9703: return "CN23XX [LiquidIO II] NVMe Controller";
			case 0x177d9712: return "CN23XX [LiquidIO II] SRIOV Virtual Function";
			case 0x177d9713: return "CN23XX [LiquidIO II] NVMe SRIOV Virtual Function";
			case 0x177d9800: return "Octeon Fusion CNF75XX Processor";
			case 0x177da001: return "ThunderX MRML(Master RML Bridge to RSL devices)";
			case 0x177da002: return "THUNDERX PCC Bridge";
			case 0x177da008: return "THUNDERX SMMU";
			case 0x177da009: return "THUNDERX Generic Interrupt Controller";
			case 0x177da00a: return "THUNDERX GPIO Controller";
			case 0x177da00b: return "THUNDERX MPI / SPI Controller";
			case 0x177da00c: return "THUNDERX MIO-PTP Controller";
			case 0x177da00d: return "THUNDERX MIX Network Controller";
			case 0x177da00e: return "THUNDERX Reset Controller";
			case 0x177da00f: return "THUNDERX UART Controller";
			case 0x177da010: return "THUNDERX eMMC/SD Controller";
			case 0x177da011: return "THUNDERX MIO-BOOT Controller";
			case 0x177da012: return "THUNDERX TWSI / I2C Controller";
			case 0x177da013: return "THUNDERX CCPI (Multi-node connect)";
			case 0x177da014: return "THUNDERX Voltage Regulator Module";
			case 0x177da015: return "THUNDERX PCIe Switch Logic Interface";
			case 0x177da016: return "THUNDERX Key Memory";
			case 0x177da017: return "THUNDERX GTI (Global System Timers)";
			case 0x177da018: return "THUNDERX Random Number Generator";
			case 0x177da019: return "THUNDERX DFA";
			case 0x177da01a: return "THUNDERX Zip Coprocessor";
			case 0x177da01b: return "THUNDERX xHCI USB Controller";
			case 0x177da01c: return "THUNDERX AHCI SATA Controller";
			case 0x177da01d: return "THUNDERX RAID Coprocessor";
			case 0x177da01e: return "THUNDERX Network Interface Controller";
			case 0x177da01f: return "THUNDERX Traffic Network Switch";
			case 0x177da020: return "THUNDERX PEM (PCI Express Interface)";
			case 0x177da021: return "THUNDERX L2C (Level-2 Cache Controller)";
			case 0x177da022: return "THUNDERX LMC (DRAM Controller)";
			case 0x177da023: return "THUNDERX OCLA (On-Chip Logic Analyzer)";
			case 0x177da024: return "THUNDERX OSM";
			case 0x177da025: return "THUNDERX GSER (General Serializer/Deserializer)";
			case 0x177da026: return "THUNDERX BGX (Common Ethernet Interface)";
			case 0x177da027: return "THUNDERX IOBN";
			case 0x177da029: return "THUNDERX NCSI (Network Controller Sideband Interface)";
			case 0x177da02a: return "ThunderX SGPIO (Serial GPIO controller for SATA disk lights)";
			case 0x177da02b: return "THUNDERX SMI / MDIO Controller";
			case 0x177da02c: return "THUNDERX DAP (Debug Access Port)";
			case 0x177da02d: return "THUNDERX PCIERC (PCIe Root Complex)";
			case 0x177da02e: return "ThunderX L2C-TAD (Level 2 cache tag and data)";
			case 0x177da02f: return "THUNDERX L2C-CBC";
			case 0x177da030: return "THUNDERX L2C-MCI";
			case 0x177da031: return "THUNDERX MIO-FUS (Fuse Access Controller)";
			case 0x177da032: return "THUNDERX FUSF (Fuse Controller)";
			case 0x177da033: return "THUNDERX Random Number Generator virtual function";
			case 0x177da034: return "THUNDERX Network Interface Controller virtual function";
			case 0x177da035: return "THUNDERX Parallel Bus";
			case 0x177da036: return "ThunderX RAD (RAID acceleration engine) virtual function";
			case 0x177da037: return "THUNDERX ZIP virtual function";
			case 0x177da040: return "THUNDERX CPT Cryptographic Accelerator";
			case 0x177da100: return "THUNDERX CN88XX 48 core SoC";
			case 0x177da200: return "OCTEON TX CN81XX/CN80XX";
			case 0x177da300: return "OCTEON TX CN83XX";
			case 0x177daf00: return "CN99xx [ThunderX2] Integrated PCI Host bridge";
			case 0x177daf84: return "CN99xx [ThunderX2] Integrated PCI Express RP Bridge";
			case 0x17960001: return "SIS1100 [Gigabit link]";
			case 0x17960002: return "HOTlink";
			case 0x17960003: return "Counter Timer";
			case 0x17960004: return "CAMAC Controller";
			case 0x17960005: return "PROFIBUS";
			case 0x17960006: return "AMCC HOTlink";
			case 0x17960007: return "LVD Cable Bus";
			case 0x17960008: return "100MHz, 64bit Sequence Generator based on VirtexII";
			case 0x17960009: return "double 14bit-ADC";
			case 0x1796000a: return "SIS1100 with N110 TDC";
			case 0x1796000b: return "double 14bit-ADC with memory";
			case 0x1796000d: return "Synchronisation Slave";
			case 0x1796000e: return "SIS1100-eCMC";
			case 0x1796000f: return "TDC (GPX)";
			case 0x17960010: return "PCIe Counter Timer";
			case 0x17960011: return "SIS1100-e single link";
			case 0x17960012: return "SIS1100-e quad link";
			case 0x17960013: return "4x2.5GHz SFP to 4 lane PCIe bridge";
			case 0x17960014: return "SIS1100 with GPX piggy back";
			case 0x17960015: return "SIS8100 [Gigabit link, MicroTCA]";
			case 0x17960016: return "SIS1100e with 4 lanes";
			case 0x17960017: return "Quad 14bit, 50MHz ADC with 2.5GHz SFP";
			case 0x17960018: return "SIS8300 4-lane PCI Express, Micro TCA for Physics ADC";
			case 0x17960019: return "SIS SIS8300-Lx MTCA.4 Digitizer";
			case 0x1796001a: return "100MHz, 64bit Sequence Generator based on VirtexII";
			case 0x1796001c: return "Quad 16bit, 150MHz ADC with 2.5GHz SFP";
			case 0x17960030: return "100MHz, 64bit Sequence Generator based on Spartan6";
			case 0x17960031: return "200MHz 64bit Sequence Generator based on Spartan7";
			case 0x17975864: return "TW5864 multimedia video controller";
			case 0x17976801: return "TW6802 multimedia video card";
			case 0x17976802: return "TW6802 multimedia other device";
			case 0x17976810: return "TW6816 multimedia video controller";
			case 0x17976811: return "TW6816 multimedia video controller";
			case 0x17976812: return "TW6816 multimedia video controller";
			case 0x17976813: return "TW6816 multimedia video controller";
			case 0x17976814: return "TW6816 multimedia video controller";
			case 0x17976815: return "TW6816 multimedia video controller";
			case 0x17976816: return "TW6816 multimedia video controller";
			case 0x17976817: return "TW6816 multimedia video controller";
			case 0x17976864: return "TW6864 multimedia video controller";
			case 0x17996001: return "F5D6001 Wireless PCI Card [Realtek RTL8180]";
			case 0x17996020: return "F5D6020 v3000 Wireless PCMCIA Card [Realtek RTL8180]";
			case 0x17996060: return "F5D6060 Wireless PDA Card";
			case 0x1799700f: return "F5D7000 v7000 Wireless G Desktop Card [Realtek RTL8185]";
			case 0x1799701f: return "F5D7010 v7000 Wireless G Notebook Card [Realtek RTL8185]";
			case 0x179a0001: return "Quantis PCI 16Mbps";
			case 0x179c0557: return "DP-PCI-557 [PCI 1553B]";
			case 0x179c0566: return "DP-PCI-566 [Intelligent PCI 1553B]";
			case 0x179c1152: return "DP-cPCI-1152 (8-channel Isolated ADC Module)";
			case 0x179c5031: return "DP-CPCI-5031-Synchro Module";
			case 0x179c5112: return "DP-cPCI-5112 [MM-Carrier]";
			case 0x179c5121: return "DP-CPCI-5121-IP Carrier";
			case 0x179c5211: return "DP-CPCI-5211-IP Carrier";
			case 0x179c5679: return "AGE Display Module";
			case 0x17a07163: return "GL9701 PCIe to PCI Bridge";
			case 0x17a08083: return "GL880 USB 1.1 UHCI controller";
			case 0x17a08084: return "GL880 USB 2.0 EHCI controller";
			case 0x17a09750: return "GL9750 SD Host Controller";
			case 0x17a09755: return "GL9755 SD Host Controller";
			case 0x17a0e763: return "GL9763E eMMC Controller";
			case 0x17aa3181: return "ThinkCentre M75n IoT";
			case 0x17aa402b: return "Intel 82599ES 10Gb 2-port Server Adapter X520-2";
			case 0x17b3ab08: return "PN672TX 10/100 Ethernet";
			case 0x17b40011: return "WebEnhance 100 GZIP Compression Card";
			case 0x17b40012: return "WebEnhance 200 GZIP Compression Card";
			case 0x17b40015: return "WebEnhance 300 GZIP Compression Card";
			case 0x17b40016: return "StorCompress 300 GZIP Compression Card";
			case 0x17b40017: return "StorSecure 300 GZIP Compression and AES Encryption Card";
			case 0x17cb0001: return "AGN100 802.11 a/b/g True MIMO Wireless Card";
			case 0x17cb0002: return "AGN300 802.11 a/b/g True MIMO Wireless Card";
			case 0x17cb0105: return "MSM8998 PCIe Root Complex";
			case 0x17cb0108: return "SM8150 PCIe Root Complex";
			case 0x17cb0109: return "SA8195P PCIe Root Complex";
			case 0x17cb0300: return "MDM9x35 LTE Modem [Snapdragon X7]";
			case 0x17cb0301: return "MDM9x45 LTE Modem [Snapdragon X12]";
			case 0x17cb0302: return "MDM9x55 LTE Modem [Snapdragon X16]";
			case 0x17cb0400: return "Datacenter Technologies QDF2432 PCI Express Root Port";
			case 0x17cb0401: return "Datacenter Technologies QDF2400 PCI Express Root Port";
			case 0x17cb1000: return "QCS405 PCIe Root Complex";
			case 0x17cb1101: return "QCA6390 Wireless Network Adapter [AX500-DBS (2x2)]";
			case 0x17cc2280: return "USB 2.0";
			case 0x17d31110: return "ARC-1110 4-Port PCI-X to SATA RAID Controller";
			case 0x17d31120: return "ARC-1120 8-Port PCI-X to SATA RAID Controller";
			case 0x17d31130: return "ARC-1130 12-Port PCI-X to SATA RAID Controller";
			case 0x17d31160: return "ARC-1160 16-Port PCI-X to SATA RAID Controller";
			case 0x17d31170: return "ARC-1170 24-Port PCI-X to SATA RAID Controller";
			case 0x17d31201: return "ARC-1200 2-Port PCI-Express to SATA II RAID Controller";
			case 0x17d31203: return "ARC-1203 2/4/8 Port PCIe 2.0 to SATA 6Gb RAID Controller";
			case 0x17d31210: return "ARC-1210 4-Port PCI-Express to SATA RAID Controller";
			case 0x17d31214: return "ARC-12x4 PCIe 2.0 to SAS/SATA 6Gb RAID Controller";
			case 0x17d31220: return "ARC-1220 8-Port PCI-Express to SATA RAID Controller";
			case 0x17d31222: return "ARC-1222 8-Port PCI-Express to SAS/SATA II RAID Controller";
			case 0x17d31230: return "ARC-1230 12-Port PCI-Express to SATA RAID Controller";
			case 0x17d31260: return "ARC-1260 16-Port PCI-Express to SATA RAID Controller";
			case 0x17d31280: return "ARC-1280/1280ML 24-Port PCI-Express to SATA II RAID Controller";
			case 0x17d31300: return "ARC-1300ix-16 16-Port PCI-Express to SAS Non-RAID Host Adapter";
			case 0x17d31320: return "ARC-1320 8/16 Port PCIe 2.0 to SAS/SATA 6Gb Non-RAID Host Adapter";
			case 0x17d31330: return "ARC-1330 16 Port PCIe 3.0 to SAS/SATA 12Gb Non-RAID Host Adapter";
			case 0x17d31680: return "ARC-1680 series PCIe to SAS/SATA 3Gb RAID Controller";
			case 0x17d31880: return "ARC-188x series PCIe 2.0/3.0 to SAS/SATA 6/12Gb RAID Controller";
			case 0x17d31884: return "ARC-1884 series PCIe 3.0 to SAS/SATA 12/6Gb RAID Controller";
			case 0x17d3188a: return "ARC-1886 series PCIe 4.0 to NVMe/SAS/SATA 16/12/6Gb RAID Controller";
			case 0x17d55731: return "Xframe 10-Gigabit Ethernet PCI-X";
			case 0x17d55732: return "Xframe II 10-Gigabit Ethernet PCI-X 2.0";
			case 0x17d55831: return "Xframe 10-Gigabit Ethernet PCI-X";
			case 0x17d55832: return "Xframe II 10-Gigabit Ethernet PCI-X 2.0";
			case 0x17d55833: return "X3100 Series 10 Gigabit Ethernet PCIe";
			case 0x17db0101: return "XT Series [Seastar] 3D Toroidal Router";
			case 0x17df1864: return "Virtex4 PCI Board w/ QL5064 Bridge [DN7000K10PCI/DN8000K10PCI/DN8000K10PSX/NOTUS]";
			case 0x17df1865: return "Virtex4 ASIC Emulator [DN8000K10PCIe]";
			case 0x17df1866: return "Virtex4 ASIC Emulator Cable Connection [DN8000K10PCI]";
			case 0x17df1867: return "Virtex4 ASIC Emulator Cable Connection [DN8000K10PCIe]";
			case 0x17df1868: return "Virtex4 ASIC Emulator [DN8000K10PCIe-8]";
			case 0x17df1900: return "Virtex5 PCIe ASIC Emulator [DN9000K10PCIe8T/DN9002K10PCIe8T/DN9200K10PCIe8T/DN7006K10PCIe8T/DN7406K10PCIe8T]";
			case 0x17df1901: return "Virtex5 PCIe ASIC Emulator Large BARs [DN9000K10PCIe8T/DN9002K10PCIe8T/DN9200K10PCIe8T/DN7006K10PCIe8T/DN7406K10PCIe8T]";
			case 0x17df1902: return "Virtex5 PCIe ASIC Emulator Low Power [Interceptor]";
			case 0x17df1903: return "Spartan6 PCIe FPGA Accelerator Board [DNBFCS12PCIe]";
			case 0x17df1904: return "Virtex6 PCIe ASIC Emulation Board [DNDUALV6_PCIe4]";
			case 0x17df1905: return "Virtex6 PCIe ASIC Emulation Board [DNV6F6PCIe]";
			case 0x17df1906: return "Virtex6 PCIe ASIC Emulation Board [DN2076K10]";
			case 0x17df1907: return "Virtex6 PCIe ASIC Emulation Board [DNV6F2PCIe]";
			case 0x17df1908: return "Virtex6 PCIe ASIC Emulation Board Large BARs[DNV6F2PCIe]";
			case 0x17df1909: return "Kintex7 PCIe FPGA Accelerator Board [DNK7F5PCIe]";
			case 0x17df190a: return "Virtex7 PCIe ASIC Emulation Board [DNV7F1A]";
			case 0x17df190b: return "Stratix5 PCIe ASIC Emulation Board [DNS5GXF2]";
			case 0x17df190c: return "Virtex7 PCIe ASIC Emulation Board [DNV7F2A]";
			case 0x17df190d: return "Virtex7 PCIe ASIC Emulation Board [DNV7F4A]";
			case 0x17df190e: return "Virtex7 PCIe ASIC Emulation Board [DNV7F2B]";
			case 0x17df190f: return "KintexUS PCIe MainRef Design [DNPCIE_40G_KU_LL]";
			case 0x17df1910: return "VirtexUS ASIC Emulation Board [DNVUF4A]";
			case 0x17df1911: return "VirtexUS PCIe ASIC Emulation Board [DNVU_F2PCIe]";
			case 0x17df1912: return "KintexUS PCIe MainRef Design [DNPCIe_40G_KU_LL_QSFP]";
			case 0x17df1913: return "VirtexUS ASIC Emulation Board [DNVUF1A]";
			case 0x17df1914: return "VirtexUS ASIC Emulation Board [DNVUF2A]";
			case 0x17df1915: return "Arria10 PCIe MainRef Design [DNPCIe_80G_A10_LL]";
			case 0x17df1916: return "VirtexUS PCIe Accelerator Board [DNVUF2_HPC_PCIe]";
			case 0x17df1917: return "UltrascalePlus PCIe Accelerator Board [DNPCIe_400G_VU_LL]";
			case 0x17df1918: return "VirtexUS+ ASIC Emulation Board [DNVUPF4A]";
			case 0x17df1919: return "UltrascalePlus PCIe Accelerator Board [DNPCIe_400G_VUP_HBM_LL]";
			case 0x17df1a00: return "Virtex6 PCIe DMA Netlist Design";
			case 0x17df1a01: return "Virtex6 PCIe Darklite Design [DNPCIe_HXT_10G_LL]";
			case 0x17df1a02: return "Virtex7 PCIe DMA Netlist Design";
			case 0x17df1a03: return "Kintex7 PCIe Darklite Design [DNPCIe_K7_10G_LL]";
			case 0x17df1a05: return "Stratix5 PCIe Darklite Design [DNS5GX_F2]";
			case 0x17df1a06: return "VirtexUS PCIe DMA Netlist Design";
			case 0x17df1a07: return "KintexUS PCIe Darklite Design [DNPCIe_40G_KU_LL]";
			case 0x17df1a08: return "KintexUS PCIe Darklite Design [DNPCIe_40G_KU_LL_QSFP]";
			case 0x17df1a09: return "Arria10 PCIe Darklite Design [DNPCIe_80G_A10_LL]";
			case 0x17df1a0a: return "VirtexUS PCIe Darklite Design [DNVUF2_HPC_PCIe]";
			case 0x17df1a0b: return "UltrascalePlus PCIe Darklite Design [DNPCIe_400G_VU_LL]";
			case 0x17df1a0c: return "KintexUS PCIe DRAM Packet Capture Design [DNPCIe_40G_KU_LL]";
			case 0x17df1a0d: return "KintexUS PCIe DRAM Packet Capture Design [DNPCIe_40G_KU_LL_2QSFP]";
			case 0x17df1a0e: return "UltrascalePlus PCIe Darklite Design [DNPCIe_400G_VUP_HBM_LL]";
			case 0x17e40001: return "KK671 Cardbus encryption board";
			case 0x17e40002: return "KK672 Cardbus encryption board";
			case 0x17e60010: return "EN2010 [c.Link] MoCA Network Controller (Coax, PCI interface)";
			case 0x17e60011: return "EN2010 [c.Link] MoCA Network Controller (Coax, MPEG interface)";
			case 0x17e60021: return "EN2210 [c.Link] MoCA Network Controller (Coax)";
			case 0x17e60025: return "EN2510 [c.Link] MoCA Network Controller (Coax, PCIe interface)";
			case 0x17e60027: return "EN2710 [c.Link] MoCA 2.0 Network Controller (Coax, PCIe interface)";
			case 0x17e63700: return "MoCA 2.0 Network Controller (Coax, PCIe interface)";
			case 0x17e63710: return "MoCA 2.5 Network Controller (Coax, PCIe interface)";
			case 0x17f31010: return "R1010 IDE Controller";
			case 0x17f31011: return "R1011 IDE Controller";
			case 0x17f31012: return "R1012 IDE Controller";
			case 0x17f31031: return "PCI/PCI-X to PCI-E Bridge";
			case 0x17f31070: return "CAN Bus Controller";
			case 0x17f31331: return "Motion Control Interface";
			case 0x17f31930: return "Hybrid Function Control Register";
			case 0x17f32010: return "RDC M2010 VGA-compatible graphics adapter";
			case 0x17f32012: return "M2012/R3308 VGA-compatible graphics adapter";
			case 0x17f32015: return "RDC M2015 VGA-compatible graphics adapter";
			case 0x17f36011: return "R6011 ISA Bridge";
			case 0x17f36013: return "R6013 ISA Bridge";
			case 0x17f36020: return "R6020 North Bridge";
			case 0x17f36021: return "R6021 Host Bridge";
			case 0x17f36023: return "R6023 Host Bridge";
			case 0x17f36025: return "R6025 Host Bridge";
			case 0x17f36026: return "R6026 Host Bridge";
			case 0x17f36030: return "R6030 ISA Bridge";
			case 0x17f36031: return "R6031 ISA Bridge";
			case 0x17f36035: return "R6035 ISA Bridge";
			case 0x17f36036: return "R6036 ISA Bridge";
			case 0x17f36040: return "R6040 MAC Controller";
			case 0x17f36060: return "R6060 USB 1.1 Controller";
			case 0x17f36061: return "R6061 USB 2.0 Controller";
			case 0x17fe2120: return "IPN 2120 802.11b";
			case 0x17fe2220: return "IPN 2220 802.11g";
			case 0x18001100: return "Nanospeed Trading Gateway";
			case 0x18043060: return "RT3060 Wireless 802.11n 1T/1R";
			case 0x18134000: return "HaM controllerless modem";
			case 0x18134100: return "HaM plus Data Fax Modem";
			case 0x18140101: return "Wireless PCI Adapter RT2400 / RT2460";
			case 0x18140200: return "RT2500 802.11g PCI [PC54G2]";
			case 0x18140201: return "RT2500 Wireless 802.11bg";
			case 0x18140300: return "Wireless Adapter Canyon CN-WF511";
			case 0x18140301: return "RT2561/RT61 802.11g PCI";
			case 0x18140302: return "RT2561/RT61 rev B 802.11g";
			case 0x18140401: return "RT2600 802.11 MIMO";
			case 0x18140601: return "RT2800 802.11n PCI";
			case 0x18140681: return "RT2890 Wireless 802.11n PCIe";
			case 0x18140701: return "RT2760 Wireless 802.11n 1T/2R";
			case 0x18140781: return "RT2790 Wireless 802.11n 1T/2R PCIe";
			case 0x18143060: return "RT3060 Wireless 802.11n 1T/1R";
			case 0x18143062: return "RT3062 Wireless 802.11n 2T/2R";
			case 0x18143090: return "RT3090 Wireless 802.11n 1T/1R PCIe";
			case 0x18143091: return "RT3091 Wireless 802.11n 1T/2R PCIe";
			case 0x18143092: return "RT3092 Wireless 802.11n 2T/2R PCIe";
			case 0x18143290: return "RT3290 Wireless 802.11n 1T/1R PCIe";
			case 0x18143298: return "RT3290 Bluetooth";
			case 0x18143592: return "RT3592 Wireless 802.11abgn 2T/2R PCIe";
			case 0x1814359f: return "RT3592 PCIe Wireless Network Adapter";
			case 0x18145360: return "RT5360 Wireless 802.11n 1T/1R";
			case 0x18145362: return "RT5362 PCI 802.11n Wireless Network Adapter";
			case 0x18145390: return "RT5390 Wireless 802.11n 1T/1R PCIe";
			case 0x18145392: return "RT5392 PCIe Wireless Network Adapter";
			case 0x1814539b: return "RT5390R 802.11bgn PCIe Wireless Network Adapter";
			case 0x1814539f: return "RT5390 [802.11 b/g/n 1T1R G-band PCI Express Single Chip]";
			case 0x18145592: return "RT5592 PCIe Wireless Network Adapter";
			case 0x1814e932: return "RT2560F 802.11 b/g PCI";
			case 0x18224e35: return "Mantis DTV PCI Bridge Controller [Ver 1.0]";
			case 0x182d3069: return "ISDN PCI DC-105V2";
			case 0x182d9790: return "WL-121 Wireless Network Adapter 100g+ [Ver.3]";
			case 0x182e0008: return "XLR516 Processor";
			case 0x182f000b: return "BCM5785 [HT1000] SATA (RAID Mode)";
			case 0x18308000: return "CPIn";
			case 0x18308001: return "CPId";
			case 0x18308002: return "CPIx";
			case 0x18308003: return "CPIq";
			case 0x183b08a7: return "MVC100 DVI";
			case 0x183b08a8: return "MVC101 SDI";
			case 0x183b08a9: return "MVC102 DVI+Audio";
			case 0x183b08b0: return "MVC200-DC";
			case 0x184a1100: return "MAX II cPLD";
			case 0x18500048: return "EK220-66401 Computer Interface Card";
			case 0x185b1489: return "VideoMate Vista T100";
			case 0x18642110: return "ISNAP 2110";
			case 0x18675a44: return "MT23108 InfiniHost HCA";
			case 0x18675a45: return "MT23108 InfiniHost HCA flash recovery";
			case 0x18675a46: return "MT23108 InfiniHost HCA bridge";
			case 0x18676278: return "MT25208 InfiniHost III Ex (Tavor compatibility mode)";
			case 0x18676282: return "MT25208 InfiniHost III Ex";
			case 0x186c0612: return "AD612 Data Acquisition Device";
			case 0x186c0614: return "MF614 Multifunction I/O Card";
			case 0x186c0622: return "AD622 Data Acquisition Device";
			case 0x186c0624: return "MF624 Multifunction I/O PCI Card";
			case 0x186c0625: return "MF625 3-phase Motor Driver";
			case 0x186c0634: return "MF634 Multifunction I/O PCIe Card";
			case 0x186c0644: return "MF644 Multifunction I/O Thb Card";
			case 0x1876a101: return "VigraWATCH PCI";
			case 0x1876a102: return "VigraWATCH PMC";
			case 0x1876a103: return "Vigra I/O";
			case 0x187e3403: return "ZyAir G-110 802.11g";
			case 0x187e340e: return "M-302 802.11g XtremeMIMO";
			case 0x18880301: return "VMFX1 FPGA PMC module";
			case 0x18880601: return "VSM2 dual PMC carrier";
			case 0x18880710: return "VS14x series PowerPC PCI board";
			case 0x18880720: return "VS24x series PowerPC PCI board";
			case 0x18964202: return "MIport 3PCIU2 2-port Serial";
			case 0x18964204: return "MIport 3PCIU4 4-port Serial";
			case 0x18964208: return "MIport 3PCIU8 8-port Serial";
			case 0x18964211: return "MIport 3PCIOU1 1-port Isolated Serial";
			case 0x18964212: return "MIport 3PCIOU2 2-port Isolated Serial";
			case 0x18964214: return "MIport 3PCIOU4 4-port Isolated Serial";
			case 0x1896bb10: return "3PCI2 2-Port Serial";
			case 0x1896bb11: return "3PCIO1 1-Port Isolated Serial";
			case 0x18a20002: return "VRC6016 16-Channel PCIe DVR Card";
			case 0x18acd500: return "FusionHDTV 5";
			case 0x18acd800: return "FusionHDTV 3 Gold";
			case 0x18acd810: return "FusionHDTV 3 Gold-Q";
			case 0x18acd820: return "FusionHDTV 3 Gold-T";
			case 0x18acdb30: return "FusionHDTV DVB-T Pro";
			case 0x18acdb40: return "FusionHDTV DVB-T Hybrid";
			case 0x18acdb78: return "FusionHDTV DVB-T Dual Express";
			case 0x18b8b001: return "AMSO 1100 iWARP/RDMA Gigabit Ethernet Coprocessor";
			case 0x18c30720: return "nGene PCI-Express Multimedia Controller";
			case 0x18ca0020: return "Z7/Z9 (XG20 core)";
			case 0x18ca0021: return "Z9s/Z9m (XG21 core)";
			case 0x18ca0027: return "Z11/Z11M";
			case 0x18ca0040: return "Volari V3XT/V5/V8";
			case 0x18ca0047: return "Volari 8300 (chip: XP10, codename: XG47)";
			case 0x18d23069: return "DC-105v2 ISDN controller";
			case 0x18dd4c6f: return "Artimi RTMI-100 UWB adapter";
			case 0x18e60001: return "OSCI [Octal Serial Communication Interface]";
			case 0x18ec6d05: return "ML555";
			case 0x18ecc006: return "COMBO6";
			case 0x18ecc032: return "COMBO-LXT110";
			case 0x18ecc045: return "COMBO6E";
			case 0x18ecc050: return "COMBO-PTM";
			case 0x18ecc058: return "COMBO6X";
			case 0x18ecc132: return "COMBO-LXT155";
			case 0x18ecc232: return "COMBO-FXT100";
			case 0x18ecc400: return "COMBO-400G1";
			case 0x18f40031: return "NT20X Network Adapter";
			case 0x18f40051: return "NT20X Capture Card";
			case 0x18f40061: return "NT20E Capture Card";
			case 0x18f40064: return "NT20E Inline Card";
			case 0x18f40071: return "NT4E Capture Card";
			case 0x18f40074: return "NT4E Inline Card";
			case 0x18f40081: return "NT4E 4-port Expansion Card";
			case 0x18f40091: return "NT20X Capture Card [New Rev]";
			case 0x18f400a1: return "NT4E-STD Capture Card";
			case 0x18f400a4: return "NT4E-STD Inline Card";
			case 0x18f400b1: return "NTBPE Optical Bypass Adapter";
			case 0x18f400c5: return "NT20E2 Network Adapter 2x10Gb";
			case 0x18f400d5: return "NT40E2-4 Network Adapter 4x10Gb";
			case 0x18f400e5: return "NT40E2-1 Network Adapter 1x40Gb";
			case 0x18f400f5: return "NT4E2-4T-BP Network Adapter 4x1Gb with Electrical Bypass";
			case 0x18f40105: return "NT4E2-4-PTP Network Adapter 4x1Gb";
			case 0x18f40115: return "NT20E2-PTP Network Adapter 2x10Gb";
			case 0x18f40125: return "NT4E2-4-PTP Network Adapter 4x1Gb";
			case 0x18f40135: return "NT20E2-PTP Network Adapter 2x10Gb";
			case 0x18f40145: return "NT40E3-4-PTP Network Adapter 4x10Gb";
			case 0x18f40155: return "NT100E3-1-PTP Network Adapter 1x100Gb";
			case 0x18f40165: return "NT80E3-2-PTP Network Adapter 2x40Gb";
			case 0x18f40175: return "NT20E3-2-PTP Network Adapter 2x10Gb";
			case 0x18f40185: return "NT40A01 Network Adapter";
			case 0x18f401a5: return "NT200A01 Network Adapter";
			case 0x18f401c5: return "NT200A02 Network Adapter";
			case 0x18f401d5: return "NT50B01 Network Adapter";
			case 0x18f401e5: return "NT100A01 Network Adapter";
			case 0x18f61000: return "[Nexsis] Switch Virtual P2P PCIe Bridge";
			case 0x18f61001: return "[Texsis] Switch Virtual P2P PCIe Bridge";
			case 0x18f61050: return "[Nexsis] Switch Virtual P2P PCI Bridge";
			case 0x18f61051: return "[Texsis] Switch Virtual P2P PCI Bridge";
			case 0x18f62000: return "[Nexsis] Switch Integrated Mgmt. Endpoint";
			case 0x18f62001: return "[Texsis] Switch Integrated Mgmt. Endpoint";
			case 0x18f70001: return "ESCC-PCI-335 Serial PCI Adapter [Fastcom]";
			case 0x18f70002: return "422/4-PCI-335 Serial PCI Adapter [Fastcom]";
			case 0x18f70003: return "232/4-1M-PCI Serial PCI Adapter [Fastcom]";
			case 0x18f70004: return "422/2-PCI-335 Serial PCI Adapter [Fastcom]";
			case 0x18f70005: return "IGESCC-PCI-ISO/1 Serial PCI Adapter [Fastcom]";
			case 0x18f7000a: return "232/4-PCI-335 Serial PCI Adapter [Fastcom]";
			case 0x18f7000b: return "232/8-PCI-335 Serial PCI Adapter [Fastcom]";
			case 0x18f7000f: return "FSCC Serial PCI Adapter [Fastcom]";
			case 0x18f70010: return "GSCC Serial PCI Adapter [Fastcom]";
			case 0x18f70011: return "QSSB Serial PCI Adapter [Fastcom]";
			case 0x18f70014: return "SuperFSCC Serial PCI Adapter [Fastcom]";
			case 0x18f70015: return "SuperFSCC-104-LVDS Serial PC/104+ Adapter [Fastcom]";
			case 0x18f70016: return "FSCC-232 RS-232 Serial PCI Adapter [Fastcom]";
			case 0x18f70017: return "SuperFSCC-104 Serial PC/104+ Adapter [Fastcom]";
			case 0x18f70018: return "SuperFSCC/4 Serial PCI Adapter [Fastcom]";
			case 0x18f70019: return "SuperFSCC Serial PCI Adapter [Fastcom]";
			case 0x18f7001a: return "SuperFSCC-LVDS Serial PCI Adapter [Fastcom]";
			case 0x18f7001b: return "FSCC/4 Serial PCI Adapter [Fastcom]";
			case 0x18f7001c: return "SuperFSCC/4-LVDS Serial PCI Adapter [Fastcom]";
			case 0x18f7001d: return "FSCC Serial PCI Adapter [Fastcom]";
			case 0x18f7001e: return "SuperFSCC/4 Serial PCIe Adapter [Fastcom]";
			case 0x18f7001f: return "SuperFSCC/4 Serial cPCI Adapter [Fastcom]";
			case 0x18f70020: return "422/4-PCIe Serial PCIe Adapter [Fastcom]";
			case 0x18f70021: return "422/8-PCIe Serial PCIe Adapter [Fastcom]";
			case 0x18f70022: return "SuperFSCC/4-LVDS Serial PCIe Adapter [Fastcom]";
			case 0x18f70023: return "SuperFSCC/4 Serial cPCI Adapter [Fastcom]";
			case 0x18f70025: return "SuperFSCC/4-LVDS Serial PCI Adapter [Fastcom]";
			case 0x18f70026: return "SuperFSCC-LVDS Serial PCI Adapter [Fastcom]";
			case 0x18f70027: return "FSCC/4 Serial PCIe Adapter [Fastcom]";
			case 0x19042031: return "SC92031 PCI Fast Ethernet Adapter";
			case 0x19048139: return "RTL8139D [Realtek] PCI 10/100BaseTX ethernet adaptor";
			case 0x19120002: return "SH7780 PCI Controller (PCIC)";
			case 0x19120011: return "SH7757 PCIe End-Point [PBI]";
			case 0x19120012: return "SH7757 PCIe-PCI Bridge [PPB]";
			case 0x19120013: return "SH7757 PCIe Switch [PS]";
			case 0x19120014: return "uPD720201 USB 3.0 Host Controller";
			case 0x19120015: return "uPD720202 USB 3.0 Host Controller";
			case 0x1912001a: return "SH7758 PCIe-PCI Bridge [PPB]";
			case 0x1912001b: return "SH7758 PCIe End-Point [PBI]";
			case 0x1912001d: return "SH7758 PCIe Switch [PS]";
			case 0x19230040: return "A200/Remora FXO/FXS Analog AFT card";
			case 0x19230100: return "A104d QUAD T1/E1 AFT card";
			case 0x19230300: return "A101 single-port T1/E1";
			case 0x19230400: return "A104u Quad T1/E1 AFT";
			case 0x19240703: return "SFC4000 rev A net [Solarstorm]";
			case 0x19240710: return "SFC4000 rev B [Solarstorm]";
			case 0x19240803: return "SFC9020 10G Ethernet Controller";
			case 0x19240813: return "SFL9021 10GBASE-T Ethernet Controller";
			case 0x19240903: return "SFC9120 10G Ethernet Controller";
			case 0x19240923: return "SFC9140 10/40G Ethernet Controller";
			case 0x19240a03: return "SFC9220 10/40G Ethernet Controller";
			case 0x19240b03: return "XtremeScale SFC9250 10/25/40/50/100G Ethernet Controller";
			case 0x19241803: return "SFC9020 10G Ethernet Controller (Virtual Function)";
			case 0x19241813: return "SFL9021 10GBASE-T Ethernet Controller (Virtual Function)";
			case 0x19241903: return "SFC9120 10G Ethernet Controller (Virtual Function)";
			case 0x19241923: return "SFC9140 10/40G Ethernet Controller (Virtual Function)";
			case 0x19241a03: return "SFC9220 10/40G Ethernet Controller (Virtual Function)";
			case 0x19241b03: return "XtremeScale SFC9250 10/25/40/50/100G Ethernet Controller (Virtual Function)";
			case 0x19246703: return "SFC4000 rev A iSCSI/Onload [Solarstorm]";
			case 0x1924c101: return "EF1-21022T [EtherFabric]";
			case 0x192a0008: return "RAMPART";
			case 0x1931000c: return "Qualcomm MSM6275 UMTS chip";
			case 0x193f0001: return "AHA36x-PCIX";
			case 0x193f0360: return "AHA360-PCIe";
			case 0x193f0363: return "AHA363-PCIe";
			case 0x193f0364: return "AHA364-PCIe";
			case 0x193f0367: return "AHA367-PCIe";
			case 0x193f0370: return "AHA370-PCIe";
			case 0x193f0604: return "AHA604";
			case 0x193f0605: return "AHA605";
			case 0x193f3641: return "AHA3641";
			case 0x193f3642: return "AHA3642";
			case 0x193f6101: return "AHA6101";
			case 0x193f6102: return "AHA6102";
			case 0x1942e511: return "Advance X620 accelerator card";
			case 0x1942e521: return "Advance e620 accelerator card";
			case 0x19474743: return "CG200 Dual SD/SDIO Host controller device";
			case 0x194a1111: return "FireSpy3850";
			case 0x194a1112: return "FireSpy450b";
			case 0x194a1113: return "FireSpy450bT";
			case 0x194a1114: return "FireSpy850";
			case 0x194a1115: return "FireSpy850bT";
			case 0x194a1200: return "FireTrac 3460bT";
			case 0x194a1201: return "FireTrac 3460bT (fallback firmware)";
			case 0x194a1202: return "FireTrac 3460bT";
			case 0x194a1203: return "FireTrac 3460bT (fallback firmware)";
			case 0x19570012: return "MPC8548E";
			case 0x19570013: return "MPC8548";
			case 0x19570014: return "MPC8543E";
			case 0x19570015: return "MPC8543";
			case 0x19570018: return "MPC8547E";
			case 0x19570019: return "MPC8545E";
			case 0x1957001a: return "MPC8545";
			case 0x19570020: return "MPC8568E";
			case 0x19570021: return "MPC8568";
			case 0x19570022: return "MPC8567E";
			case 0x19570023: return "MPC8567";
			case 0x19570030: return "MPC8533E";
			case 0x19570031: return "MPC8533";
			case 0x19570032: return "MPC8544E";
			case 0x19570033: return "MPC8544";
			case 0x19570040: return "MPC8572E";
			case 0x19570041: return "MPC8572";
			case 0x19570050: return "MPC8536E";
			case 0x19570051: return "MPC8536";
			case 0x19570052: return "MPC8535E";
			case 0x19570053: return "MPC8535";
			case 0x19570060: return "MPC8569";
			case 0x19570061: return "MPC8569E";
			case 0x19570070: return "P2020E";
			case 0x19570071: return "P2020";
			case 0x19570078: return "P2010E";
			case 0x19570079: return "P2010";
			case 0x19570080: return "MPC8349E";
			case 0x19570081: return "MPC8349";
			case 0x19570082: return "MPC8347E TBGA";
			case 0x19570083: return "MPC8347 TBGA";
			case 0x19570084: return "MPC8347E PBGA";
			case 0x19570085: return "MPC8347 PBGA";
			case 0x19570086: return "MPC8343E";
			case 0x19570087: return "MPC8343";
			case 0x195700b4: return "MPC8315E";
			case 0x195700b6: return "MPC8314E";
			case 0x195700c2: return "MPC8379E";
			case 0x195700c3: return "MPC8379";
			case 0x195700c4: return "MPC8378E";
			case 0x195700c5: return "MPC8378";
			case 0x195700c6: return "MPC8377E";
			case 0x195700c7: return "MPC8377";
			case 0x19570100: return "P1020E";
			case 0x19570101: return "P1020";
			case 0x19570102: return "P1021E";
			case 0x19570103: return "P1021";
			case 0x19570108: return "P1011E";
			case 0x19570109: return "P1011";
			case 0x1957010a: return "P1012E";
			case 0x1957010b: return "P1012";
			case 0x19570110: return "P1022E";
			case 0x19570111: return "P1022";
			case 0x19570118: return "P1013E";
			case 0x19570119: return "P1013";
			case 0x19570128: return "P1010";
			case 0x19570400: return "P4080E";
			case 0x19570401: return "P4080";
			case 0x19570408: return "P4040E";
			case 0x19570409: return "P4040";
			case 0x1957041f: return "P3041";
			case 0x19570440: return "T4240 with security";
			case 0x19570441: return "T4240 without security";
			case 0x19570446: return "T4160 with security";
			case 0x19570447: return "T4160 without security";
			case 0x19570830: return "T2080 with security";
			case 0x19570831: return "T2080 without security";
			case 0x19570838: return "T2081 with security";
			case 0x19570839: return "T2081 without security";
			case 0x1957580c: return "MPC5121e";
			case 0x19577010: return "MPC8641 PCI Host Bridge";
			case 0x19577011: return "MPC8641D PCI Host Bridge";
			case 0x19577018: return "MPC8610";
			case 0x1957c006: return "MPC8308";
			case 0x1957fc02: return "RedStone";
			case 0x1957fc03: return "CFI";
			case 0x1959a000: return "PA6T Core";
			case 0x1959a001: return "PWRficient Host Bridge";
			case 0x1959a002: return "PWRficient PCI-Express Port";
			case 0x1959a003: return "PWRficient SMBus Controller";
			case 0x1959a004: return "PWRficient 16550 UART";
			case 0x1959a005: return "PWRficient Gigabit Ethernet";
			case 0x1959a006: return "PWRficient 10-Gigabit Ethernet";
			case 0x1959a007: return "PWRficient DMA Controller";
			case 0x1959a008: return "PWRficient LPC/Localbus Interface";
			case 0x1959a009: return "PWRficient L2 Cache";
			case 0x1959a00a: return "PWRficient DDR2 Memory Controller";
			case 0x1959a00b: return "PWRficient SERDES";
			case 0x1959a00c: return "PWRficient System/Debug Controller";
			case 0x1959a00d: return "PWRficient PCI-Express Internal Endpoint";
			case 0x19661975: return "DVG64 family";
			case 0x19661977: return "DVG128 family";
			case 0x19661979: return "3DVG/UHD3";
			case 0x19661980: return "HDV2/UHD2";
			case 0x19691026: return "AR8121/AR8113/AR8114 Gigabit or Fast Ethernet";
			case 0x19691048: return "Attansic L1 Gigabit Ethernet";
			case 0x19691062: return "AR8132 Fast Ethernet";
			case 0x19691063: return "AR8131 Gigabit Ethernet";
			case 0x19691066: return "Attansic L2c Gigabit Ethernet";
			case 0x19691067: return "Attansic L1c Gigabit Ethernet";
			case 0x19691073: return "AR8151 v1.0 Gigabit Ethernet";
			case 0x19691083: return "AR8151 v2.0 Gigabit Ethernet";
			case 0x19691090: return "AR8162 Fast Ethernet";
			case 0x19691091: return "AR8161 Gigabit Ethernet";
			case 0x196910a0: return "QCA8172 Fast Ethernet";
			case 0x196910a1: return "QCA8171 Gigabit Ethernet";
			case 0x19692048: return "Attansic L2 Fast Ethernet";
			case 0x19692060: return "AR8152 v1.1 Fast Ethernet";
			case 0x19692062: return "AR8152 v2.0 Fast Ethernet";
			case 0x1969e091: return "Killer E220x Gigabit Ethernet Controller";
			case 0x1969e0a1: return "Killer E2400 Gigabit Ethernet Controller";
			case 0x1969e0b1: return "Killer E2500 Gigabit Ethernet Controller";
			case 0x196a0101: return "NodalCore C-1000 Content Classification Accelerator";
			case 0x196a0102: return "NodalCore C-2000 Content Classification Accelerator";
			case 0x196a0105: return "NodalCore C-3000 Content Classification Accelerator";
			case 0x19711011: return "Physics Processing Unit [PhysX]";
			case 0x19740009: return "FlexCard PMC-II";
			case 0x19740011: return "FlexCard PMC-II Ethernet";
			case 0x19740018: return "FlexCard PXIe3";
			case 0x19740019: return "FlexCard PCIe3";
			case 0x197b0250: return "JMC250 PCI Express Gigabit Ethernet Controller";
			case 0x197b0260: return "JMC260 PCI Express Fast Ethernet Controller";
			case 0x197b0368: return "JMB368 IDE controller";
			case 0x197b0585: return "JMB58x AHCI SATA controller";
			case 0x197b2360: return "JMB360 AHCI Controller";
			case 0x197b2361: return "JMB361 AHCI/IDE";
			case 0x197b2362: return "JMB362 SATA Controller";
			case 0x197b2363: return "JMB363 SATA/IDE Controller";
			case 0x197b2364: return "JMB364 AHCI Controller";
			case 0x197b2365: return "JMB365 AHCI/IDE";
			case 0x197b2366: return "JMB366 AHCI/IDE";
			case 0x197b2368: return "JMB368 IDE controller";
			case 0x197b2369: return "JMB369 Serial ATA Controller";
			case 0x197b2380: return "IEEE 1394 Host Controller";
			case 0x197b2381: return "Standard SD Host Controller";
			case 0x197b2382: return "SD/MMC Host Controller";
			case 0x197b2383: return "MS Host Controller";
			case 0x197b2384: return "xD Host Controller";
			case 0x197b2386: return "Standard SD Host Controller";
			case 0x197b2387: return "SD/MMC Host Controller";
			case 0x197b2388: return "MS Host Controller";
			case 0x197b2389: return "xD Host Controller";
			case 0x197b2391: return "Standard SD Host Controller";
			case 0x197b2392: return "SD/MMC Host Controller";
			case 0x197b2393: return "MS Host Controller";
			case 0x197b2394: return "xD Host Controller";
			case 0x19821600: return "OX16C954 HOST-A";
			case 0x198216ff: return "OX16C954 HOST-B";
			case 0x19875007: return "E7 NVMe Controller";
			case 0x19875012: return "E12 NVMe Controller";
			case 0x19875013: return "PS5013 E13 NVMe Controller";
			case 0x19875016: return "E16 PCIe4 NVMe Controller";
			case 0x19875018: return "E18 PCIe4 NVMe Controller";
			case 0x19890001: return "RapidFile Bridge";
			case 0x19898001: return "RapidFile";
			case 0x1999a900: return "AM-7209 Video Processor";
			case 0x199d8209: return "Virtual NIC Device";
			case 0x199d890a: return "Virtual HBA Device";
			case 0x199f8501: return "AU85X1 PCI REV1.1";
			case 0x199f8521: return "AU8521 TV card";
			case 0x19a20120: return "x1 PCIe Gen2 Bridge[Pilot4]";
			case 0x19a20200: return "BladeEngine 10Gb PCI-E iSCSI adapter";
			case 0x19a20201: return "BladeEngine 10Gb PCIe Network Adapter";
			case 0x19a20211: return "BladeEngine2 10Gb Gen2 PCIe Network Adapter";
			case 0x19a20212: return "BladeEngine2 10Gb Gen2 PCIe iSCSI Adapter";
			case 0x19a20221: return "BladeEngine3 10Gb Gen2 PCIe Network Adapter";
			case 0x19a20222: return "BladeEngine3 10Gb Gen2 PCIe iSCSI Adapter";
			case 0x19a20700: return "OneConnect OCe10100/OCe10102 Series 10 GbE";
			case 0x19a20702: return "OneConnect 10Gb iSCSI Initiator";
			case 0x19a20704: return "OneConnect OCe10100/OCe10102 Series 10 GbE CNA";
			case 0x19a20710: return "OneConnect 10Gb NIC (be3)";
			case 0x19a20712: return "OneConnect 10Gb iSCSI Initiator (be3)";
			case 0x19a20714: return "OneConnect 10Gb FCoE Initiator (be3)";
			case 0x19a20800: return "ServerView iRMC HTI";
			case 0x19ac0001: return "ACA2400 Crypto Accelerator";
			case 0x19ae0520: return "4135 HFT Interface Controller";
			case 0x19ae0521: return "Decimator";
			case 0x19ba2330: return "ZyWALL Turbo Card";
			case 0x19e35801: return "DDRdrive X1";
			case 0x19e35808: return "DDRdrive X8";
			case 0x19e3dd52: return "DDRdrive X1-30";
			case 0x19e50123: return "ES3000 V3 NVMe PCIe SSD";
			case 0x19e50200: return "Hi1822 Family (2*100GE)";
			case 0x19e50202: return "Hi1822 Family (2*32G FC)";
			case 0x19e50203: return "Hi1822 Family (2*16G FC)";
			case 0x19e50205: return "Hi1822 Family (2*100GE)";
			case 0x19e50206: return "Hi1822 Family (2*25GE)";
			case 0x19e50210: return "Hi1822 Family (4*25GE)";
			case 0x19e50211: return "Hi1822 Family (4*25GE)";
			case 0x19e50212: return "Hi1822 Family (2*8G FC)";
			case 0x19e51710: return "iBMA Virtual Network Adapter";
			case 0x19e51711: return "Hi171x Series [iBMC Intelligent Management system chip w/VGA support]";
			case 0x19e51822: return "Hi1822 Family (4*25GE)";
			case 0x19e53714: return "ES3000 V5 NVMe PCIe SSD";
			case 0x19e5371e: return "Hi1822 Family Virtual Bridge";
			case 0x19e53754: return "ES3000 V6 NVMe PCIe SSD";
			case 0x19e5375e: return "Hi1822 Family Virtual Function";
			case 0x19e5379e: return "Hi1822 Family Virtual Function";
			case 0x19e5a120: return "HiSilicon PCIe Root Port with Gen4";
			case 0x19e5a121: return "HiSilicon PCI-PCI Bridge";
			case 0x19e5a122: return "HiSilicon Embedded DMA Engine";
			case 0x19e5a124: return "HiSilicon Internal SDI Function Engine";
			case 0x19e5a125: return "HiSilicon SDI Network Controller";
			case 0x19e5a126: return "HiSilicon SDI NVMe Storage Controller";
			case 0x19e5a127: return "HiSilicon SDI Accelerator";
			case 0x19e5a12a: return "HiSilicon Add-on PCI-PCI Bridge";
			case 0x19e5a220: return "HNS GE Network Controller";
			case 0x19e5a221: return "HNS GE/10GE/25GE Network Controller";
			case 0x19e5a222: return "HNS GE/10GE/25GE RDMA Network Controller";
			case 0x19e5a224: return "HNS GE/10GE/25GE/50GE RDMA Network Controller";
			case 0x19e5a226: return "HNS GE/10GE/25GE/50GE/100GE RDMA Network Controller";
			case 0x19e5a22a: return "HiSilicon Network For SDI";
			case 0x19e5a22e: return "HNS Network Controller (Virtual Function)";
			case 0x19e5a22f: return "HNS RDMA Network Controller (Virtual Function)";
			case 0x19e5a230: return "HiSilicon SAS 3.0 HBA";
			case 0x19e5a235: return "HiSilicon AHCI HBA";
			case 0x19e5a238: return "HiSilicon USB 3.0 Host Controller";
			case 0x19e5a239: return "HiSilicon USB 2.0 2-port Host Controller";
			case 0x19e5a23a: return "HiSilicon USB 2.0 Host Controller";
			case 0x19e5a23b: return "HiSilicon USB 1.1 Host Controller";
			case 0x19e5a250: return "HiSilicon ZIP Engine";
			case 0x19e5a251: return "HiSilicon ZIP Engine(Virtual Function)";
			case 0x19e5a255: return "HiSilicon SEC Engine";
			case 0x19e5a256: return "HiSilicon SEC Engine(Virtual Function)";
			case 0x19e5a258: return "HiSilicon HPRE Engine";
			case 0x19e5a259: return "HiSilicon HPRE Engine(Virtual Function)";
			case 0x19e5a25a: return "HiSilicon RDE Engine";
			case 0x19e5a25b: return "HiSilicon RDE Engine(Virtual Function)";
			case 0x19e71001: return "STIX DSP Card";
			case 0x19e71002: return "STIX - 1 Port T1/E1 Card";
			case 0x19e71003: return "STIX - 2 Port T1/E1 Card";
			case 0x19e71004: return "STIX - 4 Port T1/E1 Card";
			case 0x19e71005: return "STIX - 4 Port FXS Card";
			case 0x1a031150: return "AST1150 PCI-to-PCI Bridge";
			case 0x1a032000: return "ASPEED Graphics Family";
			case 0x1a070006: return "CAN interface PC104+ HS/HS";
			case 0x1a070007: return "CAN interface PCIcanx II HS or HS/HS";
			case 0x1a070008: return "CAN interface PCIEcan HS or HS/HS";
			case 0x1a070009: return "CAN interface PCI104 HS/HS";
			case 0x1a080000: return "SC15064";
			case 0x1a0e083f: return "DTA-2111 VHF/UHF Modulator";
			case 0x1a178002: return "PB-10GE-2P 10GbE Security Card";
			case 0x1a1d1a17: return "Meta Networks MTP-1G IDPS NIC";
			case 0x1a294338: return "CP8 Content Processor ASIC";
			case 0x1a294e36: return "NP6 Network Processor";
			case 0x1a294e37: return "NP7 Network Processor";
			case 0x1a2b0000: return "GESP v1.2";
			case 0x1a2b0001: return "GESP v1.3";
			case 0x1a2b0002: return "ECOMP v1.3";
			case 0x1a2b0005: return "ETP v1.4";
			case 0x1a2b000a: return "ETP-104 v1.1";
			case 0x1a2b000e: return "DSLP-104 v1.1";
			case 0x1a300680: return "MtW8171 [Hyperion II]";
			case 0x1a300700: return "Wave300 PSB8224 [Hyperion III]";
			case 0x1a300710: return "Wave300 PSB8231 [Hyperion III]";
			case 0x1a3b1112: return "AR9285 Wireless Network Adapter (PCI-Express)";
			case 0x1a410001: return "TILE64 processor";
			case 0x1a410002: return "TILEPro processor";
			case 0x1a410200: return "TILE-Gx processor";
			case 0x1a410201: return "TILE-Gx Processor Virtual Function";
			case 0x1a412000: return "TILE-Gx PCI Express Root Port";
			case 0x1a4a1000: return "MCOR Power Supply Controller";
			case 0x1a4a1010: return "AMC EVR - Stockholm Timing Board";
			case 0x1a4a1020: return "PGPCard - Gen3 Cameralink Interface";
			case 0x1a4a1030: return "PGPCard - Gen3 GIGe Interface";
			case 0x1a4a2000: return "PGPCard - 4 Lane";
			case 0x1a4a2001: return "PGPCard - 8 Lane Plus EVR";
			case 0x1a4a2010: return "PCI-Express EVR";
			case 0x1a4a2011: return "PCI-Express EVR - TPR Version";
			case 0x1a4a2020: return "PGP-GEN3 PCIe - 8 Lane Plus EVR";
			case 0x1a4a2030: return "AXI Stream DAQ PCIe card";
			case 0x1a4a2040: return "EXO PCIe TEM";
			case 0x1a4a3000: return "COB DTM V1";
			case 0x1a4a3001: return "COB DTM V2";
			case 0x1a550010: return "SDStationOEM";
			case 0x1a550011: return "SDStationOEM II";
			case 0x1a550020: return "Centaurus";
			case 0x1a550021: return "Centaurus II";
			case 0x1a550022: return "Centaurus II LT";
			case 0x1a550030: return "CLIPSTER-VPU 1.x (Hugo)";
			case 0x1a550040: return "Hydra Cinema (JPEG)";
			case 0x1a550050: return "CLIPSTER-VPU 2.x (DigiLab)";
			case 0x1a550060: return "CLIPSTER-DCI 2.x (HydraX)";
			case 0x1a550061: return "Atomix";
			case 0x1a550062: return "Atomix LT";
			case 0x1a550063: return "Atomix HDMI";
			case 0x1a550064: return "Atomix STAN";
			case 0x1a550065: return "Atomix HDMI STAN";
			case 0x1a550070: return "RED Rocket";
			case 0x1a550090: return "CinePlay";
			case 0x1a730001: return "Mozart [Memory Appliance 1010]";
			case 0x1a780031: return "FlashMAX Drive";
			case 0x1a780040: return "FlashMAX II";
			case 0x1a780041: return "FlashMAX II";
			case 0x1a780042: return "FlashMAX II";
			case 0x1a780050: return "FlashMAX III";
			case 0x1a840001: return "Vulcan SP HT6210 10-Gigabit Ethernet (rev 02)";
			case 0x1a884d45: return "Multifunction IP core";
			case 0x1a8c1100: return "E8001-66443 PCI Express CIC";
			case 0x1a8e2090: return "Model 2090 PCI Express";
			case 0x1aa80009: return "RAIDCore Controller";
			case 0x1aa8000a: return "RAIDCore Controller";
			case 0x1ab66201: return "RAID Card";
			case 0x1ab84000: return "Virtual Machine Communication Interface";
			case 0x1ab84005: return "Accelerated Virtual Video Adapter";
			case 0x1ab84006: return "Memory Ballooning Controller";
			case 0x1ac1089a: return "Coral Edge TPU";
			case 0x1ad78000: return "TSync-PCIe Time Code Processor";
			case 0x1ad79100: return "TPRO-PCI-66U Timecode Reader/Generator";
			case 0x1ade1501: return "Swipetech barcode scanner";
			case 0x1ade3038: return "PCIe Video Bridge";
			case 0x1ae00042: return "Compute Engine Virtual Ethernet [gVNIC]";
			case 0x1ae0abcd: return "Airbrush Combined Paintbox IPU/Oscar Edge TPU [Pixel Neural Core]";
			case 0x1ae70520: return "HFC-S PCI A [X-TENSIONS XC-520]";
			case 0x1ae80751: return "mE5 marathon VCL";
			case 0x1ae80752: return "mE5 marathon AF2";
			case 0x1ae80753: return "mE5 marathon ACX QP";
			case 0x1ae80754: return "mE5 marathon ACL";
			case 0x1ae80755: return "mE5 marathon ACX SP";
			case 0x1ae80756: return "mE5 marathon ACX DP";
			case 0x1ae80757: return "mE5 marathon VCX QP";
			case 0x1ae80758: return "mE5 marathon VF2";
			case 0x1ae80759: return "mE5 marathon VCLx";
			case 0x1ae80a40: return "microEnable IV AD1-CL";
			case 0x1ae80a41: return "microEnable IV VD1-CL";
			case 0x1ae80a42: return "microEnable IV AD4-CL";
			case 0x1ae80a44: return "microEnable IV VD4-CL";
			case 0x1ae80a45: return "microEnable IV AS1-CL";
			case 0x1ae80a53: return "microEnable 5 AQ8-CXP6B";
			case 0x1ae80a54: return "microEnable 5 VQ8-CXP6B";
			case 0x1ae80a56: return "microEnable 5 VQ8-CXP6D";
			case 0x1ae80a57: return "microEnable 5 AQ8-CXP6D";
			case 0x1ae80a58: return "microEnable 5 VD8-CL";
			case 0x1ae80a5a: return "microEnable 5 AD8-CL";
			case 0x1ae80b52: return "mE5 Abacus 4G Base";
			case 0x1ae80b53: return "mE5 Abacus 4G Base II";
			case 0x1ae80b61: return "mE6 Abacus 4TG";
			case 0x1ae80b63: return "CXP-12 Interface Card 1C";
			case 0x1ae80e42: return "microEnable IV AQ4-GE";
			case 0x1ae80e44: return "microEnable IV VQ4-GE";
			case 0x1ae90101: return "Wil6200 PCI Express Upstream Port";
			case 0x1ae90200: return "Wil6200 PCI Express Port";
			case 0x1ae90201: return "Wil6200 Wireless PCI Express Port";
			case 0x1ae90301: return "Wil6200 802.11ad Wireless Network Adapter";
			case 0x1ae90302: return "Wil6200 802.11ad Wireless Network Adapter";
			case 0x1ae90310: return "Wil6200 802.11ad Wireless Network Adapter";
			case 0x1aea6601: return "AU6601 PCI-E Flash card reader controller";
			case 0x1aea6621: return "AU6621 PCI-E Flash card reader controller";
			case 0x1aea6625: return "AU6625 PCI-E Flash card reader controller";
			case 0x1aed1003: return "ioDimm3 (v1.2)";
			case 0x1aed1005: return "ioDimm3";
			case 0x1aed1006: return "ioXtreme";
			case 0x1aed1007: return "ioXtreme Pro";
			case 0x1aed1008: return "ioXtreme-2";
			case 0x1aed2001: return "ioDrive2";
			case 0x1aed3001: return "ioMemory FHHL";
			case 0x1aed3002: return "ioMemory HHHL";
			case 0x1aed3003: return "ioMemory Mezzanine";
			case 0x1af41000: return "Virtio network device";
			case 0x1af41001: return "Virtio block device";
			case 0x1af41002: return "Virtio memory balloon";
			case 0x1af41003: return "Virtio console";
			case 0x1af41004: return "Virtio SCSI";
			case 0x1af41005: return "Virtio RNG";
			case 0x1af41009: return "Virtio filesystem";
			case 0x1af41041: return "Virtio network device";
			case 0x1af41042: return "Virtio block device";
			case 0x1af41043: return "Virtio console";
			case 0x1af41044: return "Virtio RNG";
			case 0x1af41045: return "Virtio memory balloon";
			case 0x1af41048: return "Virtio SCSI";
			case 0x1af41049: return "Virtio filesystem";
			case 0x1af41050: return "Virtio GPU";
			case 0x1af41052: return "Virtio input";
			case 0x1af41053: return "Virtio socket";
			case 0x1af4105a: return "Virtio file system";
			case 0x1af41110: return "Inter-VM shared memory";
			case 0x1b036100: return "DXT/DXTPro Multiformat Broadcast HD/SD Encoder/Decoder/Transcoder";
			case 0x1b037000: return "D7 Multiformat Broadcast HD/SD Encoder/Decoder/Transcoder";
			case 0x1b1a0e70: return "GRAPE";
			case 0x1b210611: return "ASM1061 SATA IDE Controller";
			case 0x1b210612: return "ASM1062 Serial ATA Controller";
			case 0x1b211040: return "ASM1040 XHCI Controller";
			case 0x1b211042: return "ASM1042 SuperSpeed USB Host Controller";
			case 0x1b211080: return "ASM1083/1085 PCIe to PCI Bridge";
			case 0x1b211142: return "ASM1042A USB 3.0 Host Controller";
			case 0x1b211182: return "ASM1182e 2-Port PCIe x1 Gen2 Packet Switch";
			case 0x1b211184: return "ASM1184e 4-Port PCIe x1 Gen2 Packet Switch";
			case 0x1b211242: return "ASM1142 USB 3.1 Host Controller";
			case 0x1b211343: return "ASM1143 USB 3.1 Host Controller";
			case 0x1b212142: return "ASM2142 USB 3.1 Host Controller";
			case 0x1b212824: return "ASM2824 PCIe Gen3 Packet Switch";
			case 0x1b213242: return "ASM3242 USB 3.2 Host Controller";
			case 0x1b26c132: return "COMBO-LXT155";
			case 0x1b26c1c0: return "NFB-100G1-e0";
			case 0x1b26c1c1: return "NFB-100G1-e1";
			case 0x1b26c250: return "NFB-200G2-master";
			case 0x1b26c251: return "NFB-200G2-slave";
			case 0x1b26c2c0: return "NFB-100G2-e0";
			case 0x1b26c2c1: return "NFB-100G2-e1";
			case 0x1b26cb20: return "COMBO-20G";
			case 0x1b26cb40: return "COMBO-40G";
			case 0x1b26cb80: return "NFB-40G2";
			case 0x1b360001: return "QEMU PCI-PCI bridge";
			case 0x1b360002: return "QEMU PCI 16550A Adapter";
			case 0x1b360003: return "QEMU PCI Dual-port 16550A Adapter";
			case 0x1b360004: return "QEMU PCI Quad-port 16550A Adapter";
			case 0x1b360005: return "QEMU PCI Test Device";
			case 0x1b360006: return "PCI Rocker Ethernet switch device";
			case 0x1b360007: return "PCI SD Card Host Controller Interface";
			case 0x1b360008: return "QEMU PCIe Host bridge";
			case 0x1b360009: return "QEMU PCI Expander bridge";
			case 0x1b36000a: return "PCI-PCI bridge (multiseat)";
			case 0x1b36000b: return "QEMU PCIe Expander bridge";
			case 0x1b36000c: return "QEMU PCIe Root port";
			case 0x1b36000d: return "QEMU XHCI Host Controller";
			case 0x1b360010: return "QEMU NVM Express Controller";
			case 0x1b360100: return "QXL paravirtual graphic card";
			case 0x1b370001: return "ADQ214";
			case 0x1b370003: return "ADQ114";
			case 0x1b370005: return "ADQ112";
			case 0x1b37000e: return "ADQ108";
			case 0x1b37000f: return "ADQDSP";
			case 0x1b370014: return "ADQ412";
			case 0x1b370015: return "ADQ212";
			case 0x1b37001b: return "SDR14";
			case 0x1b37001c: return "ADQ1600";
			case 0x1b37001e: return "ADQ208";
			case 0x1b37001f: return "DSU";
			case 0x1b370020: return "ADQ14";
			case 0x1b370023: return "ADQ7";
			case 0x1b370026: return "ADQ8";
			case 0x1b372014: return "TX320";
			case 0x1b372019: return "S6000";
			case 0x1b390001: return "S1120 PCIe Accelerator SSD";
			case 0x1b3a7589: return "HRED J2000 - JPEG 2000 Video Codec Device";
			case 0x1b3e1fa8: return "BYNET BIC2SE/X";
			case 0x1b470601: return "NumaChip N601";
			case 0x1b470602: return "NumaChip N602";
			case 0x1b4b0100: return "88F3700 [Armada 3700 Family] ARM SoC";
			case 0x1b4b0640: return "88SE9128 SATA III 6Gb/s RAID Controller";
			case 0x1b4b2241: return "88NR2241 Non-Volatile memory controller";
			case 0x1b4b9120: return "88SE9120 SATA 6Gb/s Controller";
			case 0x1b4b9123: return "88SE9123 PCIe SATA 6.0 Gb/s controller";
			case 0x1b4b9125: return "88SE9125 PCIe SATA 6.0 Gb/s controller";
			case 0x1b4b9128: return "88SE9128 PCIe SATA 6 Gb/s RAID controller";
			case 0x1b4b9130: return "88SE9128 PCIe SATA 6 Gb/s RAID controller with HyperDuo";
			case 0x1b4b9172: return "88SE9172 SATA 6Gb/s Controller";
			case 0x1b4b9178: return "88SE9170 PCIe SATA 6Gb/s Controller";
			case 0x1b4b917a: return "88SE9172 SATA III 6Gb/s RAID Controller";
			case 0x1b4b9182: return "88SE9182 PCIe 2.0 x2 2-port SATA 6 Gb/s Controller";
			case 0x1b4b9183: return "88SS9183 PCIe SSD Controller";
			case 0x1b4b9192: return "88SE9172 SATA III 6Gb/s RAID Controller";
			case 0x1b4b91a0: return "88SE912x SATA 6Gb/s Controller [IDE mode]";
			case 0x1b4b91a4: return "88SE912x IDE Controller";
			case 0x1b4b9215: return "88SE9215 PCIe 2.0 x1 4-port SATA 6 Gb/s Controller";
			case 0x1b4b9220: return "88SE9220 PCIe 2.0 x2 2-port SATA 6 Gb/s RAID Controller";
			case 0x1b4b9230: return "88SE9230 PCIe 2.0 x2 4-port SATA 6 Gb/s RAID Controller";
			case 0x1b4b9235: return "88SE9235 PCIe 2.0 x2 4-port SATA 6 Gb/s Controller";
			case 0x1b4b9445: return "88SE9445 PCIe 2.0 x4 4-Port SAS/SATA 6 Gbps RAID Controller";
			case 0x1b4b9480: return "88SE9480 SAS/SATA 6Gb/s RAID controller";
			case 0x1b4b9485: return "88SE9485 SAS/SATA 6Gb/s controller";
			case 0x1b5518f6: return "Dual DVB Universal CI card";
			case 0x1b5518f7: return "Dual DVB Universal CI card rev 1.4";
			case 0x1b552a2c: return "Dual DVB-S2-CI card";
			case 0x1b55e2e4: return "Dual DVB-T/C-CI RF card";
			case 0x1b55e5f4: return "MPEG2 and H264 Encoder-Transcoder";
			case 0x1b55f1c4: return "Dual ASI-RX/TX-CI card";
			case 0x1b660007: return "DELTA-3G-elp-d";
			case 0x1b6f7023: return "EJ168 USB 3.0 Host Controller";
			case 0x1b6f7052: return "EJ188/EJ198 USB 3.0 Host Controller";
			case 0x1b731000: return "FL1000G USB 3.0 Host Controller";
			case 0x1b731009: return "FL1009 USB 3.0 Host Controller";
			case 0x1b731100: return "FL1100 USB 3.0 Host Controller";
			case 0x1b740115: return "D115P/D115E Single-port E1/T1 card";
			case 0x1b74d130: return "D130P/D130E Single-port E1/T1 card (3rd GEN)";
			case 0x1b74d210: return "D210P/D210E Dual-port E1/T1 card(2nd generation)";
			case 0x1b74d230: return "D230 Dual-port E1/T1 card (2nd generation)";
			case 0x1b74d410: return "D410/430 Quad-port E1/T1 card";
			case 0x1b74d430: return "D410/430 Quad-port E1/T1 card";
			case 0x1b851041: return "RevoDrive 3 X2 PCI-Express SSD 240 GB (Marvell Controller)";
			case 0x1b856018: return "RD400/400A SSD";
			case 0x1b858788: return "RevoDrive Hybrid";
			case 0x1b94e400: return "PX14400 Dual Xilinx Virtex5 based Digitizer";
			case 0x1b962200: return "Ultrastar DC SN630 NVMe SSD";
			case 0x1b962201: return "Ultrastar DC SN630 NVMe SSD";
			case 0x1b962300: return "Ultrastar DC SN840 NVMe SSD";
			case 0x1b962400: return "Ultrastar DC SN640 NVMe SSD";
			case 0x1b962401: return "Ultrastar DC SN640 NVMe SSD";
			case 0x1b962402: return "Ultrastar DC SN640 NVMe SSD";
			case 0x1b962404: return "Ultrastar DC SN640 NVMe SSD";
			case 0x1b962500: return "Ultrastar DC SN840 NVMe SSD";
			case 0x1b962600: return "Ultrastar DC ZN540 ZNS NVMe SSD";
			case 0x1b963714: return "PC SN730 NVMe SSD";
			case 0x1b963734: return "PC SN730 NVMe SSD";
			case 0x1badc001: return "XpressGXA10-LP1150";
			case 0x1badc002: return "XpressGXA10-LP1151";
			case 0x1bb00002: return "OmniCube Accelerator OA-3000";
			case 0x1bb00010: return "OmniCube Accelerator OA-3000-2";
			case 0x1bb1005d: return "Nytro PCIe Flash Storage";
			case 0x1bb10100: return "Nytro Flash Storage";
			case 0x1bb15012: return "FireCuda 510 SSD";
			case 0x1bb15016: return "FireCuda 520 SSD";
			case 0x1bb34304: return "BC-04120A MPEG4 4 port video encoder / decoder";
			case 0x1bb34309: return "BC-08240A MPEG4 4 port video encoder / decoder";
			case 0x1bb34310: return "BC-16480A MPEG4 16 port video encoder / decoder";
			case 0x1bb34e04: return "BC-04120A 4 port MPEG4 video encoder / decoder";
			case 0x1bb34e09: return "BC-08240A 8 port MPEG4 video encoder / decoder";
			case 0x1bb34e10: return "BC-16480A 16 port MPEG4 video encoder / decoder";
			case 0x1bb35304: return "BC-H04120A 4 port H.264 video and audio encoder / decoder";
			case 0x1bb35308: return "BC-H08240A 8 port H.264 video and audio encoder / decoder";
			case 0x1bb35310: return "BC-H16480A 16 port H.264 video and audio encoder / decoder";
			case 0x1bbf0003: return "MAX3";
			case 0x1bbf0004: return "MAX4";
			case 0x1bc01001: return "PCIe 3TG6-P Controller";
			case 0x1bc01002: return "PCIe 3TE6 Controller";
			case 0x1bc01160: return "PCIe 3TE2 Controller";
			case 0x1bc01321: return "PCIe 4TG-P Controller";
			case 0x1bc01322: return "PCIe 4TE Controller";
			case 0x1bc02262: return "PCIe 3TG3-P Controller";
			case 0x1bc05208: return "PCIe 3TE7 Controller";
			case 0x1bc05216: return "PCIe 3TE8 Controller";
			case 0x1bc05236: return "PCIe 4TG2-P Controller";
			case 0x1bcf001c: return "Vector Engine 1.0";
			case 0x1bd01001: return "Mx5 PMC/XMC Databus Interface Card";
			case 0x1bd01002: return "PM1553-5 (PC/104+ MIL-STD-1553 Interface Card)";
			case 0x1bd01004: return "AB3000 Series Rugged Computer";
			case 0x1bd01005: return "PE1000 (Multi-Protocol PCIe/104 Interface Card)";
			case 0x1bd01006: return "webCS Wireless Aircraft Communications Server";
			case 0x1bd01007: return "AB3000 Series Rugged Computer (Series N)";
			case 0x1bd01008: return "ME1000 mPCIe Avionics Interface Card";
			case 0x1bd0100a: return "NG1 Series Avionics Converter";
			case 0x1bd01101: return "OmniBus II PCIe Multi-Protocol Interface Card";
			case 0x1bd01102: return "OmniBusBox II Multi-Protocol Interface Core";
			case 0x1bd01103: return "OmniBus II cPCIe/PXIe Multi-Protocol Interface Card";
			case 0x1bd01200: return "NG3 Series Mil-Std-1553 Interface";
			case 0x1bd01201: return "NG3 Series ARINC 429 Interface";
			case 0x1bd01202: return "NG3 Series Avionics Discrete & Serial Interface";
			case 0x1bd01203: return "NG3 Series Avionics Discrete Interface";
			case 0x1bd40911: return "Arria10_PCIe_F10A1150";
			case 0x1bee0003: return "CAN-IB200/PCIe";
			case 0x1bef0011: return "MIPS SoC PCI Express Port";
			case 0x1bf40001: return "SentinelEX";
			case 0x1bf47011: return "RX0xxx";
			case 0x1c094254: return "10G-PCIE3-8D-2S";
			case 0x1c094255: return "10G-PCIE3-8D-Q";
			case 0x1c094256: return "10G-PCIE3-8D-2S";
			case 0x1c094258: return "10G-PCIE3-8E-2S Network Adapter";
			case 0x1c094260: return "10G-PCIE3-8E-4S Network Adapter";
			case 0x1c094261: return "10G-PCIE3-8E-4S Network Adapter";
			case 0x1c094262: return "10G-PCIE3-8E-4S Network Adapter";
			case 0x1c094263: return "10G-PCIE3-8E-4S Network Adapter";
			case 0x1c094264: return "10G-PCIE3-8E-2S Network Adapter";
			case 0x1c094265: return "10G-PCIE3-8E-2S Network Adapter";
			case 0x1c095000: return "25G-PCIE3-8A-2S Security Intelligent Adapter";
			case 0x1c095001: return "25G-PCIE3-8B-2S Security Intelligent Adapter";
			case 0x1c1c0001: return "82C101";
			case 0x1c1f0015: return "FD842";
			case 0x1c1f0019: return "FD722";
			case 0x1c1f001a: return "FD788";
			case 0x1c1f001b: return "FD720";
			case 0x1c1f001c: return "FD922";
			case 0x1c1f001d: return "Vega";
			case 0x1c1f001f: return "FD940";
			case 0x1c280122: return "M6e PCI Express SSD [Marvell 88SS9183]";
			case 0x1c2c000a: return "Capture";
			case 0x1c2c000f: return "SmartNIC";
			case 0x1c2c00a0: return "FBC4G Capture 4x1Gb [Herculaneum]";
			case 0x1c2c00a1: return "FBC4XG Capture 4x10Gb [Ancona]";
			case 0x1c2c00a2: return "FBC8XG Capture 8x10Gb [Livorno]";
			case 0x1c2c00a3: return "FBC2XG Capture 2x10Gb [Genoa]";
			case 0x1c2c00a4: return "FBC4XGG3 Capture 4x10Gb [Livigno]";
			case 0x1c2c00a5: return "FBC2XLG Capture 2x40Gb [Livorno]";
			case 0x1c2c00a6: return "FBC1CG Capture 1x100Gb";
			case 0x1c2c00a9: return "FBC2XGHH Capture 2x10Gb [Latina]";
			case 0x1c2c00ad: return "FBC2CGG3HL Capture 2x100Gb [Padua]";
			case 0x1c2c00af: return "Capture slave device";
			case 0x1c2c00e0: return "PacketMover 2x100Gb [Savona]";
			case 0x1c2c00e1: return "PacketMover 2x100Gb [Tivoli]";
			case 0x1c2c00e3: return "PacketMover 2x10Gb [Tivoli]";
			case 0x1c2c00e5: return "PacketMover 2x10Gb [Corfu]";
			case 0x1c2c1000: return "SmartNIC N5010 4x100Gb";
			case 0x1c2c1001: return "SmartNIC N5011 w/2xE810 4x100Gb";
			case 0x1c2ca000: return "FBC2CGG3 Capture 2x40Gb [Mango_02]";
			case 0x1c2ca001: return "FBC2CGG3 Capture 2x100Gb [Mango_02]";
			case 0x1c2ca003: return "FBC2CGG3 Capture 16x10Gb [Mango]";
			case 0x1c2ca007: return "FBC2CGG3 Capture 2x40Gb [Mango]";
			case 0x1c2ca008: return "FBC2CGG3 Capture 2x25Gb [Mango]";
			case 0x1c2ca009: return "FBC2CGG3 Capture 16x10Gb [Mango]";
			case 0x1c2ca00a: return "FBC2CGG3 Capture 8x10Gb [Mango]";
			case 0x1c2ca00e: return "FB2CG Capture 2x100Gb [Savona]";
			case 0x1c2ca00f: return "FB2CG Capture 2x40Gb [Savona]";
			case 0x1c2ca010: return "FB2CGHH Capture 2x40Gb [Tivoli]";
			case 0x1c2ca011: return "FB2CG Capture 2x25Gb [Savona]";
			case 0x1c2ca012: return "FB2CG Capture 8x10Gb [Savona]";
			case 0x1c2ca013: return "FB2CGHH Capture 2x25Gb [Tivoli]";
			case 0x1c2ca014: return "FB2CGHH Capture 8x10Gb [Tivoli]";
			case 0x1c2ca015: return "FB2CGHH Capture 2x100Gb [Tivoli]";
			case 0x1c360001: return "Gigabit Ethernet Adapter";
			case 0x1c360002: return "SFP+ 10G Ethernet Adapter";
			case 0x1c3b0200: return "Telas2";
			case 0x1c3b0300: return "Telas 2.V";
			case 0x1c448000: return "8000 Storage IO Controller";
			case 0x1c580003: return "Ultrastar SN100 Series NVMe SSD";
			case 0x1c580023: return "Ultrastar SN200 Series NVMe SSD";
			case 0x1c5c1283: return "PC300 NVMe Solid State Drive 256GB";
			case 0x1c5c1284: return "PC300 NVMe Solid State Drive 512GB";
			case 0x1c5c1285: return "PC300 NVMe Solid State Drive 1TB";
			case 0x1c5c1327: return "BC501 NVMe Solid State Drive";
			case 0x1c5c1339: return "BC511";
			case 0x1c5c1504: return "SC300 512GB M.2 2280 SATA Solid State Drive";
			case 0x1c5c1527: return "PC401 NVMe Solid State Drive 256GB";
			case 0x1c5c243b: return "PE6110 NVMe Solid State Drive";
			case 0x1c5c2839: return "PE8000 Series NVMe Solid State Drive";
			case 0x1c5f000d: return "PBlaze5 520/526";
			case 0x1c5f003d: return "PBlaze5 920/926";
			case 0x1c5f003e: return "PBlaze6 6920";
			case 0x1c5f0540: return "PBlaze4 NVMe SSD";
			case 0x1c5f0550: return "PBlaze5 700/900";
			case 0x1c5f0555: return "PBlaze5 510/516";
			case 0x1c5f0557: return "PBlaze5 910/916";
			case 0x1c630008: return "K1927BB1Ya [EC8430] Angara Interconnection Network Adapter";
			case 0x1c7e0200: return "zFAS Debug Port";
			case 0x1c7f5100: return "EB5100";
			case 0x1c8a0001: return "Hunter PCI Express";
			case 0x1cb08266: return "Andalusia Series SSD";
			case 0x1cb0d000: return "Venice NVMe SSD";
			case 0x1cb50002: return "Clarett";
			case 0x1cc18201: return "XPG SX8200 Pro PCIe Gen3x4 M.2 2280 Solid State Drive";
			case 0x1cc417ab: return "NVMe 256G SSD device";
			case 0x1cc50100: return "CAN-PCIe-02";
			case 0x1cc70200: return "RMS-200";
			case 0x1cc70250: return "RMS-250";
			case 0x1ccf0001: return "TAC-2 Thunderbolt Audio Converter";
			case 0x1cd20301: return "Simulyzer-RT CompactPCI Serial DIO-1 card";
			case 0x1cd20302: return "Simulyzer-RT CompactPCI Serial PSI5-ECU-1 card";
			case 0x1cd20303: return "Simulyzer-RT CompactPCI Serial PSI5-SIM-1 card";
			case 0x1cd20304: return "Simulyzer-RT CompactPCI Serial PWR-ANA-1 card";
			case 0x1cd20305: return "Simulyzer-RT CompactPCI Serial CAN-1 card";
			case 0x1cd20306: return "Simulyzer-RT CompactPCI Serial CAN-2 card (CAN-FD)";
			case 0x1cd20307: return "Simulyzer-RT CompactPCI Serial DIO-2 card [Xilinx Zynq UltraScale+]";
			case 0x1cd70010: return "Pro Capture Endpoint";
			case 0x1cd70014: return "PRO CAPTURE AIO 4K PLUS";
			case 0x1cd70017: return "PRO CAPTURE AIO 4K";
			case 0x1cd70051: return "Eco Capture Dual HDMI M.2";
			case 0x1cd70052: return "Eco Capture HDMI 4K M.2";
			case 0x1cd70053: return "Eco Capture Dual SDI M.2";
			case 0x1cd70054: return "Eco Capture Quad SDI M.2";
			case 0x1ce40001: return "ExaNIC X4";
			case 0x1ce40002: return "ExaNIC X2";
			case 0x1ce40003: return "ExaNIC X10";
			case 0x1ce40004: return "ExaNIC X10-GM";
			case 0x1ce40005: return "ExaNIC X40";
			case 0x1ce40006: return "ExaNIC X10-HPT";
			case 0x1ce40007: return "ExaNIC X40";
			case 0x1ce40008: return "ExaNIC V5P";
			case 0x1ce40009: return "ExaNIC X25";
			case 0x1ce4000a: return "ExaNIC X100";
			case 0x1ce4000b: return "ExaNIC V9P";
			case 0x1ce4000c: return "ExaNIC V9P-3";
			case 0x1ce40100: return "ExaDISK FX1";
			case 0x1d0f8061: return "NVMe EBS Controller";
			case 0x1d0fcd01: return "NVMe SSD Controller";
			case 0x1d0fec20: return "Elastic Network Adapter (ENA)";
			case 0x1d0fefa0: return "Elastic Fabric Adapter (EFA)";
			case 0x1d0fefa1: return "Elastic Fabric Adapter (EFA)";
			case 0x1d17070f: return "ZX-100 PCI Express Root Port";
			case 0x1d170710: return "ZX-100/ZX-200 PCI Express Root Port";
			case 0x1d170711: return "ZX-100/ZX-200 PCI Express Root Port";
			case 0x1d170712: return "ZX-100/ZX-200 PCI Express Root Port";
			case 0x1d170713: return "ZX-100/ZX-200 PCI Express Root Port";
			case 0x1d170714: return "ZX-100/ZX-200 PCI Express Root Port";
			case 0x1d170715: return "ZX-100/ZX-200 PCI Express Root Port";
			case 0x1d170716: return "ZX-D PCI Express Root Port";
			case 0x1d170717: return "ZX-D/ZX-E PCI Express Root Port";
			case 0x1d170718: return "ZX-D/ZX-E PCI Express Root Port";
			case 0x1d170719: return "ZX-D/ZX-E PCI Express Root Port";
			case 0x1d17071a: return "ZX-D/ZX-E PCI Express Root Port";
			case 0x1d17071b: return "ZX-D/ZX-E PCI Express Root Port";
			case 0x1d17071c: return "ZX-D/ZX-E PCI Express Root Port";
			case 0x1d17071d: return "ZX-D/ZX-E PCI Express Root Port";
			case 0x1d17071e: return "ZX-D/ZX-E PCI Express Root Port";
			case 0x1d17071f: return "ZX-200 Upstream Port of PCI Express Switch";
			case 0x1d170720: return "ZX-200 PCIE RC6 controller";
			case 0x1d170721: return "ZX-200 Downstream Port of PCI Express Switch";
			case 0x1d170722: return "ZX-200 PCIE P2C bridge";
			case 0x1d171000: return "ZX-D Standard Host Bridge";
			case 0x1d171001: return "ZX-D/ZX-E Miscellaneous Bus";
			case 0x1d171003: return "ZX-E Standard Host Bridge";
			case 0x1d173001: return "ZX-100 Standard Host Bridge";
			case 0x1d17300a: return "ZX-100 Miscellaneous Bus";
			case 0x1d173038: return "ZX-100/ZX-200/ZX-E Standard Universal PCI to USB Host Controller";
			case 0x1d173104: return "ZX-100/ZX-200/ZX-E Standard Enhanced PCI to USB Host Controller";
			case 0x1d1731b0: return "ZX-100/ZX-D Standard Host Bridge";
			case 0x1d1731b1: return "ZX-100/ZX-D Standard Host Bridge";
			case 0x1d1731b2: return "ZX-100/ZX-D DRAM Controller";
			case 0x1d1731b3: return "ZX-100/ZX-D Power Management Controller";
			case 0x1d1731b4: return "ZX-100/ZX-D I/O APIC";
			case 0x1d1731b5: return "ZX-100/ZX-D Scratch Device";
			case 0x1d1731b7: return "ZX-100/ZX-D/ZX-E Standard Host Bridge";
			case 0x1d1731b8: return "ZX-100/ZX-D PCI to PCI Bridge";
			case 0x1d173288: return "ZX-100/ZX-D/ZX-E High Definition Audio Controller";
			case 0x1d17345b: return "ZX-100/ZX-D/ZX-E Miscellaneous Bus";
			case 0x1d173a02: return "ZX-100 C-320 GPU";
			case 0x1d173a03: return "ZX-D C-860 GPU";
			case 0x1d173a04: return "ZX-E C-960 GPU";
			case 0x1d179002: return "ZX-100/ZX-200 EIDE Controller";
			case 0x1d179003: return "ZX-100/ZX-E EIDE Controller";
			case 0x1d179045: return "ZX-100/ZX-D/ZX-E RAID Accelerator 0";
			case 0x1d179046: return "ZX-D/ZX-E RAID Accelerator 1";
			case 0x1d179083: return "ZX-100/ZX-200/ZX-E StorX AHCI Controller";
			case 0x1d179084: return "ZX-100 StorX AHCI Controller";
			case 0x1d179100: return "ZX-200 Cross bus";
			case 0x1d179101: return "ZX-200 Traffic Controller";
			case 0x1d179141: return "ZX-100 High Definition Audio Controller";
			case 0x1d179142: return "ZX-D High Definition Audio Controller";
			case 0x1d179144: return "ZX-E High Definition Audio Controller";
			case 0x1d179180: return "ZX-200 Networking Gigabit Ethernet Adapter";
			case 0x1d179202: return "ZX-100 USB eXtensible Host Controller";
			case 0x1d179203: return "ZX-200 USB eXtensible Host Controller";
			case 0x1d179204: return "ZX-E USB eXtensible Host Controller";
			case 0x1d179286: return "ZX-D eMMC Host Controller";
			case 0x1d179300: return "ZX-D/ZX-E eSPI Host Controller";
			case 0x1d1795d0: return "ZX-100 Universal SD Host Controller";
			case 0x1d17f410: return "ZX-100/ZX-D/ZX-E PCI Com Port";
			case 0x1d180001: return "Fireface UFX+";
			case 0x1d1d1f1f: return "QEMU NVM Express LightNVM Controller";
			case 0x1d1d2807: return "8800 series NVMe SSD";
			case 0x1d221380: return "Cloud Storage Device";
			case 0x1d260040: return "Turbocard2 Accelerator";
			case 0x1d260080: return "Open Network Interface Card 80G";
			case 0x1d2600c0: return "Turbocard3 Accelerator";
			case 0x1d260140: return "Open Network Interface Card 40G";
			case 0x1d26e004: return "AB01/EMB01 Development Board";
			case 0x1d370013: return "PM3";
			case 0x1d370014: return "PM4";
			case 0x1d370015: return "PM4edge";
			case 0x1d370016: return "PM4edge User Device";
			case 0x1d44a400: return "PM2x24/PM3224";
			case 0x1d6504de: return "Taurus/McKinley";
			case 0x1d6a0001: return "AQC107 NBase-T/IEEE 802.3bz Ethernet Controller [AQtion]";
			case 0x1d6a00b1: return "AQC100 10G Ethernet MAC controller [AQtion]";
			case 0x1d6a07b1: return "AQC107 NBase-T/IEEE 802.3bz Ethernet Controller [AQtion]";
			case 0x1d6a08b1: return "AQC108 NBase-T/IEEE 802.3bz Ethernet Controller [AQtion]";
			case 0x1d6a11b1: return "AQC111 NBase-T/IEEE 802.3bz Ethernet Controller [AQtion]";
			case 0x1d6a12b1: return "AQC112 NBase-T/IEEE 802.3bz Ethernet Controller [AQtion]";
			case 0x1d6a87b1: return "AQC107 NBase-T/IEEE 802.3bz Ethernet Controller [AQtion]";
			case 0x1d6ad107: return "AQC107 NBase-T/IEEE 802.3bz Ethernet Controller [AQtion]";
			case 0x1d6ad108: return "AQC108 NBase-T/IEEE 802.3bz Ethernet Controller [AQtion]";
			case 0x1d6c1001: return "A5PL-E1";
			case 0x1d6c1002: return "A5PL-E7";
			case 0x1d6c1003: return "S5PEDS-AB";
			case 0x1d6c1004: return "KC705-K325";
			case 0x1d6c1005: return "ZC706-Z045";
			case 0x1d6c1006: return "KCU105-KU040";
			case 0x1d6c1007: return "XUSP3S-VU095 [Jasper]";
			case 0x1d6c1008: return "XUSPL4-VU065 [Mustang UltraScale]";
			case 0x1d6c1009: return "XUSPL4-VU3P [Mustang UltraScale+]";
			case 0x1d6c100a: return "A10PL4-A10GX115";
			case 0x1d6c100b: return "K35-2SFP";
			case 0x1d6c100c: return "K35-4SFP";
			case 0x1d6c100d: return "AR-ARKA-FX0 [Arkville 32B DPDK Data Mover]";
			case 0x1d6c100e: return "AR-ARKA-FX1 [Arkville 64B DPDK Data Mover]";
			case 0x1d6c100f: return "AR-ARKA-FX1 [Arkville 64B DPDK Data Mover for Versal]";
			case 0x1d6c1010: return "AR-ARKA-FX1 [Arkville 64B DPDK Data Mover for Agilex]";
			case 0x1d6c1011: return "AR-MAN-U50 [Manitou Class Accelerator for U50]";
			case 0x1d6c1012: return "AR-MAN-U200 [Manitou Class Accelerator for U200]";
			case 0x1d6c1013: return "AR-MAN-U250 [Manitou Class Accelerator for U250]";
			case 0x1d6c1014: return "AR-MAN-U280 [Manitou Class Accelerator for U280]";
			case 0x1d6c1015: return "AR-ARK-BBDEV-FX0 [Arkville 32B DPDK Baseband Device]";
			case 0x1d6c1016: return "AR-ARK-BBDEV-FX1 [Arkville 64B DPDK Baseband Device]";
			case 0x1d6c1017: return "AR-ARK-FX1 [Arkville 64B Multi-Homed Primary Endpoint]";
			case 0x1d6c1018: return "AR-ARK-FX1 [Arkville 64B Multi-Homed Secondary Endpoint]";
			case 0x1d6c1019: return "AR-ARK-FX1 [Arkville 64B Multi-Homed Tertiary Endpoint]";
			case 0x1d6c101a: return "AR-ARK-SRIOV-FX0 [Arkville 32B Primary Physical Function]";
			case 0x1d6c101b: return "AR-ARK-SRIOV-FX1 [Arkville 64B Primary Physical Function]";
			case 0x1d6c101c: return "AR-ARK-SRIOV-VF [Arkville Virtual Function]";
			case 0x1d6c4200: return "A5PL-E1-10GETI [10 GbE Ethernet Traffic Instrument]";
			case 0x1d781512: return "TAI NVMe Controller";
			case 0x1d7c0001: return "HyperWire Adapter";
			case 0x1d820101: return "Codensity D400 SSD";
			case 0x1d820102: return "Codensity D408 PCIe Gen4 NVMe SSD";
			case 0x1d820202: return "Codensity T408 Video Encoding-Decoding Accelerator";
			case 0x1d870100: return "RK3399 PCI Express Root Port";
			case 0x1d871808: return "RK1808 Neural Network Processor Card";
			case 0x1d873566: return "RK3568 Remote Signal Processor";
			case 0x1d941450: return "Root Complex";
			case 0x1d941451: return "I/O Memory Management Unit";
			case 0x1d941452: return "PCIe Dummy Host Bridge";
			case 0x1d941453: return "PCIE GPP Bridge";
			case 0x1d941454: return "Internal PCIe GPP Bridge 0 to Bus B";
			case 0x1d941455: return "PCIe Dummy Function";
			case 0x1d941456: return "PSPCCP Command DMA Processor";
			case 0x1d941458: return "10 Gb Ethernet Controller Port 0/Port1";
			case 0x1d941459: return "10 Gb Ethernet Controller Port 2/Port3";
			case 0x1d94145a: return "PCIe Dummy Function";
			case 0x1d94145b: return "PCIE Non-Transparent Bridge";
			case 0x1d94145c: return "USB3 XHCI";
			case 0x1d94145d: return "Switch upstream in PCIe";
			case 0x1d94145e: return "Switch downstream in PCIe";
			case 0x1d94145f: return "USB 3.0 Host controller";
			case 0x1d941460: return "Data Fabric: Device 18h; Function 0";
			case 0x1d941461: return "Data Fabric: Device 18h; Function 1";
			case 0x1d941462: return "Data Fabric: Device 18h; Function 2";
			case 0x1d941463: return "Data Fabric: Device 18h; Function 3";
			case 0x1d941464: return "Data Fabric: Device 18h; Function 4";
			case 0x1d941465: return "Data Fabric: Device 18h; Function 5";
			case 0x1d941466: return "Data Fabric: Device 18h; Function 6";
			case 0x1d941467: return "Data Fabric: Device 18h; Function 7";
			case 0x1d941468: return "NTBCCP";
			case 0x1d947901: return "FCH SATA Controller [AHCI mode]";
			case 0x1d947904: return "FCH SATA Controller [AHCI mode]";
			case 0x1d947906: return "FCH SD Flash Controller";
			case 0x1d94790b: return "FCH SMBus Controller";
			case 0x1d94790e: return "FCH LPC Bridge";
			case 0x1d950001: return "Colossus GC2 [C2]";
			case 0x1d950002: return "Colossus GC1 [S1]";
			case 0x1d972263: return "SM2263EN/SM2263XT-based OEM SSD";
			case 0x1d9b0010: return "Networking DOM Engine";
			case 0x1d9b0011: return "IO Bridge";
			case 0x1da2e26a: return "Radeon R7 250";
			case 0x1da30001: return "HL-1000 AI Inference Accelerator [Goya]";
			case 0x1da31000: return "HL-2000 AI Training Accelerator [Gaudi]";
			case 0x1da31010: return "HL-2000 AI Training Accelerator [Gaudi secured]";
			case 0x1dbf0401: return "StarDragon4800 PCI Express Root Port";
			case 0x1dd80002: return "DSC2 Elba Upstream Port";
			case 0x1dd81000: return "DSC Capri Upstream Port";
			case 0x1dd81001: return "DSC Virtual Downstream Port";
			case 0x1dd81002: return "DSC Ethernet Controller";
			case 0x1dd81003: return "DSC Ethernet Controller VF";
			case 0x1dd81004: return "DSC Management Controller";
			case 0x1dd81007: return "DSC Storage Accelerator";
			case 0x1de00000: return "TSP100 Tensor Streaming Processor";
			case 0x1de10391: return "TRM-S1040 [DC-315 / DC-395 series]";
			case 0x1de12020: return "DC-390 Series SCSI Adapter [AMD Am53C974]";
			case 0x1de1690c: return "690c";
			case 0x1de1dc29: return "DC290";
			case 0x1de51000: return "IO Memory Controller";
			case 0x1de52000: return "NoLoad Hardware Development Kit";
			case 0x1de53000: return "eBPF-based PCIe Accelerator";
			case 0x1defe005: return "eMAG PCI Express Root Port 0";
			case 0x1defe006: return "eMAG PCI Express Root Port 1";
			case 0x1defe007: return "eMAG PCI Express Root Port 2";
			case 0x1defe008: return "eMAG PCI Express Root Port 3";
			case 0x1defe009: return "eMAG PCI Express Root Port 4";
			case 0x1defe00a: return "eMAG PCI Express Root Port 5";
			case 0x1defe00b: return "eMAG PCI Express Root Port 6";
			case 0x1defe00c: return "eMAG PCI Express Root Port 7";
			case 0x1defe100: return "Altra PCI Express Root Complex A";
			case 0x1defe101: return "Altra PCI Express Root Port a0";
			case 0x1defe102: return "Altra PCI Express Root Port a1";
			case 0x1defe103: return "Altra PCI Express Root Port a2";
			case 0x1defe104: return "Altra PCI Express Root Port a3";
			case 0x1defe105: return "Altra PCI Express Root Port a4";
			case 0x1defe106: return "Altra PCI Express Root Port a5";
			case 0x1defe107: return "Altra PCI Express Root Port a6";
			case 0x1defe108: return "Altra PCI Express Root Port a7";
			case 0x1defe110: return "Altra PCI Express Root Complex B";
			case 0x1defe111: return "Altra PCI Express Root Port b0";
			case 0x1defe112: return "Altra PCI Express Root Port b1";
			case 0x1defe113: return "Altra PCI Express Root Port b2";
			case 0x1defe114: return "Altra PCI Express Root Port b3";
			case 0x1defe115: return "Altra PCI Express Root Port b4";
			case 0x1defe116: return "Altra PCI Express Root Port b5";
			case 0x1defe117: return "Altra PCI Express Root Port b6";
			case 0x1defe118: return "Altra PCI Express Root Port b7";
			case 0x1df30201: return "ACE-NIC40 Programmable Network Accelerator";
			case 0x1df30202: return "ACE-NIC50 Programmable Network Accelerator";
			case 0x1df30203: return "ACE-NIC100 Programmable Network Accelerator";
			case 0x1df30204: return "ACE-NIC-NID Programmable Network Accelerator";
			case 0x1df30205: return "ACE-NIC250 Programmable Network Accelerator";
			case 0x1df30206: return "ACE-NIC200 Programmable Network Accelerator";
			case 0x1df30207: return "ACE-NIC50RN Programmable Network Accelerator";
			case 0x1df30208: return "ACE-NIC100RN Programmable Network Accelerator";
			case 0x1df70001: return "ml605";
			case 0x1df70002: return "alst4";
			case 0x1df70003: return "alst4x";
			case 0x1dfc1181: return "TDM 8 Port E1/T1/J1 Adapter";
			case 0x1e0f0007: return "NVMe SSD Controller Cx6";
			case 0x1e0f0009: return "NVMe SSD";
			case 0x1e240101: return "Acorn CLE-101";
			case 0x1e240215: return "Acorn CLE-215";
			case 0x1e24021f: return "Acorn CLE-215+";
			case 0x1e241525: return "Xilinx BCU-1525";
			case 0x1e241533: return "ForestKitten 33";
			case 0x1e241633: return "JCM33";
			case 0x1e241635: return "JCM35";
			case 0x1e360001: return "T10 [CloudBlazer]";
			case 0x1e360002: return "T11 [CloudBlazer]";
			case 0x1e360003: return "T10(QSFP-DD) [CloudBlazer]";
			case 0x1e368011: return "I10 [CloudBlazer]";
			case 0x1e368012: return "I10L [CloudBlazer]";
			case 0x1e380102: return "Xplorer X1600";
			case 0x1e3b1098: return "Haishen NVMe SSD";
			case 0x1e491013: return "PC210";
			case 0x1e4b1001: return "NVMe SSD Controller MAP1001";
			case 0x1e4b1002: return "NVMe SSD Controller MAP1002";
			case 0x1e4b1003: return "NVMe SSD Controller MAP1003";
			case 0x1e4b1201: return "NVMe SSD Controller MAP1201";
			case 0x1e4b1202: return "NVMe SSD Controller MAP1202";
			case 0x1e4b1601: return "NVMe SSD Controller MAP1601";
			case 0x1e4c0010: return "APU [Leda]";
			case 0x1e570100: return "The device has already been deleted.";
			case 0x1e590001: return "MinION Mk1C";
			case 0x1e602864: return "Hailo-8 AI Processor";
			case 0x1e7cbca1: return "AKD1000 Neural Network Coprocessor [Akida]";
			case 0x1e890002: return "Quantis-PCIe-40M";
			case 0x1e890003: return "Quantis-PCIe-240M";
			case 0x1ea02a16: return "Cloud Intelligent Inference Controller";
			case 0x1ea7223a: return "Typhon+ PCIe to Gen-Z Bridge";
			case 0x1eab300a: return "NVMe SSD Controller 300A";
			case 0x1eab300b: return "NVMe SSD Controller 300B";
			case 0x1eb11001: return "Video Accelerator";
			case 0x1ebd0101: return "Seirios 2063 Video Codec";
			case 0x1ed80101: return "FG4 PCIe Frame Grabber";
			case 0x1fc00300: return "E2200 Dual E1/Rawpipe Card";
			case 0x1fc00301: return "C5400 SHDSL/E1 Card";
			case 0x1fc1000d: return "IBA6110 InfiniBand HCA";
			case 0x1fc10010: return "IBA6120 InfiniBand HCA";
			case 0x1fc93009: return "10-Giga TOE SmartNIC";
			case 0x1fc93010: return "10-Giga TOE SmartNIC";
			case 0x1fc93014: return "10-Giga TOE SmartNIC 2-Port";
			case 0x1fc93110: return "10-Giga TOE Single Port SmartNIC";
			case 0x1fc93114: return "10-Giga TOE Dual Port Low Profile SmartNIC";
			case 0x1fc93310: return "10-Giga TOE SFP+ Single Port SmartNIC";
			case 0x1fc93314: return "10-Giga TOE Dual Port Low Profile SmartNIC";
			case 0x1fc94010: return "TN4010 Clean SROM";
			case 0x1fc94020: return "TN9030 10GbE CX4 Ethernet Adapter";
			case 0x1fc94022: return "TN9310 10GbE SFP+ Ethernet Adapter";
			case 0x1fc94024: return "TN9210 10GBase-T Ethernet Adapter";
			case 0x1fc94025: return "TN9510 10GBase-T/NBASE-T Ethernet Adapter";
			case 0x1fc94026: return "TN9610 10GbE SFP+ Ethernet Adapter";
			case 0x1fc94027: return "TN9710P 10GBase-T/NBASE-T Ethernet Adapter";
			case 0x1fc94527: return "TN9710Q 5GBase-T/NBASE-T Ethernet Adapter";
			case 0x1fccf416: return "MS416";
			case 0x1fccfb01: return "MH4LM";
			case 0x1fce0001: return "Spectrum Analyzer PC Card (SAgE)";
			case 0x1fd40001: return "Matrix multiport serial adapter";
			case 0x1fd41999: return "Multiport serial controller";
			case 0x20002800: return "SmartPCI2800 V.92 PCI Soft DFT";
			case 0x20038800: return "LM-I56N";
			case 0x22b822a0: return "Flex Logix InferX X1 Inference Accelerator";
			case 0x23482010: return "8142 100VG/AnyLAN";
			case 0x26460010: return "HyperX Predator PCIe AHCI SSD";
			case 0x26462262: return "KC2000 NVMe SSD";
			case 0x26462263: return "A2000 NVMe SSD";
			case 0x26465008: return "U-SNS8154P3 NVMe SSD";
			case 0x2646500d: return "OM3PDP3 NVMe SSD";
			case 0x29556e61: return "OHCI USB 1.1 controller";
			case 0x31ab1faa: return "ZEW1602 802.11b/g Wireless Adapter";
			case 0x33880013: return "HiNT HC4 PCI to ISDN bridge, Multimedia audio controller";
			case 0x33880014: return "HiNT HC4 PCI to ISDN bridge, Network controller";
			case 0x33880020: return "HB6 Universal PCI-PCI bridge (transparent mode)";
			case 0x33880021: return "HB6 Universal PCI-PCI bridge (non-transparent mode)";
			case 0x33880022: return "HiNT HB4 PCI-PCI Bridge (PCI6150)";
			case 0x33880026: return "HB2 PCI-PCI Bridge";
			case 0x33881014: return "AudioTrak Maya";
			case 0x33881018: return "Audiotrak INCA88";
			case 0x33881019: return "Miditrak 2120";
			case 0x3388101a: return "E.Band [AudioTrak Inca88]";
			case 0x3388101b: return "E.Band [AudioTrak Inca88]";
			case 0x33888011: return "VXPro II Chipset";
			case 0x33888012: return "VXPro II Chipset";
			case 0x33888013: return "VXPro II IDE";
			case 0x3388a103: return "Blackmagic Design DeckLink HD Pro";
			case 0x34421783: return "AS-i 3.0 cPCI Master";
			case 0x34421922: return "AS-i 3.0 PCI Master";
			case 0x37d91138: return "SCHD-PH-8 Phase detector";
			case 0x37d91140: return "VR-12-PCI";
			case 0x37d91141: return "PCI-485(422)";
			case 0x37d91142: return "PCI-CAN2";
			case 0x3d3d0001: return "GLINT 300SX";
			case 0x3d3d0002: return "GLINT 500TX";
			case 0x3d3d0003: return "GLINT Delta";
			case 0x3d3d0004: return "Permedia";
			case 0x3d3d0005: return "Permedia";
			case 0x3d3d0006: return "GLINT MX";
			case 0x3d3d0007: return "3D Extreme";
			case 0x3d3d0008: return "GLINT Gamma G1";
			case 0x3d3d0009: return "Permedia II 2D+3D";
			case 0x3d3d000a: return "GLINT R3";
			case 0x3d3d000c: return "GLINT R3 [Oxygen VX1]";
			case 0x3d3d000d: return "GLint R4 rev A";
			case 0x3d3d000e: return "GLINT Gamma G2";
			case 0x3d3d0011: return "GLint R4 rev B";
			case 0x3d3d0012: return "GLint R5 rev A";
			case 0x3d3d0013: return "GLint R5 rev B";
			case 0x3d3d0020: return "VP10 visual processor";
			case 0x3d3d0022: return "VP10 visual processor";
			case 0x3d3d0024: return "VP9 visual processor";
			case 0x3d3d002c: return "Wildcat Realizm 100/200";
			case 0x3d3d0030: return "Wildcat Realizm 800";
			case 0x3d3d0032: return "Wildcat Realizm 500";
			case 0x3d3d0100: return "Permedia II 2D+3D";
			case 0x3d3d07a1: return "Wildcat III 6210";
			case 0x3d3d07a2: return "Sun XVR-500 Graphics Accelerator";
			case 0x3d3d07a3: return "Wildcat IV 7210";
			case 0x3d3d1004: return "Permedia";
			case 0x3d3d3d04: return "Permedia";
			case 0x3d3dffff: return "Glint VGA";
			case 0x40050300: return "ALS300 PCI Audio Device";
			case 0x40050308: return "ALS300+ PCI Audio Device";
			case 0x40050309: return "PCI Input Controller";
			case 0x40051064: return "ALG-2064";
			case 0x40052064: return "ALG-2064i";
			case 0x40052128: return "ALG-2364A GUI Accelerator";
			case 0x40052301: return "ALG-2301";
			case 0x40052302: return "ALG-2302";
			case 0x40052303: return "AVG-2302 GUI Accelerator";
			case 0x40052364: return "ALG-2364A";
			case 0x40052464: return "ALG-2464";
			case 0x40052501: return "ALG-2564A/25128A";
			case 0x40054000: return "ALS4000 Audio Chipset";
			case 0x40054710: return "ALC200/200P";
			case 0x40331360: return "RTL8139 Ethernet";
			case 0x40400001: return "NXB-10GXSR 10-Gigabit Ethernet PCIe Adapter with SR-XFP optical interface";
			case 0x40400002: return "NXB-10GCX4 10-Gigabit Ethernet PCIe Adapter with CX4 copper interface";
			case 0x40400003: return "NXB-4GCU Quad Gigabit Ethernet PCIe Adapter with 1000-BASE-T interface";
			case 0x40400004: return "BladeCenter-H 10-Gigabit Ethernet High Speed Daughter Card";
			case 0x40400005: return "NetXen Dual Port 10GbE Multifunction Adapter for c-Class";
			case 0x40400024: return "XG Mgmt";
			case 0x40400025: return "XG Mgmt";
			case 0x40400100: return "NX3031 Multifunction 1/10-Gigabit Server Adapter";
			case 0x41440044: return "ADM-XRCIIPro";
			case 0x41500001: return "PCI32TLITE FILSTRUP1 PCI to VME Bridge Controller";
			case 0x41500006: return "PCI32TLITE UART 16550 Opencores";
			case 0x41500007: return "PCI32TLITE CAN Controller Opencores";
			case 0x416c0100: return "AladdinCARD";
			case 0x416c0200: return "CPC";
			case 0x43482273: return "CH351 PCI Dual Serial Port Controller";
			case 0x43483253: return "CH352 PCI Dual Serial Port Controller";
			case 0x43483453: return "CH353 PCI Quad Serial Port Controller";
			case 0x43485053: return "CH352 PCI Serial and Parallel Port Controller";
			case 0x43487053: return "CH353 PCI Dual Serial and Parallel Ports Controller";
			case 0x43487073: return "CH356 PCI Quad Serial and Parallel Ports Controller";
			case 0x43487173: return "CH355 PCI Quad Serial Port Controller";
			case 0x44440016: return "iTVC16 (CX23416) Video Decoder";
			case 0x44440803: return "iTVC15 (CX23415) Video Decoder";
			case 0x4624adc1: return "ADC200ME High speed ADC";
			case 0x4624de01: return "DL200ME High resolution delay line PCI based card";
			case 0x4624de02: return "DL200ME Middle resolution delay line PCI based card";
			case 0x49161960: return "RedCreek PCI adapter";
			case 0x494f0508: return "PCI-IDO-16A FET Output Card";
			case 0x494f0518: return "PCI-IDO-32A FET Output Card";
			case 0x494f0520: return "PCI-IDO-48 FET Output Card";
			case 0x494f0521: return "PCI-IDO-48A FET Output Card";
			case 0x494f0703: return "PCIe-RO-4 Electromechanical Relay Output Card";
			case 0x494f07d0: return "PCIe-IDO-24 FET Output Card";
			case 0x494f0920: return "PCI-IDI-48 Isolated Digital Input Card";
			case 0x494f0bd0: return "PCIe-IDI-24 Isolated Digital Input Card";
			case 0x494f0c50: return "PCI-DIO-24H 1x 8255 Digital Input / Output Card";
			case 0x494f0c51: return "PCI-DIO-24D 1x 8255 Digital Input / Output Card";
			case 0x494f0c52: return "PCIe-DIO-24 1x 8255 Digital Input / Output Card";
			case 0x494f0c53: return "PCIe-DIO-24H 8255 Digital Input / Output Card";
			case 0x494f0c57: return "mPCIe-DIO-24 8255 Digital Input / Output Card";
			case 0x494f0c60: return "PCI-DIO-48H 8255 Digital Input / Output Card";
			case 0x494f0c61: return "PCIe-DIO-48 8255 Digital Input / Output Card";
			case 0x494f0c62: return "P104-DIO-48 8255 Digital Input / Output Card";
			case 0x494f0c68: return "PCI-DIO-72 8255 Digital Input / Output Card";
			case 0x494f0c69: return "P104-DIO-96 8255 Digital Input / Output Card";
			case 0x494f0c70: return "PCI-DIO-96 8255 Digital Input / Output Card";
			case 0x494f0c78: return "PCI-DIO-120 8255 Digital Input / Output Card";
			case 0x494f0dc8: return "PCI-IDIO-16 Isolated Digital Input / FET Output Card";
			case 0x494f0e50: return "PCI-DIO-24S 8255 Digital Input / Output Card";
			case 0x494f0e51: return "PCI-DIO-24H(C) 8255 Digital Input / Output Card";
			case 0x494f0e52: return "PCI-DIO-24D(C) 8255 Digital Input / Output Card";
			case 0x494f0e53: return "PCIe-DIO-24S 8255 Digital Input / Output Card";
			case 0x494f0e54: return "PCIe-DIO-24HS 8255 Digital Input / Output Card";
			case 0x494f0e55: return "PCIe-DIO-24DC 8255 Digital Input / Output Card";
			case 0x494f0e56: return "PCIe-DIO-24DCS 8255 Digital Input / Output Card";
			case 0x494f0e57: return "mPCIe-DIO-24S 8255 Digital Input / Output Card";
			case 0x494f0e60: return "PCI-DIO-48S 2x 8255 Digital Input / Output Card";
			case 0x494f0e61: return "PCIe-DIO-48S 2x 8255 Digital Input / Output Card";
			case 0x494f0e62: return "P104-DIO-48S 2x 8255 Digital Input / Output Card";
			case 0x494f0f00: return "PCI-IIRO-8 Isolated Digital / Relay Output Card";
			case 0x494f0f01: return "LPCI-IIRO-8 Isolated Digital / Relay Output Card";
			case 0x494f0f02: return "PCIe-IIRO-8 Isolated Digital / Relay Output Card";
			case 0x494f0f08: return "PCI-IIRO-16 Isolated Digital / Relay Output Card";
			case 0x494f0f09: return "PCIe-IIRO-16 Isolated Digital / Relay Output Card";
			case 0x494f0fc0: return "PCIe-IDIO-12 Isolated Digital Input / FET Output Card";
			case 0x494f0fc1: return "PCIe-IDI-12 Isolated Digital Input Card";
			case 0x494f0fc2: return "PCIe-IDO-12 FET Output Card";
			case 0x494f0fd0: return "PCIe-IDIO-24 Isolated Digital Input / FET Output Card";
			case 0x494f1050: return "PCI-422/485-2 2x RS422/RS484 Card";
			case 0x494f1051: return "PCIe-COM-2SRJ 2x RS422/RS484 Card w/RJ45 Connectors";
			case 0x494f1052: return "104I-COM-2S 2x RS422/RS484 PCI/104 Board";
			case 0x494f1053: return "mPCIe-COM-2S 2x RS422/RS484 PCI Express Mini Card";
			case 0x494f1058: return "PCI-COM422/4 4x RS422 Card";
			case 0x494f1059: return "PCI-COM485/4 4x RS485 Card";
			case 0x494f105a: return "PCIe-COM422-4 4x RS422 Card";
			case 0x494f105b: return "PCIe-COM485-4 4x RS485 Card";
			case 0x494f105c: return "PCIe-COM-4SRJ 4x RS422/RS485 Card w/RJ45 Connectors";
			case 0x494f105d: return "104I-COM-4S 4x RS422/RS484 PCI/104 Board";
			case 0x494f105e: return "mPCIe-COM-4S 4x RS422/RS484 PCI Express Mini Card";
			case 0x494f1068: return "PCI-COM422/8 8x RS422 Card";
			case 0x494f1069: return "PCI-COM485/8 8x RS485 Card";
			case 0x494f106a: return "PCIe-COM422-8 8x RS422 Card";
			case 0x494f106b: return "PCIe-COM485-8 8x RS485 Card";
			case 0x494f106c: return "104I-COM-8S 8x RS422/RS485 PCI/104 Board";
			case 0x494f1088: return "PCI-COM232/1 1x RS232 Card";
			case 0x494f1090: return "PCI-COM232/2 2x RS232 Card";
			case 0x494f1091: return "PCIe-COM232-2RJ 2x RS232 Card w/RJ45 Connectors";
			case 0x494f1093: return "mPCIe-COM232-2 2x RS232 PCI Express Mini Card";
			case 0x494f1098: return "PCIe-COM232-4 4x RS232 Card";
			case 0x494f1099: return "PCIe-COM232-4RJ 4x RS232 Card w/RJ45 Connectors";
			case 0x494f109b: return "mPCIe-COM232-4 4x RS232 PCI Express Mini Card";
			case 0x494f10a8: return "P104-COM232-8 8x RS232 PC-104+ Board";
			case 0x494f10a9: return "PCIe-COM232-8 8x RS232 Card";
			case 0x494f10c9: return "PCI-COM-1S 1x RS422/RS485 Card";
			case 0x494f10d0: return "PCI-COM2S 2x RS422/RS485 Card";
			case 0x494f10d1: return "PCIe-COM-2SMRJ 2x RS232/RS422/RS485 Card w/RJ45 Connectors";
			case 0x494f10d2: return "104I-COM-2SM 2x RS232/RS422/RS485 PCI/104 Board";
			case 0x494f10d3: return "mPCIe-COM-2SM 2x RS232/RS422/RS485 PCI Express Mini Card";
			case 0x494f10d8: return "PCI-COM-4SM 4x RS232/RS422/RS485 Card";
			case 0x494f10d9: return "PCIe-COM-4SM 4x RS232/RS422/RS485 Card";
			case 0x494f10da: return "PCIe-COM-4SMRJ 4x RS232/RS422/RS485 Card w/RJ45 Connectors";
			case 0x494f10db: return "104I-COM-4SM 4x RS232/RS422/RS485 PCI/104 Board";
			case 0x494f10dc: return "mPCIe-COM-4SM 4x RS232/RS422/RS485 PCI Express Mini Card";
			case 0x494f10e8: return "PCI-COM-8SM 8x RS232/RS422/RS485 Card";
			case 0x494f10e9: return "PCIe-COM-8SM 8x RS232/RS422/RS485 Card";
			case 0x494f10ea: return "104I-COM-8SM 8x RS232/RS422/RS485 PCI-104 Board";
			case 0x494f1108: return "mPCIe-ICM485-1 1x Isolated RS485 PCI Express Mini Card";
			case 0x494f1110: return "mPCIe-ICM422-2 2x Isolated RS422 PCI Express Mini Card";
			case 0x494f1111: return "mPCIe-ICM485-2 2x Isolated RS485 PCI Express Mini Card";
			case 0x494f1118: return "mPCIe-ICM422-4 4x Isolated RS422 PCI Express Mini Card";
			case 0x494f1119: return "mPCIe-ICM485-4 4x Isolated RS485 PCI Express Mini Card";
			case 0x494f1148: return "PCI-ICM-1S 1x Isolated RS422/RS485 Card";
			case 0x494f1150: return "PCI-ICM-2S 2x Isolated RS422/RS485 Card";
			case 0x494f1152: return "PCIe-ICM-2S 2x Isolated RS422/RS485 Card";
			case 0x494f1158: return "PCI-ICM422/4 4x Isolated RS422 Card";
			case 0x494f1159: return "PCI-ICM485/4 4x Isolated RS485 Card";
			case 0x494f115a: return "PCIe-ICM-4S 4x Isolated RS422/RS485 Card";
			case 0x494f1190: return "PCIe-ICM232-2 2x Isolated RS232 Card";
			case 0x494f1191: return "mPCIe-ICM232-2 2x Isolated RS232 PCI Express Mini Card";
			case 0x494f1198: return "PCIe-ICM232-4 4x Isolated RS232 Card";
			case 0x494f1199: return "mPCIe-ICM232-4 4x Isolated RS422 PCI Express Mini Card";
			case 0x494f11d0: return "PCIe-ICM-2SM 2x Isolated RS232/RS422/RS485 Card";
			case 0x494f11d8: return "PCIe-ICM-4SM 4x Isolated RS232/RS422/RS485 Card";
			case 0x494f1250: return "PCI-WDG-2S Watchdog and 2x Serial Card";
			case 0x494f12d0: return "PCI-WDG-IMPAC";
			case 0x494f2230: return "PCI-QUAD-8 8x Quadrature Input Card";
			case 0x494f2231: return "PCI-QUAD-4 4x Quadrature Input Card";
			case 0x494f22c0: return "PCI-WDG-CSM Watchdog Card";
			case 0x494f25c0: return "P104-WDG-E Watchdog PC/104+ Board";
			case 0x494f2c50: return "PCI-DIO-96CT 96x Digital Input / Output Card";
			case 0x494f2c58: return "PCI-DIO-96C3 96x Digital Input / Output Card w/3x 8254 Counter Card";
			case 0x494f2ee0: return "PCIe-DIO24S-CTR12 24x Digital Input / Output Card w/4x 8254 Counter Card";
			case 0x494f2fc0: return "P104-WDG-CSM Watchdog PC/104+ Board";
			case 0x494f2fc1: return "P104-WDG-CSMA Advanced Watchdog PC/104+ Board";
			case 0x494f5ed0: return "PCI-DAC";
			case 0x494f6c90: return "PCI-DA12-2 2x 12-bit Analog Output Card";
			case 0x494f6c98: return "PCI-DA12-4 4x 12-bit Analog Output Card";
			case 0x494f6ca0: return "PCI-DA12-6 6x 12-bit Analog Output Card";
			case 0x494f6ca8: return "PCI-DA12-8 8x 12-bit Analog Output Card";
			case 0x494f6ca9: return "PCI-DA12-8V";
			case 0x494f6cb0: return "PCI-DA12-16 16x 12-bit Analog Output Card";
			case 0x494f6cb1: return "PCI-DA12-16V";
			case 0x494f8ef0: return "P104-FAS16-16";
			case 0x494faca8: return "PCI-AI12-16 12-bit 100kHz Analog Input Card";
			case 0x494faca9: return "PCI-AI12-16A 12-bit 100kHz Analog Input w/FIFO Card";
			case 0x494feca8: return "PCI-AIO12-16 12-bit 100kHz Analog Input w/2x Analog Output and FIFO Card";
			case 0x494fecaa: return "PCI-A12-16A 12-bit 100kHz Analog Input w/2x Analog Output and FIFO Card";
			case 0x494fece8: return "LPCI-A16-16A 16-bit 500kHz Analog Input low-profile Card";
			case 0x494fece9: return "LPCI-AIO16A 16-bit 500kHz Analog Input low-profile Card";
			case 0x4a145000: return "NV5000SC";
			case 0x4c530000: return "PLUSTEST device";
			case 0x4c530001: return "PLUSTEST-MM device";
			case 0x4d510200: return "MQ-200";
			case 0x4d560000: return "[mvHYPERION-CLe/CLb] CameraLink PCI Express x1 Frame Grabber";
			case 0x4d560001: return "[mvHYPERION-CLf/CLm] CameraLink PCI Express x4 Frame Grabber";
			case 0x4d560010: return "[mvHYPERION-16R16/-32R16] 16 Video Channel PCI Express x4 Frame Grabber";
			case 0x4d560020: return "[mvHYPERION-HD-SDI] HD-SDI PCI Express x4 Frame Grabber";
			case 0x4d560030: return "[mvHYPERION-HD-SDI-Merger] HD-SDI PCI Express x4 Frame Grabber";
			case 0x4ddc0100: return "DD-42924I5-300 (ARINC 429 Data Bus)";
			case 0x4ddc0300: return "SB-3620 Motion Feedback Device";
			case 0x4ddc0340: return "SB-3623 Motion Feedback Device";
			case 0x4ddc0400: return "SB-3622 Motion Feedback Device";
			case 0x4ddc0500: return "SB-3621 Motion Feedback Device";
			case 0x4ddc0510: return "SB-3624 Motion Feedback Device";
			case 0x4ddc0801: return "BU-65570I1 MIL-STD-1553 Test and Simulation";
			case 0x4ddc0802: return "BU-65570I2 MIL-STD-1553 Test and Simulation";
			case 0x4ddc0811: return "BU-65572I1 MIL-STD-1553 Test and Simulation";
			case 0x4ddc0812: return "BU-65572I2 MIL-STD-1553 Test and Simulation";
			case 0x4ddc0881: return "BU-65570T1 MIL-STD-1553 Test and Simulation";
			case 0x4ddc0882: return "BU-65570T2 MIL-STD-1553 Test and Simulation";
			case 0x4ddc0891: return "BU-65572T1 MIL-STD-1553 Test and Simulation";
			case 0x4ddc0892: return "BU-65572T2 MIL-STD-1553 Test and Simulation";
			case 0x4ddc0901: return "BU-65565C1 MIL-STD-1553 Data Bus";
			case 0x4ddc0902: return "BU-65565C2 MIL-STD-1553 Data Bus";
			case 0x4ddc0903: return "BU-65565C3 MIL-STD-1553 Data Bus";
			case 0x4ddc0904: return "BU-65565C4 MIL-STD-1553 Data Bus";
			case 0x4ddc0b01: return "BU-65569I1 MIL-STD-1553 Data Bus";
			case 0x4ddc0b02: return "BU-65569I2 MIL-STD-1553 Data Bus";
			case 0x4ddc0b03: return "BU-65569I3 MIL-STD-1553 Data Bus";
			case 0x4ddc0b04: return "BU-65569I4 MIL-STD-1553 Data Bus";
			case 0x4ddc0d01: return "SB-3641 Motion Feedback Device";
			case 0x4ddc0d10: return "SB-365x Motion Feedback Device";
			case 0x4ddc2f00: return "SB-3642 Motion Feedback Device";
			case 0x4ddc3000: return "SB-3644 Motion Feedback Device";
			case 0x50454243: return "BLASTbus PCI Interface Card v1";
			case 0x50461001: return "PCI Radio";
			case 0x50532010: return "Daytona Audio Adapter";
			case 0x51453031: return "Concert AudioPCI";
			case 0x51680300: return "FlyDVB-S";
			case 0x51680301: return "FlyDVB-T";
			case 0x53010001: return "ProMotion aT3D";
			case 0x53330551: return "Plato/PX (system)";
			case 0x53335631: return "86c325 [ViRGE]";
			case 0x53338800: return "86c866 [Vision 866]";
			case 0x53338801: return "86c964 [Vision 964]";
			case 0x53338810: return "86c764_0 [Trio 32 vers 0]";
			case 0x53338811: return "86c764/765 [Trio32/64/64V+]";
			case 0x53338812: return "86cM65 [Aurora64V+]";
			case 0x53338813: return "86c764_3 [Trio 32/64 vers 3]";
			case 0x53338814: return "86c767 [Trio 64UV+]";
			case 0x53338815: return "86cM65 [Aurora 128]";
			case 0x5333883d: return "86c988 [ViRGE/VX]";
			case 0x53338870: return "FireGL";
			case 0x53338880: return "86c868 [Vision 868 VRAM] vers 0";
			case 0x53338881: return "86c868 [Vision 868 VRAM] vers 1";
			case 0x53338882: return "86c868 [Vision 868 VRAM] vers 2";
			case 0x53338883: return "86c868 [Vision 868 VRAM] vers 3";
			case 0x533388b0: return "86c928 [Vision 928 VRAM] vers 0";
			case 0x533388b1: return "86c928 [Vision 928 VRAM] vers 1";
			case 0x533388b2: return "86c928 [Vision 928 VRAM] vers 2";
			case 0x533388b3: return "86c928 [Vision 928 VRAM] vers 3";
			case 0x533388c0: return "86c864 [Vision 864 DRAM] vers 0";
			case 0x533388c1: return "86c864 [Vision 864 DRAM] vers 1";
			case 0x533388c2: return "86c864 [Vision 864-P DRAM] vers 2";
			case 0x533388c3: return "86c864 [Vision 864-P DRAM] vers 3";
			case 0x533388d0: return "86c964 [Vision 964 VRAM] vers 0";
			case 0x533388d1: return "86c964 [Vision 964 VRAM] vers 1";
			case 0x533388d2: return "86c964 [Vision 964-P VRAM] vers 2";
			case 0x533388d3: return "86c964 [Vision 964-P VRAM] vers 3";
			case 0x533388f0: return "86c968 [Vision 968 VRAM] rev 0";
			case 0x533388f1: return "86c968 [Vision 968 VRAM] rev 1";
			case 0x533388f2: return "86c968 [Vision 968 VRAM] rev 2";
			case 0x533388f3: return "86c968 [Vision 968 VRAM] rev 3";
			case 0x53338900: return "86c755 [Trio 64V2/DX]";
			case 0x53338901: return "86c775/86c785 [Trio 64V2/DX or /GX]";
			case 0x53338902: return "Plato/PX";
			case 0x53338903: return "Trio 3D business multimedia";
			case 0x53338904: return "86c365, 86c366 [Trio 3D]";
			case 0x53338905: return "Trio 64V+ family";
			case 0x53338906: return "Trio 64V+ family";
			case 0x53338907: return "Trio 64V+ family";
			case 0x53338908: return "Trio 64V+ family";
			case 0x53338909: return "Trio 64V+ family";
			case 0x5333890a: return "Trio 64V+ family";
			case 0x5333890b: return "Trio 64V+ family";
			case 0x5333890c: return "Trio 64V+ family";
			case 0x5333890d: return "Trio 64V+ family";
			case 0x5333890e: return "Trio 64V+ family";
			case 0x5333890f: return "Trio 64V+ family";
			case 0x53338a01: return "86c375 [ViRGE/DX] or 86c385 [ViRGE/GX]";
			case 0x53338a10: return "ViRGE/GX2";
			case 0x53338a13: return "86c360 [Trio 3D/1X], 86c362, 86c368 [Trio 3D/2X]";
			case 0x53338a20: return "86c794 [Savage 3D]";
			case 0x53338a21: return "86c390 [Savage 3D/MV]";
			case 0x53338a22: return "Savage 4";
			case 0x53338a23: return "Savage 4";
			case 0x53338a25: return "ProSavage PM133";
			case 0x53338a26: return "ProSavage KM133";
			case 0x53338c00: return "ViRGE/M3";
			case 0x53338c01: return "ViRGE/MX";
			case 0x53338c02: return "ViRGE/MX+";
			case 0x53338c03: return "ViRGE/MX+MV";
			case 0x53338c10: return "86C270-294 [SavageMX-MV]";
			case 0x53338c11: return "82C270-294 [SavageMX]";
			case 0x53338c12: return "86C270-294 [SavageIX-MV]";
			case 0x53338c13: return "86C270-294 [SavageIX]";
			case 0x53338c22: return "SuperSavage MX/128";
			case 0x53338c24: return "SuperSavage MX/64";
			case 0x53338c26: return "SuperSavage MX/64C";
			case 0x53338c2a: return "SuperSavage IX/128 SDR";
			case 0x53338c2b: return "SuperSavage IX/128 DDR";
			case 0x53338c2c: return "SuperSavage IX/64 SDR";
			case 0x53338c2d: return "SuperSavage IX/64 DDR";
			case 0x53338c2e: return "SuperSavage IX/C SDR";
			case 0x53338c2f: return "SuperSavage IX/C DDR";
			case 0x53338d01: return "86C380 [ProSavageDDR K4M266]";
			case 0x53338d02: return "VT8636A [ProSavage KN133] AGP4X VGA Controller (TwisterK)";
			case 0x53338d03: return "VT8751 [ProSavageDDR P4M266]";
			case 0x53338d04: return "VT8375 [ProSavage8 KM266/KL266]";
			case 0x53338e00: return "DeltaChrome";
			case 0x53338e26: return "ProSavage";
			case 0x53338e40: return "2300E Graphics Processor";
			case 0x53338e48: return "Matrix [Chrome S25 / S27]";
			case 0x53339043: return "Chrome 430 GT";
			case 0x53339045: return "Chrome 430 ULP / 435 ULP / 440 GTX";
			case 0x53339060: return "Chrome 530 GT";
			case 0x53339102: return "86C410 [Savage 2000]";
			case 0x5333ca00: return "SonicVibes";
			case 0x544c0350: return "TL880-based HDTV/ATSC tuner";
			case 0x544d6178: return "DVB Tuner PCIe Card";
			case 0x54523443: return "RTC4";
			case 0x54554458: return "S5933";
			case 0x55440001: return "I-30xx Scanner Interface";
			case 0x55550003: return "TURBOstor HFP-832 [HiPPI NIC]";
			case 0x55553b00: return "Epiphan DVI2PCIe video capture card";
			case 0x58518008: return "tDVR8008 8-port video capture card";
			case 0x58518016: return "tDVR8016 16-chan video capture card";
			case 0x58518032: return "tDVR8032 32-chan video capture card";
			case 0x58530001: return "Xen Platform Device";
			case 0x5853c000: return "Citrix XenServer PCI Device for Windows Update";
			case 0x5853c110: return "Virtualized HID";
			case 0x5853c147: return "Virtualized Graphics Device";
			case 0x5853c200: return "XCP-ng Project PCI Device for Windows Update";
			case 0x631c1652: return "PXI-1652 Signal Generator";
			case 0x631c2504: return "PXI-2504 Signal Interrogator";
			case 0x63746773: return "GPPCI";
			case 0x65491200: return "TERA1200 PC-over-IP Host";
			case 0x66660001: return "PCCOM4";
			case 0x66660002: return "PCCOM8";
			case 0x66660004: return "PCCOM2";
			case 0x66660101: return "PCI 8255/8254 I/O Card";
			case 0x66660200: return "12-bit AD/DA Card";
			case 0x66660201: return "14-bit AD/DA Card";
			case 0x66661011: return "Industrial Card";
			case 0x66661021: return "8 photo couple 8 relay Card";
			case 0x66661022: return "4 photo couple 4 relay Card";
			case 0x66661025: return "16 photo couple 16 relay Card";
			case 0x66664000: return "WatchDog Card";
			case 0x66881200: return "CooVox TDM Analog Module";
			case 0x66881400: return "CooVOX TDM GSM Module";
			case 0x66881600: return "CooVOX TDM E1/T1 Module";
			case 0x66881800: return "CooVOX TDM BRI Module";
			case 0x70632000: return "HD-2000";
			case 0x70633000: return "HD-3000";
			case 0x70635500: return "HD5500 HDTV";
			case 0x73577910: return "7910 [Althea]";
			case 0x7401e100: return "PTP3100 PCIe PTP Slave Clock";
			case 0x80080010: return "WDOG1 [PCI-Watchdog 1]";
			case 0x80080011: return "PWDOG2 [PCI-Watchdog 2]";
			case 0x80080015: return "Clock77/PCI & Clock77/PCIe (DCF-77 receiver)";
			case 0x80860007: return "82379AB";
			case 0x80860008: return "Extended Express System Support Controller";
			case 0x80860039: return "21145 Fast Ethernet";
			case 0x80860040: return "Core Processor DRAM Controller";
			case 0x80860041: return "Core Processor PCI Express x16 Root Port";
			case 0x80860042: return "Core Processor Integrated Graphics Controller";
			case 0x80860043: return "Core Processor Secondary PCI Express Root Port";
			case 0x80860044: return "Core Processor DRAM Controller";
			case 0x80860045: return "Core Processor PCI Express x16 Root Port";
			case 0x80860046: return "Core Processor Integrated Graphics Controller";
			case 0x80860047: return "Core Processor Secondary PCI Express Root Port";
			case 0x80860048: return "Core Processor DRAM Controller";
			case 0x80860049: return "Core Processor PCI Express x16 Root Port";
			case 0x8086004a: return "Core Processor Integrated Graphics Controller";
			case 0x8086004b: return "Core Processor Secondary PCI Express Root Port";
			case 0x80860050: return "Core Processor Thermal Management Controller";
			case 0x80860069: return "Core Processor DRAM Controller";
			case 0x80860082: return "Centrino Advanced-N 6205 [Taylor Peak]";
			case 0x80860083: return "Centrino Wireless-N 1000 [Condor Peak]";
			case 0x80860084: return "Centrino Wireless-N 1000 [Condor Peak]";
			case 0x80860085: return "Centrino Advanced-N 6205 [Taylor Peak]";
			case 0x80860087: return "Centrino Advanced-N + WiMAX 6250 [Kilmer Peak]";
			case 0x80860089: return "Centrino Advanced-N + WiMAX 6250 [Kilmer Peak]";
			case 0x8086008a: return "Centrino Wireless-N 1030 [Rainbow Peak]";
			case 0x8086008b: return "Centrino Wireless-N 1030 [Rainbow Peak]";
			case 0x80860090: return "Centrino Advanced-N 6230 [Rainbow Peak]";
			case 0x80860091: return "Centrino Advanced-N 6230 [Rainbow Peak]";
			case 0x80860100: return "2nd Generation Core Processor Family DRAM Controller";
			case 0x80860101: return "Xeon E3-1200/2nd Generation Core Processor Family PCI Express Root Port";
			case 0x80860102: return "2nd Generation Core Processor Family Integrated Graphics Controller";
			case 0x80860104: return "2nd Generation Core Processor Family DRAM Controller";
			case 0x80860105: return "Xeon E3-1200/2nd Generation Core Processor Family PCI Express Root Port";
			case 0x80860106: return "2nd Generation Core Processor Family Integrated Graphics Controller";
			case 0x80860108: return "Xeon E3-1200 Processor Family DRAM Controller";
			case 0x80860109: return "Xeon E3-1200/2nd Generation Core Processor Family PCI Express Root Port";
			case 0x8086010a: return "Xeon E3-1200 Processor Family Integrated Graphics Controller";
			case 0x8086010b: return "Xeon E3-1200/2nd Generation Core Processor Family Integrated Graphics Controller";
			case 0x8086010c: return "Xeon E3-1200/2nd Generation Core Processor Family DRAM Controller";
			case 0x8086010d: return "Xeon E3-1200/2nd Generation Core Processor Family PCI Express Root Port";
			case 0x8086010e: return "Xeon E3-1200/2nd Generation Core Processor Family Integrated Graphics Controller";
			case 0x80860112: return "2nd Generation Core Processor Family Integrated Graphics Controller";
			case 0x80860116: return "2nd Generation Core Processor Family Integrated Graphics Controller";
			case 0x80860122: return "2nd Generation Core Processor Family Integrated Graphics Controller";
			case 0x80860126: return "2nd Generation Core Processor Family Integrated Graphics Controller";
			case 0x80860150: return "Xeon E3-1200 v2/3rd Gen Core processor DRAM Controller";
			case 0x80860151: return "Xeon E3-1200 v2/3rd Gen Core processor PCI Express Root Port";
			case 0x80860152: return "Xeon E3-1200 v2/3rd Gen Core processor Graphics Controller";
			case 0x80860153: return "3rd Gen Core Processor Thermal Subsystem";
			case 0x80860154: return "3rd Gen Core processor DRAM Controller";
			case 0x80860155: return "Xeon E3-1200 v2/3rd Gen Core processor PCI Express Root Port";
			case 0x80860156: return "3rd Gen Core processor Graphics Controller";
			case 0x80860158: return "Xeon E3-1200 v2/Ivy Bridge DRAM Controller";
			case 0x80860159: return "Xeon E3-1200 v2/3rd Gen Core processor PCI Express Root Port";
			case 0x8086015a: return "Xeon E3-1200 v2/Ivy Bridge Graphics Controller";
			case 0x8086015c: return "Xeon E3-1200 v2/3rd Gen Core processor DRAM Controller";
			case 0x8086015d: return "Xeon E3-1200 v2/3rd Gen Core processor PCI Express Root Port";
			case 0x8086015e: return "Xeon E3-1200 v2/3rd Gen Core processor Graphics Controller";
			case 0x80860162: return "Xeon E3-1200 v2/3rd Gen Core processor Graphics Controller";
			case 0x80860166: return "3rd Gen Core processor Graphics Controller";
			case 0x8086016a: return "Xeon E3-1200 v2/3rd Gen Core processor Graphics Controller";
			case 0x80860172: return "Xeon E3-1200 v2/3rd Gen Core processor Graphics Controller";
			case 0x80860176: return "3rd Gen Core processor Graphics Controller";
			case 0x80860201: return "Arctic Sound";
			case 0x80860284: return "Comet Lake PCH-LP LPC Premium Controller/eSPI Controller";
			case 0x808602a3: return "Comet Lake PCH-LP SMBus Host Controller";
			case 0x808602a4: return "Comet Lake SPI (flash) Controller";
			case 0x808602a6: return "Comet Lake North Peak";
			case 0x808602b0: return "Comet Lake PCI Express Root Port #9";
			case 0x808602b1: return "Comet Lake PCI Express Root Port #10";
			case 0x808602b3: return "Comet Lake PCI Express Root Port #12";
			case 0x808602b4: return "Comet Lake PCI Express Root Port #13";
			case 0x808602b8: return "Comet Lake PCI Express Root Port #1";
			case 0x808602bc: return "Comet Lake PCI Express Root Port #5";
			case 0x808602c5: return "Comet Lake Serial IO I2C Host Controller";
			case 0x808602c8: return "Comet Lake PCH-LP cAVS";
			case 0x808602d3: return "Comet Lake SATA AHCI Controller";
			case 0x808602e0: return "Comet Lake Management Engine Interface";
			case 0x808602e8: return "Serial IO I2C Host Controller";
			case 0x808602e9: return "Comet Lake Serial IO I2C Host Controller";
			case 0x808602ea: return "Comet Lake PCH-LP LPSS: I2C Controller #2";
			case 0x808602ed: return "Comet Lake PCH-LP USB 3.1 xHCI Host Controller";
			case 0x808602ef: return "Comet Lake PCH-LP Shared SRAM";
			case 0x808602f0: return "Comet Lake PCH-LP CNVi WiFi";
			case 0x808602f5: return "Comet Lake PCH-LP SCS3";
			case 0x808602f9: return "Comet Lake Thermal Subsytem";
			case 0x808602fc: return "Comet Lake Integrated Sensor Solution";
			case 0x80860309: return "80303 I/O Processor PCI-to-PCI Bridge";
			case 0x8086030d: return "80312 I/O Companion Chip PCI-to-PCI Bridge";
			case 0x80860326: return "6700/6702PXH I/OxAPIC Interrupt Controller A";
			case 0x80860327: return "6700PXH I/OxAPIC Interrupt Controller B";
			case 0x80860329: return "6700PXH PCI Express-to-PCI Bridge A";
			case 0x8086032a: return "6700PXH PCI Express-to-PCI Bridge B";
			case 0x8086032c: return "6702PXH PCI Express-to-PCI Bridge A";
			case 0x80860330: return "80332 [Dobson] I/O processor (A-Segment Bridge)";
			case 0x80860331: return "80332 [Dobson] I/O processor (A-Segment IOAPIC)";
			case 0x80860332: return "80332 [Dobson] I/O processor (B-Segment Bridge)";
			case 0x80860333: return "80332 [Dobson] I/O processor (B-Segment IOAPIC)";
			case 0x80860334: return "80332 [Dobson] I/O processor (ATU)";
			case 0x80860335: return "80331 [Lindsay] I/O processor (PCI-X Bridge)";
			case 0x80860336: return "80331 [Lindsay] I/O processor (ATU)";
			case 0x80860340: return "41210 [Lanai] Serial to Parallel PCI Bridge (A-Segment Bridge)";
			case 0x80860341: return "41210 [Lanai] Serial to Parallel PCI Bridge (B-Segment Bridge)";
			case 0x80860370: return "80333 Segment-A PCIe Express to PCI-X bridge";
			case 0x80860371: return "80333 A-Bus IOAPIC";
			case 0x80860372: return "80333 Segment-B PCIe Express to PCI-X bridge";
			case 0x80860373: return "80333 B-Bus IOAPIC";
			case 0x80860374: return "80333 Address Translation Unit";
			case 0x80860402: return "Xeon E3-1200 v3/4th Gen Core Processor Integrated Graphics Controller";
			case 0x80860406: return "Haswell Integrated Graphics Controller";
			case 0x8086040a: return "Xeon E3-1200 v3 Processor Integrated Graphics Controller";
			case 0x80860412: return "Xeon E3-1200 v3/4th Gen Core Processor Integrated Graphics Controller";
			case 0x80860416: return "4th Gen Core Processor Integrated Graphics Controller";
			case 0x8086041a: return "Xeon E3-1200 v3 Processor Integrated Graphics Controller";
			case 0x8086041e: return "4th Generation Core Processor Family Integrated Graphics Controller";
			case 0x80860434: return "DH89XXCC Series QAT";
			case 0x80860435: return "DH895XCC Series QAT";
			case 0x80860436: return "DH8900CC Null Device";
			case 0x80860438: return "DH8900CC Series Gigabit Network Connection";
			case 0x8086043a: return "DH8900CC Series Gigabit Fiber Network Connection";
			case 0x8086043c: return "DH8900CC Series Gigabit Backplane Network Connection";
			case 0x80860440: return "DH8900CC Series Gigabit SFP Network Connection";
			case 0x80860442: return "DH89XXCC Series QAT Virtual Function";
			case 0x80860443: return "DH895XCC Series QAT Virtual Function";
			case 0x80860482: return "82375EB/SB PCI to EISA Bridge";
			case 0x80860483: return "82424TX/ZX [Saturn] CPU to PCI bridge";
			case 0x80860484: return "82378ZB/IB, 82379AB (SIO, SIO.A) PCI to ISA Bridge";
			case 0x80860486: return "82425EX/ZX [Aries] PCIset with ISA bridge";
			case 0x808604a3: return "82434LX/NX [Mercury/Neptune] Processor to PCI bridge";
			case 0x808604d0: return "82437FX [Triton FX]";
			case 0x80860500: return "E8870 Processor bus control";
			case 0x80860501: return "E8870 Memory controller";
			case 0x80860502: return "E8870 Scalability Port 0";
			case 0x80860503: return "E8870 Scalability Port 1";
			case 0x80860510: return "E8870IO Hub Interface Port 0 registers (8-bit compatibility port)";
			case 0x80860511: return "E8870IO Hub Interface Port 1 registers";
			case 0x80860512: return "E8870IO Hub Interface Port 2 registers";
			case 0x80860513: return "E8870IO Hub Interface Port 3 registers";
			case 0x80860514: return "E8870IO Hub Interface Port 4 registers";
			case 0x80860515: return "E8870IO General SIOH registers";
			case 0x80860516: return "E8870IO RAS registers";
			case 0x80860530: return "E8870SP Scalability Port 0 registers";
			case 0x80860531: return "E8870SP Scalability Port 1 registers";
			case 0x80860532: return "E8870SP Scalability Port 2 registers";
			case 0x80860533: return "E8870SP Scalability Port 3 registers";
			case 0x80860534: return "E8870SP Scalability Port 4 registers";
			case 0x80860535: return "E8870SP Scalability Port 5 registers";
			case 0x80860536: return "E8870SP Interleave registers 0 and 1";
			case 0x80860537: return "E8870SP Interleave registers 2 and 3";
			case 0x80860600: return "RAID Controller";
			case 0x8086061f: return "80303 I/O Processor";
			case 0x8086068d: return "Comet Lake LPC Controller";
			case 0x808606a3: return "Comet Lake PCH SMBus Controller";
			case 0x808606a4: return "Comet Lake PCH SPI Controller";
			case 0x808606a8: return "Comet Lake PCH Serial IO UART Host Controller #0";
			case 0x808606a9: return "Comet Lake PCH Serial IO UART Host Controller #1";
			case 0x808606aa: return "Comet Lake PCH Serial IO SPI Controller #0";
			case 0x808606ab: return "Comet Lake PCH Serial IO SPI Controller #1";
			case 0x808606ac: return "Comet Lake PCI Express Root Port #21";
			case 0x808606b0: return "Comet Lake PCI Express Root Port #9";
			case 0x808606bd: return "Comet Lake PCIe Port #6";
			case 0x808606c0: return "Comet Lake PCI Express Root Port #17";
			case 0x808606c8: return "Comet Lake PCH cAVS";
			case 0x808606d2: return "Comet Lake SATA AHCI Controller";
			case 0x808606e0: return "Comet Lake HECI Controller";
			case 0x808606e3: return "Comet Lake Keyboard and Text (KT) Redirection";
			case 0x808606e8: return "Comet Lake PCH Serial IO I2C Controller #0";
			case 0x808606e9: return "Comet Lake PCH Serial IO I2C Controller #1";
			case 0x808606ea: return "Comet Lake PCH Serial IO I2C Controller #2";
			case 0x808606eb: return "Comet Lake PCH Serial IO I2C Controller #3";
			case 0x808606ed: return "Comet Lake USB 3.1 xHCI Host Controller";
			case 0x808606ef: return "Comet Lake PCH Shared SRAM";
			case 0x808606f0: return "Comet Lake PCH CNVi WiFi";
			case 0x808606f9: return "Comet Lake PCH Thermal Controller";
			case 0x808606fb: return "Comet Lake PCH Serial IO SPI Controller #2";
			case 0x80860700: return "CE Media Processor A/V Bridge";
			case 0x80860701: return "CE Media Processor NAND Flash Controller";
			case 0x80860703: return "CE Media Processor Media Control Unit 1";
			case 0x80860704: return "CE Media Processor Video Capture Interface";
			case 0x80860707: return "CE Media Processor SPI Slave";
			case 0x80860708: return "CE Media Processor 4100";
			case 0x80860800: return "Moorestown SPI Ctrl 0";
			case 0x80860801: return "Moorestown SPI Ctrl 1";
			case 0x80860802: return "Moorestown I2C 0";
			case 0x80860803: return "Moorestown I2C 1";
			case 0x80860804: return "Moorestown I2C 2";
			case 0x80860805: return "Moorestown Keyboard Ctrl";
			case 0x80860806: return "Moorestown USB Ctrl";
			case 0x80860807: return "Moorestown SD Host Ctrl 0";
			case 0x80860808: return "Moorestown SD Host Ctrl 1";
			case 0x80860809: return "Moorestown NAND Ctrl";
			case 0x8086080a: return "Moorestown Audio Ctrl";
			case 0x8086080b: return "Moorestown ISP";
			case 0x8086080c: return "Moorestown Security Controller";
			case 0x8086080d: return "Moorestown External Displays";
			case 0x8086080e: return "Moorestown SCU IPC";
			case 0x8086080f: return "Moorestown GPIO Controller";
			case 0x80860810: return "Moorestown Power Management Unit";
			case 0x80860811: return "Moorestown OTG Ctrl";
			case 0x80860812: return "Moorestown SPI Ctrl 2";
			case 0x80860813: return "Moorestown SC DMA";
			case 0x80860814: return "Moorestown LPE DMA";
			case 0x80860815: return "Moorestown SSP0";
			case 0x80860817: return "Medfield Serial IO I2C Controller #3";
			case 0x80860818: return "Medfield Serial IO I2C Controller #4";
			case 0x80860819: return "Medfield Serial IO I2C Controller #5";
			case 0x8086081a: return "Medfield GPIO Controller [Core]";
			case 0x8086081b: return "Medfield Serial IO HSUART Controller #1";
			case 0x8086081c: return "Medfield Serial IO HSUART Controller #2";
			case 0x8086081d: return "Medfield Serial IO HSUART Controller #3";
			case 0x8086081e: return "Medfield Serial IO HSUART DMA Controller";
			case 0x8086081f: return "Medfield GPIO Controller [AON]";
			case 0x80860820: return "Medfield SD Host Controller";
			case 0x80860821: return "Medfield SDIO Controller #1";
			case 0x80860822: return "Medfield SDIO Controller #2";
			case 0x80860823: return "Medfield eMMC Controller #0";
			case 0x80860824: return "Medfield eMMC Controller #1";
			case 0x80860827: return "Medfield Serial IO DMA Controller";
			case 0x80860828: return "Medfield Power Management Unit";
			case 0x80860829: return "Medfield USB Device Controller (OTG)";
			case 0x8086082a: return "Medfield SCU IPC";
			case 0x8086082c: return "Medfield Serial IO I2C Controller #0";
			case 0x8086082d: return "Medfield Serial IO I2C Controller #1";
			case 0x8086082e: return "Medfield Serial IO I2C Controller #2";
			case 0x80860885: return "Centrino Wireless-N + WiMAX 6150";
			case 0x80860886: return "Centrino Wireless-N + WiMAX 6150";
			case 0x80860887: return "Centrino Wireless-N 2230";
			case 0x80860888: return "Centrino Wireless-N 2230";
			case 0x8086088e: return "Centrino Advanced-N 6235";
			case 0x8086088f: return "Centrino Advanced-N 6235";
			case 0x80860890: return "Centrino Wireless-N 2200";
			case 0x80860891: return "Centrino Wireless-N 2200";
			case 0x80860892: return "Centrino Wireless-N 135";
			case 0x80860893: return "Centrino Wireless-N 135";
			case 0x80860894: return "Centrino Wireless-N 105";
			case 0x80860895: return "Centrino Wireless-N 105";
			case 0x80860896: return "Centrino Wireless-N 130";
			case 0x80860897: return "Centrino Wireless-N 130";
			case 0x808608a7: return "Quark SoC X1000 SDIO / eMMC Controller";
			case 0x808608ae: return "Centrino Wireless-N 100";
			case 0x808608af: return "Centrino Wireless-N 100";
			case 0x808608b1: return "Wireless 7260";
			case 0x808608b2: return "Wireless 7260";
			case 0x808608b3: return "Wireless 3160";
			case 0x808608b4: return "Wireless 3160";
			case 0x808608cf: return "Atom Processor Z2760 Integrated Graphics Controller";
			case 0x80860934: return "Quark SoC X1000 I2C Controller and GPIO Controller";
			case 0x80860935: return "Quark SoC X1000 SPI Controller";
			case 0x80860936: return "Quark SoC X1000 HS-UART";
			case 0x80860937: return "Quark SoC X1000 10/100 Ethernet MAC";
			case 0x80860939: return "Quark SoC X1000 USB EHCI Host Controller / USB 2.0 Device";
			case 0x8086093a: return "Quark SoC X1000 USB OHCI Host Controller";
			case 0x80860953: return "PCIe Data Center SSD";
			case 0x80860958: return "Quark SoC X1000 Host Bridge";
			case 0x8086095a: return "Wireless 7265";
			case 0x8086095b: return "Wireless 7265";
			case 0x8086095e: return "Quark SoC X1000 Legacy Bridge";
			case 0x80860960: return "80960RP (i960RP) Microprocessor/Bridge";
			case 0x80860962: return "80960RM (i960RM) Bridge";
			case 0x80860964: return "80960RP (i960RP) Microprocessor/Bridge";
			case 0x80860a03: return "Haswell-ULT Thermal Subsystem";
			case 0x80860a04: return "Haswell-ULT DRAM Controller";
			case 0x80860a06: return "Haswell-ULT Integrated Graphics Controller";
			case 0x80860a0c: return "Haswell-ULT HD Audio Controller";
			case 0x80860a16: return "Haswell-ULT Integrated Graphics Controller";
			case 0x80860a22: return "Haswell-ULT Integrated Graphics Controller";
			case 0x80860a26: return "Haswell-ULT Integrated Graphics Controller";
			case 0x80860a2a: return "Haswell-ULT Integrated Graphics Controller";
			case 0x80860a2e: return "Haswell-ULT Integrated Graphics Controller";
			case 0x80860a53: return "DC P3520 SSD";
			case 0x80860a54: return "NVMe Datacenter SSD [3DNAND, Beta Rock Controller]";
			case 0x80860a55: return "NVMe DC SSD [3DNAND, Beta Rock Controller]";
			case 0x80860b26: return "Thunderbolt 4 Bridge [Goshen Ridge 2020]";
			case 0x80860b27: return "Thunderbolt 4 USB Controller [Goshen Ridge 2020]";
			case 0x80860b60: return "NVMe DC SSD [3DNAND, Sentinel Rock Controller]";
			case 0x80860bd0: return "Ponte Vecchio 2T";
			case 0x80860be0: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860be1: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860be2: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860be3: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860be4: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860be5: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860be6: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860be7: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860be8: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860be9: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860bea: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860beb: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860bec: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860bed: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860bee: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860bef: return "Atom Processor D2xxx/N2xxx Integrated Graphics Controller";
			case 0x80860bf0: return "Atom Processor D2xxx/N2xxx DRAM Controller";
			case 0x80860bf1: return "Atom Processor D2xxx/N2xxx DRAM Controller";
			case 0x80860bf2: return "Atom Processor D2xxx/N2xxx DRAM Controller";
			case 0x80860bf3: return "Atom Processor D2xxx/N2xxx DRAM Controller";
			case 0x80860bf4: return "Atom Processor D2xxx/N2xxx DRAM Controller";
			case 0x80860bf5: return "Atom Processor D2xxx/N2xxx DRAM Controller";
			case 0x80860bf6: return "Atom Processor D2xxx/N2xxx DRAM Controller";
			case 0x80860bf7: return "Atom Processor D2xxx/N2xxx DRAM Controller";
			case 0x80860c00: return "4th Gen Core Processor DRAM Controller";
			case 0x80860c01: return "Xeon E3-1200 v3/4th Gen Core Processor PCI Express x16 Controller";
			case 0x80860c04: return "Xeon E3-1200 v3/4th Gen Core Processor DRAM Controller";
			case 0x80860c05: return "Xeon E3-1200 v3/4th Gen Core Processor PCI Express x8 Controller";
			case 0x80860c08: return "Xeon E3-1200 v3 Processor DRAM Controller";
			case 0x80860c09: return "Xeon E3-1200 v3/4th Gen Core Processor PCI Express x4 Controller";
			case 0x80860c0c: return "Xeon E3-1200 v3/4th Gen Core Processor HD Audio Controller";
			case 0x80860c46: return "Atom Processor S1200 PCI Express Root Port 1";
			case 0x80860c47: return "Atom Processor S1200 PCI Express Root Port 2";
			case 0x80860c48: return "Atom Processor S1200 PCI Express Root Port 3";
			case 0x80860c49: return "Atom Processor S1200 PCI Express Root Port 4";
			case 0x80860c4e: return "Atom Processor S1200 NTB Primary";
			case 0x80860c50: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QuickData Technology Device";
			case 0x80860c51: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QuickData Technology Device";
			case 0x80860c52: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QuickData Technology Device";
			case 0x80860c53: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QuickData Technology Device";
			case 0x80860c54: return "Atom Processor S1200 Internal";
			case 0x80860c55: return "Atom Processor S1200 DFX 1";
			case 0x80860c56: return "Atom Processor S1200 DFX 2";
			case 0x80860c59: return "Atom Processor S1200 SMBus 2.0 Controller 0";
			case 0x80860c5a: return "Atom Processor S1200 SMBus 2.0 Controller 1";
			case 0x80860c5b: return "Atom Processor S1200 SMBus Controller 2";
			case 0x80860c5c: return "Atom Processor S1200 SMBus Controller 3";
			case 0x80860c5d: return "Atom Processor S1200 SMBus Controller 4";
			case 0x80860c5e: return "Atom Processor S1200 SMBus Controller 5";
			case 0x80860c5f: return "Atom Processor S1200 UART";
			case 0x80860c60: return "Atom Processor S1200 Integrated Legacy Bus";
			case 0x80860c70: return "Atom Processor S1200 Internal";
			case 0x80860c71: return "Atom Processor S1200 Internal";
			case 0x80860c72: return "Atom Processor S1200 Internal";
			case 0x80860c73: return "Atom Processor S1200 Internal";
			case 0x80860c74: return "Atom Processor S1200 Internal";
			case 0x80860c75: return "Atom Processor S1200 Internal";
			case 0x80860c76: return "Atom Processor S1200 Internal";
			case 0x80860c77: return "Atom Processor S1200 Internal";
			case 0x80860c78: return "Atom Processor S1200 Internal";
			case 0x80860c79: return "Atom Processor S1200 Internal";
			case 0x80860c7a: return "Atom Processor S1200 Internal";
			case 0x80860c7b: return "Atom Processor S1200 Internal";
			case 0x80860c7c: return "Atom Processor S1200 Internal";
			case 0x80860c7d: return "Atom Processor S1200 Internal";
			case 0x80860c7e: return "Atom Processor S1200 Internal";
			case 0x80860c7f: return "Atom Processor S1200 Internal";
			case 0x80860cf8: return "Ethernet Controller X710 Intel(R) FPGA Programmable Acceleration Card N3000 for Networking";
			case 0x80860d00: return "Crystal Well DRAM Controller";
			case 0x80860d01: return "Crystal Well PCI Express x16 Controller";
			case 0x80860d04: return "Crystal Well DRAM Controller";
			case 0x80860d05: return "Crystal Well PCI Express x8 Controller";
			case 0x80860d09: return "Crystal Well PCI Express x4 Controller";
			case 0x80860d0c: return "Crystal Well HD Audio Controller";
			case 0x80860d16: return "Crystal Well Integrated Graphics Controller";
			case 0x80860d26: return "Crystal Well Integrated Graphics Controller";
			case 0x80860d36: return "Crystal Well Integrated Graphics Controller";
			case 0x80860d4c: return "Ethernet Connection (11) I219-LM";
			case 0x80860d4d: return "Ethernet Connection (11) I219-V";
			case 0x80860d4e: return "Ethernet Connection (10) I219-LM";
			case 0x80860d4f: return "Ethernet Connection (10) I219-V";
			case 0x80860d53: return "Ethernet Connection (12) I219-LM";
			case 0x80860d55: return "Ethernet Connection (12) I219-V";
			case 0x80860d58: return "Ethernet Controller XXV710 Intel(R) FPGA Programmable Acceleration Card N3000 for Networking";
			case 0x80860d9f: return "Ethernet Controller (2) I225-IT";
			case 0x80860e00: return "Xeon E7 v2/Xeon E5 v2/Core i7 DMI2";
			case 0x80860e01: return "Xeon E7 v2/Xeon E5 v2/Core i7 PCI Express Root Port in DMI2 Mode";
			case 0x80860e02: return "Xeon E7 v2/Xeon E5 v2/Core i7 PCI Express Root Port 1a";
			case 0x80860e03: return "Xeon E7 v2/Xeon E5 v2/Core i7 PCI Express Root Port 1b";
			case 0x80860e04: return "Xeon E7 v2/Xeon E5 v2/Core i7 PCI Express Root Port 2a";
			case 0x80860e05: return "Xeon E7 v2/Xeon E5 v2/Core i7 PCI Express Root Port 2b";
			case 0x80860e06: return "Xeon E7 v2/Xeon E5 v2/Core i7 PCI Express Root Port 2c";
			case 0x80860e07: return "Xeon E7 v2/Xeon E5 v2/Core i7 PCI Express Root Port 2d";
			case 0x80860e08: return "Xeon E7 v2/Xeon E5 v2/Core i7 PCI Express Root Port 3a";
			case 0x80860e09: return "Xeon E7 v2/Xeon E5 v2/Core i7 PCI Express Root Port 3b";
			case 0x80860e0a: return "Xeon E7 v2/Xeon E5 v2/Core i7 PCI Express Root Port 3c";
			case 0x80860e0b: return "Xeon E7 v2/Xeon E5 v2/Core i7 PCI Express Root Port 3d";
			case 0x80860e10: return "Xeon E7 v2/Xeon E5 v2/Core i7 IIO Configuration Registers";
			case 0x80860e13: return "Xeon E7 v2/Xeon E5 v2/Core i7 IIO Configuration Registers";
			case 0x80860e17: return "Xeon E7 v2/Xeon E5 v2/Core i7 IIO Configuration Registers";
			case 0x80860e18: return "Xeon E7 v2/Xeon E5 v2/Core i7 IIO Configuration Registers";
			case 0x80860e1c: return "Xeon E7 v2/Xeon E5 v2/Core i7 IIO Configuration Registers";
			case 0x80860e1d: return "Xeon E7 v2/Xeon E5 v2/Core i7 R2PCIe";
			case 0x80860e1e: return "Xeon E7 v2/Xeon E5 v2/Core i7 UBOX Registers";
			case 0x80860e1f: return "Xeon E7 v2/Xeon E5 v2/Core i7 UBOX Registers";
			case 0x80860e20: return "Xeon E7 v2/Xeon E5 v2/Core i7 Crystal Beach DMA Channel 0";
			case 0x80860e21: return "Xeon E7 v2/Xeon E5 v2/Core i7 Crystal Beach DMA Channel 1";
			case 0x80860e22: return "Xeon E7 v2/Xeon E5 v2/Core i7 Crystal Beach DMA Channel 2";
			case 0x80860e23: return "Xeon E7 v2/Xeon E5 v2/Core i7 Crystal Beach DMA Channel 3";
			case 0x80860e24: return "Xeon E7 v2/Xeon E5 v2/Core i7 Crystal Beach DMA Channel 4";
			case 0x80860e25: return "Xeon E7 v2/Xeon E5 v2/Core i7 Crystal Beach DMA Channel 5";
			case 0x80860e26: return "Xeon E7 v2/Xeon E5 v2/Core i7 Crystal Beach DMA Channel 6";
			case 0x80860e27: return "Xeon E7 v2/Xeon E5 v2/Core i7 Crystal Beach DMA Channel 7";
			case 0x80860e28: return "Xeon E7 v2/Xeon E5 v2/Core i7 VTd/Memory Map/Misc";
			case 0x80860e29: return "Xeon E7 v2/Xeon E5 v2/Core i7 Memory Hotplug";
			case 0x80860e2a: return "Xeon E7 v2/Xeon E5 v2/Core i7 IIO RAS";
			case 0x80860e2c: return "Xeon E7 v2/Xeon E5 v2/Core i7 IOAPIC";
			case 0x80860e2e: return "Xeon E7 v2/Xeon E5 v2/Core i7 CBDMA";
			case 0x80860e2f: return "Xeon E7 v2/Xeon E5 v2/Core i7 CBDMA";
			case 0x80860e30: return "Xeon E7 v2/Xeon E5 v2/Core i7 Home Agent 0";
			case 0x80860e32: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link 0";
			case 0x80860e33: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link 1";
			case 0x80860e34: return "Xeon E7 v2/Xeon E5 v2/Core i7 R2PCIe";
			case 0x80860e36: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Ring Performance Ring Monitoring";
			case 0x80860e37: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Ring Performance Ring Monitoring";
			case 0x80860e38: return "Xeon E7 v2/Xeon E5 v2/Core i7 Home Agent 1";
			case 0x80860e3a: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link 2";
			case 0x80860e3e: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Ring Performance Ring Monitoring";
			case 0x80860e3f: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Ring Performance Ring Monitoring";
			case 0x80860e40: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link 2";
			case 0x80860e41: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Ring Registers";
			case 0x80860e43: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link Reut 2";
			case 0x80860e44: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link Reut 2";
			case 0x80860e45: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link Agent Register";
			case 0x80860e47: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link Agent Register";
			case 0x80860e60: return "Xeon E7 v2/Xeon E5 v2/Core i7 Home Agent 1";
			case 0x80860e68: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 1 Target Address/Thermal Registers";
			case 0x80860e6a: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 1 Channel Target Address Decoder Registers";
			case 0x80860e6b: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 1 Channel Target Address Decoder Registers";
			case 0x80860e6c: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 1 Channel Target Address Decoder Registers";
			case 0x80860e6d: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 1 Channel Target Address Decoder Registers";
			case 0x80860e71: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 0 RAS Registers";
			case 0x80860e74: return "Xeon E7 v2/Xeon E5 v2/Core i7 R2PCIe";
			case 0x80860e75: return "Xeon E7 v2/Xeon E5 v2/Core i7 R2PCIe";
			case 0x80860e77: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Ring Registers";
			case 0x80860e79: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 1 RAS Registers";
			case 0x80860e7d: return "Xeon E7 v2/Xeon E5 v2/Core i7 UBOX Registers";
			case 0x80860e7f: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Ring Registers";
			case 0x80860e80: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link 0";
			case 0x80860e81: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Ring Registers";
			case 0x80860e83: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link Reut 0";
			case 0x80860e84: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link Reut 0";
			case 0x80860e85: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link Agent Register";
			case 0x80860e87: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Registers";
			case 0x80860e90: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link 1";
			case 0x80860e93: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link 1";
			case 0x80860e94: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link Reut 1";
			case 0x80860e95: return "Xeon E7 v2/Xeon E5 v2/Core i7 QPI Link Agent Register";
			case 0x80860ea0: return "Xeon E7 v2/Xeon E5 v2/Core i7 Home Agent 0";
			case 0x80860ea8: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 0 Target Address/Thermal Registers";
			case 0x80860eaa: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 0 Channel Target Address Decoder Registers";
			case 0x80860eab: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 0 Channel Target Address Decoder Registers";
			case 0x80860eac: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 0 Channel Target Address Decoder Registers";
			case 0x80860ead: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 0 Channel Target Address Decoder Registers";
			case 0x80860eae: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO Registers";
			case 0x80860eaf: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO Registers";
			case 0x80860eb0: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 1 Channel 0-3 Thermal Control 0";
			case 0x80860eb1: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 1 Channel 0-3 Thermal Control 1";
			case 0x80860eb2: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 1 Channel 0-3 ERROR Registers 0";
			case 0x80860eb3: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 1 Channel 0-3 ERROR Registers 1";
			case 0x80860eb4: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 1 Channel 0-3 Thermal Control 2";
			case 0x80860eb5: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 1 Channel 0-3 Thermal Control 3";
			case 0x80860eb6: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 1 Channel 0-3 ERROR Registers 2";
			case 0x80860eb7: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 1 Channel 0-3 ERROR Registers 3";
			case 0x80860ebc: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO Registers";
			case 0x80860ebe: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO Registers";
			case 0x80860ebf: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO Registers";
			case 0x80860ec0: return "Xeon E7 v2/Xeon E5 v2/Core i7 Power Control Unit 0";
			case 0x80860ec1: return "Xeon E7 v2/Xeon E5 v2/Core i7 Power Control Unit 1";
			case 0x80860ec2: return "Xeon E7 v2/Xeon E5 v2/Core i7 Power Control Unit 2";
			case 0x80860ec3: return "Xeon E7 v2/Xeon E5 v2/Core i7 Power Control Unit 3";
			case 0x80860ec4: return "Xeon E7 v2/Xeon E5 v2/Core i7 Power Control Unit 4";
			case 0x80860ec8: return "Xeon E7 v2/Xeon E5 v2/Core i7 System Address Decoder";
			case 0x80860ec9: return "Xeon E7 v2/Xeon E5 v2/Core i7 Broadcast Registers";
			case 0x80860eca: return "Xeon E7 v2/Xeon E5 v2/Core i7 Broadcast Registers";
			case 0x80860ed8: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO";
			case 0x80860ed9: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO";
			case 0x80860edc: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO";
			case 0x80860edd: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO";
			case 0x80860ede: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO";
			case 0x80860edf: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO";
			case 0x80860ee0: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860ee1: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860ee2: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860ee3: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860ee4: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860ee5: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860ee6: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860ee7: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860ee8: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860ee9: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860eea: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860eeb: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860eec: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860eed: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860eee: return "Xeon E7 v2/Xeon E5 v2/Core i7 Unicast Registers";
			case 0x80860ef0: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 0 Channel 0-3 Thermal Control 0";
			case 0x80860ef1: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 0 Channel 0-3 Thermal Control 1";
			case 0x80860ef2: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 0 Channel 0-3 ERROR Registers 0";
			case 0x80860ef3: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 0 Channel 0-3 ERROR Registers 1";
			case 0x80860ef4: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 0 Channel 0-3 Thermal Control 2";
			case 0x80860ef5: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 0 Channel 0-3 Thermal Control 3";
			case 0x80860ef6: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 0 Channel 0-3 ERROR Registers 2";
			case 0x80860ef7: return "Xeon E7 v2/Xeon E5 v2/Core i7 Integrated Memory Controller 0 Channel 0-3 ERROR Registers 3";
			case 0x80860ef8: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO";
			case 0x80860ef9: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO";
			case 0x80860efa: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO";
			case 0x80860efb: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO";
			case 0x80860efc: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO";
			case 0x80860efd: return "Xeon E7 v2/Xeon E5 v2/Core i7 DDRIO";
			case 0x80860f00: return "Atom Processor Z36xxx/Z37xxx Series SoC Transaction Register";
			case 0x80860f04: return "Atom Processor Z36xxx/Z37xxx Series High Definition Audio Controller";
			case 0x80860f06: return "Atom Processor Z36xxx/Z37xxx Series LPIO1 DMA Controller";
			case 0x80860f08: return "Atom Processor Z36xxx/Z37xxx Series LPIO1 PWM Controller";
			case 0x80860f09: return "Atom Processor Z36xxx/Z37xxx Series LPIO1 PWM Controller";
			case 0x80860f0a: return "Atom Processor Z36xxx/Z37xxx Series LPIO1 HSUART Controller #1";
			case 0x80860f0c: return "Atom Processor Z36xxx/Z37xxx Series LPIO1 HSUART Controller #2";
			case 0x80860f0e: return "Atom Processor Z36xxx/Z37xxx Series LPIO1 SPI Controller";
			case 0x80860f12: return "Atom Processor E3800 Series SMBus Controller";
			case 0x80860f14: return "Atom Processor Z36xxx/Z37xxx Series SDIO Controller";
			case 0x80860f15: return "Atom Processor Z36xxx/Z37xxx Series SDIO Controller";
			case 0x80860f16: return "Atom Processor Z36xxx/Z37xxx Series SDIO Controller";
			case 0x80860f18: return "Atom Processor Z36xxx/Z37xxx Series Trusted Execution Engine";
			case 0x80860f1c: return "Atom Processor Z36xxx/Z37xxx Series Power Control Unit";
			case 0x80860f20: return "Atom Processor E3800 Series SATA IDE Controller";
			case 0x80860f21: return "Atom Processor E3800 Series SATA IDE Controller";
			case 0x80860f22: return "Atom Processor E3800 Series SATA AHCI Controller";
			case 0x80860f23: return "Atom Processor E3800 Series SATA AHCI Controller";
			case 0x80860f28: return "Atom Processor Z36xxx/Z37xxx Series LPE Audio Controller";
			case 0x80860f31: return "Atom Processor Z36xxx/Z37xxx Series Graphics & Display";
			case 0x80860f34: return "Atom Processor Z36xxx/Z37xxx Series USB EHCI";
			case 0x80860f35: return "Atom Processor Z36xxx/Z37xxx, Celeron N2000 Series USB xHCI";
			case 0x80860f37: return "Atom Processor Z36xxx/Z37xxx Series OTG USB Device";
			case 0x80860f38: return "Atom Processor Z36xxx/Z37xxx Series Camera ISP";
			case 0x80860f40: return "Atom Processor Z36xxx/Z37xxx Series LPIO2 DMA Controller";
			case 0x80860f41: return "Atom Processor Z36xxx/Z37xxx Series LPIO2 I2C Controller #1";
			case 0x80860f42: return "Atom Processor Z36xxx/Z37xxx Series LPIO2 I2C Controller #2";
			case 0x80860f43: return "Atom Processor Z36xxx/Z37xxx Series LPIO2 I2C Controller #3";
			case 0x80860f44: return "Atom Processor Z36xxx/Z37xxx Series LPIO2 I2C Controller #4";
			case 0x80860f45: return "Atom Processor Z36xxx/Z37xxx Series LPIO2 I2C Controller #5";
			case 0x80860f46: return "Atom Processor Z36xxx/Z37xxx Series LPIO2 I2C Controller #6";
			case 0x80860f47: return "Atom Processor Z36xxx/Z37xxx Series LPIO2 I2C Controller #7";
			case 0x80860f48: return "Atom Processor E3800 Series PCI Express Root Port 1";
			case 0x80860f4a: return "Atom Processor E3800 Series PCI Express Root Port 2";
			case 0x80860f4c: return "Atom Processor E3800 Series PCI Express Root Port 3";
			case 0x80860f4e: return "Atom Processor E3800 Series PCI Express Root Port 4";
			case 0x80860f50: return "Atom Processor E3800 Series eMMC 4.5 Controller";
			case 0x80861000: return "82542 Gigabit Ethernet Controller (Fiber)";
			case 0x80861001: return "82543GC Gigabit Ethernet Controller (Fiber)";
			case 0x80861002: return "Pro 100 LAN+Modem 56 Cardbus II";
			case 0x80861004: return "82543GC Gigabit Ethernet Controller (Copper)";
			case 0x80861008: return "82544EI Gigabit Ethernet Controller (Copper)";
			case 0x80861009: return "82544EI Gigabit Ethernet Controller (Fiber)";
			case 0x8086100a: return "82540EM Gigabit Ethernet Controller";
			case 0x8086100c: return "82544GC Gigabit Ethernet Controller (Copper)";
			case 0x8086100d: return "82544GC Gigabit Ethernet Controller (LOM)";
			case 0x8086100e: return "82540EM Gigabit Ethernet Controller";
			case 0x8086100f: return "82545EM Gigabit Ethernet Controller (Copper)";
			case 0x80861010: return "82546EB Gigabit Ethernet Controller (Copper)";
			case 0x80861011: return "82545EM Gigabit Ethernet Controller (Fiber)";
			case 0x80861012: return "82546EB Gigabit Ethernet Controller (Fiber)";
			case 0x80861013: return "82541EI Gigabit Ethernet Controller";
			case 0x80861014: return "82541ER Gigabit Ethernet Controller";
			case 0x80861015: return "82540EM Gigabit Ethernet Controller (LOM)";
			case 0x80861016: return "82540EP Gigabit Ethernet Controller (Mobile)";
			case 0x80861017: return "82540EP Gigabit Ethernet Controller";
			case 0x80861018: return "82541EI Gigabit Ethernet Controller";
			case 0x80861019: return "82547EI Gigabit Ethernet Controller";
			case 0x8086101a: return "82547EI Gigabit Ethernet Controller (Mobile)";
			case 0x8086101d: return "82546EB Gigabit Ethernet Controller";
			case 0x8086101e: return "82540EP Gigabit Ethernet Controller (Mobile)";
			case 0x8086101f: return "Ethernet Controller V710 for 5GBASE-T";
			case 0x80861026: return "82545GM Gigabit Ethernet Controller";
			case 0x80861027: return "82545GM Gigabit Ethernet Controller";
			case 0x80861028: return "82545GM Gigabit Ethernet Controller";
			case 0x80861029: return "82559 Ethernet Controller";
			case 0x80861030: return "82559 InBusiness 10/100";
			case 0x80861031: return "82801CAM (ICH3) PRO/100 VE (LOM) Ethernet Controller";
			case 0x80861032: return "82801CAM (ICH3) PRO/100 VE Ethernet Controller";
			case 0x80861033: return "82801CAM (ICH3) PRO/100 VM (LOM) Ethernet Controller";
			case 0x80861034: return "82801CAM (ICH3) PRO/100 VM Ethernet Controller";
			case 0x80861035: return "82801CAM (ICH3)/82562EH (LOM) Ethernet Controller";
			case 0x80861036: return "82801CAM (ICH3) 82562EH Ethernet Controller";
			case 0x80861037: return "82801CAM (ICH3) Chipset Ethernet Controller";
			case 0x80861038: return "82801CAM (ICH3) PRO/100 VM (KM) Ethernet Controller";
			case 0x80861039: return "82801DB PRO/100 VE (LOM) Ethernet Controller";
			case 0x8086103a: return "82801DB PRO/100 VE (CNR) Ethernet Controller";
			case 0x8086103b: return "82801DB PRO/100 VM (LOM) Ethernet Controller";
			case 0x8086103c: return "82801DB PRO/100 VM (CNR) Ethernet Controller";
			case 0x8086103d: return "82801DB PRO/100 VE (MOB) Ethernet Controller";
			case 0x8086103e: return "82801DB PRO/100 VM (MOB) Ethernet Controller";
			case 0x80861040: return "536EP Data Fax Modem";
			case 0x80861043: return "PRO/Wireless LAN 2100 3B Mini PCI Adapter";
			case 0x80861048: return "82597EX 10GbE Ethernet Controller";
			case 0x80861049: return "82566MM Gigabit Network Connection";
			case 0x8086104a: return "82566DM Gigabit Network Connection";
			case 0x8086104b: return "82566DC Gigabit Network Connection";
			case 0x8086104c: return "82562V 10/100 Network Connection";
			case 0x8086104d: return "82566MC Gigabit Network Connection";
			case 0x8086104e: return "Ethernet Controller X710 for 10 Gigabit SFP+";
			case 0x8086104f: return "Ethernet Controller X710 for 10 Gigabit backplane";
			case 0x80861050: return "82562EZ 10/100 Ethernet Controller";
			case 0x80861051: return "82801EB/ER (ICH5/ICH5R) integrated LAN Controller";
			case 0x80861052: return "PRO/100 VM Network Connection";
			case 0x80861053: return "PRO/100 VM Network Connection";
			case 0x80861054: return "PRO/100 VE Network Connection";
			case 0x80861055: return "PRO/100 VM Network Connection";
			case 0x80861056: return "PRO/100 VE Network Connection";
			case 0x80861057: return "PRO/100 VE Network Connection";
			case 0x80861059: return "82551QM Ethernet Controller";
			case 0x8086105b: return "82546GB Gigabit Ethernet Controller (Copper)";
			case 0x8086105e: return "82571EB/82571GB Gigabit Ethernet Controller D0/D1 (copper applications)";
			case 0x8086105f: return "82571EB Gigabit Ethernet Controller";
			case 0x80861060: return "82571EB Gigabit Ethernet Controller";
			case 0x80861064: return "82562ET/EZ/GT/GZ - PRO/100 VE (LOM) Ethernet Controller";
			case 0x80861065: return "82562ET/EZ/GT/GZ - PRO/100 VE Ethernet Controller";
			case 0x80861066: return "82562 EM/EX/GX - PRO/100 VM (LOM) Ethernet Controller";
			case 0x80861067: return "82562 EM/EX/GX - PRO/100 VM Ethernet Controller";
			case 0x80861068: return "82562ET/EZ/GT/GZ - PRO/100 VE (LOM) Ethernet Controller Mobile";
			case 0x80861069: return "82562EM/EX/GX - PRO/100 VM (LOM) Ethernet Controller Mobile";
			case 0x8086106a: return "82562G - PRO/100 VE (LOM) Ethernet Controller";
			case 0x8086106b: return "82562G - PRO/100 VE Ethernet Controller Mobile";
			case 0x80861075: return "82547GI Gigabit Ethernet Controller";
			case 0x80861076: return "82541GI Gigabit Ethernet Controller";
			case 0x80861077: return "82541GI Gigabit Ethernet Controller";
			case 0x80861078: return "82541ER Gigabit Ethernet Controller";
			case 0x80861079: return "82546GB Gigabit Ethernet Controller";
			case 0x8086107a: return "82546GB Gigabit Ethernet Controller";
			case 0x8086107b: return "82546GB Gigabit Ethernet Controller";
			case 0x8086107c: return "82541PI Gigabit Ethernet Controller";
			case 0x8086107d: return "82572EI Gigabit Ethernet Controller (Copper)";
			case 0x8086107e: return "82572EI Gigabit Ethernet Controller (Fiber)";
			case 0x8086107f: return "82572EI Gigabit Ethernet Controller";
			case 0x80861080: return "FA82537EP 56K V.92 Data/Fax Modem PCI";
			case 0x80861081: return "631xESB/632xESB LAN Controller Copper";
			case 0x80861082: return "631xESB/632xESB LAN Controller fiber";
			case 0x80861083: return "631xESB/632xESB LAN Controller SERDES";
			case 0x80861084: return "631xESB/632xESB IDE Redirection";
			case 0x80861085: return "631xESB/632xESB Serial Port Redirection";
			case 0x80861086: return "631xESB/632xESB IPMI/KCS0";
			case 0x80861087: return "631xESB/632xESB UHCI Redirection";
			case 0x80861089: return "631xESB/632xESB BT";
			case 0x8086108a: return "82546GB Gigabit Ethernet Controller";
			case 0x8086108b: return "82573V Gigabit Ethernet Controller (Copper)";
			case 0x8086108c: return "82573E Gigabit Ethernet Controller (Copper)";
			case 0x8086108e: return "82573E KCS (Active Management)";
			case 0x8086108f: return "Active Management Technology - SOL";
			case 0x80861091: return "PRO/100 VM Network Connection";
			case 0x80861092: return "PRO/100 VE Network Connection";
			case 0x80861093: return "PRO/100 VM Network Connection";
			case 0x80861094: return "PRO/100 VE Network Connection";
			case 0x80861095: return "PRO/100 VE Network Connection";
			case 0x80861096: return "80003ES2LAN Gigabit Ethernet Controller (Copper)";
			case 0x80861097: return "631xESB/632xESB DPT LAN Controller (Fiber)";
			case 0x80861098: return "80003ES2LAN Gigabit Ethernet Controller (Serdes)";
			case 0x80861099: return "82546GB Gigabit Ethernet Controller (Copper)";
			case 0x8086109a: return "82573L Gigabit Ethernet Controller";
			case 0x8086109b: return "82546GB PRO/1000 GF Quad Port Server Adapter";
			case 0x8086109e: return "82597EX 10GbE Ethernet Controller";
			case 0x808610a0: return "82571EB PRO/1000 AT Quad Port Bypass Adapter";
			case 0x808610a1: return "82571EB PRO/1000 AF Quad Port Bypass Adapter";
			case 0x808610a4: return "82571EB Gigabit Ethernet Controller";
			case 0x808610a5: return "82571EB Gigabit Ethernet Controller (Fiber)";
			case 0x808610a6: return "82599EB 10-Gigabit Dummy Function";
			case 0x808610a7: return "82575EB Gigabit Network Connection";
			case 0x808610a9: return "82575EB Gigabit Backplane Connection";
			case 0x808610b0: return "82573L PRO/1000 PL Network Connection";
			case 0x808610b2: return "82573V PRO/1000 PM Network Connection";
			case 0x808610b3: return "82573E PRO/1000 PM Network Connection";
			case 0x808610b4: return "82573L PRO/1000 PL Network Connection";
			case 0x808610b5: return "82546GB Gigabit Ethernet Controller (Copper)";
			case 0x808610b6: return "82598 10GbE PCI-Express Ethernet Controller";
			case 0x808610b9: return "82572EI Gigabit Ethernet Controller (Copper)";
			case 0x808610ba: return "80003ES2LAN Gigabit Ethernet Controller (Copper)";
			case 0x808610bb: return "80003ES2LAN Gigabit Ethernet Controller (Serdes)";
			case 0x808610bc: return "82571EB/82571GB Gigabit Ethernet Controller (Copper)";
			case 0x808610bd: return "82566DM-2 Gigabit Network Connection";
			case 0x808610bf: return "82567LF Gigabit Network Connection";
			case 0x808610c0: return "82562V-2 10/100 Network Connection";
			case 0x808610c2: return "82562G-2 10/100 Network Connection";
			case 0x808610c3: return "82562GT-2 10/100 Network Connection";
			case 0x808610c4: return "82562GT 10/100 Network Connection";
			case 0x808610c5: return "82562G 10/100 Network Connection";
			case 0x808610c6: return "82598EB 10-Gigabit AF Dual Port Network Connection";
			case 0x808610c7: return "82598EB 10-Gigabit AF Network Connection";
			case 0x808610c8: return "82598EB 10-Gigabit AT Network Connection";
			case 0x808610c9: return "82576 Gigabit Network Connection";
			case 0x808610ca: return "82576 Virtual Function";
			case 0x808610cb: return "82567V Gigabit Network Connection";
			case 0x808610cc: return "82567LM-2 Gigabit Network Connection";
			case 0x808610cd: return "82567LF-2 Gigabit Network Connection";
			case 0x808610ce: return "82567V-2 Gigabit Network Connection";
			case 0x808610d3: return "82574L Gigabit Network Connection";
			case 0x808610d4: return "Matrox Concord GE (customized Intel 82574)";
			case 0x808610d5: return "82571PT Gigabit PT Quad Port Server ExpressModule";
			case 0x808610d6: return "82575GB Gigabit Network Connection";
			case 0x808610d8: return "82599EB 10 Gigabit Unprogrammed";
			case 0x808610d9: return "82571EB Dual Port Gigabit Mezzanine Adapter";
			case 0x808610da: return "82571EB Quad Port Gigabit Mezzanine Adapter";
			case 0x808610db: return "82598EB 10-Gigabit Dual Port Network Connection";
			case 0x808610dd: return "82598EB 10-Gigabit AT CX4 Network Connection";
			case 0x808610de: return "82567LM-3 Gigabit Network Connection";
			case 0x808610df: return "82567LF-3 Gigabit Network Connection";
			case 0x808610e1: return "82598EB 10-Gigabit AF Dual Port Network Connection";
			case 0x808610e2: return "82575GB Gigabit Network Connection";
			case 0x808610e5: return "82567LM-4 Gigabit Network Connection";
			case 0x808610e6: return "82576 Gigabit Network Connection";
			case 0x808610e7: return "82576 Gigabit Network Connection";
			case 0x808610e8: return "82576 Gigabit Network Connection";
			case 0x808610ea: return "82577LM Gigabit Network Connection";
			case 0x808610eb: return "82577LC Gigabit Network Connection";
			case 0x808610ec: return "82598EB 10-Gigabit AT CX4 Network Connection";
			case 0x808610ed: return "82599 Ethernet Controller Virtual Function";
			case 0x808610ef: return "82578DM Gigabit Network Connection";
			case 0x808610f0: return "82578DC Gigabit Network Connection";
			case 0x808610f1: return "82598EB 10-Gigabit AF Dual Port Network Connection";
			case 0x808610f4: return "82598EB 10-Gigabit AF Network Connection";
			case 0x808610f5: return "82567LM Gigabit Network Connection";
			case 0x808610f6: return "82574L Gigabit Network Connection";
			case 0x808610f7: return "10 Gigabit BR KX4 Dual Port Network Connection";
			case 0x808610f8: return "82599 10 Gigabit Dual Port Backplane Connection";
			case 0x808610f9: return "82599 10 Gigabit Dual Port Network Connection";
			case 0x808610fb: return "82599ES 10-Gigabit SFI/SFP+ Network Connection";
			case 0x808610fc: return "82599 10 Gigabit Dual Port Network Connection";
			case 0x808610fe: return "82552 10/100 Network Connection";
			case 0x80861107: return "PRO/1000 MF Server Adapter (LX)";
			case 0x80861130: return "82815 815 Chipset Host Bridge and Memory Controller Hub";
			case 0x80861131: return "82815 815 Chipset AGP Bridge";
			case 0x80861132: return "82815 Chipset Graphics Controller (CGC)";
			case 0x80861136: return "Thunderbolt 4 Bridge [Maple Ridge 4C 2020]";
			case 0x80861137: return "Thunderbolt 4 NHI [Maple Ridge 4C 2020]";
			case 0x80861138: return "Thunderbolt 4 USB Controller [Maple Ridge 4C 2020]";
			case 0x80861161: return "82806AA PCI64 Hub Advanced Programmable Interrupt Controller";
			case 0x80861162: return "Xscale 80200 Big Endian Companion Chip";
			case 0x80861190: return "Merrifield SD/SDIO/eMMC Controller";
			case 0x80861191: return "Merrifield Serial IO HSUART Controller";
			case 0x80861192: return "Merrifield Serial IO HSUART DMA Controller";
			case 0x80861194: return "Merrifield Serial IO SPI Controller";
			case 0x80861195: return "Merrifield Serial IO I2C Controller";
			case 0x80861196: return "Merrifield Serial IO I2C Controller";
			case 0x80861199: return "Merrifield GPIO Controller";
			case 0x8086119e: return "Merrifield USB Device Controller (OTG)";
			case 0x808611a0: return "Merrifield SCU IPC";
			case 0x808611a1: return "Merrifield Power Management Unit";
			case 0x808611a2: return "Merrifield Serial IO DMA Controller";
			case 0x808611a5: return "Merrifield Serial IO PWM Controller";
			case 0x808611c3: return "Quark SoC X1000 PCIe Root Port 0";
			case 0x808611c4: return "Quark SoC X1000 PCIe Root Port 1";
			case 0x80861200: return "IXP1200 Network Processor";
			case 0x80861209: return "8255xER/82551IT Fast Ethernet Controller";
			case 0x80861221: return "82092AA PCI to PCMCIA Bridge";
			case 0x80861222: return "82092AA IDE Controller";
			case 0x80861223: return "SAA7116";
			case 0x80861225: return "82452KX/GX [Orion]";
			case 0x80861226: return "82596 PRO/10 PCI";
			case 0x80861227: return "82865 EtherExpress PRO/100A";
			case 0x80861228: return "82556 EtherExpress PRO/100 Smart";
			case 0x80861229: return "82557/8/9/0/1 Ethernet Pro 100";
			case 0x8086122d: return "430FX - 82437FX TSC [Triton I]";
			case 0x8086122e: return "82371FB PIIX ISA [Triton I]";
			case 0x80861230: return "82371FB PIIX IDE [Triton I]";
			case 0x80861231: return "DSVD Modem";
			case 0x80861234: return "430MX - 82371MX Mobile PCI I/O IDE Xcelerator (MPIIX)";
			case 0x80861235: return "430MX - 82437MX Mob. System Ctrlr (MTSC) & 82438MX Data Path (MTDP)";
			case 0x80861237: return "440FX - 82441FX PMC [Natoma]";
			case 0x80861239: return "82371FB PIIX IDE Interface";
			case 0x8086123b: return "82380PB PCI to PCI Docking Bridge";
			case 0x8086123c: return "82380AB (MISA) Mobile PCI-to-ISA Bridge";
			case 0x8086123d: return "683053 Programmable Interrupt Device";
			case 0x8086123e: return "82466GX (IHPC) Integrated Hot-Plug Controller (hidden mode)";
			case 0x8086123f: return "82466GX Integrated Hot-Plug Controller (IHPC)";
			case 0x80861240: return "82752 (752) AGP Graphics Accelerator";
			case 0x8086124b: return "82380FB (MPCI2) Mobile Docking Controller";
			case 0x8086124c: return "Ethernet Connection E823-L for backplane";
			case 0x8086124d: return "Ethernet Connection E823-L for SFP";
			case 0x8086124e: return "Ethernet Connection E823-L/X557-AT 10GBASE-T";
			case 0x8086124f: return "Ethernet Connection E823-L 1GbE";
			case 0x80861250: return "430HX - 82439HX TXC [Triton II]";
			case 0x80861360: return "82806AA PCI64 Hub PCI Bridge";
			case 0x80861361: return "82806AA PCI64 Hub Controller (HRes)";
			case 0x80861460: return "82870P2 P64H2 Hub PCI Bridge";
			case 0x80861461: return "82870P2 P64H2 I/OxAPIC";
			case 0x80861462: return "82870P2 P64H2 Hot Plug Controller";
			case 0x80861501: return "82567V-3 Gigabit Network Connection";
			case 0x80861502: return "82579LM Gigabit Network Connection (Lewisville)";
			case 0x80861503: return "82579V Gigabit Network Connection";
			case 0x80861507: return "Ethernet Express Module X520-P2";
			case 0x80861508: return "82598EB Gigabit BX Network Connection";
			case 0x80861509: return "82580 Gigabit Network Connection";
			case 0x8086150a: return "82576NS Gigabit Network Connection";
			case 0x8086150b: return "82598EB 10-Gigabit AT2 Server Adapter";
			case 0x8086150c: return "82583V Gigabit Network Connection";
			case 0x8086150d: return "82576 Gigabit Backplane Connection";
			case 0x8086150e: return "82580 Gigabit Network Connection";
			case 0x8086150f: return "82580 Gigabit Fiber Network Connection";
			case 0x80861510: return "82580 Gigabit Backplane Connection";
			case 0x80861511: return "82580 Gigabit SFP Connection";
			case 0x80861513: return "CV82524 Thunderbolt Controller [Light Ridge 4C 2010]";
			case 0x80861514: return "Ethernet X520 10GbE Dual Port KX4 Mezz";
			case 0x80861515: return "X540 Ethernet Controller Virtual Function";
			case 0x80861516: return "82580 Gigabit Network Connection";
			case 0x80861517: return "82599ES 10 Gigabit Network Connection";
			case 0x80861518: return "82576NS SerDes Gigabit Network Connection";
			case 0x8086151a: return "DSL2310 Thunderbolt Controller [Eagle Ridge 2C 2011]";
			case 0x8086151b: return "CVL2510 Thunderbolt Controller [Light Peak 2C 2010]";
			case 0x8086151c: return "82599 10 Gigabit TN Network Connection";
			case 0x8086151d: return "Ethernet Connection E823-L for QSFP";
			case 0x80861520: return "I350 Ethernet Controller Virtual Function";
			case 0x80861521: return "I350 Gigabit Network Connection";
			case 0x80861522: return "I350 Gigabit Fiber Network Connection";
			case 0x80861523: return "I350 Gigabit Backplane Connection";
			case 0x80861524: return "I350 Gigabit Connection";
			case 0x80861525: return "82567V-4 Gigabit Network Connection";
			case 0x80861526: return "82576 Gigabit Network Connection";
			case 0x80861527: return "82580 Gigabit Fiber Network Connection";
			case 0x80861528: return "Ethernet Controller 10-Gigabit X540-AT2";
			case 0x80861529: return "82599 10 Gigabit Dual Port Network Connection with FCoE";
			case 0x8086152a: return "82599 10 Gigabit Dual Port Backplane Connection with FCoE";
			case 0x8086152e: return "82599 Virtual Function";
			case 0x8086152f: return "I350 Virtual Function";
			case 0x80861530: return "X540 Virtual Function";
			case 0x80861531: return "I210 Gigabit Unprogrammed";
			case 0x80861533: return "I210 Gigabit Network Connection";
			case 0x80861536: return "I210 Gigabit Fiber Network Connection";
			case 0x80861537: return "I210 Gigabit Backplane Connection";
			case 0x80861538: return "I210 Gigabit Network Connection";
			case 0x80861539: return "I211 Gigabit Network Connection";
			case 0x8086153a: return "Ethernet Connection I217-LM";
			case 0x8086153b: return "Ethernet Connection I217-V";
			case 0x80861547: return "DSL3510 Thunderbolt Controller [Cactus Ridge 4C 2012]";
			case 0x80861548: return "DSL3310 Thunderbolt Controller [Cactus Ridge 2C 2012]";
			case 0x80861549: return "DSL2210 Thunderbolt Controller [Port Ridge 1C 2011]";
			case 0x8086154a: return "Ethernet Server Adapter X520-4";
			case 0x8086154c: return "Ethernet Virtual Function 700 Series";
			case 0x8086154d: return "Ethernet 10G 2P X520 Adapter";
			case 0x80861557: return "82599 10 Gigabit Network Connection";
			case 0x80861558: return "Ethernet Converged Network Adapter X520-Q1";
			case 0x80861559: return "Ethernet Connection I218-V";
			case 0x8086155a: return "Ethernet Connection I218-LM";
			case 0x8086155c: return "Ethernet Server Bypass Adapter";
			case 0x8086155d: return "Ethernet Server Bypass Adapter";
			case 0x80861560: return "Ethernet Controller X540";
			case 0x80861563: return "Ethernet Controller 10G X550T";
			case 0x80861564: return "X550 Virtual Function";
			case 0x80861565: return "X550 Virtual Function";
			case 0x80861566: return "DSL4410 Thunderbolt NHI [Redwood Ridge 2C 2013]";
			case 0x80861567: return "DSL4410 Thunderbolt Bridge [Redwood Ridge 2C 2013]";
			case 0x80861568: return "DSL4510 Thunderbolt NHI [Redwood Ridge 4C 2013]";
			case 0x80861569: return "DSL4510 Thunderbolt Bridge [Redwood Ridge 4C 2013]";
			case 0x8086156a: return "DSL5320 Thunderbolt 2 NHI [Falcon Ridge 2C 2013]";
			case 0x8086156b: return "DSL5320 Thunderbolt 2 Bridge [Falcon Ridge 2C 2013]";
			case 0x8086156c: return "DSL5520 Thunderbolt 2 NHI [Falcon Ridge 4C 2013]";
			case 0x8086156d: return "DSL5520 Thunderbolt 2 Bridge [Falcon Ridge 4C 2013]";
			case 0x8086156f: return "Ethernet Connection I219-LM";
			case 0x80861570: return "Ethernet Connection I219-V";
			case 0x80861571: return "Ethernet Virtual Function 700 Series";
			case 0x80861572: return "Ethernet Controller X710 for 10GbE SFP+";
			case 0x80861574: return "Ethernet Controller XL710 Emulation";
			case 0x80861575: return "DSL6340 Thunderbolt 3 NHI [Alpine Ridge 2C 2015]";
			case 0x80861576: return "DSL6340 Thunderbolt 3 Bridge [Alpine Ridge 2C 2015]";
			case 0x80861577: return "DSL6540 Thunderbolt 3 NHI [Alpine Ridge 4C 2015]";
			case 0x80861578: return "DSL6540 Thunderbolt 3 Bridge [Alpine Ridge 4C 2015]";
			case 0x8086157b: return "I210 Gigabit Network Connection";
			case 0x8086157c: return "I210 Gigabit Backplane Connection";
			case 0x8086157d: return "DSL5110 Thunderbolt 2 NHI (Low Power) [Win Ridge 2C 2014]";
			case 0x8086157e: return "DSL5110 Thunderbolt 2 Bridge (Low Power) [Win Ridge 2C 2014]";
			case 0x80861580: return "Ethernet Controller XL710 for 40GbE backplane";
			case 0x80861581: return "Ethernet Controller X710 for 10GbE backplane";
			case 0x80861583: return "Ethernet Controller XL710 for 40GbE QSFP+";
			case 0x80861584: return "Ethernet Controller XL710 for 40GbE QSFP+";
			case 0x80861585: return "Ethernet Controller X710 for 10GbE QSFP+";
			case 0x80861586: return "Ethernet Controller X710 for 10GBASE-T";
			case 0x80861587: return "Ethernet Controller XL710 for 20GbE backplane";
			case 0x80861588: return "Ethernet Controller XL710 for 20GbE backplane";
			case 0x80861589: return "Ethernet Controller X710/X557-AT 10GBASE-T";
			case 0x8086158a: return "Ethernet Controller XXV710 for 25GbE backplane";
			case 0x8086158b: return "Ethernet Controller XXV710 for 25GbE SFP28";
			case 0x80861591: return "Ethernet Controller E810-C for backplane";
			case 0x80861592: return "Ethernet Controller E810-C for QSFP";
			case 0x80861593: return "Ethernet Controller E810-C for SFP";
			case 0x80861599: return "Ethernet Controller E810-XXV for backplane";
			case 0x8086159a: return "Ethernet Controller E810-XXV for QSFP";
			case 0x8086159b: return "Ethernet Controller E810-XXV for SFP";
			case 0x808615a0: return "Ethernet Connection (2) I218-LM";
			case 0x808615a1: return "Ethernet Connection (2) I218-V";
			case 0x808615a2: return "Ethernet Connection (3) I218-LM";
			case 0x808615a3: return "Ethernet Connection (3) I218-V";
			case 0x808615a4: return "Ethernet Switch FM10000 Host Interface";
			case 0x808615a5: return "Ethernet Switch FM10000 Host Virtual Interface";
			case 0x808615a8: return "Ethernet Connection X552 Virtual Function";
			case 0x808615a9: return "X552 Virtual Function";
			case 0x808615aa: return "Ethernet Connection X552 10 GbE Backplane";
			case 0x808615ab: return "Ethernet Connection X552 10 GbE Backplane";
			case 0x808615ac: return "Ethernet Connection X552 10 GbE SFP+";
			case 0x808615ad: return "Ethernet Connection X552/X557-AT 10GBASE-T";
			case 0x808615ae: return "Ethernet Connection X552 1000BASE-T";
			case 0x808615b0: return "Ethernet Connection X552 Backplane";
			case 0x808615b4: return "X553 Virtual Function";
			case 0x808615b5: return "DSL6340 USB 3.1 Controller [Alpine Ridge]";
			case 0x808615b6: return "DSL6540 USB 3.1 Controller [Alpine Ridge]";
			case 0x808615b7: return "Ethernet Connection (2) I219-LM";
			case 0x808615b8: return "Ethernet Connection (2) I219-V";
			case 0x808615b9: return "Ethernet Connection (3) I219-LM";
			case 0x808615bb: return "Ethernet Connection (7) I219-LM";
			case 0x808615bc: return "Ethernet Connection (7) I219-V";
			case 0x808615bd: return "Ethernet Connection (6) I219-LM";
			case 0x808615be: return "Ethernet Connection (6) I219-V";
			case 0x808615bf: return "JHL6240 Thunderbolt 3 NHI (Low Power) [Alpine Ridge LP 2016]";
			case 0x808615c0: return "JHL6240 Thunderbolt 3 Bridge (Low Power) [Alpine Ridge LP 2016]";
			case 0x808615c1: return "JHL6240 Thunderbolt 3 USB 3.1 Controller (Low Power) [Alpine Ridge LP 2016]";
			case 0x808615c2: return "Ethernet Connection X553 Backplane";
			case 0x808615c3: return "Ethernet Connection X553 Backplane";
			case 0x808615c4: return "Ethernet Connection X553 10 GbE SFP+";
			case 0x808615c5: return "X553 Virtual Function";
			case 0x808615c6: return "Ethernet Connection X553 1GbE";
			case 0x808615c7: return "Ethernet Connection X553 1GbE";
			case 0x808615c8: return "Ethernet Connection X553/X557-AT 10GBASE-T";
			case 0x808615ce: return "Ethernet Connection X553 10 GbE SFP+";
			case 0x808615d0: return "Ethernet SDI Adapter";
			case 0x808615d1: return "Ethernet Controller 10G X550T";
			case 0x808615d2: return "JHL6540 Thunderbolt 3 NHI (C step) [Alpine Ridge 4C 2016]";
			case 0x808615d3: return "JHL6540 Thunderbolt 3 Bridge (C step) [Alpine Ridge 4C 2016]";
			case 0x808615d4: return "JHL6540 Thunderbolt 3 USB Controller (C step) [Alpine Ridge 4C 2016]";
			case 0x808615d5: return "Ethernet SDI Adapter FM10420-25GbE-DA2";
			case 0x808615d6: return "Ethernet Connection (5) I219-V";
			case 0x808615d7: return "Ethernet Connection (4) I219-LM";
			case 0x808615d8: return "Ethernet Connection (4) I219-V";
			case 0x808615d9: return "JHL6340 Thunderbolt 3 NHI (C step) [Alpine Ridge 2C 2016]";
			case 0x808615da: return "JHL6340 Thunderbolt 3 Bridge (C step) [Alpine Ridge 2C 2016]";
			case 0x808615db: return "JHL6340 Thunderbolt 3 USB 3.1 Controller (C step) [Alpine Ridge 2C 2016]";
			case 0x808615df: return "Ethernet Connection (8) I219-LM";
			case 0x808615e0: return "Ethernet Connection (8) I219-V";
			case 0x808615e1: return "Ethernet Connection (9) I219-LM";
			case 0x808615e2: return "Ethernet Connection (9) I219-V";
			case 0x808615e3: return "Ethernet Connection (5) I219-LM";
			case 0x808615e4: return "Ethernet Connection X553 1GbE";
			case 0x808615e5: return "Ethernet Connection X553 1GbE";
			case 0x808615e7: return "JHL7540 Thunderbolt 3 Bridge [Titan Ridge 2C 2018]";
			case 0x808615e8: return "JHL7540 Thunderbolt 3 NHI [Titan Ridge 2C 2018]";
			case 0x808615e9: return "JHL7540 Thunderbolt 3 USB Controller [Titan Ridge 2C 2018]";
			case 0x808615ea: return "JHL7540 Thunderbolt 3 Bridge [Titan Ridge 4C 2018]";
			case 0x808615eb: return "JHL7540 Thunderbolt 3 NHI [Titan Ridge 4C 2018]";
			case 0x808615ec: return "JHL7540 Thunderbolt 3 USB Controller [Titan Ridge 4C 2018]";
			case 0x808615ef: return "JHL7540 Thunderbolt 3 Bridge [Titan Ridge DD 2018]";
			case 0x808615f0: return "JHL7540 Thunderbolt 3 USB Controller [Titan Ridge DD 2018]";
			case 0x808615f2: return "Ethernet Controller I225-LM";
			case 0x808615f3: return "Ethernet Controller I225-V";
			case 0x808615f4: return "Ethernet Connection (15) I219-LM";
			case 0x808615f5: return "Ethernet Connection (15) I219-V";
			case 0x808615f6: return "I210 Gigabit Ethernet Connection";
			case 0x808615f9: return "Ethernet Connection (14) I219-LM";
			case 0x808615fa: return "Ethernet Connection (14) I219-V";
			case 0x808615fb: return "Ethernet Connection (13) I219-LM";
			case 0x808615fc: return "Ethernet Connection (13) I219-V";
			case 0x808615ff: return "Ethernet Controller X710 for 10GBASE-T";
			case 0x80861600: return "Broadwell-U Host Bridge -OPI";
			case 0x80861601: return "Broadwell-U PCI Express x16 Controller";
			case 0x80861602: return "Broadwell-U Integrated Graphics";
			case 0x80861603: return "Broadwell-U Processor Thermal Subsystem";
			case 0x80861604: return "Broadwell-U Host Bridge -OPI";
			case 0x80861605: return "Broadwell-U PCI Express x8 Controller";
			case 0x80861606: return "HD Graphics";
			case 0x80861607: return "Broadwell-U CHAPS Device";
			case 0x80861608: return "Broadwell-U Host Bridge -OPI";
			case 0x80861609: return "Broadwell-U x4 PCIe";
			case 0x8086160a: return "Broadwell-U Integrated Graphics";
			case 0x8086160b: return "Broadwell-U Integrated Graphics";
			case 0x8086160c: return "Broadwell-U Audio Controller";
			case 0x8086160d: return "Broadwell-U Integrated Graphics";
			case 0x8086160e: return "Broadwell-U Integrated Graphics";
			case 0x8086160f: return "Broadwell-U SoftSKU";
			case 0x80861610: return "Broadwell-U Host Bridge - DMI";
			case 0x80861612: return "HD Graphics 5600";
			case 0x80861614: return "Broadwell-U Host Bridge - DMI";
			case 0x80861616: return "HD Graphics 5500";
			case 0x80861618: return "Broadwell-U Host Bridge - DMI";
			case 0x8086161a: return "Broadwell-U Integrated Graphics";
			case 0x8086161b: return "Broadwell-U Integrated Graphics";
			case 0x8086161d: return "Broadwell-U Integrated Graphics";
			case 0x8086161e: return "HD Graphics 5300";
			case 0x80861622: return "Iris Pro Graphics 6200";
			case 0x80861626: return "HD Graphics 6000";
			case 0x8086162a: return "Iris Pro Graphics P6300";
			case 0x8086162b: return "Iris Graphics 6100";
			case 0x8086162d: return "Broadwell-U Integrated Graphics";
			case 0x8086162e: return "Broadwell-U Integrated Graphics";
			case 0x80861632: return "Broadwell-U Integrated Graphics";
			case 0x80861636: return "Broadwell-U Integrated Graphics";
			case 0x8086163a: return "Broadwell-U Integrated Graphics";
			case 0x8086163b: return "Broadwell-U Integrated Graphics";
			case 0x8086163d: return "Broadwell-U Integrated Graphics";
			case 0x8086163e: return "Broadwell-U Integrated Graphics";
			case 0x80861889: return "Ethernet Adaptive Virtual Function";
			case 0x80861890: return "Ethernet Connection E822-C for backplane";
			case 0x80861891: return "Ethernet Connection E822-C for QSFP";
			case 0x80861892: return "Ethernet Connection E822-C for SFP";
			case 0x80861893: return "Ethernet Connection E822-C/X557-AT 10GBASE-T";
			case 0x80861894: return "Ethernet Connection E822-C 1GbE";
			case 0x80861897: return "Ethernet Connection E822-L for backplane";
			case 0x80861898: return "Ethernet Connection E822-L for SFP";
			case 0x80861899: return "Ethernet Connection E822-L/X557-AT 10GBASE-T";
			case 0x8086189a: return "Ethernet Connection E822-L 1GbE";
			case 0x808618a0: return "C4xxx Series QAT";
			case 0x808618a1: return "C4XXX Series QAT Virtual Function";
			case 0x808618ee: return "200xx Series QAT";
			case 0x808618ef: return "200xx Series QAT Virtual Function";
			case 0x80861900: return "Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80861901: return "6th-10th Gen Core Processor PCIe Controller (x16)";
			case 0x80861902: return "HD Graphics 510";
			case 0x80861903: return "Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor Thermal Subsystem";
			case 0x80861904: return "Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80861905: return "Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor PCIe Controller (x8)";
			case 0x80861906: return "HD Graphics 510";
			case 0x80861908: return "Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80861909: return "Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor PCIe Controller (x4)";
			case 0x8086190c: return "Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x8086190f: return "Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80861910: return "Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80861911: return "Xeon E3-1200 v5/v6 / E3-1500 v5 / 6th/7th/8th Gen Core Processor Gaussian Mixture Model";
			case 0x80861912: return "HD Graphics 530";
			case 0x80861916: return "Skylake GT2 [HD Graphics 520]";
			case 0x80861918: return "Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80861919: return "Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor Imaging Unit";
			case 0x8086191b: return "HD Graphics 530";
			case 0x8086191d: return "HD Graphics P530";
			case 0x8086191e: return "HD Graphics 515";
			case 0x8086191f: return "Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80861921: return "HD Graphics 520";
			case 0x80861926: return "Iris Graphics 540";
			case 0x80861927: return "Iris Graphics 550";
			case 0x8086192b: return "Iris Graphics 555";
			case 0x8086192d: return "Iris Graphics P555";
			case 0x80861932: return "Iris Pro Graphics 580";
			case 0x8086193a: return "Iris Pro Graphics P580";
			case 0x8086193b: return "Iris Pro Graphics 580";
			case 0x8086193d: return "Iris Pro Graphics P580";
			case 0x80861960: return "80960RP (i960RP) Microprocessor";
			case 0x80861962: return "80960RM (i960RM) Microprocessor";
			case 0x80861964: return "80960RN (i960RN) Microprocessor";
			case 0x80861980: return "Atom Processor C3000 Series System Agent";
			case 0x808619a1: return "Atom Processor C3000 Series Error Registers";
			case 0x808619a2: return "Atom Processor C3000 Series Root Complex Event Collector";
			case 0x808619a3: return "Atom Processor C3000 Series Integrated QAT Root Port";
			case 0x808619a4: return "Atom Processor C3000 Series PCI Express Root Port #0";
			case 0x808619a5: return "Atom Processor C3000 Series PCI Express Root Port #1";
			case 0x808619a6: return "Atom Processor C3000 Series PCI Express Root Port #2";
			case 0x808619a7: return "Atom Processor C3000 Series PCI Express Root Port #3";
			case 0x808619a8: return "Atom Processor C3000 Series PCI Express Root Port #4";
			case 0x808619a9: return "Atom Processor C3000 Series PCI Express Root Port #5";
			case 0x808619aa: return "Atom Processor C3000 Series PCI Express Root Port #6";
			case 0x808619ab: return "Atom Processor C3000 Series PCI Express Root Port #7";
			case 0x808619ac: return "Atom Processor C3000 Series SMBus Contoller - Host";
			case 0x808619b0: return "Atom Processor C3000 Series SATA Controller 0";
			case 0x808619b1: return "Atom Processor C3000 Series SATA Controller 0";
			case 0x808619b2: return "Atom Processor C3000 Series SATA Controller 0";
			case 0x808619b3: return "Atom Processor C3000 Series SATA Controller 0";
			case 0x808619b4: return "Atom Processor C3000 Series SATA Controller 0";
			case 0x808619b5: return "Atom Processor C3000 Series SATA Controller 0";
			case 0x808619b6: return "Atom Processor C3000 Series SATA Controller 0";
			case 0x808619b7: return "Atom Processor C3000 Series SATA Controller 0";
			case 0x808619be: return "Atom Processor C3000 Series SATA Controller 0";
			case 0x808619bf: return "Atom Processor C3000 Series SATA Controller 0";
			case 0x808619c0: return "Atom Processor C3000 Series SATA Controller 1";
			case 0x808619c1: return "Atom Processor C3000 Series SATA Controller 1";
			case 0x808619c2: return "Atom Processor C3000 Series SATA Controller 1";
			case 0x808619c3: return "Atom Processor C3000 Series SATA Controller 1";
			case 0x808619c4: return "Atom Processor C3000 Series SATA Controller 1";
			case 0x808619c5: return "Atom Processor C3000 Series SATA Controller 1";
			case 0x808619c6: return "Atom Processor C3000 Series SATA Controller 1";
			case 0x808619c7: return "Atom Processor C3000 Series SATA Controller 1";
			case 0x808619ce: return "Atom Processor C3000 Series SATA Controller 1";
			case 0x808619cf: return "Atom Processor C3000 Series SATA Controller 1";
			case 0x808619d0: return "Atom Processor C3000 Series USB 3.0 xHCI Controller";
			case 0x808619d1: return "Atom Processor C3000 Series Integrated LAN Root Port #0";
			case 0x808619d2: return "Atom Processor C3000 Series Integrated LAN Root Port #1";
			case 0x808619d3: return "Atom Processor C3000 Series ME HECI 1";
			case 0x808619d4: return "Atom Processor C3000 Series ME HECI 2";
			case 0x808619d5: return "Atom Processor C3000 Series ME KT Controller";
			case 0x808619d6: return "Atom Processor C3000 Series ME HECI 3";
			case 0x808619d8: return "Atom Processor C3000 Series HSUART Controller";
			case 0x808619dc: return "Atom Processor C3000 Series LPC or eSPI";
			case 0x808619dd: return "Atom Processor C3000 Series Primary to Side Band (P2SB) Bridge";
			case 0x808619de: return "Atom Processor C3000 Series Power Management Controller";
			case 0x808619df: return "Atom Processor C3000 Series SMBus controller";
			case 0x808619e0: return "Atom Processor C3000 Series SPI Controller";
			case 0x808619e2: return "Atom Processor C3000 Series QuickAssist Technology";
			case 0x808619e3: return "Atom Processor C3000 Series QuickAssist Technology Virtual Function";
			case 0x80861a1c: return "Ethernet Connection (17) I219-LM";
			case 0x80861a1d: return "Ethernet Connection (17) I219-V";
			case 0x80861a1e: return "Ethernet Connection (16) I219-LM";
			case 0x80861a1f: return "Ethernet Connection (16) I219-V";
			case 0x80861a21: return "82840 840 [Carmel] Chipset Host Bridge (Hub A)";
			case 0x80861a23: return "82840 840 [Carmel] Chipset AGP Bridge";
			case 0x80861a24: return "82840 840 [Carmel] Chipset PCI Bridge (Hub B)";
			case 0x80861a30: return "82845 845 [Brookdale] Chipset Host Bridge";
			case 0x80861a31: return "82845 845 [Brookdale] Chipset AGP Bridge";
			case 0x80861a38: return "5000 Series Chipset DMA Engine";
			case 0x80861a48: return "82597EX 10GbE Ethernet Controller";
			case 0x80861b48: return "82597EX 10GbE Ethernet Controller";
			case 0x80861c00: return "6 Series/C200 Series Chipset Family Desktop SATA Controller (IDE mode, ports 0-3)";
			case 0x80861c01: return "6 Series/C200 Series Chipset Family Mobile SATA Controller (IDE mode, ports 0-3)";
			case 0x80861c02: return "6 Series/C200 Series Chipset Family 6 port Desktop SATA AHCI Controller";
			case 0x80861c03: return "6 Series/C200 Series Chipset Family 6 port Mobile SATA AHCI Controller";
			case 0x80861c04: return "6 Series/C200 Series Desktop SATA RAID Controller";
			case 0x80861c05: return "6 Series/C200 Series Mobile SATA RAID Controller";
			case 0x80861c06: return "Z68 Express Chipset SATA RAID Controller";
			case 0x80861c08: return "6 Series/C200 Series Chipset Family Desktop SATA Controller (IDE mode, ports 4-5)";
			case 0x80861c09: return "6 Series/C200 Series Chipset Family Mobile SATA Controller (IDE mode, ports 4-5)";
			case 0x80861c10: return "6 Series/C200 Series Chipset Family PCI Express Root Port 1";
			case 0x80861c12: return "6 Series/C200 Series Chipset Family PCI Express Root Port 2";
			case 0x80861c14: return "6 Series/C200 Series Chipset Family PCI Express Root Port 3";
			case 0x80861c16: return "6 Series/C200 Series Chipset Family PCI Express Root Port 4";
			case 0x80861c18: return "6 Series/C200 Series Chipset Family PCI Express Root Port 5";
			case 0x80861c1a: return "6 Series/C200 Series Chipset Family PCI Express Root Port 6";
			case 0x80861c1c: return "6 Series/C200 Series Chipset Family PCI Express Root Port 7";
			case 0x80861c1e: return "6 Series/C200 Series Chipset Family PCI Express Root Port 8";
			case 0x80861c20: return "6 Series/C200 Series Chipset Family High Definition Audio Controller";
			case 0x80861c22: return "6 Series/C200 Series Chipset Family SMBus Controller";
			case 0x80861c24: return "6 Series/C200 Series Chipset Family Thermal Management Controller";
			case 0x80861c25: return "6 Series/C200 Series Chipset Family DMI to PCI Bridge";
			case 0x80861c26: return "6 Series/C200 Series Chipset Family USB Enhanced Host Controller #1";
			case 0x80861c27: return "6 Series/C200 Series Chipset Family USB Universal Host Controller #1";
			case 0x80861c2c: return "6 Series/C200 Series Chipset Family USB Universal Host Controller #5";
			case 0x80861c2d: return "6 Series/C200 Series Chipset Family USB Enhanced Host Controller #2";
			case 0x80861c33: return "6 Series/C200 Series Chipset Family LAN Controller";
			case 0x80861c35: return "6 Series/C200 Series Chipset Family VECI Controller";
			case 0x80861c3a: return "6 Series/C200 Series Chipset Family MEI Controller #1";
			case 0x80861c3b: return "6 Series/C200 Series Chipset Family MEI Controller #2";
			case 0x80861c3c: return "6 Series/C200 Series Chipset Family IDE-r Controller";
			case 0x80861c3d: return "6 Series/C200 Series Chipset Family KT Controller";
			case 0x80861c40: return "6 Series/C200 Series Chipset Family LPC Controller";
			case 0x80861c41: return "Mobile SFF 6 Series Chipset Family LPC Controller";
			case 0x80861c42: return "6 Series/C200 Series Chipset Family LPC Controller";
			case 0x80861c43: return "Mobile 6 Series Chipset Family LPC Controller";
			case 0x80861c44: return "Z68 Express Chipset LPC Controller";
			case 0x80861c45: return "6 Series/C200 Series Chipset Family LPC Controller";
			case 0x80861c46: return "P67 Express Chipset LPC Controller";
			case 0x80861c47: return "UM67 Express Chipset LPC Controller";
			case 0x80861c48: return "6 Series/C200 Series Chipset Family LPC Controller";
			case 0x80861c49: return "HM65 Express Chipset LPC Controller";
			case 0x80861c4a: return "H67 Express Chipset LPC Controller";
			case 0x80861c4b: return "HM67 Express Chipset LPC Controller";
			case 0x80861c4c: return "Q65 Express Chipset LPC Controller";
			case 0x80861c4d: return "QS67 Express Chipset LPC Controller";
			case 0x80861c4e: return "Q67 Express Chipset LPC Controller";
			case 0x80861c4f: return "QM67 Express Chipset LPC Controller";
			case 0x80861c50: return "B65 Express Chipset LPC Controller";
			case 0x80861c51: return "6 Series/C200 Series Chipset Family LPC Controller";
			case 0x80861c52: return "C202 Chipset LPC Controller";
			case 0x80861c53: return "6 Series/C200 Series Chipset Family LPC Controller";
			case 0x80861c54: return "C204 Chipset LPC Controller";
			case 0x80861c55: return "6 Series/C200 Series Chipset Family LPC Controller";
			case 0x80861c56: return "C206 Chipset LPC Controller";
			case 0x80861c57: return "6 Series/C200 Series Chipset Family LPC Controller";
			case 0x80861c58: return "Upgraded B65 Express Chipset LPC Controller";
			case 0x80861c59: return "Upgraded HM67 Express Chipset LPC Controller";
			case 0x80861c5a: return "Upgraded Q67 Express Chipset LPC Controller";
			case 0x80861c5b: return "6 Series/C200 Series Chipset Family LPC Controller";
			case 0x80861c5c: return "H61 Express Chipset LPC Controller";
			case 0x80861c5d: return "6 Series/C200 Series Chipset Family LPC Controller";
			case 0x80861c5e: return "6 Series/C200 Series Chipset Family LPC Controller";
			case 0x80861c5f: return "6 Series/C200 Series Chipset Family LPC Controller";
			case 0x80861d00: return "C600/X79 series chipset 4-Port SATA IDE Controller";
			case 0x80861d02: return "C600/X79 series chipset 6-Port SATA AHCI Controller";
			case 0x80861d04: return "C600/X79 series chipset SATA RAID Controller";
			case 0x80861d06: return "C600/X79 series chipset SATA Premium RAID Controller";
			case 0x80861d08: return "C600/X79 series chipset 2-Port SATA IDE Controller";
			case 0x80861d10: return "C600/X79 series chipset PCI Express Root Port 1";
			case 0x80861d11: return "C600/X79 series chipset PCI Express Root Port 1";
			case 0x80861d12: return "C600/X79 series chipset PCI Express Root Port 2";
			case 0x80861d13: return "C600/X79 series chipset PCI Express Root Port 2";
			case 0x80861d14: return "C600/X79 series chipset PCI Express Root Port 3";
			case 0x80861d15: return "C600/X79 series chipset PCI Express Root Port 3";
			case 0x80861d16: return "C600/X79 series chipset PCI Express Root Port 4";
			case 0x80861d17: return "C600/X79 series chipset PCI Express Root Port 4";
			case 0x80861d18: return "C600/X79 series chipset PCI Express Root Port 5";
			case 0x80861d19: return "C600/X79 series chipset PCI Express Root Port 5";
			case 0x80861d1a: return "C600/X79 series chipset PCI Express Root Port 6";
			case 0x80861d1b: return "C600/X79 series chipset PCI Express Root Port 6";
			case 0x80861d1c: return "C600/X79 series chipset PCI Express Root Port 7";
			case 0x80861d1d: return "C600/X79 series chipset PCI Express Root Port 7";
			case 0x80861d1e: return "C600/X79 series chipset PCI Express Root Port 8";
			case 0x80861d1f: return "C600/X79 series chipset PCI Express Root Port 8";
			case 0x80861d20: return "C600/X79 series chipset High Definition Audio Controller";
			case 0x80861d22: return "C600/X79 series chipset SMBus Host Controller";
			case 0x80861d24: return "C600/X79 series chipset Thermal Management Controller";
			case 0x80861d25: return "C600/X79 series chipset DMI to PCI Bridge";
			case 0x80861d26: return "C600/X79 series chipset USB2 Enhanced Host Controller #1";
			case 0x80861d2d: return "C600/X79 series chipset USB2 Enhanced Host Controller #2";
			case 0x80861d33: return "C600/X79 series chipset LAN Controller";
			case 0x80861d35: return "C600/X79 series chipset VECI Controller";
			case 0x80861d3a: return "C600/X79 series chipset MEI Controller #1";
			case 0x80861d3b: return "C600/X79 series chipset MEI Controller #2";
			case 0x80861d3c: return "C600/X79 series chipset IDE-r Controller";
			case 0x80861d3d: return "C600/X79 series chipset KT Controller";
			case 0x80861d3e: return "C600/X79 series chipset PCI Express Virtual Root Port";
			case 0x80861d3f: return "C608/C606/X79 series chipset PCI Express Virtual Switch Port";
			case 0x80861d40: return "C600/X79 series chipset LPC Controller";
			case 0x80861d41: return "C600/X79 series chipset LPC Controller";
			case 0x80861d50: return "C608 chipset Dual 4-Port SATA/SAS Storage Control Unit";
			case 0x80861d54: return "C600/X79 series chipset Dual 4-Port SATA/SAS Storage Control Unit";
			case 0x80861d55: return "C600/X79 series chipset 4-Port SATA/SAS Storage Control Unit";
			case 0x80861d58: return "C606 chipset Dual 4-Port SATA/SAS Storage Control Unit";
			case 0x80861d59: return "C604/X79 series chipset 4-Port SATA/SAS Storage Control Unit";
			case 0x80861d5a: return "C600/X79 series chipset Dual 4-Port SATA Storage Control Unit";
			case 0x80861d5b: return "C602 chipset 4-Port SATA Storage Control Unit";
			case 0x80861d5c: return "C600/X79 series chipset Dual 4-Port SATA/SAS Storage Control Unit";
			case 0x80861d5d: return "C600/X79 series chipset 4-Port SATA/SAS Storage Control Unit";
			case 0x80861d5e: return "C600/X79 series chipset Dual 4-Port SATA Storage Control Unit";
			case 0x80861d5f: return "C600/X79 series chipset 4-Port SATA Storage Control Unit";
			case 0x80861d60: return "C608 chipset Dual 4-Port SATA/SAS Storage Control Unit";
			case 0x80861d64: return "C600/X79 series chipset Dual 4-Port SATA/SAS Storage Control Unit";
			case 0x80861d65: return "C600/X79 series chipset 4-Port SATA/SAS Storage Control Unit";
			case 0x80861d68: return "C606 chipset Dual 4-Port SATA/SAS Storage Control Unit";
			case 0x80861d69: return "C604/X79 series chipset 4-Port SATA/SAS Storage Control Unit";
			case 0x80861d6a: return "C600/X79 series chipset Dual 4-Port SATA Storage Control Unit";
			case 0x80861d6b: return "C602 chipset 4-Port SATA Storage Control Unit";
			case 0x80861d6c: return "C600/X79 series chipset Dual 4-Port SATA/SAS Storage Control Unit";
			case 0x80861d6d: return "C600/X79 series chipset 4-Port SATA/SAS Storage Control Unit";
			case 0x80861d6e: return "C600/X79 series chipset Dual 4-Port SATA Storage Control Unit";
			case 0x80861d6f: return "C600/X79 series chipset 4-Port SATA Storage Control Unit";
			case 0x80861d70: return "C600/X79 series chipset SMBus Controller 0";
			case 0x80861d71: return "C608/C606/X79 series chipset SMBus Controller 1";
			case 0x80861d72: return "C608 chipset SMBus Controller 2";
			case 0x80861d74: return "C608/C606/X79 series chipset PCI Express Upstream Port";
			case 0x80861d76: return "C600/X79 series chipset Multi-Function Glue";
			case 0x80861e00: return "7 Series/C210 Series Chipset Family 4-port SATA Controller [IDE mode]";
			case 0x80861e01: return "7 Series Chipset Family 4-port SATA Controller [IDE mode]";
			case 0x80861e02: return "7 Series/C210 Series Chipset Family 6-port SATA Controller [AHCI mode]";
			case 0x80861e03: return "7 Series Chipset Family 6-port SATA Controller [AHCI mode]";
			case 0x80861e04: return "7 Series/C210 Series Chipset Family SATA Controller [RAID mode]";
			case 0x80861e05: return "7 Series Chipset SATA Controller [RAID mode]";
			case 0x80861e06: return "7 Series/C210 Series Chipset Family SATA Controller [RAID mode]";
			case 0x80861e07: return "7 Series Chipset Family SATA Controller [RAID mode]";
			case 0x80861e08: return "7 Series/C210 Series Chipset Family 2-port SATA Controller [IDE mode]";
			case 0x80861e09: return "7 Series Chipset Family 2-port SATA Controller [IDE mode]";
			case 0x80861e0e: return "7 Series/C210 Series Chipset Family SATA Controller [RAID mode]";
			case 0x80861e10: return "7 Series/C216 Chipset Family PCI Express Root Port 1";
			case 0x80861e12: return "7 Series/C210 Series Chipset Family PCI Express Root Port 2";
			case 0x80861e14: return "7 Series/C210 Series Chipset Family PCI Express Root Port 3";
			case 0x80861e16: return "7 Series/C216 Chipset Family PCI Express Root Port 4";
			case 0x80861e18: return "7 Series/C210 Series Chipset Family PCI Express Root Port 5";
			case 0x80861e1a: return "7 Series/C210 Series Chipset Family PCI Express Root Port 6";
			case 0x80861e1c: return "7 Series/C210 Series Chipset Family PCI Express Root Port 7";
			case 0x80861e1e: return "7 Series/C210 Series Chipset Family PCI Express Root Port 8";
			case 0x80861e20: return "7 Series/C216 Chipset Family High Definition Audio Controller";
			case 0x80861e22: return "7 Series/C216 Chipset Family SMBus Controller";
			case 0x80861e24: return "7 Series/C210 Series Chipset Family Thermal Management Controller";
			case 0x80861e25: return "7 Series/C210 Series Chipset Family DMI to PCI Bridge";
			case 0x80861e26: return "7 Series/C216 Chipset Family USB Enhanced Host Controller #1";
			case 0x80861e2d: return "7 Series/C216 Chipset Family USB Enhanced Host Controller #2";
			case 0x80861e31: return "7 Series/C210 Series Chipset Family USB xHCI Host Controller";
			case 0x80861e33: return "7 Series/C210 Series Chipset Family LAN Controller";
			case 0x80861e3a: return "7 Series/C216 Chipset Family MEI Controller #1";
			case 0x80861e3b: return "7 Series/C210 Series Chipset Family MEI Controller #2";
			case 0x80861e3c: return "7 Series/C210 Series Chipset Family IDE-r Controller";
			case 0x80861e3d: return "7 Series/C210 Series Chipset Family KT Controller";
			case 0x80861e41: return "7 Series Chipset Family LPC Controller";
			case 0x80861e42: return "7 Series Chipset Family LPC Controller";
			case 0x80861e43: return "7 Series Chipset Family LPC Controller";
			case 0x80861e44: return "Z77 Express Chipset LPC Controller";
			case 0x80861e45: return "7 Series Chipset Family LPC Controller";
			case 0x80861e46: return "Z75 Express Chipset LPC Controller";
			case 0x80861e47: return "Q77 Express Chipset LPC Controller";
			case 0x80861e48: return "Q75 Express Chipset LPC Controller";
			case 0x80861e49: return "B75 Express Chipset LPC Controller";
			case 0x80861e4a: return "H77 Express Chipset LPC Controller";
			case 0x80861e4b: return "7 Series Chipset Family LPC Controller";
			case 0x80861e4c: return "7 Series Chipset Family LPC Controller";
			case 0x80861e4d: return "7 Series Chipset Family LPC Controller";
			case 0x80861e4e: return "7 Series Chipset Family LPC Controller";
			case 0x80861e4f: return "7 Series Chipset Family LPC Controller";
			case 0x80861e50: return "7 Series Chipset Family LPC Controller";
			case 0x80861e51: return "7 Series Chipset Family LPC Controller";
			case 0x80861e52: return "7 Series Chipset Family LPC Controller";
			case 0x80861e53: return "C216 Series Chipset LPC Controller";
			case 0x80861e54: return "7 Series Chipset Family LPC Controller";
			case 0x80861e55: return "QM77 Express Chipset LPC Controller";
			case 0x80861e56: return "QS77 Express Chipset LPC Controller";
			case 0x80861e57: return "HM77 Express Chipset LPC Controller";
			case 0x80861e58: return "UM77 Express Chipset LPC Controller";
			case 0x80861e59: return "HM76 Express Chipset LPC Controller";
			case 0x80861e5a: return "7 Series Chipset Family LPC Controller";
			case 0x80861e5b: return "UM77 Express Chipset LPC Controller";
			case 0x80861e5c: return "7 Series Chipset Family LPC Controller";
			case 0x80861e5d: return "HM75 Express Chipset LPC Controller";
			case 0x80861e5e: return "HM70 Express Chipset LPC Controller";
			case 0x80861e5f: return "NM70 Express Chipset LPC Controller";
			case 0x80861f00: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f01: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f02: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f03: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f04: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f05: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f06: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f07: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f08: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f09: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f0a: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f0b: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f0c: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f0d: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f0e: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f0f: return "Atom processor C2000 SoC Transaction Router";
			case 0x80861f10: return "Atom processor C2000 PCIe Root Port 1";
			case 0x80861f11: return "Atom processor C2000 PCIe Root Port 2";
			case 0x80861f12: return "Atom processor C2000 PCIe Root Port 3";
			case 0x80861f13: return "Atom processor C2000 PCIe Root Port 4";
			case 0x80861f14: return "Atom processor C2000 RAS";
			case 0x80861f15: return "Atom processor C2000 SMBus 2.0";
			case 0x80861f16: return "Atom processor C2000 RCEC";
			case 0x80861f18: return "Atom processor C2000 QAT";
			case 0x80861f19: return "Atom processor C2000 QAT";
			case 0x80861f20: return "Atom processor C2000 4-Port IDE SATA2 Controller";
			case 0x80861f21: return "Atom processor C2000 4-Port IDE SATA2 Controller";
			case 0x80861f22: return "Atom processor C2000 AHCI SATA2 Controller";
			case 0x80861f23: return "Atom processor C2000 AHCI SATA2 Controller";
			case 0x80861f24: return "Atom processor C2000 RAID SATA2 Controller";
			case 0x80861f25: return "Atom processor C2000 RAID SATA2 Controller";
			case 0x80861f26: return "Atom processor C2000 RAID SATA2 Controller";
			case 0x80861f27: return "Atom processor C2000 RAID SATA2 Controller";
			case 0x80861f2c: return "Atom processor C2000 USB Enhanced Host Controller";
			case 0x80861f2e: return "Atom processor C2000 RAID SATA2 Controller";
			case 0x80861f2f: return "Atom processor C2000 RAID SATA2 Controller";
			case 0x80861f30: return "Atom processor C2000 2-Port IDE SATA3 Controller";
			case 0x80861f31: return "Atom processor C2000 2-Port IDE SATA3 Controller";
			case 0x80861f32: return "Atom processor C2000 AHCI SATA3 Controller";
			case 0x80861f33: return "Atom processor C2000 AHCI SATA3 Controller";
			case 0x80861f34: return "Atom processor C2000 RAID SATA3 Controller";
			case 0x80861f35: return "Atom processor C2000 RAID SATA3 Controller";
			case 0x80861f36: return "Atom processor C2000 RAID SATA3 Controller";
			case 0x80861f37: return "Atom processor C2000 RAID SATA3 Controller";
			case 0x80861f38: return "Atom processor C2000 PCU";
			case 0x80861f39: return "Atom processor C2000 PCU";
			case 0x80861f3a: return "Atom processor C2000 PCU";
			case 0x80861f3b: return "Atom processor C2000 PCU";
			case 0x80861f3c: return "Atom processor C2000 PCU SMBus";
			case 0x80861f3d: return "Atom Processor C2000 PECI SMBus";
			case 0x80861f3e: return "Atom processor C2000 RAID SATA3 Controller";
			case 0x80861f3f: return "Atom processor C2000 RAID SATA3 Controller";
			case 0x80861f40: return "Ethernet Connection I354 1.0 GbE Backplane";
			case 0x80861f41: return "Ethernet Connection I354";
			case 0x80861f42: return "Atom processor C2000 GbE";
			case 0x80861f44: return "Atom processor C2000 GbE Virtual Function";
			case 0x80861f45: return "Ethernet Connection I354 2.5 GbE Backplane";
			case 0x80862014: return "Sky Lake-E Ubox Registers";
			case 0x80862015: return "Sky Lake-E Ubox Registers";
			case 0x80862016: return "Sky Lake-E Ubox Registers";
			case 0x80862018: return "Sky Lake-E M2PCI Registers";
			case 0x8086201a: return "Sky Lake-E Non-Transparent Bridge Registers";
			case 0x8086201c: return "Sky Lake-E Non-Transparent Bridge Registers";
			case 0x8086201d: return "Volume Management Device NVMe RAID Controller";
			case 0x80862020: return "Sky Lake-E DMI3 Registers";
			case 0x80862021: return "Sky Lake-E CBDMA Registers";
			case 0x80862024: return "Sky Lake-E MM/Vt-d Configuration Registers";
			case 0x80862025: return "Sky Lake-E RAS";
			case 0x80862026: return "Sky Lake-E IOAPIC";
			case 0x80862030: return "Sky Lake-E PCI Express Root Port A";
			case 0x80862031: return "Sky Lake-E PCI Express Root Port B";
			case 0x80862032: return "Sky Lake-E PCI Express Root Port C";
			case 0x80862033: return "Sky Lake-E PCI Express Root Port D";
			case 0x80862034: return "Sky Lake-E VT-d";
			case 0x80862035: return "Sky Lake-E RAS Configuration Registers";
			case 0x80862036: return "Sky Lake-E IOxAPIC Configuration Registers";
			case 0x80862040: return "Sky Lake-E Integrated Memory Controller";
			case 0x80862041: return "Sky Lake-E Integrated Memory Controller";
			case 0x80862042: return "Sky Lake-E Integrated Memory Controller";
			case 0x80862043: return "Sky Lake-E Integrated Memory Controller";
			case 0x80862044: return "Sky Lake-E Integrated Memory Controller";
			case 0x80862045: return "Sky Lake-E LM Channel 1";
			case 0x80862046: return "Sky Lake-E LMS Channel 1";
			case 0x80862047: return "Sky Lake-E LMDP Channel 1";
			case 0x80862048: return "Sky Lake-E DECS Channel 2";
			case 0x80862049: return "Sky Lake-E LM Channel 2";
			case 0x8086204a: return "Sky Lake-E LMS Channel 2";
			case 0x8086204b: return "Sky Lake-E LMDP Channel 2";
			case 0x8086204c: return "Sky Lake-E M3KTI Registers";
			case 0x8086204d: return "Sky Lake-E M3KTI Registers";
			case 0x8086204e: return "Sky Lake-E M3KTI Registers";
			case 0x80862054: return "Sky Lake-E CHA Registers";
			case 0x80862055: return "Sky Lake-E CHA Registers";
			case 0x80862056: return "Sky Lake-E CHA Registers";
			case 0x80862057: return "Sky Lake-E CHA Registers";
			case 0x80862058: return "Sky Lake-E KTI 0";
			case 0x80862059: return "Sky Lake-E UPI Registers";
			case 0x80862066: return "Sky Lake-E Integrated Memory Controller";
			case 0x80862068: return "Sky Lake-E DDRIO Registers";
			case 0x80862069: return "Sky Lake-E DDRIO Registers";
			case 0x8086206a: return "Sky Lake-E IOxAPIC Configuration Registers";
			case 0x8086206e: return "Sky Lake-E DDRIO Registers";
			case 0x8086206f: return "Sky Lake-E DDRIO Registers";
			case 0x80862078: return "Sky Lake-E PCU Registers";
			case 0x8086207a: return "Sky Lake-E PCU Registers";
			case 0x80862080: return "Sky Lake-E PCU Registers";
			case 0x80862081: return "Sky Lake-E PCU Registers";
			case 0x80862082: return "Sky Lake-E PCU Registers";
			case 0x80862083: return "Sky Lake-E PCU Registers";
			case 0x80862084: return "Sky Lake-E PCU Registers";
			case 0x80862085: return "Sky Lake-E PCU Registers";
			case 0x80862086: return "Sky Lake-E PCU Registers";
			case 0x80862088: return "Sky Lake-E DDRIO Registers";
			case 0x8086208d: return "Sky Lake-E CHA Registers";
			case 0x8086208e: return "Sky Lake-E CHA Registers";
			case 0x80862241: return "Larrabee";
			case 0x80862250: return "Xeon Phi coprocessor 5100 series";
			case 0x8086225c: return "Xeon Phi coprocessor SE10/7120 series";
			case 0x8086225d: return "Xeon Phi coprocessor 3120 series";
			case 0x8086225e: return "Xeon Phi coprocessor 31S1";
			case 0x80862262: return "Xeon Phi coprocessor 7220";
			case 0x80862280: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series SoC Transaction Register";
			case 0x80862284: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series High Definition Audio Controller";
			case 0x80862286: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series LPIO1 DMA Controller";
			case 0x8086228a: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series LPIO1 HSUART Controller #1";
			case 0x8086228c: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series LPIO1 HSUART Controller #2";
			case 0x80862292: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx SMBus Controller";
			case 0x80862294: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series MMC Controller";
			case 0x80862295: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series SDIO Controller";
			case 0x80862296: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series SD Controller";
			case 0x80862298: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series Trusted Execution Engine";
			case 0x8086229c: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series PCU";
			case 0x808622a3: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series SATA Controller";
			case 0x808622a4: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series SATA AHCI Controller";
			case 0x808622a8: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series Low Power Engine Audio";
			case 0x808622b0: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Integrated Graphics Controller";
			case 0x808622b1: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Integrated Graphics Controller";
			case 0x808622b5: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series USB xHCI Controller";
			case 0x808622b8: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series Imaging Unit";
			case 0x808622c0: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series LPIO2 DMA Controller";
			case 0x808622c1: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series LPIO2 I2C Controller #1";
			case 0x808622c2: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series LPIO2 I2C Controller #2";
			case 0x808622c3: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series LPIO2 I2C Controller #3";
			case 0x808622c4: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series LPIO2 I2C Controller #4";
			case 0x808622c5: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series LPIO2 I2C Controller #5";
			case 0x808622c6: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series LPIO2 I2C Controller #6";
			case 0x808622c7: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series LPIO2 I2C Controller #7";
			case 0x808622c8: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series PCI Express Port #1";
			case 0x808622ca: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series PCI Express Port #2";
			case 0x808622cc: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series PCI Express Port #3";
			case 0x808622ce: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series PCI Express Port #4";
			case 0x808622dc: return "Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series Power Management Controller";
			case 0x80862310: return "DH89xxCC LPC Controller";
			case 0x80862323: return "DH89xxCC 4 Port SATA AHCI Controller";
			case 0x80862330: return "DH89xxCC SMBus Controller";
			case 0x80862331: return "DH89xxCC Chap Counter";
			case 0x80862332: return "DH89xxCC Thermal Subsystem";
			case 0x80862334: return "DH89xxCC USB2 Enhanced Host Controller #1";
			case 0x80862335: return "DH89xxCC USB2 Enhanced Host Controller #1";
			case 0x80862342: return "DH89xxCC PCI Express Root Port #1";
			case 0x80862343: return "DH89xxCC PCI Express Root Port #1";
			case 0x80862344: return "DH89xxCC PCI Express Root Port #2";
			case 0x80862345: return "DH89xxCC PCI Express Root Port #2";
			case 0x80862346: return "DH89xxCC PCI Express Root Port #3";
			case 0x80862347: return "DH89xxCC PCI Express Root Port #3";
			case 0x80862348: return "DH89xxCC PCI Express Root Port #4";
			case 0x80862349: return "DH89xxCC PCI Express Root Port #4";
			case 0x80862360: return "DH89xxCC Watchdog Timer";
			case 0x80862364: return "DH89xxCC MEI 0";
			case 0x80862365: return "DH89xxCC MEI 1";
			case 0x80862390: return "DH895XCC Series LPC Controller";
			case 0x808623a1: return "DH895XCC Series 2-Port SATA Controller [IDE Mode]";
			case 0x808623a3: return "DH895XCC Series 4-Port SATA Controller [AHCI Mode]";
			case 0x808623a6: return "DH895XCC Series 2-Port SATA Controller [IDE Mode]";
			case 0x808623b0: return "DH895XCC Series SMBus Controller";
			case 0x808623b1: return "DH895XCC Series CHAP Counter";
			case 0x808623b2: return "DH895XCC Series Thermal Management Controller";
			case 0x808623b4: return "DH895XCC Series USB2 Enhanced Host Controller #1";
			case 0x808623b5: return "DH895XCC Series USB2 Enhanced Host Controller #1";
			case 0x808623c2: return "DH895XCC Series PCI Express Root Port #1";
			case 0x808623c3: return "DH895XCC Series PCI Express Root Port #1";
			case 0x808623c4: return "DH895XCC Series PCI Express Root Port #2";
			case 0x808623c5: return "DH895XCC Series PCI Express Root Port #2";
			case 0x808623c6: return "CDH895XCC Series PCI Express Root Port #3";
			case 0x808623c7: return "DH895XCC Series PCI Express Root Port #3";
			case 0x808623c8: return "DH895XCC Series PCI Express Root Port #4";
			case 0x808623c9: return "DH895XCC Series PCI Express Root Port #4";
			case 0x808623e0: return "DH895XCC Series Watchdog Timer";
			case 0x808623e4: return "DH895XCC Series MEI Controller #1";
			case 0x808623e5: return "DH895XCC Series MEI Controller #2";
			case 0x80862410: return "82801AA ISA Bridge (LPC)";
			case 0x80862411: return "82801AA IDE Controller";
			case 0x80862412: return "82801AA USB Controller";
			case 0x80862413: return "82801AA SMBus Controller";
			case 0x80862415: return "82801AA AC'97 Audio Controller";
			case 0x80862416: return "82801AA AC'97 Modem Controller";
			case 0x80862418: return "82801AA PCI Bridge";
			case 0x80862420: return "82801AB ISA Bridge (LPC)";
			case 0x80862421: return "82801AB IDE Controller";
			case 0x80862422: return "82801AB USB Controller";
			case 0x80862423: return "82801AB SMBus Controller";
			case 0x80862425: return "82801AB AC'97 Audio Controller";
			case 0x80862426: return "82801AB AC'97 Modem Controller";
			case 0x80862428: return "82801AB PCI Bridge";
			case 0x80862440: return "82801BA ISA Bridge (LPC)";
			case 0x80862442: return "82801BA/BAM UHCI USB 1.1 Controller #1";
			case 0x80862443: return "82801BA/BAM SMBus Controller";
			case 0x80862444: return "82801BA/BAM UHCI USB 1.1 Controller #2";
			case 0x80862445: return "82801BA/BAM AC'97 Audio Controller";
			case 0x80862446: return "82801BA/BAM AC'97 Modem Controller";
			case 0x80862448: return "82801 Mobile PCI Bridge";
			case 0x80862449: return "82801BA/BAM/CA/CAM Ethernet Controller";
			case 0x8086244a: return "82801BAM IDE U100 Controller";
			case 0x8086244b: return "82801BA IDE U100 Controller";
			case 0x8086244c: return "82801BAM ISA Bridge (LPC)";
			case 0x8086244e: return "82801 PCI Bridge";
			case 0x80862450: return "82801E ISA Bridge (LPC)";
			case 0x80862452: return "82801E USB Controller";
			case 0x80862453: return "82801E SMBus Controller";
			case 0x80862459: return "82801E Ethernet Controller 0";
			case 0x8086245b: return "82801E IDE U100 Controller";
			case 0x8086245d: return "82801E Ethernet Controller 1";
			case 0x8086245e: return "82801E PCI Bridge";
			case 0x80862480: return "82801CA LPC Interface Controller";
			case 0x80862482: return "82801CA/CAM USB Controller #1";
			case 0x80862483: return "82801CA/CAM SMBus Controller";
			case 0x80862484: return "82801CA/CAM USB Controller #2";
			case 0x80862485: return "82801CA/CAM AC'97 Audio Controller";
			case 0x80862486: return "82801CA/CAM AC'97 Modem Controller";
			case 0x80862487: return "82801CA/CAM USB Controller #3";
			case 0x8086248a: return "82801CAM IDE U100 Controller";
			case 0x8086248b: return "82801CA Ultra ATA Storage Controller";
			case 0x8086248c: return "82801CAM ISA Bridge (LPC)";
			case 0x808624c0: return "82801DB/DBL (ICH4/ICH4-L) LPC Interface Bridge";
			case 0x808624c1: return "82801DBL (ICH4-L) IDE Controller";
			case 0x808624c2: return "82801DB/DBL/DBM (ICH4/ICH4-L/ICH4-M) USB UHCI Controller #1";
			case 0x808624c3: return "82801DB/DBL/DBM (ICH4/ICH4-L/ICH4-M) SMBus Controller";
			case 0x808624c4: return "82801DB/DBL/DBM (ICH4/ICH4-L/ICH4-M) USB UHCI Controller #2";
			case 0x808624c5: return "82801DB/DBL/DBM (ICH4/ICH4-L/ICH4-M) AC'97 Audio Controller";
			case 0x808624c6: return "82801DB/DBL/DBM (ICH4/ICH4-L/ICH4-M) AC'97 Modem Controller";
			case 0x808624c7: return "82801DB/DBL/DBM (ICH4/ICH4-L/ICH4-M) USB UHCI Controller #3";
			case 0x808624ca: return "82801DBM (ICH4-M) IDE Controller";
			case 0x808624cb: return "82801DB (ICH4) IDE Controller";
			case 0x808624cc: return "82801DBM (ICH4-M) LPC Interface Bridge";
			case 0x808624cd: return "82801DB/DBM (ICH4/ICH4-M) USB2 EHCI Controller";
			case 0x808624d0: return "82801EB/ER (ICH5/ICH5R) LPC Interface Bridge";
			case 0x808624d1: return "82801EB (ICH5) SATA Controller";
			case 0x808624d2: return "82801EB/ER (ICH5/ICH5R) USB UHCI Controller #1";
			case 0x808624d3: return "82801EB/ER (ICH5/ICH5R) SMBus Controller";
			case 0x808624d4: return "82801EB/ER (ICH5/ICH5R) USB UHCI Controller #2";
			case 0x808624d5: return "82801EB/ER (ICH5/ICH5R) AC'97 Audio Controller";
			case 0x808624d6: return "82801EB/ER (ICH5/ICH5R) AC'97 Modem Controller";
			case 0x808624d7: return "82801EB/ER (ICH5/ICH5R) USB UHCI Controller #3";
			case 0x808624db: return "82801EB/ER (ICH5/ICH5R) IDE Controller";
			case 0x808624dc: return "82801EB (ICH5) LPC Interface Bridge";
			case 0x808624dd: return "82801EB/ER (ICH5/ICH5R) USB2 EHCI Controller";
			case 0x808624de: return "82801EB/ER (ICH5/ICH5R) USB UHCI Controller #4";
			case 0x808624df: return "82801ER (ICH5R) SATA Controller";
			case 0x808624f0: return "Omni-Path HFI Silicon 100 Series [discrete]";
			case 0x808624f1: return "Omni-Path HFI Silicon 100 Series [integrated]";
			case 0x808624f3: return "Wireless 8260";
			case 0x808624f4: return "Wireless 8260";
			case 0x808624fb: return "Dual Band Wireless-AC 3168NGW [Stone Peak]";
			case 0x808624fd: return "Wireless 8265 / 8275";
			case 0x80862500: return "82820 820 (Camino) Chipset Host Bridge (MCH)";
			case 0x80862501: return "82820 820 (Camino) Chipset Host Bridge (MCH)";
			case 0x8086250b: return "82820 820 (Camino) Chipset Host Bridge";
			case 0x8086250f: return "82820 820 (Camino) Chipset AGP Bridge";
			case 0x80862520: return "82805AA MTH Memory Translator Hub";
			case 0x80862521: return "82804AA MRH-S Memory Repeater Hub for SDRAM";
			case 0x80862522: return "NVMe Optane Memory Series";
			case 0x80862526: return "Wireless-AC 9260";
			case 0x80862530: return "82850 850 (Tehama) Chipset Host Bridge (MCH)";
			case 0x80862531: return "82860 860 (Wombat) Chipset Host Bridge (MCH)";
			case 0x80862532: return "82850 850 (Tehama) Chipset AGP Bridge";
			case 0x80862533: return "82860 860 (Wombat) Chipset AGP Bridge";
			case 0x80862534: return "82860 860 (Wombat) Chipset PCI Bridge";
			case 0x80862540: return "E7500 Memory Controller Hub";
			case 0x80862541: return "E7500/E7501 Host RASUM Controller";
			case 0x80862543: return "E7500/E7501 Hub Interface B PCI-to-PCI Bridge";
			case 0x80862544: return "E7500/E7501 Hub Interface B RASUM Controller";
			case 0x80862545: return "E7500/E7501 Hub Interface C PCI-to-PCI Bridge";
			case 0x80862546: return "E7500/E7501 Hub Interface C RASUM Controller";
			case 0x80862547: return "E7500/E7501 Hub Interface D PCI-to-PCI Bridge";
			case 0x80862548: return "E7500/E7501 Hub Interface D RASUM Controller";
			case 0x8086254c: return "E7501 Memory Controller Hub";
			case 0x80862550: return "E7505 Memory Controller Hub";
			case 0x80862551: return "E7505/E7205 Series RAS Controller";
			case 0x80862552: return "E7505/E7205 PCI-to-AGP Bridge";
			case 0x80862553: return "E7505 Hub Interface B PCI-to-PCI Bridge";
			case 0x80862554: return "E7505 Hub Interface B PCI-to-PCI Bridge RAS Controller";
			case 0x8086255d: return "E7205 Memory Controller Hub";
			case 0x80862560: return "82845G/GL[Brookdale-G]/GE/PE DRAM Controller/Host-Hub Interface";
			case 0x80862561: return "82845G/GL[Brookdale-G]/GE/PE Host-to-AGP Bridge";
			case 0x80862562: return "82845G/GL[Brookdale-G]/GE Chipset Integrated Graphics Device";
			case 0x80862570: return "82865G/PE/P DRAM Controller/Host-Hub Interface";
			case 0x80862571: return "82865G/PE/P AGP Bridge";
			case 0x80862572: return "82865G Integrated Graphics Controller";
			case 0x80862573: return "82865G/PE/P PCI to CSA Bridge";
			case 0x80862576: return "82865G/PE/P Processor to I/O Memory Interface";
			case 0x80862578: return "82875P/E7210 Memory Controller Hub";
			case 0x80862579: return "82875P Processor to AGP Controller";
			case 0x8086257b: return "82875P/E7210 Processor to PCI to CSA Bridge";
			case 0x8086257e: return "82875P/E7210 Processor to I/O Memory Interface";
			case 0x80862580: return "82915G/P/GV/GL/PL/910GL Memory Controller Hub";
			case 0x80862581: return "82915G/P/GV/GL/PL/910GL PCI Express Root Port";
			case 0x80862582: return "82915G/GV/910GL Integrated Graphics Controller";
			case 0x80862584: return "82925X/XE Memory Controller Hub";
			case 0x80862585: return "82925X/XE PCI Express Root Port";
			case 0x80862588: return "E7220/E7221 Memory Controller Hub";
			case 0x80862589: return "E7220/E7221 PCI Express Root Port";
			case 0x8086258a: return "E7221 Integrated Graphics Controller";
			case 0x80862590: return "Mobile 915GM/PM/GMS/910GML Express Processor to DRAM Controller";
			case 0x80862591: return "Mobile 915GM/PM Express PCI Express Root Port";
			case 0x80862592: return "Mobile 915GM/GMS/910GML Express Graphics Controller";
			case 0x808625a1: return "6300ESB LPC Interface Controller";
			case 0x808625a2: return "6300ESB PATA Storage Controller";
			case 0x808625a3: return "6300ESB SATA Storage Controller";
			case 0x808625a4: return "6300ESB SMBus Controller";
			case 0x808625a6: return "6300ESB AC'97 Audio Controller";
			case 0x808625a7: return "6300ESB AC'97 Modem Controller";
			case 0x808625a9: return "6300ESB USB Universal Host Controller";
			case 0x808625aa: return "6300ESB USB Universal Host Controller";
			case 0x808625ab: return "6300ESB Watchdog Timer";
			case 0x808625ac: return "6300ESB I/O Advanced Programmable Interrupt Controller";
			case 0x808625ad: return "6300ESB USB2 Enhanced Host Controller";
			case 0x808625ae: return "6300ESB 64-bit PCI-X Bridge";
			case 0x808625b0: return "6300ESB SATA RAID Controller";
			case 0x808625c0: return "5000X Chipset Memory Controller Hub";
			case 0x808625d0: return "5000Z Chipset Memory Controller Hub";
			case 0x808625d4: return "5000V Chipset Memory Controller Hub";
			case 0x808625d8: return "5000P Chipset Memory Controller Hub";
			case 0x808625e2: return "5000 Series Chipset PCI Express x4 Port 2";
			case 0x808625e3: return "5000 Series Chipset PCI Express x4 Port 3";
			case 0x808625e4: return "5000 Series Chipset PCI Express x4 Port 4";
			case 0x808625e5: return "5000 Series Chipset PCI Express x4 Port 5";
			case 0x808625e6: return "5000 Series Chipset PCI Express x4 Port 6";
			case 0x808625e7: return "5000 Series Chipset PCI Express x4 Port 7";
			case 0x808625f0: return "5000 Series Chipset FSB Registers";
			case 0x808625f1: return "5000 Series Chipset Reserved Registers";
			case 0x808625f3: return "5000 Series Chipset Reserved Registers";
			case 0x808625f5: return "5000 Series Chipset FBD Registers";
			case 0x808625f6: return "5000 Series Chipset FBD Registers";
			case 0x808625f7: return "5000 Series Chipset PCI Express x8 Port 2-3";
			case 0x808625f8: return "5000 Series Chipset PCI Express x8 Port 4-5";
			case 0x808625f9: return "5000 Series Chipset PCI Express x8 Port 6-7";
			case 0x808625fa: return "5000X Chipset PCI Express x16 Port 4-7";
			case 0x80862600: return "E8500/E8501 Hub Interface 1.5";
			case 0x80862601: return "E8500/E8501 PCI Express x4 Port D";
			case 0x80862602: return "E8500/E8501 PCI Express x4 Port C0";
			case 0x80862603: return "E8500/E8501 PCI Express x4 Port C1";
			case 0x80862604: return "E8500/E8501 PCI Express x4 Port B0";
			case 0x80862605: return "E8500/E8501 PCI Express x4 Port B1";
			case 0x80862606: return "E8500/E8501 PCI Express x4 Port A0";
			case 0x80862607: return "E8500/E8501 PCI Express x4 Port A1";
			case 0x80862608: return "E8500/E8501 PCI Express x8 Port C";
			case 0x80862609: return "E8500/E8501 PCI Express x8 Port B";
			case 0x8086260a: return "E8500/E8501 PCI Express x8 Port A";
			case 0x8086260c: return "E8500/E8501 IMI Registers";
			case 0x80862610: return "E8500/E8501 FSB Registers";
			case 0x80862611: return "E8500/E8501 Address Mapping Registers";
			case 0x80862612: return "E8500/E8501 RAS Registers";
			case 0x80862613: return "E8500/E8501 Reserved Registers";
			case 0x80862614: return "E8500/E8501 Reserved Registers";
			case 0x80862615: return "E8500/E8501 Miscellaneous Registers";
			case 0x80862617: return "E8500/E8501 Reserved Registers";
			case 0x80862618: return "E8500/E8501 Reserved Registers";
			case 0x80862619: return "E8500/E8501 Reserved Registers";
			case 0x8086261a: return "E8500/E8501 Reserved Registers";
			case 0x8086261b: return "E8500/E8501 Reserved Registers";
			case 0x8086261c: return "E8500/E8501 Reserved Registers";
			case 0x8086261d: return "E8500/E8501 Reserved Registers";
			case 0x8086261e: return "E8500/E8501 Reserved Registers";
			case 0x80862620: return "E8500/E8501 eXternal Memory Bridge";
			case 0x80862621: return "E8500/E8501 XMB Miscellaneous Registers";
			case 0x80862622: return "E8500/E8501 XMB Memory Interleaving Registers";
			case 0x80862623: return "E8500/E8501 XMB DDR Initialization and Calibration";
			case 0x80862624: return "E8500/E8501 XMB Reserved Registers";
			case 0x80862625: return "E8500/E8501 XMB Reserved Registers";
			case 0x80862626: return "E8500/E8501 XMB Reserved Registers";
			case 0x80862627: return "E8500/E8501 XMB Reserved Registers";
			case 0x80862640: return "82801FB/FR (ICH6/ICH6R) LPC Interface Bridge";
			case 0x80862641: return "82801FBM (ICH6M) LPC Interface Bridge";
			case 0x80862642: return "82801FW/FRW (ICH6W/ICH6RW) LPC Interface Bridge";
			case 0x80862651: return "82801FB/FW (ICH6/ICH6W) SATA Controller";
			case 0x80862652: return "82801FR/FRW (ICH6R/ICH6RW) SATA Controller";
			case 0x80862653: return "82801FBM (ICH6M) SATA Controller";
			case 0x80862658: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) USB UHCI #1";
			case 0x80862659: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) USB UHCI #2";
			case 0x8086265a: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) USB UHCI #3";
			case 0x8086265b: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) USB UHCI #4";
			case 0x8086265c: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) USB2 EHCI Controller";
			case 0x80862660: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) PCI Express Port 1";
			case 0x80862662: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) PCI Express Port 2";
			case 0x80862664: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) PCI Express Port 3";
			case 0x80862666: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) PCI Express Port 4";
			case 0x80862668: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) High Definition Audio Controller";
			case 0x8086266a: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) SMBus Controller";
			case 0x8086266c: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) LAN Controller";
			case 0x8086266d: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) AC'97 Modem Controller";
			case 0x8086266e: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) AC'97 Audio Controller";
			case 0x8086266f: return "82801FB/FBM/FR/FW/FRW (ICH6 Family) IDE Controller";
			case 0x80862670: return "631xESB/632xESB/3100 Chipset LPC Interface Controller";
			case 0x80862680: return "631xESB/632xESB/3100 Chipset SATA IDE Controller";
			case 0x80862681: return "631xESB/632xESB SATA AHCI Controller";
			case 0x80862682: return "631xESB/632xESB SATA RAID Controller";
			case 0x80862683: return "631xESB/632xESB SATA RAID Controller";
			case 0x80862688: return "631xESB/632xESB/3100 Chipset UHCI USB Controller #1";
			case 0x80862689: return "631xESB/632xESB/3100 Chipset UHCI USB Controller #2";
			case 0x8086268a: return "631xESB/632xESB/3100 Chipset UHCI USB Controller #3";
			case 0x8086268b: return "631xESB/632xESB/3100 Chipset UHCI USB Controller #4";
			case 0x8086268c: return "631xESB/632xESB/3100 Chipset EHCI USB2 Controller";
			case 0x80862690: return "631xESB/632xESB/3100 Chipset PCI Express Root Port 1";
			case 0x80862692: return "631xESB/632xESB/3100 Chipset PCI Express Root Port 2";
			case 0x80862694: return "631xESB/632xESB/3100 Chipset PCI Express Root Port 3";
			case 0x80862696: return "631xESB/632xESB/3100 Chipset PCI Express Root Port 4";
			case 0x80862698: return "631xESB/632xESB AC '97 Audio Controller";
			case 0x80862699: return "631xESB/632xESB AC '97 Modem Controller";
			case 0x8086269a: return "631xESB/632xESB High Definition Audio Controller";
			case 0x8086269b: return "631xESB/632xESB/3100 Chipset SMBus Controller";
			case 0x8086269e: return "631xESB/632xESB IDE Controller";
			case 0x80862700: return "Optane SSD 900P Series";
			case 0x80862701: return "NVMe Datacenter SSD [Optane]";
			case 0x80862723: return "Wi-Fi 6 AX200";
			case 0x80862725: return "Wi-Fi 6 AX210/AX211/AX411 160MHz";
			case 0x80862770: return "82945G/GZ/P/PL Memory Controller Hub";
			case 0x80862771: return "82945G/GZ/P/PL PCI Express Root Port";
			case 0x80862772: return "82945G/GZ Integrated Graphics Controller";
			case 0x80862774: return "82955X Memory Controller Hub";
			case 0x80862775: return "82955X PCI Express Root Port";
			case 0x80862776: return "82945G/GZ Integrated Graphics Controller";
			case 0x80862778: return "E7230/3000/3010 Memory Controller Hub";
			case 0x80862779: return "E7230/3000/3010 PCI Express Root Port";
			case 0x8086277a: return "82975X/3010 PCI Express Root Port";
			case 0x8086277c: return "82975X Memory Controller Hub";
			case 0x8086277d: return "82975X PCI Express Root Port";
			case 0x80862780: return "82915G/GV/GL/910GL [Grantsdale] Graphics Device";
			case 0x80862782: return "82915G Integrated Graphics Controller";
			case 0x80862792: return "Mobile 915GM/GMS/910GML Express Graphics Controller";
			case 0x808627a0: return "Mobile 945GM/PM/GMS, 943/940GML and 945GT Express Memory Controller Hub";
			case 0x808627a1: return "Mobile 945GM/PM/GMS, 943/940GML and 945GT Express PCI Express Root Port";
			case 0x808627a2: return "Mobile 945GM/GMS, 943/940GML Express Integrated Graphics Controller";
			case 0x808627a6: return "Mobile 945GM/GMS/GME, 943/940GML Express Integrated Graphics Controller";
			case 0x808627ac: return "Mobile 945GSE Express Memory Controller Hub";
			case 0x808627ad: return "Mobile 945GSE Express PCI Express Root Port";
			case 0x808627ae: return "Mobile 945GSE Express Integrated Graphics Controller";
			case 0x808627b0: return "82801GH (ICH7DH) LPC Interface Bridge";
			case 0x808627b8: return "82801GB/GR (ICH7 Family) LPC Interface Bridge";
			case 0x808627b9: return "82801GBM (ICH7-M) LPC Interface Bridge";
			case 0x808627bc: return "NM10 Family LPC Controller";
			case 0x808627bd: return "82801GHM (ICH7-M DH) LPC Interface Bridge";
			case 0x808627c0: return "NM10/ICH7 Family SATA Controller [IDE mode]";
			case 0x808627c1: return "NM10/ICH7 Family SATA Controller [AHCI mode]";
			case 0x808627c3: return "82801GR/GDH (ICH7R/ICH7DH) SATA Controller [RAID mode]";
			case 0x808627c4: return "82801GBM/GHM (ICH7-M Family) SATA Controller [IDE mode]";
			case 0x808627c5: return "82801GBM/GHM (ICH7-M Family) SATA Controller [AHCI mode]";
			case 0x808627c6: return "82801GHM (ICH7-M DH) SATA Controller [RAID mode]";
			case 0x808627c8: return "NM10/ICH7 Family USB UHCI Controller #1";
			case 0x808627c9: return "NM10/ICH7 Family USB UHCI Controller #2";
			case 0x808627ca: return "NM10/ICH7 Family USB UHCI Controller #3";
			case 0x808627cb: return "NM10/ICH7 Family USB UHCI Controller #4";
			case 0x808627cc: return "NM10/ICH7 Family USB2 EHCI Controller";
			case 0x808627d0: return "NM10/ICH7 Family PCI Express Port 1";
			case 0x808627d2: return "NM10/ICH7 Family PCI Express Port 2";
			case 0x808627d4: return "NM10/ICH7 Family PCI Express Port 3";
			case 0x808627d6: return "NM10/ICH7 Family PCI Express Port 4";
			case 0x808627d8: return "NM10/ICH7 Family High Definition Audio Controller";
			case 0x808627da: return "NM10/ICH7 Family SMBus Controller";
			case 0x808627dc: return "NM10/ICH7 Family LAN Controller";
			case 0x808627dd: return "82801G (ICH7 Family) AC'97 Modem Controller";
			case 0x808627de: return "82801G (ICH7 Family) AC'97 Audio Controller";
			case 0x808627df: return "82801G (ICH7 Family) IDE Controller";
			case 0x808627e0: return "82801GR/GH/GHM (ICH7 Family) PCI Express Port 5";
			case 0x808627e2: return "82801GR/GH/GHM (ICH7 Family) PCI Express Port 6";
			case 0x80862810: return "82801HB/HR (ICH8/R) LPC Interface Controller";
			case 0x80862811: return "82801HEM (ICH8M-E) LPC Interface Controller";
			case 0x80862812: return "82801HH (ICH8DH) LPC Interface Controller";
			case 0x80862814: return "82801HO (ICH8DO) LPC Interface Controller";
			case 0x80862815: return "82801HM (ICH8M) LPC Interface Controller";
			case 0x80862820: return "82801H (ICH8 Family) 4 port SATA Controller [IDE mode]";
			case 0x80862821: return "82801HR/HO/HH (ICH8R/DO/DH) 6 port SATA Controller [AHCI mode]";
			case 0x80862822: return "SATA Controller [RAID mode]";
			case 0x80862823: return "C610/X99 series chipset sSATA Controller [RAID mode]";
			case 0x80862824: return "82801HB (ICH8) 4 port SATA Controller [AHCI mode]";
			case 0x80862825: return "82801HR/HO/HH (ICH8R/DO/DH) 2 port SATA Controller [IDE mode]";
			case 0x80862826: return "C600/X79 series chipset SATA RAID Controller";
			case 0x80862827: return "C610/X99 series chipset sSATA Controller [RAID mode]";
			case 0x80862828: return "82801HM/HEM (ICH8M/ICH8M-E) SATA Controller [IDE mode]";
			case 0x80862829: return "82801HM/HEM (ICH8M/ICH8M-E) SATA Controller [AHCI mode]";
			case 0x8086282a: return "82801 Mobile SATA Controller [RAID mode]";
			case 0x80862830: return "82801H (ICH8 Family) USB UHCI Controller #1";
			case 0x80862831: return "82801H (ICH8 Family) USB UHCI Controller #2";
			case 0x80862832: return "82801H (ICH8 Family) USB UHCI Controller #3";
			case 0x80862833: return "82801H (ICH8 Family) USB UHCI Controller #4";
			case 0x80862834: return "82801H (ICH8 Family) USB UHCI Controller #4";
			case 0x80862835: return "82801H (ICH8 Family) USB UHCI Controller #5";
			case 0x80862836: return "82801H (ICH8 Family) USB2 EHCI Controller #1";
			case 0x8086283a: return "82801H (ICH8 Family) USB2 EHCI Controller #2";
			case 0x8086283e: return "82801H (ICH8 Family) SMBus Controller";
			case 0x8086283f: return "82801H (ICH8 Family) PCI Express Port 1";
			case 0x80862841: return "82801H (ICH8 Family) PCI Express Port 2";
			case 0x80862843: return "82801H (ICH8 Family) PCI Express Port 3";
			case 0x80862845: return "82801H (ICH8 Family) PCI Express Port 4";
			case 0x80862847: return "82801H (ICH8 Family) PCI Express Port 5";
			case 0x80862849: return "82801H (ICH8 Family) PCI Express Port 6";
			case 0x8086284b: return "82801H (ICH8 Family) HD Audio Controller";
			case 0x8086284f: return "82801H (ICH8 Family) Thermal Reporting Device";
			case 0x80862850: return "82801HM/HEM (ICH8M/ICH8M-E) IDE Controller";
			case 0x808628c0: return "Volume Management Device NVMe RAID Controller";
			case 0x80862912: return "82801IH (ICH9DH) LPC Interface Controller";
			case 0x80862914: return "82801IO (ICH9DO) LPC Interface Controller";
			case 0x80862916: return "82801IR (ICH9R) LPC Interface Controller";
			case 0x80862917: return "ICH9M-E LPC Interface Controller";
			case 0x80862918: return "82801IB (ICH9) LPC Interface Controller";
			case 0x80862919: return "ICH9M LPC Interface Controller";
			case 0x80862920: return "82801IR/IO/IH (ICH9R/DO/DH) 4 port SATA Controller [IDE mode]";
			case 0x80862921: return "82801IB (ICH9) 2 port SATA Controller [IDE mode]";
			case 0x80862922: return "82801IR/IO/IH (ICH9R/DO/DH) 6 port SATA Controller [AHCI mode]";
			case 0x80862923: return "82801IB (ICH9) 4 port SATA Controller [AHCI mode]";
			case 0x80862925: return "82801IR/IO (ICH9R/DO) SATA Controller [RAID mode]";
			case 0x80862926: return "82801I (ICH9 Family) 2 port SATA Controller [IDE mode]";
			case 0x80862928: return "82801IBM/IEM (ICH9M/ICH9M-E) 2 port SATA Controller [IDE mode]";
			case 0x80862929: return "82801IBM/IEM (ICH9M/ICH9M-E) 4 port SATA Controller [AHCI mode]";
			case 0x8086292c: return "82801IEM (ICH9M-E) SATA Controller [RAID mode]";
			case 0x8086292d: return "82801IBM/IEM (ICH9M/ICH9M-E) 2 port SATA Controller [IDE mode]";
			case 0x80862930: return "82801I (ICH9 Family) SMBus Controller";
			case 0x80862932: return "82801I (ICH9 Family) Thermal Subsystem";
			case 0x80862934: return "82801I (ICH9 Family) USB UHCI Controller #1";
			case 0x80862935: return "82801I (ICH9 Family) USB UHCI Controller #2";
			case 0x80862936: return "82801I (ICH9 Family) USB UHCI Controller #3";
			case 0x80862937: return "82801I (ICH9 Family) USB UHCI Controller #4";
			case 0x80862938: return "82801I (ICH9 Family) USB UHCI Controller #5";
			case 0x80862939: return "82801I (ICH9 Family) USB UHCI Controller #6";
			case 0x8086293a: return "82801I (ICH9 Family) USB2 EHCI Controller #1";
			case 0x8086293c: return "82801I (ICH9 Family) USB2 EHCI Controller #2";
			case 0x8086293e: return "82801I (ICH9 Family) HD Audio Controller";
			case 0x80862940: return "82801I (ICH9 Family) PCI Express Port 1";
			case 0x80862942: return "82801I (ICH9 Family) PCI Express Port 2";
			case 0x80862944: return "82801I (ICH9 Family) PCI Express Port 3";
			case 0x80862946: return "82801I (ICH9 Family) PCI Express Port 4";
			case 0x80862948: return "82801I (ICH9 Family) PCI Express Port 5";
			case 0x8086294a: return "82801I (ICH9 Family) PCI Express Port 6";
			case 0x8086294c: return "82566DC-2 Gigabit Network Connection";
			case 0x80862970: return "82946GZ/PL/GL Memory Controller Hub";
			case 0x80862971: return "82946GZ/PL/GL PCI Express Root Port";
			case 0x80862972: return "82946GZ/GL Integrated Graphics Controller";
			case 0x80862973: return "82946GZ/GL Integrated Graphics Controller";
			case 0x80862974: return "82946GZ/GL HECI Controller";
			case 0x80862975: return "82946GZ/GL HECI Controller";
			case 0x80862976: return "82946GZ/GL PT IDER Controller";
			case 0x80862977: return "82946GZ/GL KT Controller";
			case 0x80862980: return "82G35 Express DRAM Controller";
			case 0x80862981: return "82G35 Express PCI Express Root Port";
			case 0x80862982: return "82G35 Express Integrated Graphics Controller";
			case 0x80862983: return "82G35 Express Integrated Graphics Controller";
			case 0x80862984: return "82G35 Express HECI Controller";
			case 0x80862990: return "82Q963/Q965 Memory Controller Hub";
			case 0x80862991: return "82Q963/Q965 PCI Express Root Port";
			case 0x80862992: return "82Q963/Q965 Integrated Graphics Controller";
			case 0x80862993: return "82Q963/Q965 Integrated Graphics Controller";
			case 0x80862994: return "82Q963/Q965 HECI Controller";
			case 0x80862995: return "82Q963/Q965 HECI Controller";
			case 0x80862996: return "82Q963/Q965 PT IDER Controller";
			case 0x80862997: return "82Q963/Q965 KT Controller";
			case 0x808629a0: return "82P965/G965 Memory Controller Hub";
			case 0x808629a1: return "82P965/G965 PCI Express Root Port";
			case 0x808629a2: return "82G965 Integrated Graphics Controller";
			case 0x808629a3: return "82G965 Integrated Graphics Controller";
			case 0x808629a4: return "82P965/G965 HECI Controller";
			case 0x808629a5: return "82P965/G965 HECI Controller";
			case 0x808629a6: return "82P965/G965 PT IDER Controller";
			case 0x808629a7: return "82P965/G965 KT Controller";
			case 0x808629b0: return "82Q35 Express DRAM Controller";
			case 0x808629b1: return "82Q35 Express PCI Express Root Port";
			case 0x808629b2: return "82Q35 Express Integrated Graphics Controller";
			case 0x808629b3: return "82Q35 Express Integrated Graphics Controller";
			case 0x808629b4: return "82Q35 Express MEI Controller";
			case 0x808629b5: return "82Q35 Express MEI Controller";
			case 0x808629b6: return "82Q35 Express PT IDER Controller";
			case 0x808629b7: return "82Q35 Express Serial KT Controller";
			case 0x808629c0: return "82G33/G31/P35/P31 Express DRAM Controller";
			case 0x808629c1: return "82G33/G31/P35/P31 Express PCI Express Root Port";
			case 0x808629c2: return "82G33/G31 Express Integrated Graphics Controller";
			case 0x808629c3: return "82G33/G31 Express Integrated Graphics Controller";
			case 0x808629c4: return "82G33/G31/P35/P31 Express MEI Controller";
			case 0x808629c5: return "82G33/G31/P35/P31 Express MEI Controller";
			case 0x808629c6: return "82G33/G31/P35/P31 Express PT IDER Controller";
			case 0x808629c7: return "82G33/G31/P35/P31 Express Serial KT Controller";
			case 0x808629cf: return "Virtual HECI Controller";
			case 0x808629d0: return "82Q33 Express DRAM Controller";
			case 0x808629d1: return "82Q33 Express PCI Express Root Port";
			case 0x808629d2: return "82Q33 Express Integrated Graphics Controller";
			case 0x808629d3: return "82Q33 Express Integrated Graphics Controller";
			case 0x808629d4: return "82Q33 Express MEI Controller";
			case 0x808629d5: return "82Q33 Express MEI Controller";
			case 0x808629d6: return "82Q33 Express PT IDER Controller";
			case 0x808629d7: return "82Q33 Express Serial KT Controller";
			case 0x808629e0: return "82X38/X48 Express DRAM Controller";
			case 0x808629e1: return "82X38/X48 Express Host-Primary PCI Express Bridge";
			case 0x808629e4: return "82X38/X48 Express MEI Controller";
			case 0x808629e5: return "82X38/X48 Express MEI Controller";
			case 0x808629e6: return "82X38/X48 Express PT IDER Controller";
			case 0x808629e7: return "82X38/X48 Express Serial KT Controller";
			case 0x808629e9: return "82X38/X48 Express Host-Secondary PCI Express Bridge";
			case 0x808629f0: return "3200/3210 Chipset DRAM Controller";
			case 0x808629f1: return "3200/3210 Chipset Host-Primary PCI Express Bridge";
			case 0x808629f4: return "3200/3210 Chipset MEI Controller";
			case 0x808629f5: return "3200/3210 Chipset MEI Controller";
			case 0x808629f6: return "3200/3210 Chipset PT IDER Controller";
			case 0x808629f7: return "3200/3210 Chipset Serial KT Controller";
			case 0x808629f9: return "3210 Chipset Host-Secondary PCI Express Bridge";
			case 0x80862a00: return "Mobile PM965/GM965/GL960 Memory Controller Hub";
			case 0x80862a01: return "Mobile PM965/GM965/GL960 PCI Express Root Port";
			case 0x80862a02: return "Mobile GM965/GL960 Integrated Graphics Controller (primary)";
			case 0x80862a03: return "Mobile GM965/GL960 Integrated Graphics Controller (secondary)";
			case 0x80862a04: return "Mobile PM965/GM965 MEI Controller";
			case 0x80862a05: return "Mobile PM965/GM965 MEI Controller";
			case 0x80862a06: return "Mobile PM965/GM965 PT IDER Controller";
			case 0x80862a07: return "Mobile PM965/GM965 KT Controller";
			case 0x80862a10: return "Mobile GME965/GLE960 Memory Controller Hub";
			case 0x80862a11: return "Mobile GME965/GLE960 PCI Express Root Port";
			case 0x80862a12: return "Mobile GME965/GLE960 Integrated Graphics Controller";
			case 0x80862a13: return "Mobile GME965/GLE960 Integrated Graphics Controller";
			case 0x80862a14: return "Mobile GME965/GLE960 MEI Controller";
			case 0x80862a15: return "Mobile GME965/GLE960 MEI Controller";
			case 0x80862a16: return "Mobile GME965/GLE960 PT IDER Controller";
			case 0x80862a17: return "Mobile GME965/GLE960 KT Controller";
			case 0x80862a40: return "Mobile 4 Series Chipset Memory Controller Hub";
			case 0x80862a41: return "Mobile 4 Series Chipset PCI Express Graphics Port";
			case 0x80862a42: return "Mobile 4 Series Chipset Integrated Graphics Controller";
			case 0x80862a43: return "Mobile 4 Series Chipset Integrated Graphics Controller";
			case 0x80862a44: return "Mobile 4 Series Chipset MEI Controller";
			case 0x80862a45: return "Mobile 4 Series Chipset MEI Controller";
			case 0x80862a46: return "Mobile 4 Series Chipset PT IDER Controller";
			case 0x80862a47: return "Mobile 4 Series Chipset AMT SOL Redirection";
			case 0x80862a50: return "Cantiga MEI Controller";
			case 0x80862a51: return "Cantiga MEI Controller";
			case 0x80862a52: return "Cantiga PT IDER Controller";
			case 0x80862a53: return "Cantiga AMT SOL Redirection";
			case 0x80862b00: return "Xeon Processor E7 Product Family System Configuration Controller 1";
			case 0x80862b02: return "Xeon Processor E7 Product Family System Configuration Controller 2";
			case 0x80862b04: return "Xeon Processor E7 Product Family Power Controller";
			case 0x80862b08: return "Xeon Processor E7 Product Family Caching Agent 0";
			case 0x80862b0c: return "Xeon Processor E7 Product Family Caching Agent 1";
			case 0x80862b10: return "Xeon Processor E7 Product Family QPI Home Agent 0";
			case 0x80862b13: return "Xeon Processor E7 Product Family Memory Controller 0c";
			case 0x80862b14: return "Xeon Processor E7 Product Family Memory Controller 0a";
			case 0x80862b16: return "Xeon Processor E7 Product Family Memory Controller 0b";
			case 0x80862b18: return "Xeon Processor E7 Product Family QPI Home Agent 1";
			case 0x80862b1b: return "Xeon Processor E7 Product Family Memory Controller 1c";
			case 0x80862b1c: return "Xeon Processor E7 Product Family Memory Controller 1a";
			case 0x80862b1e: return "Xeon Processor E7 Product Family Memory Controller 1b";
			case 0x80862b20: return "Xeon Processor E7 Product Family Last Level Cache Coherence Engine 0";
			case 0x80862b22: return "Xeon Processor E7 Product Family System Configuration Controller 3";
			case 0x80862b24: return "Xeon Processor E7 Product Family Last Level Cache Coherence Engine 1";
			case 0x80862b28: return "Xeon Processor E7 Product Family Last Level Cache Coherence Engine 2";
			case 0x80862b2a: return "Xeon Processor E7 Product Family System Configuration Controller 4";
			case 0x80862b2c: return "Xeon Processor E7 Product Family Last Level Cache Coherence Engine 3";
			case 0x80862b30: return "Xeon Processor E7 Product Family Last Level Cache Coherence Engine 4";
			case 0x80862b34: return "Xeon Processor E7 Product Family Last Level Cache Coherence Engine 5";
			case 0x80862b38: return "Xeon Processor E7 Product Family Last Level Cache Coherence Engine 6";
			case 0x80862b3c: return "Xeon Processor E7 Product Family Last Level Cache Coherence Engine 7";
			case 0x80862b40: return "Xeon Processor E7 Product Family QPI Router Port 0-1";
			case 0x80862b42: return "Xeon Processor E7 Product Family QPI Router Port 2-3";
			case 0x80862b44: return "Xeon Processor E7 Product Family QPI Router Port 4-5";
			case 0x80862b46: return "Xeon Processor E7 Product Family QPI Router Port 6-7";
			case 0x80862b48: return "Xeon Processor E7 Product Family Test and Debug 0";
			case 0x80862b4c: return "Xeon Processor E7 Product Family Test and Debug 1";
			case 0x80862b50: return "Xeon Processor E7 Product Family QPI Physical Port 0: REUT control/status";
			case 0x80862b52: return "Xeon Processor E7 Product Family QPI Physical Port 0: Misc. control/status";
			case 0x80862b54: return "Xeon Processor E7 Product Family QPI Physical Port 1: REUT control/status";
			case 0x80862b56: return "Xeon Processor E7 Product Family QPI Physical Port 1: Misc. control/status";
			case 0x80862b58: return "Xeon Processor E7 Product Family QPI Physical Port 2: REUT control/status";
			case 0x80862b5a: return "Xeon Processor E7 Product Family QPI Physical Port 2: Misc. control/status";
			case 0x80862b5c: return "Xeon Processor E7 Product Family QPI Physical Port 3: REUT control/status";
			case 0x80862b5e: return "Xeon Processor E7 Product Family QPI Physical Port 3: Misc. control/status";
			case 0x80862b60: return "Xeon Processor E7 Product Family SMI Physical Port 0: REUT control/status";
			case 0x80862b62: return "Xeon Processor E7 Product Family SMI Physical Port 0: Misc control/status";
			case 0x80862b64: return "Xeon Processor E7 Product Family SMI Physical Port 1: REUT control/status";
			case 0x80862b66: return "Xeon Processor E7 Product Family SMI Physical Port 1: Misc control/status";
			case 0x80862b68: return "Xeon Processor E7 Product Family Last Level Cache Coherence Engine 8";
			case 0x80862b6c: return "Xeon Processor E7 Product Family Last Level Cache Coherence Engine 9";
			case 0x80862c01: return "Xeon 5500/Core i7 QuickPath Architecture System Address Decoder";
			case 0x80862c10: return "Xeon 5500/Core i7 QPI Link 0";
			case 0x80862c11: return "Xeon 5500/Core i7 QPI Physical 0";
			case 0x80862c14: return "Xeon 5500/Core i7 QPI Link 1";
			case 0x80862c15: return "Xeon 5500/Core i7 QPI Physical 1";
			case 0x80862c18: return "Xeon 5500/Core i7 Integrated Memory Controller";
			case 0x80862c19: return "Xeon 5500/Core i7 Integrated Memory Controller Target Address Decoder";
			case 0x80862c1a: return "Xeon 5500/Core i7 Integrated Memory Controller RAS Registers";
			case 0x80862c1c: return "Xeon 5500/Core i7 Integrated Memory Controller Test Registers";
			case 0x80862c20: return "Xeon 5500/Core i7 Integrated Memory Controller Channel 0 Control Registers";
			case 0x80862c21: return "Xeon 5500/Core i7 Integrated Memory Controller Channel 0 Address Registers";
			case 0x80862c22: return "Xeon 5500/Core i7 Integrated Memory Controller Channel 0 Rank Registers";
			case 0x80862c23: return "Xeon 5500/Core i7 Integrated Memory Controller Channel 0 Thermal Control Registers";
			case 0x80862c28: return "Xeon 5500/Core i7 Integrated Memory Controller Channel 1 Control Registers";
			case 0x80862c29: return "Xeon 5500/Core i7 Integrated Memory Controller Channel 1 Address Registers";
			case 0x80862c2a: return "Xeon 5500/Core i7 Integrated Memory Controller Channel 1 Rank Registers";
			case 0x80862c2b: return "Xeon 5500/Core i7 Integrated Memory Controller Channel 1 Thermal Control Registers";
			case 0x80862c30: return "Xeon 5500/Core i7 Integrated Memory Controller Channel 2 Control Registers";
			case 0x80862c31: return "Xeon 5500/Core i7 Integrated Memory Controller Channel 2 Address Registers";
			case 0x80862c32: return "Xeon 5500/Core i7 Integrated Memory Controller Channel 2 Rank Registers";
			case 0x80862c33: return "Xeon 5500/Core i7 Integrated Memory Controller Channel 2 Thermal Control Registers";
			case 0x80862c40: return "Xeon 5500/Core i7 QuickPath Architecture Generic Non-Core Registers";
			case 0x80862c41: return "Xeon 5500/Core i7 QuickPath Architecture Generic Non-Core Registers";
			case 0x80862c50: return "Core Processor QuickPath Architecture Generic Non-Core Registers";
			case 0x80862c51: return "Core Processor QuickPath Architecture Generic Non-Core Registers";
			case 0x80862c52: return "Core Processor QuickPath Architecture Generic Non-Core Registers";
			case 0x80862c53: return "Core Processor QuickPath Architecture Generic Non-Core Registers";
			case 0x80862c54: return "Core Processor QuickPath Architecture Generic Non-Core Registers";
			case 0x80862c55: return "Core Processor QuickPath Architecture Generic Non-Core Registers";
			case 0x80862c56: return "Core Processor QuickPath Architecture Generic Non-Core Registers";
			case 0x80862c57: return "Core Processor QuickPath Architecture Generic Non-Core Registers";
			case 0x80862c58: return "Xeon C5500/C3500 QPI Generic Non-core Registers";
			case 0x80862c59: return "Xeon C5500/C3500 QPI Generic Non-core Registers";
			case 0x80862c5a: return "Xeon C5500/C3500 QPI Generic Non-core Registers";
			case 0x80862c5b: return "Xeon C5500/C3500 QPI Generic Non-core Registers";
			case 0x80862c5c: return "Xeon C5500/C3500 QPI Generic Non-core Registers";
			case 0x80862c5d: return "Xeon C5500/C3500 QPI Generic Non-core Registers";
			case 0x80862c5e: return "Xeon C5500/C3500 QPI Generic Non-core Registers";
			case 0x80862c5f: return "Xeon C5500/C3500 QPI Generic Non-core Registers";
			case 0x80862c61: return "Core Processor QuickPath Architecture Generic Non-core Registers";
			case 0x80862c62: return "Core Processor QuickPath Architecture Generic Non-core Registers";
			case 0x80862c70: return "Xeon 5600 Series QuickPath Architecture Generic Non-core Registers";
			case 0x80862c81: return "Core Processor QuickPath Architecture System Address Decoder";
			case 0x80862c90: return "Core Processor QPI Link 0";
			case 0x80862c91: return "Core Processor QPI Physical 0";
			case 0x80862c98: return "Core Processor Integrated Memory Controller";
			case 0x80862c99: return "Core Processor Integrated Memory Controller Target Address Decoder";
			case 0x80862c9a: return "Core Processor Integrated Memory Controller Test Registers";
			case 0x80862c9c: return "Core Processor Integrated Memory Controller Test Registers";
			case 0x80862ca0: return "Core Processor Integrated Memory Controller Channel 0 Control Registers";
			case 0x80862ca1: return "Core Processor Integrated Memory Controller Channel 0 Address Registers";
			case 0x80862ca2: return "Core Processor Integrated Memory Controller Channel 0 Rank Registers";
			case 0x80862ca3: return "Core Processor Integrated Memory Controller Channel 0 Thermal Control Registers";
			case 0x80862ca8: return "Core Processor Integrated Memory Controller Channel 1 Control Registers";
			case 0x80862ca9: return "Core Processor Integrated Memory Controller Channel 1 Address Registers";
			case 0x80862caa: return "Core Processor Integrated Memory Controller Channel 1 Rank Registers";
			case 0x80862cab: return "Core Processor Integrated Memory Controller Channel 1 Thermal Control Registers";
			case 0x80862cc1: return "Xeon C5500/C3500 QPI System Address Decoder";
			case 0x80862cd0: return "Xeon C5500/C3500 QPI Link 0";
			case 0x80862cd1: return "Xeon C5500/C3500 QPI Physical 0";
			case 0x80862cd4: return "Xeon C5500/C3500 QPI Link 1";
			case 0x80862cd5: return "Xeon C5500/C3500 QPI Physical 1";
			case 0x80862cd8: return "Xeon C5500/C3500 Integrated Memory Controller Registers";
			case 0x80862cd9: return "Xeon C5500/C3500 Integrated Memory Controller Target Address Decoder";
			case 0x80862cda: return "Xeon C5500/C3500 Integrated Memory Controller RAS Registers";
			case 0x80862cdc: return "Xeon C5500/C3500 Integrated Memory Controller Test Registers";
			case 0x80862ce0: return "Xeon C5500/C3500 Integrated Memory Controller Channel 0 Control";
			case 0x80862ce1: return "Xeon C5500/C3500 Integrated Memory Controller Channel 0 Address";
			case 0x80862ce2: return "Xeon C5500/C3500 Integrated Memory Controller Channel 0 Rank";
			case 0x80862ce3: return "Xeon C5500/C3500 Integrated Memory Controller Channel 0 Thermal Control";
			case 0x80862ce8: return "Xeon C5500/C3500 Integrated Memory Controller Channel 1 Control";
			case 0x80862ce9: return "Xeon C5500/C3500 Integrated Memory Controller Channel 1 Address";
			case 0x80862cea: return "Xeon C5500/C3500 Integrated Memory Controller Channel 1 Rank";
			case 0x80862ceb: return "Xeon C5500/C3500 Integrated Memory Controller Channel 1 Thermal Control";
			case 0x80862cf0: return "Xeon C5500/C3500 Integrated Memory Controller Channel 2 Control";
			case 0x80862cf1: return "Xeon C5500/C3500 Integrated Memory Controller Channel 2 Address";
			case 0x80862cf2: return "Xeon C5500/C3500 Integrated Memory Controller Channel 2 Rank";
			case 0x80862cf3: return "Xeon C5500/C3500 Integrated Memory Controller Channel 2 Thermal Control";
			case 0x80862d01: return "Core Processor QuickPath Architecture System Address Decoder";
			case 0x80862d10: return "Core Processor QPI Link 0";
			case 0x80862d11: return "1st Generation Core i3/5/7 Processor QPI Physical 0";
			case 0x80862d12: return "1st Generation Core i3/5/7 Processor Reserved";
			case 0x80862d13: return "1st Generation Core i3/5/7 Processor Reserved";
			case 0x80862d81: return "Xeon 5600 Series QuickPath Architecture System Address Decoder";
			case 0x80862d90: return "Xeon 5600 Series QPI Link 0";
			case 0x80862d91: return "Xeon 5600 Series QPI Physical 0";
			case 0x80862d92: return "Xeon 5600 Series Mirror Port Link 0";
			case 0x80862d93: return "Xeon 5600 Series Mirror Port Link 1";
			case 0x80862d94: return "Xeon 5600 Series QPI Link 1";
			case 0x80862d95: return "Xeon 5600 Series QPI Physical 1";
			case 0x80862d98: return "Xeon 5600 Series Integrated Memory Controller Registers";
			case 0x80862d99: return "Xeon 5600 Series Integrated Memory Controller Target Address Decoder";
			case 0x80862d9a: return "Xeon 5600 Series Integrated Memory Controller RAS Registers";
			case 0x80862d9c: return "Xeon 5600 Series Integrated Memory Controller Test Registers";
			case 0x80862da0: return "Xeon 5600 Series Integrated Memory Controller Channel 0 Control";
			case 0x80862da1: return "Xeon 5600 Series Integrated Memory Controller Channel 0 Address";
			case 0x80862da2: return "Xeon 5600 Series Integrated Memory Controller Channel 0 Rank";
			case 0x80862da3: return "Xeon 5600 Series Integrated Memory Controller Channel 0 Thermal Control";
			case 0x80862da8: return "Xeon 5600 Series Integrated Memory Controller Channel 1 Control";
			case 0x80862da9: return "Xeon 5600 Series Integrated Memory Controller Channel 1 Address";
			case 0x80862daa: return "Xeon 5600 Series Integrated Memory Controller Channel 1 Rank";
			case 0x80862dab: return "Xeon 5600 Series Integrated Memory Controller Channel 1 Thermal Control";
			case 0x80862db0: return "Xeon 5600 Series Integrated Memory Controller Channel 2 Control";
			case 0x80862db1: return "Xeon 5600 Series Integrated Memory Controller Channel 2 Address";
			case 0x80862db2: return "Xeon 5600 Series Integrated Memory Controller Channel 2 Rank";
			case 0x80862db3: return "Xeon 5600 Series Integrated Memory Controller Channel 2 Thermal Control";
			case 0x80862e00: return "4 Series Chipset DRAM Controller";
			case 0x80862e01: return "4 Series Chipset PCI Express Root Port";
			case 0x80862e02: return "4 Series Chipset Integrated Graphics Controller";
			case 0x80862e03: return "4 Series Chipset Integrated Graphics Controller";
			case 0x80862e04: return "4 Series Chipset HECI Controller";
			case 0x80862e05: return "4 Series Chipset HECI Controller";
			case 0x80862e06: return "4 Series Chipset PT IDER Controller";
			case 0x80862e07: return "4 Series Chipset Serial KT Controller";
			case 0x80862e10: return "4 Series Chipset DRAM Controller";
			case 0x80862e11: return "4 Series Chipset PCI Express Root Port";
			case 0x80862e12: return "4 Series Chipset Integrated Graphics Controller";
			case 0x80862e13: return "4 Series Chipset Integrated Graphics Controller";
			case 0x80862e14: return "4 Series Chipset HECI Controller";
			case 0x80862e15: return "4 Series Chipset HECI Controller";
			case 0x80862e16: return "4 Series Chipset PT IDER Controller";
			case 0x80862e17: return "4 Series Chipset Serial KT Controller";
			case 0x80862e20: return "4 Series Chipset DRAM Controller";
			case 0x80862e21: return "4 Series Chipset PCI Express Root Port";
			case 0x80862e22: return "4 Series Chipset Integrated Graphics Controller";
			case 0x80862e23: return "4 Series Chipset Integrated Graphics Controller";
			case 0x80862e24: return "4 Series Chipset HECI Controller";
			case 0x80862e25: return "4 Series Chipset HECI Controller";
			case 0x80862e26: return "4 Series Chipset PT IDER Controller";
			case 0x80862e27: return "4 Series Chipset Serial KT Controller";
			case 0x80862e29: return "4 Series Chipset PCI Express Root Port";
			case 0x80862e30: return "4 Series Chipset DRAM Controller";
			case 0x80862e31: return "4 Series Chipset PCI Express Root Port";
			case 0x80862e32: return "4 Series Chipset Integrated Graphics Controller";
			case 0x80862e33: return "4 Series Chipset Integrated Graphics Controller";
			case 0x80862e34: return "4 Series Chipset HECI Controller";
			case 0x80862e35: return "4 Series Chipset HECI Controller";
			case 0x80862e36: return "4 Series Chipset PT IDER Controller";
			case 0x80862e37: return "4 Series Chipset Serial KT Controller";
			case 0x80862e40: return "4 Series Chipset DRAM Controller";
			case 0x80862e41: return "4 Series Chipset PCI Express Root Port";
			case 0x80862e42: return "4 Series Chipset Integrated Graphics Controller";
			case 0x80862e43: return "4 Series Chipset Integrated Graphics Controller";
			case 0x80862e44: return "4 Series Chipset HECI Controller";
			case 0x80862e45: return "4 Series Chipset HECI Controller";
			case 0x80862e46: return "4 Series Chipset PT IDER Controller";
			case 0x80862e47: return "4 Series Chipset Serial KT Controller";
			case 0x80862e50: return "CE Media Processor CE3100";
			case 0x80862e52: return "CE Media Processor Clock and Reset Controller";
			case 0x80862e58: return "CE Media Processor Interrupt Controller";
			case 0x80862e5a: return "CE Media Processor CE3100 A/V Bridge";
			case 0x80862e5b: return "Graphics Media Accelerator 500 Graphics";
			case 0x80862e5c: return "CE Media Processor Video Decoder";
			case 0x80862e5d: return "CE Media Processor Transport Stream Interface";
			case 0x80862e5e: return "CE Media Processor Transport Stream Processor 0";
			case 0x80862e5f: return "CE Media Processor Audio DSP";
			case 0x80862e60: return "CE Media Processor Audio Interfaces";
			case 0x80862e61: return "CE Media Processor Video Display Controller";
			case 0x80862e62: return "CE Media Processor Video Processing Unit";
			case 0x80862e63: return "CE Media Processor HDMI Tx Interface";
			case 0x80862e65: return "CE Media Processor Expansion Bus Interface";
			case 0x80862e66: return "CE Media Processor UART";
			case 0x80862e67: return "CE Media Processor General Purpose I/Os";
			case 0x80862e68: return "CE Media Processor I2C Interface";
			case 0x80862e69: return "CE Media Processor Smart Card Interface";
			case 0x80862e6a: return "CE Media Processor SPI Master Interface";
			case 0x80862e6e: return "CE Media Processor Gigabit Ethernet Controller";
			case 0x80862e6f: return "CE Media Processor Media Timing Unit";
			case 0x80862e70: return "CE Media Processor USB";
			case 0x80862e71: return "CE Media Processor SATA";
			case 0x80862e73: return "CE Media Processor CE3100 PCI Express";
			case 0x80862e90: return "4 Series Chipset DRAM Controller";
			case 0x80862e91: return "4 Series Chipset PCI Express Root Port";
			case 0x80862e92: return "4 Series Chipset Integrated Graphics Controller";
			case 0x80862e93: return "4 Series Chipset Integrated Graphics Controller";
			case 0x80862e94: return "4 Series Chipset HECI Controller";
			case 0x80862e95: return "4 Series Chipset HECI Controller";
			case 0x80862e96: return "4 Series Chipset PT IDER Controller";
			case 0x80862f00: return "Xeon E7 v3/Xeon E5 v3/Core i7 DMI2";
			case 0x80862f01: return "Xeon E7 v3/Xeon E5 v3/Core i7 PCI Express Root Port 0";
			case 0x80862f02: return "Xeon E7 v3/Xeon E5 v3/Core i7 PCI Express Root Port 1";
			case 0x80862f03: return "Xeon E7 v3/Xeon E5 v3/Core i7 PCI Express Root Port 1";
			case 0x80862f04: return "Xeon E7 v3/Xeon E5 v3/Core i7 PCI Express Root Port 2";
			case 0x80862f05: return "Xeon E7 v3/Xeon E5 v3/Core i7 PCI Express Root Port 2";
			case 0x80862f06: return "Xeon E7 v3/Xeon E5 v3/Core i7 PCI Express Root Port 2";
			case 0x80862f07: return "Xeon E7 v3/Xeon E5 v3/Core i7 PCI Express Root Port 2";
			case 0x80862f08: return "Xeon E7 v3/Xeon E5 v3/Core i7 PCI Express Root Port 3";
			case 0x80862f09: return "Xeon E7 v3/Xeon E5 v3/Core i7 PCI Express Root Port 3";
			case 0x80862f0a: return "Xeon E7 v3/Xeon E5 v3/Core i7 PCI Express Root Port 3";
			case 0x80862f0b: return "Xeon E7 v3/Xeon E5 v3/Core i7 PCI Express Root Port 3";
			case 0x80862f0d: return "Haswell Xeon Non-Transparent Bridge (Back-to-back)";
			case 0x80862f0e: return "Haswell Xeon Non-Transparent Bridge (Primary Side)";
			case 0x80862f0f: return "Haswell Xeon Non-Transparent Bridge (Secondary Side)";
			case 0x80862f10: return "Xeon E7 v3/Xeon E5 v3/Core i7 IIO Debug";
			case 0x80862f11: return "Xeon E7 v3/Xeon E5 v3/Core i7 IIO Debug";
			case 0x80862f12: return "Xeon E7 v3/Xeon E5 v3/Core i7 IIO Debug";
			case 0x80862f13: return "Xeon E7 v3/Xeon E5 v3/Core i7 IIO Debug";
			case 0x80862f14: return "Xeon E7 v3/Xeon E5 v3/Core i7 IIO Debug";
			case 0x80862f15: return "Xeon E7 v3/Xeon E5 v3/Core i7 IIO Debug";
			case 0x80862f16: return "Xeon E7 v3/Xeon E5 v3/Core i7 IIO Debug";
			case 0x80862f17: return "Xeon E7 v3/Xeon E5 v3/Core i7 IIO Debug";
			case 0x80862f18: return "Xeon E7 v3/Xeon E5 v3/Core i7 IIO Debug";
			case 0x80862f19: return "Xeon E7 v3/Xeon E5 v3/Core i7 IIO Debug";
			case 0x80862f1a: return "Xeon E7 v3/Xeon E5 v3/Core i7 IIO Debug";
			case 0x80862f1b: return "Xeon E7 v3/Xeon E5 v3/Core i7 IIO Debug";
			case 0x80862f1c: return "Xeon E7 v3/Xeon E5 v3/Core i7 IIO Debug";
			case 0x80862f1d: return "Xeon E7 v3/Xeon E5 v3/Core i7 PCIe Ring Interface";
			case 0x80862f1e: return "Xeon E7 v3/Xeon E5 v3/Core i7 Scratchpad & Semaphore Registers";
			case 0x80862f1f: return "Xeon E7 v3/Xeon E5 v3/Core i7 Scratchpad & Semaphore Registers";
			case 0x80862f20: return "Xeon E7 v3/Xeon E5 v3/Core i7 DMA Channel 0";
			case 0x80862f21: return "Xeon E7 v3/Xeon E5 v3/Core i7 DMA Channel 1";
			case 0x80862f22: return "Xeon E7 v3/Xeon E5 v3/Core i7 DMA Channel 2";
			case 0x80862f23: return "Xeon E7 v3/Xeon E5 v3/Core i7 DMA Channel 3";
			case 0x80862f24: return "Xeon E7 v3/Xeon E5 v3/Core i7 DMA Channel 4";
			case 0x80862f25: return "Xeon E7 v3/Xeon E5 v3/Core i7 DMA Channel 5";
			case 0x80862f26: return "Xeon E7 v3/Xeon E5 v3/Core i7 DMA Channel 6";
			case 0x80862f27: return "Xeon E7 v3/Xeon E5 v3/Core i7 DMA Channel 7";
			case 0x80862f28: return "Xeon E7 v3/Xeon E5 v3/Core i7 Address Map, VTd_Misc, System Management";
			case 0x80862f29: return "Xeon E7 v3/Xeon E5 v3/Core i7 Hot Plug";
			case 0x80862f2a: return "Xeon E7 v3/Xeon E5 v3/Core i7 RAS, Control Status and Global Errors";
			case 0x80862f2c: return "Xeon E7 v3/Xeon E5 v3/Core i7 I/O APIC";
			case 0x80862f2e: return "Xeon E7 v3/Xeon E5 v3/Core i7 RAID 5/6";
			case 0x80862f2f: return "Xeon E7 v3/Xeon E5 v3/Core i7 RAID 5/6";
			case 0x80862f30: return "Xeon E7 v3/Xeon E5 v3/Core i7 Home Agent 0";
			case 0x80862f32: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 0";
			case 0x80862f33: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 1";
			case 0x80862f34: return "Xeon E7 v3/Xeon E5 v3/Core i7 PCIe Ring Interface";
			case 0x80862f36: return "Xeon E7 v3/Xeon E5 v3/Core i7 R3 QPI Link 0 & 1 Monitoring";
			case 0x80862f37: return "Xeon E7 v3/Xeon E5 v3/Core i7 R3 QPI Link 0 & 1 Monitoring";
			case 0x80862f38: return "Xeon E7 v3/Xeon E5 v3/Core i7 Home Agent 1";
			case 0x80862f39: return "Xeon E7 v3/Xeon E5 v3/Core i7 I/O Performance Monitoring";
			case 0x80862f3a: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 2";
			case 0x80862f3e: return "Xeon E7 v3/Xeon E5 v3/Core i7 R3 QPI Link 2 Monitoring";
			case 0x80862f3f: return "Xeon E7 v3/Xeon E5 v3/Core i7 R3 QPI Link 2 Monitoring";
			case 0x80862f40: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 2";
			case 0x80862f41: return "Xeon E7 v3/Xeon E5 v3/Core i7 R3 QPI Link 2 Monitoring";
			case 0x80862f43: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 2";
			case 0x80862f45: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 2 Debug";
			case 0x80862f46: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 2 Debug";
			case 0x80862f47: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 2 Debug";
			case 0x80862f60: return "Xeon E7 v3/Xeon E5 v3/Core i7 Home Agent 1";
			case 0x80862f68: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 1 Target Address, Thermal & RAS Registers";
			case 0x80862f6a: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 1 Channel Target Address Decoder";
			case 0x80862f6b: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 1 Channel Target Address Decoder";
			case 0x80862f6c: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 1 Channel Target Address Decoder";
			case 0x80862f6d: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 1 Channel Target Address Decoder";
			case 0x80862f6e: return "Xeon E7 v3/Xeon E5 v3/Core i7 DDRIO Channel 2/3 Broadcast";
			case 0x80862f6f: return "Xeon E7 v3/Xeon E5 v3/Core i7 DDRIO Global Broadcast";
			case 0x80862f70: return "Xeon E7 v3/Xeon E5 v3/Core i7 Home Agent 0 Debug";
			case 0x80862f71: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 0 Target Address, Thermal & RAS Registers";
			case 0x80862f76: return "Xeon E7 v3/Xeon E5 v3/Core i7 E3 QPI Link Debug";
			case 0x80862f78: return "Xeon E7 v3/Xeon E5 v3/Core i7 Home Agent 1 Debug";
			case 0x80862f79: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 1 Target Address, Thermal & RAS Registers";
			case 0x80862f7d: return "Xeon E7 v3/Xeon E5 v3/Core i7 Scratchpad & Semaphore Registers";
			case 0x80862f7e: return "Xeon E7 v3/Xeon E5 v3/Core i7 E3 QPI Link Debug";
			case 0x80862f80: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 0";
			case 0x80862f81: return "Xeon E7 v3/Xeon E5 v3/Core i7 R3 QPI Link 0 & 1 Monitoring";
			case 0x80862f83: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 0";
			case 0x80862f85: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 0 Debug";
			case 0x80862f86: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 0 Debug";
			case 0x80862f87: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 0 Debug";
			case 0x80862f88: return "Xeon E7 v3/Xeon E5 v3/Core i7 VCU";
			case 0x80862f8a: return "Xeon E7 v3/Xeon E5 v3/Core i7 VCU";
			case 0x80862f90: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 1";
			case 0x80862f93: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 1";
			case 0x80862f95: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 1 Debug";
			case 0x80862f96: return "Xeon E7 v3/Xeon E5 v3/Core i7 QPI Link 1 Debug";
			case 0x80862f98: return "Xeon E7 v3/Xeon E5 v3/Core i7 Power Control Unit";
			case 0x80862f99: return "Xeon E7 v3/Xeon E5 v3/Core i7 Power Control Unit";
			case 0x80862f9a: return "Xeon E7 v3/Xeon E5 v3/Core i7 Power Control Unit";
			case 0x80862f9c: return "Xeon E7 v3/Xeon E5 v3/Core i7 Power Control Unit";
			case 0x80862fa0: return "Xeon E7 v3/Xeon E5 v3/Core i7 Home Agent 0";
			case 0x80862fa8: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 0 Target Address, Thermal & RAS Registers";
			case 0x80862faa: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 0 Channel Target Address Decoder";
			case 0x80862fab: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 0 Channel Target Address Decoder";
			case 0x80862fac: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 0 Channel Target Address Decoder";
			case 0x80862fad: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 0 Channel Target Address Decoder";
			case 0x80862fae: return "Xeon E7 v3/Xeon E5 v3/Core i7 DDRIO Channel 0/1 Broadcast";
			case 0x80862faf: return "Xeon E7 v3/Xeon E5 v3/Core i7 DDRIO Global Broadcast";
			case 0x80862fb0: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 0 Channel 0 Thermal Control";
			case 0x80862fb1: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 0 Channel 1 Thermal Control";
			case 0x80862fb2: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 0 Channel 0 ERROR Registers";
			case 0x80862fb3: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 0 Channel 1 ERROR Registers";
			case 0x80862fb4: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 0 Channel 2 Thermal Control";
			case 0x80862fb5: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 0 Channel 3 Thermal Control";
			case 0x80862fb6: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 0 Channel 2 ERROR Registers";
			case 0x80862fb7: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 0 Channel 3 ERROR Registers";
			case 0x80862fb8: return "Xeon E7 v3/Xeon E5 v3/Core i7 DDRIO (VMSE) 2 & 3";
			case 0x80862fb9: return "Xeon E7 v3/Xeon E5 v3/Core i7 DDRIO (VMSE) 2 & 3";
			case 0x80862fba: return "Xeon E7 v3/Xeon E5 v3/Core i7 DDRIO (VMSE) 2 & 3";
			case 0x80862fbb: return "Xeon E7 v3/Xeon E5 v3/Core i7 DDRIO (VMSE) 2 & 3";
			case 0x80862fbc: return "Xeon E7 v3/Xeon E5 v3/Core i7 DDRIO (VMSE) 0 & 1";
			case 0x80862fbd: return "Xeon E7 v3/Xeon E5 v3/Core i7 DDRIO (VMSE) 0 & 1";
			case 0x80862fbe: return "Xeon E7 v3/Xeon E5 v3/Core i7 DDRIO (VMSE) 0 & 1";
			case 0x80862fbf: return "Xeon E7 v3/Xeon E5 v3/Core i7 DDRIO (VMSE) 0 & 1";
			case 0x80862fc0: return "Xeon E7 v3/Xeon E5 v3/Core i7 Power Control Unit";
			case 0x80862fc1: return "Xeon E7 v3/Xeon E5 v3/Core i7 Power Control Unit";
			case 0x80862fc2: return "Xeon E7 v3/Xeon E5 v3/Core i7 Power Control Unit";
			case 0x80862fc3: return "Xeon E7 v3/Xeon E5 v3/Core i7 Power Control Unit";
			case 0x80862fc4: return "Xeon E7 v3/Xeon E5 v3/Core i7 Power Control Unit";
			case 0x80862fc5: return "Xeon E7 v3/Xeon E5 v3/Core i7 Power Control Unit";
			case 0x80862fd0: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 1 Channel 0 Thermal Control";
			case 0x80862fd1: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 1 Channel 1 Thermal Control";
			case 0x80862fd2: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 1 Channel 0 ERROR Registers";
			case 0x80862fd3: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 1 Channel 1 ERROR Registers";
			case 0x80862fd4: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 1 Channel 2 Thermal Control";
			case 0x80862fd5: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 1 Channel 3 Thermal Control";
			case 0x80862fd6: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 1 Channel 2 ERROR Registers";
			case 0x80862fd7: return "Xeon E7 v3/Xeon E5 v3/Core i7 Integrated Memory Controller 1 Channel 3 ERROR Registers";
			case 0x80862fe0: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862fe1: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862fe2: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862fe3: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862fe4: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862fe5: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862fe6: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862fe7: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862fe8: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862fe9: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862fea: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862feb: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862fec: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862fed: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862fee: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862fef: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862ff0: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862ff1: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862ff2: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862ff3: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862ff4: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862ff5: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862ff6: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862ff7: return "Xeon E7 v3/Xeon E5 v3/Core i7 Unicast Registers";
			case 0x80862ff8: return "Xeon E7 v3/Xeon E5 v3/Core i7 Buffered Ring Agent";
			case 0x80862ff9: return "Xeon E7 v3/Xeon E5 v3/Core i7 Buffered Ring Agent";
			case 0x80862ffa: return "Xeon E7 v3/Xeon E5 v3/Core i7 Buffered Ring Agent";
			case 0x80862ffb: return "Xeon E7 v3/Xeon E5 v3/Core i7 Buffered Ring Agent";
			case 0x80862ffc: return "Xeon E7 v3/Xeon E5 v3/Core i7 System Address Decoder & Broadcast Registers";
			case 0x80862ffd: return "Xeon E7 v3/Xeon E5 v3/Core i7 System Address Decoder & Broadcast Registers";
			case 0x80862ffe: return "Xeon E7 v3/Xeon E5 v3/Core i7 System Address Decoder & Broadcast Registers";
			case 0x80863140: return "Easel/Monette Hill Image Processor [Pixel Visual Core]";
			case 0x80863165: return "Wireless 3165";
			case 0x80863166: return "Dual Band Wireless-AC 3165 Plus Bluetooth";
			case 0x80863184: return "GeminiLake [UHD Graphics 605]";
			case 0x80863185: return "GeminiLake [UHD Graphics 600]";
			case 0x8086318c: return "Celeron/Pentium Silver Processor Dynamic Platform and Thermal Framework Processor Participant";
			case 0x8086318e: return "Celeron/Pentium Silver Processor NorthPeak";
			case 0x80863190: return "Celeron/Pentium Silver Processor Gaussian Mixture Model";
			case 0x80863192: return "Gemini Lake P2SB";
			case 0x80863197: return "Celeron/Pentium Silver Processor PCI-default ISA-bridge";
			case 0x80863198: return "Celeron/Pentium Silver Processor High Definition Audio";
			case 0x8086319a: return "Celeron/Pentium Silver Processor Trusted Execution Engine Interface";
			case 0x808631a2: return "Celeron/Pentium Silver Processor Integrated Sensor Solution";
			case 0x808631a8: return "Celeron/Pentium Silver Processor USB 3.0 xHCI Controller";
			case 0x808631ac: return "Celeron/Pentium Silver Processor Serial IO I2C Host Controller";
			case 0x808631ae: return "Celeron/Pentium Silver Processor Serial IO I2C Host Controller";
			case 0x808631bc: return "Celeron/Pentium Silver Processor Serial IO UART Host Controller";
			case 0x808631be: return "Celeron/Pentium Silver Processor Serial IO UART Host Controller";
			case 0x808631c0: return "Celeron/Pentium Silver Processor Serial IO UART Host Controller";
			case 0x808631c2: return "Celeron/Pentium Silver Processor Serial IO SPI Host Controller";
			case 0x808631c4: return "Celeron/Pentium Silver Processor Serial IO SPI Host Controller";
			case 0x808631c6: return "Celeron/Pentium Silver Processor Serial IO SPI Host Controller";
			case 0x808631cc: return "Celeron/Pentium Silver Processor SDA Standard Compliant SD Host Controller";
			case 0x808631d4: return "Celeron/Pentium Silver Processor Gaussian Mixture Model";
			case 0x808631d6: return "Gemini Lake PCI Express Root Port";
			case 0x808631d7: return "Gemini Lake PCI Express Root Port";
			case 0x808631d8: return "Gemini Lake PCI Express Root Port";
			case 0x808631d9: return "Gemini Lake PCI Express Root Port";
			case 0x808631da: return "Gemini Lake PCI Express Root Port";
			case 0x808631db: return "Gemini Lake PCI Express Root Port";
			case 0x808631dc: return "Gemini Lake PCH CNVi WiFi";
			case 0x808631e3: return "Celeron/Pentium Silver Processor SATA Controller";
			case 0x808631e8: return "Celeron/Pentium Silver Processor LPC Controller";
			case 0x808631ee: return "Celeron/Pentium Silver Processor Serial IO UART Host Controller";
			case 0x808631f0: return "Gemini Lake Host Bridge";
			case 0x80863200: return "GD31244 PCI-X SATA HBA";
			case 0x80863310: return "IOP348 I/O Processor";
			case 0x80863313: return "IOP348 I/O Processor (SL8e) in IOC Mode SAS/SATA";
			case 0x8086331b: return "IOP348 I/O Processor (SL8x) in IOC Mode SAS/SATA";
			case 0x80863331: return "IOC340 I/O Controller (VV8e) SAS/SATA";
			case 0x80863339: return "IOC340 I/O Controller (VV8x) SAS/SATA";
			case 0x80863340: return "82855PM Processor to I/O Controller";
			case 0x80863341: return "82855PM Processor to AGP Controller";
			case 0x80863363: return "IOC340 I/O Controller in IOC Mode SAS/SATA";
			case 0x80863382: return "81342 [Chevelon] I/O Processor (ATUe)";
			case 0x808633c3: return "IOP348 I/O Processor (SL8De) in IOC Mode SAS/SATA";
			case 0x808633cb: return "IOP348 I/O Processor (SL8Dx) in IOC Mode SAS/SATA";
			case 0x80863400: return "5520/5500/X58 I/O Hub to ESI Port";
			case 0x80863401: return "5520/5500/X58 I/O Hub to ESI Port";
			case 0x80863402: return "5520/5500/X58 I/O Hub to ESI Port";
			case 0x80863403: return "5500 I/O Hub to ESI Port";
			case 0x80863404: return "5520/5500/X58 I/O Hub to ESI Port";
			case 0x80863405: return "5520/5500/X58 I/O Hub to ESI Port";
			case 0x80863406: return "5520 I/O Hub to ESI Port";
			case 0x80863407: return "5520/5500/X58 I/O Hub to ESI Port";
			case 0x80863408: return "5520/5500/X58 I/O Hub PCI Express Root Port 1";
			case 0x80863409: return "5520/5500/X58 I/O Hub PCI Express Root Port 2";
			case 0x8086340a: return "5520/5500/X58 I/O Hub PCI Express Root Port 3";
			case 0x8086340b: return "5520/X58 I/O Hub PCI Express Root Port 4";
			case 0x8086340c: return "5520/X58 I/O Hub PCI Express Root Port 5";
			case 0x8086340d: return "5520/X58 I/O Hub PCI Express Root Port 6";
			case 0x8086340e: return "5520/5500/X58 I/O Hub PCI Express Root Port 7";
			case 0x8086340f: return "5520/5500/X58 I/O Hub PCI Express Root Port 8";
			case 0x80863410: return "7500/5520/5500/X58 I/O Hub PCI Express Root Port 9";
			case 0x80863411: return "7500/5520/5500/X58 I/O Hub PCI Express Root Port 10";
			case 0x80863418: return "7500/5520/5500/X58 Physical Layer Port 0";
			case 0x80863419: return "7500/5520/5500 Physical Layer Port 1";
			case 0x80863420: return "7500/5520/5500/X58 I/O Hub PCI Express Root Port 0";
			case 0x80863421: return "7500/5520/5500/X58 I/O Hub PCI Express Root Port 0";
			case 0x80863422: return "7500/5520/5500/X58 I/O Hub GPIO and Scratch Pad Registers";
			case 0x80863423: return "7500/5520/5500/X58 I/O Hub Control Status and RAS Registers";
			case 0x80863425: return "7500/5520/5500/X58 Physical and Link Layer Registers Port 0";
			case 0x80863426: return "7500/5520/5500/X58 Routing and Protocol Layer Registers Port 0";
			case 0x80863427: return "7500/5520/5500 Physical and Link Layer Registers Port 1";
			case 0x80863428: return "7500/5520/5500 Routing & Protocol Layer Register Port 1";
			case 0x80863429: return "5520/5500/X58 Chipset QuickData Technology Device";
			case 0x8086342a: return "5520/5500/X58 Chipset QuickData Technology Device";
			case 0x8086342b: return "5520/5500/X58 Chipset QuickData Technology Device";
			case 0x8086342c: return "5520/5500/X58 Chipset QuickData Technology Device";
			case 0x8086342d: return "7500/5520/5500/X58 I/O Hub I/OxAPIC Interrupt Controller";
			case 0x8086342e: return "7500/5520/5500/X58 I/O Hub System Management Registers";
			case 0x8086342f: return "7500/5520/5500/X58 Trusted Execution Technology Registers";
			case 0x80863430: return "5520/5500/X58 Chipset QuickData Technology Device";
			case 0x80863431: return "5520/5500/X58 Chipset QuickData Technology Device";
			case 0x80863432: return "5520/5500/X58 Chipset QuickData Technology Device";
			case 0x80863433: return "5520/5500/X58 Chipset QuickData Technology Device";
			case 0x80863438: return "7500/5520/5500/X58 I/O Hub Throttle Registers";
			case 0x80863482: return "Ice Lake-LP LPC Controller";
			case 0x808634a3: return "Ice Lake-LP SMBus Controller";
			case 0x808634a4: return "Ice Lake-LP SPI Controller";
			case 0x808634a8: return "Ice Lake-LP Serial IO UART Controller #0";
			case 0x808634a9: return "Ice Lake-LP Serial IO UART Controller #1";
			case 0x808634aa: return "Ice Lake-LP Serial IO SPI Controller #0";
			case 0x808634ab: return "Ice Lake-LP Serial IO SPI Controller #1";
			case 0x808634b0: return "Ice Lake-LP PCI Express Root Port #9";
			case 0x808634b7: return "Ice Lake-LP PCI Express Root Port #16";
			case 0x808634bc: return "Ice Lake-LP PCI Express Root Port #5";
			case 0x808634c5: return "Ice Lake-LP Serial IO I2c Controller #4";
			case 0x808634c6: return "Ice Lake-LP Serial IO I2c Controller #5";
			case 0x808634c8: return "Ice Lake-LP Smart Sound Technology Audio Controller";
			case 0x808634d3: return "Ice Lake-LP SATA Controller [AHCI mode]";
			case 0x808634e0: return "Ice Lake-LP Management Engine";
			case 0x808634e8: return "Ice Lake-LP Serial IO I2C Controller #0";
			case 0x808634e9: return "Ice Lake-LP Serial IO I2C Controller #1";
			case 0x808634ea: return "Ice Lake-LP Serial IO I2C Controller #2";
			case 0x808634eb: return "Ice Lake-LP Serial IO I2C Controller #3";
			case 0x808634ed: return "Ice Lake-LP USB 3.1 xHCI Host Controller";
			case 0x808634ef: return "Ice Lake-LP DRAM Controller";
			case 0x808634f0: return "Ice Lake-LP PCH CNVi WiFi";
			case 0x808634f8: return "Ice Lake-LP SD Controller";
			case 0x808634fc: return "Ice Lake-LP Integrated Sensor Solution";
			case 0x80863500: return "6311ESB/6321ESB PCI Express Upstream Port";
			case 0x80863501: return "6310ESB PCI Express Upstream Port";
			case 0x80863504: return "6311ESB/6321ESB I/OxAPIC Interrupt Controller";
			case 0x80863505: return "6310ESB I/OxAPIC Interrupt Controller";
			case 0x8086350c: return "6311ESB/6321ESB PCI Express to PCI-X Bridge";
			case 0x8086350d: return "6310ESB PCI Express to PCI-X Bridge";
			case 0x80863510: return "6311ESB/6321ESB PCI Express Downstream Port E1";
			case 0x80863511: return "6310ESB PCI Express Downstream Port E1";
			case 0x80863514: return "6311ESB/6321ESB PCI Express Downstream Port E2";
			case 0x80863515: return "6310ESB PCI Express Downstream Port E2";
			case 0x80863518: return "6311ESB/6321ESB PCI Express Downstream Port E3";
			case 0x80863519: return "6310ESB PCI Express Downstream Port E3";
			case 0x80863575: return "82830M/MG/MP Host Bridge";
			case 0x80863576: return "82830M/MP AGP Bridge";
			case 0x80863577: return "82830M/MG Integrated Graphics Controller";
			case 0x80863578: return "82830M/MG/MP Host Bridge";
			case 0x80863580: return "82852/82855 GM/GME/PM/GMV Processor to I/O Controller";
			case 0x80863581: return "82852/82855 GM/GME/PM/GMV Processor to AGP Controller";
			case 0x80863582: return "82852/855GM Integrated Graphics Device";
			case 0x80863584: return "82852/82855 GM/GME/PM/GMV Processor to I/O Controller";
			case 0x80863585: return "82852/82855 GM/GME/PM/GMV Processor to I/O Controller";
			case 0x8086358c: return "82854 GMCH";
			case 0x8086358e: return "82854 GMCH Integrated Graphics Device";
			case 0x80863590: return "E7520 Memory Controller Hub";
			case 0x80863591: return "E7525/E7520 Error Reporting Registers";
			case 0x80863592: return "E7320 Memory Controller Hub";
			case 0x80863593: return "E7320 Error Reporting Registers";
			case 0x80863594: return "E7520 DMA Controller";
			case 0x80863595: return "E7525/E7520/E7320 PCI Express Port A";
			case 0x80863596: return "E7525/E7520/E7320 PCI Express Port A1";
			case 0x80863597: return "E7525/E7520 PCI Express Port B";
			case 0x80863598: return "E7520 PCI Express Port B1";
			case 0x80863599: return "E7520 PCI Express Port C";
			case 0x8086359a: return "E7520 PCI Express Port C1";
			case 0x8086359b: return "E7525/E7520/E7320 Extended Configuration Registers";
			case 0x8086359e: return "E7525 Memory Controller Hub";
			case 0x808635b0: return "3100 Chipset Memory I/O Controller Hub";
			case 0x808635b1: return "3100 DRAM Controller Error Reporting Registers";
			case 0x808635b5: return "3100 Chipset Enhanced DMA Controller";
			case 0x808635b6: return "3100 Chipset PCI Express Port A";
			case 0x808635b7: return "3100 Chipset PCI Express Port A1";
			case 0x808635c8: return "3100 Extended Configuration Test Overflow Registers";
			case 0x80863600: return "7300 Chipset Memory Controller Hub";
			case 0x80863604: return "7300 Chipset PCI Express Port 1";
			case 0x80863605: return "7300 Chipset PCI Express Port 2";
			case 0x80863606: return "7300 Chipset PCI Express Port 3";
			case 0x80863607: return "7300 Chipset PCI Express Port 4";
			case 0x80863608: return "7300 Chipset PCI Express Port 5";
			case 0x80863609: return "7300 Chipset PCI Express Port 6";
			case 0x8086360a: return "7300 Chipset PCI Express Port 7";
			case 0x8086360b: return "7300 Chipset QuickData Technology Device";
			case 0x8086360c: return "7300 Chipset FSB Registers";
			case 0x8086360d: return "7300 Chipset Snoop Filter Registers";
			case 0x8086360e: return "7300 Chipset Debug and Miscellaneous Registers";
			case 0x8086360f: return "7300 Chipset FBD Branch 0 Registers";
			case 0x80863610: return "7300 Chipset FBD Branch 1 Registers";
			case 0x80863700: return "Xeon C5500/C3500 DMI";
			case 0x80863701: return "Xeon C5500/C3500 DMI";
			case 0x80863702: return "Xeon C5500/C3500 DMI";
			case 0x80863703: return "Xeon C5500/C3500 DMI";
			case 0x80863704: return "Xeon C5500/C3500 DMI";
			case 0x80863705: return "Xeon C5500/C3500 DMI";
			case 0x80863706: return "Xeon C5500/C3500 DMI";
			case 0x80863707: return "Xeon C5500/C3500 DMI";
			case 0x80863708: return "Xeon C5500/C3500 DMI";
			case 0x80863709: return "Xeon C5500/C3500 DMI";
			case 0x8086370a: return "Xeon C5500/C3500 DMI";
			case 0x8086370b: return "Xeon C5500/C3500 DMI";
			case 0x8086370c: return "Xeon C5500/C3500 DMI";
			case 0x8086370d: return "Xeon C5500/C3500 DMI";
			case 0x8086370e: return "Xeon C5500/C3500 DMI";
			case 0x8086370f: return "Xeon C5500/C3500 DMI";
			case 0x80863710: return "Xeon C5500/C3500 CB3 DMA";
			case 0x80863711: return "Xeon C5500/C3500 CB3 DMA";
			case 0x80863712: return "Xeon C5500/C3500 CB3 DMA";
			case 0x80863713: return "Xeon C5500/C3500 CB3 DMA";
			case 0x80863714: return "Xeon C5500/C3500 CB3 DMA";
			case 0x80863715: return "Xeon C5500/C3500 CB3 DMA";
			case 0x80863716: return "Xeon C5500/C3500 CB3 DMA";
			case 0x80863717: return "Xeon C5500/C3500 CB3 DMA";
			case 0x80863718: return "Xeon C5500/C3500 CB3 DMA";
			case 0x80863719: return "Xeon C5500/C3500 CB3 DMA";
			case 0x8086371a: return "Xeon C5500/C3500 QPI Link";
			case 0x8086371b: return "Xeon C5500/C3500 QPI Routing and Protocol";
			case 0x8086371d: return "Xeon C5500/C3500 QPI Routing and Protocol";
			case 0x80863720: return "Xeon C5500/C3500 PCI Express Root Port 0";
			case 0x80863721: return "Xeon C5500/C3500 PCI Express Root Port 1";
			case 0x80863722: return "Xeon C5500/C3500 PCI Express Root Port 2";
			case 0x80863723: return "Xeon C5500/C3500 PCI Express Root Port 3";
			case 0x80863724: return "Xeon C5500/C3500 PCI Express Root Port 4";
			case 0x80863725: return "Xeon C5500/C3500 NTB Primary";
			case 0x80863726: return "Xeon C5500/C3500 NTB Primary";
			case 0x80863727: return "Xeon C5500/C3500 NTB Secondary";
			case 0x80863728: return "Xeon C5500/C3500 Core";
			case 0x80863729: return "Xeon C5500/C3500 Core";
			case 0x8086372a: return "Xeon C5500/C3500 Core";
			case 0x8086372b: return "Xeon C5500/C3500 Core";
			case 0x8086372c: return "Xeon C5500/C3500 Reserved";
			case 0x8086373f: return "Xeon C5500/C3500 IOxAPIC";
			case 0x808637c8: return "C62x Chipset QuickAssist Technology";
			case 0x808637c9: return "C62x Chipset QuickAssist Technology Virtual Function";
			case 0x808637cc: return "Ethernet Connection X722";
			case 0x808637cd: return "Ethernet Virtual Function 700 Series";
			case 0x808637ce: return "Ethernet Connection X722 for 10GbE backplane";
			case 0x808637cf: return "Ethernet Connection X722 for 10GbE QSFP+";
			case 0x808637d0: return "Ethernet Connection X722 for 10GbE SFP+";
			case 0x808637d1: return "Ethernet Connection X722 for 1GbE";
			case 0x808637d2: return "Ethernet Connection X722 for 10GBASE-T";
			case 0x808637d3: return "Ethernet Connection X722 for 10GbE SFP+";
			case 0x808637d4: return "Ethernet Connection X722 for 10GbE QSFP+";
			case 0x808637d9: return "X722 Hyper-V Virtual Function";
			case 0x80863a00: return "82801JD/DO (ICH10 Family) 4-port SATA IDE Controller";
			case 0x80863a02: return "82801JD/DO (ICH10 Family) SATA AHCI Controller";
			case 0x80863a05: return "82801JD/DO (ICH10 Family) SATA RAID Controller";
			case 0x80863a06: return "82801JD/DO (ICH10 Family) 2-port SATA IDE Controller";
			case 0x80863a14: return "82801JDO (ICH10DO) LPC Interface Controller";
			case 0x80863a16: return "82801JIR (ICH10R) LPC Interface Controller";
			case 0x80863a18: return "82801JIB (ICH10) LPC Interface Controller";
			case 0x80863a1a: return "82801JD (ICH10D) LPC Interface Controller";
			case 0x80863a20: return "82801JI (ICH10 Family) 4 port SATA IDE Controller #1";
			case 0x80863a22: return "82801JI (ICH10 Family) SATA AHCI Controller";
			case 0x80863a25: return "82801JIR (ICH10R) SATA RAID Controller";
			case 0x80863a26: return "82801JI (ICH10 Family) 2 port SATA IDE Controller #2";
			case 0x80863a30: return "82801JI (ICH10 Family) SMBus Controller";
			case 0x80863a32: return "82801JI (ICH10 Family) Thermal Subsystem";
			case 0x80863a34: return "82801JI (ICH10 Family) USB UHCI Controller #1";
			case 0x80863a35: return "82801JI (ICH10 Family) USB UHCI Controller #2";
			case 0x80863a36: return "82801JI (ICH10 Family) USB UHCI Controller #3";
			case 0x80863a37: return "82801JI (ICH10 Family) USB UHCI Controller #4";
			case 0x80863a38: return "82801JI (ICH10 Family) USB UHCI Controller #5";
			case 0x80863a39: return "82801JI (ICH10 Family) USB UHCI Controller #6";
			case 0x80863a3a: return "82801JI (ICH10 Family) USB2 EHCI Controller #1";
			case 0x80863a3c: return "82801JI (ICH10 Family) USB2 EHCI Controller #2";
			case 0x80863a3e: return "82801JI (ICH10 Family) HD Audio Controller";
			case 0x80863a40: return "82801JI (ICH10 Family) PCI Express Root Port 1";
			case 0x80863a42: return "82801JI (ICH10 Family) PCI Express Port 2";
			case 0x80863a44: return "82801JI (ICH10 Family) PCI Express Root Port 3";
			case 0x80863a46: return "82801JI (ICH10 Family) PCI Express Root Port 4";
			case 0x80863a48: return "82801JI (ICH10 Family) PCI Express Root Port 5";
			case 0x80863a4a: return "82801JI (ICH10 Family) PCI Express Root Port 6";
			case 0x80863a4c: return "82801JI (ICH10 Family) Gigabit Ethernet Controller";
			case 0x80863a51: return "82801JDO (ICH10DO) VECI Controller";
			case 0x80863a55: return "82801JD/DO (ICH10 Family) Virtual SATA Controller";
			case 0x80863a60: return "82801JD/DO (ICH10 Family) SMBus Controller";
			case 0x80863a62: return "82801JD/DO (ICH10 Family) Thermal Subsystem";
			case 0x80863a64: return "82801JD/DO (ICH10 Family) USB UHCI Controller #1";
			case 0x80863a65: return "82801JD/DO (ICH10 Family) USB UHCI Controller #2";
			case 0x80863a66: return "82801JD/DO (ICH10 Family) USB UHCI Controller #3";
			case 0x80863a67: return "82801JD/DO (ICH10 Family) USB UHCI Controller #4";
			case 0x80863a68: return "82801JD/DO (ICH10 Family) USB UHCI Controller #5";
			case 0x80863a69: return "82801JD/DO (ICH10 Family) USB UHCI Controller #6";
			case 0x80863a6a: return "82801JD/DO (ICH10 Family) USB2 EHCI Controller #1";
			case 0x80863a6c: return "82801JD/DO (ICH10 Family) USB2 EHCI Controller #2";
			case 0x80863a6e: return "82801JD/DO (ICH10 Family) HD Audio Controller";
			case 0x80863a70: return "82801JD/DO (ICH10 Family) PCI Express Port 1";
			case 0x80863a72: return "82801JD/DO (ICH10 Family) PCI Express Port 2";
			case 0x80863a74: return "82801JD/DO (ICH10 Family) PCI Express Port 3";
			case 0x80863a76: return "82801JD/DO (ICH10 Family) PCI Express Port 4";
			case 0x80863a78: return "82801JD/DO (ICH10 Family) PCI Express Port 5";
			case 0x80863a7a: return "82801JD/DO (ICH10 Family) PCI Express Port 6";
			case 0x80863a7c: return "82801JD/DO (ICH10 Family) Gigabit Ethernet Controller";
			case 0x80863b00: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b01: return "Mobile 5 Series Chipset LPC Interface Controller";
			case 0x80863b02: return "P55 Chipset LPC Interface Controller";
			case 0x80863b03: return "PM55 Chipset LPC Interface Controller";
			case 0x80863b04: return "5 Series Chipset LPC Interface Controller";
			case 0x80863b05: return "Mobile 5 Series Chipset LPC Interface Controller";
			case 0x80863b06: return "H55 Chipset LPC Interface Controller";
			case 0x80863b07: return "QM57 Chipset LPC Interface Controller";
			case 0x80863b08: return "H57 Chipset LPC Interface Controller";
			case 0x80863b09: return "HM55 Chipset LPC Interface Controller";
			case 0x80863b0a: return "Q57 Chipset LPC Interface Controller";
			case 0x80863b0b: return "HM57 Chipset LPC Interface Controller";
			case 0x80863b0c: return "5 Series Chipset LPC Interface Controller";
			case 0x80863b0d: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b0e: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b0f: return "QS57 Chipset LPC Interface Controller";
			case 0x80863b10: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b11: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b12: return "3400 Series Chipset LPC Interface Controller";
			case 0x80863b13: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b14: return "3420 Chipset LPC Interface Controller";
			case 0x80863b15: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b16: return "3450 Chipset LPC Interface Controller";
			case 0x80863b17: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b18: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b19: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b1a: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b1b: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b1c: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b1d: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b1e: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b1f: return "5 Series/3400 Series Chipset LPC Interface Controller";
			case 0x80863b20: return "5 Series/3400 Series Chipset 4 port SATA IDE Controller";
			case 0x80863b21: return "5 Series/3400 Series Chipset 2 port SATA IDE Controller";
			case 0x80863b22: return "5 Series/3400 Series Chipset 6 port SATA AHCI Controller";
			case 0x80863b23: return "5 Series/3400 Series Chipset 4 port SATA AHCI Controller";
			case 0x80863b25: return "5 Series/3400 Series Chipset SATA RAID Controller";
			case 0x80863b26: return "5 Series/3400 Series Chipset 2 port SATA IDE Controller";
			case 0x80863b28: return "5 Series/3400 Series Chipset 4 port SATA IDE Controller";
			case 0x80863b29: return "5 Series/3400 Series Chipset 4 port SATA AHCI Controller";
			case 0x80863b2c: return "5 Series/3400 Series Chipset SATA RAID Controller";
			case 0x80863b2d: return "5 Series/3400 Series Chipset 2 port SATA IDE Controller";
			case 0x80863b2e: return "5 Series/3400 Series Chipset 4 port SATA IDE Controller";
			case 0x80863b2f: return "5 Series/3400 Series Chipset 6 port SATA AHCI Controller";
			case 0x80863b30: return "5 Series/3400 Series Chipset SMBus Controller";
			case 0x80863b32: return "5 Series/3400 Series Chipset Thermal Subsystem";
			case 0x80863b34: return "5 Series/3400 Series Chipset USB2 Enhanced Host Controller";
			case 0x80863b36: return "5 Series/3400 Series Chipset USB Universal Host Controller";
			case 0x80863b37: return "5 Series/3400 Series Chipset USB Universal Host Controller";
			case 0x80863b38: return "5 Series/3400 Series Chipset USB Universal Host Controller";
			case 0x80863b39: return "5 Series/3400 Series Chipset USB Universal Host Controller";
			case 0x80863b3a: return "5 Series/3400 Series Chipset USB Universal Host Controller";
			case 0x80863b3b: return "5 Series/3400 Series Chipset USB Universal Host Controller";
			case 0x80863b3c: return "5 Series/3400 Series Chipset USB2 Enhanced Host Controller";
			case 0x80863b3e: return "5 Series/3400 Series Chipset USB Universal Host Controller";
			case 0x80863b3f: return "5 Series/3400 Series Chipset USB Universal Host Controller";
			case 0x80863b40: return "5 Series/3400 Series Chipset USB Universal Host Controller";
			case 0x80863b41: return "5 Series/3400 Series Chipset LAN Controller";
			case 0x80863b42: return "5 Series/3400 Series Chipset PCI Express Root Port 1";
			case 0x80863b44: return "5 Series/3400 Series Chipset PCI Express Root Port 2";
			case 0x80863b46: return "5 Series/3400 Series Chipset PCI Express Root Port 3";
			case 0x80863b48: return "5 Series/3400 Series Chipset PCI Express Root Port 4";
			case 0x80863b4a: return "5 Series/3400 Series Chipset PCI Express Root Port 5";
			case 0x80863b4c: return "5 Series/3400 Series Chipset PCI Express Root Port 6";
			case 0x80863b4e: return "5 Series/3400 Series Chipset PCI Express Root Port 7";
			case 0x80863b50: return "5 Series/3400 Series Chipset PCI Express Root Port 8";
			case 0x80863b53: return "5 Series/3400 Series Chipset VECI Controller";
			case 0x80863b56: return "5 Series/3400 Series Chipset High Definition Audio";
			case 0x80863b57: return "5 Series/3400 Series Chipset High Definition Audio";
			case 0x80863b64: return "5 Series/3400 Series Chipset HECI Controller";
			case 0x80863b65: return "5 Series/3400 Series Chipset HECI Controller";
			case 0x80863b66: return "5 Series/3400 Series Chipset PT IDER Controller";
			case 0x80863b67: return "5 Series/3400 Series Chipset KT Controller";
			case 0x80863c00: return "Xeon E5/Core i7 DMI2";
			case 0x80863c01: return "Xeon E5/Core i7 DMI2 in PCI Express Mode";
			case 0x80863c02: return "Xeon E5/Core i7 IIO PCI Express Root Port 1a";
			case 0x80863c03: return "Xeon E5/Core i7 IIO PCI Express Root Port 1b";
			case 0x80863c04: return "Xeon E5/Core i7 IIO PCI Express Root Port 2a";
			case 0x80863c05: return "Xeon E5/Core i7 IIO PCI Express Root Port 2b";
			case 0x80863c06: return "Xeon E5/Core i7 IIO PCI Express Root Port 2c";
			case 0x80863c07: return "Xeon E5/Core i7 IIO PCI Express Root Port 2d";
			case 0x80863c08: return "Xeon E5/Core i7 IIO PCI Express Root Port 3a in PCI Express Mode";
			case 0x80863c09: return "Xeon E5/Core i7 IIO PCI Express Root Port 3b";
			case 0x80863c0a: return "Xeon E5/Core i7 IIO PCI Express Root Port 3c";
			case 0x80863c0b: return "Xeon E5/Core i7 IIO PCI Express Root Port 3d";
			case 0x80863c0d: return "Xeon E5/Core i7 Non-Transparent Bridge";
			case 0x80863c0e: return "Xeon E5/Core i7 Non-Transparent Bridge";
			case 0x80863c0f: return "Xeon E5/Core i7 Non-Transparent Bridge";
			case 0x80863c20: return "Xeon E5/Core i7 DMA Channel 0";
			case 0x80863c21: return "Xeon E5/Core i7 DMA Channel 1";
			case 0x80863c22: return "Xeon E5/Core i7 DMA Channel 2";
			case 0x80863c23: return "Xeon E5/Core i7 DMA Channel 3";
			case 0x80863c24: return "Xeon E5/Core i7 DMA Channel 4";
			case 0x80863c25: return "Xeon E5/Core i7 DMA Channel 5";
			case 0x80863c26: return "Xeon E5/Core i7 DMA Channel 6";
			case 0x80863c27: return "Xeon E5/Core i7 DMA Channel 7";
			case 0x80863c28: return "Xeon E5/Core i7 Address Map, VTd_Misc, System Management";
			case 0x80863c2a: return "Xeon E5/Core i7 Control Status and Global Errors";
			case 0x80863c2c: return "Xeon E5/Core i7 I/O APIC";
			case 0x80863c2e: return "Xeon E5/Core i7 DMA";
			case 0x80863c2f: return "Xeon E5/Core i7 DMA";
			case 0x80863c40: return "Xeon E5/Core i7 IIO Switch and IRP Performance Monitor";
			case 0x80863c43: return "Xeon E5/Core i7 Ring to PCI Express Performance Monitor";
			case 0x80863c44: return "Xeon E5/Core i7 Ring to QuickPath Interconnect Link 0 Performance Monitor";
			case 0x80863c45: return "Xeon E5/Core i7 Ring to QuickPath Interconnect Link 1 Performance Monitor";
			case 0x80863c46: return "Xeon E5/Core i7 Processor Home Agent Performance Monitoring";
			case 0x80863c71: return "Xeon E5/Core i7 Integrated Memory Controller RAS Registers";
			case 0x80863c80: return "Xeon E5/Core i7 QPI Link 0";
			case 0x80863c83: return "Xeon E5/Core i7 QPI Link Reut 0";
			case 0x80863c84: return "Xeon E5/Core i7 QPI Link Reut 0";
			case 0x80863c90: return "Xeon E5/Core i7 QPI Link 1";
			case 0x80863c93: return "Xeon E5/Core i7 QPI Link Reut 1";
			case 0x80863c94: return "Xeon E5/Core i7 QPI Link Reut 1";
			case 0x80863ca0: return "Xeon E5/Core i7 Processor Home Agent";
			case 0x80863ca8: return "Xeon E5/Core i7 Integrated Memory Controller Registers";
			case 0x80863caa: return "Xeon E5/Core i7 Integrated Memory Controller Target Address Decoder 0";
			case 0x80863cab: return "Xeon E5/Core i7 Integrated Memory Controller Target Address Decoder 1";
			case 0x80863cac: return "Xeon E5/Core i7 Integrated Memory Controller Target Address Decoder 2";
			case 0x80863cad: return "Xeon E5/Core i7 Integrated Memory Controller Target Address Decoder 3";
			case 0x80863cae: return "Xeon E5/Core i7 Integrated Memory Controller Target Address Decoder 4";
			case 0x80863cb0: return "Xeon E5/Core i7 Integrated Memory Controller Channel 0-3 Thermal Control 0";
			case 0x80863cb1: return "Xeon E5/Core i7 Integrated Memory Controller Channel 0-3 Thermal Control 1";
			case 0x80863cb2: return "Xeon E5/Core i7 Integrated Memory Controller ERROR Registers 0";
			case 0x80863cb3: return "Xeon E5/Core i7 Integrated Memory Controller ERROR Registers 1";
			case 0x80863cb4: return "Xeon E5/Core i7 Integrated Memory Controller Channel 0-3 Thermal Control 2";
			case 0x80863cb5: return "Xeon E5/Core i7 Integrated Memory Controller Channel 0-3 Thermal Control 3";
			case 0x80863cb6: return "Xeon E5/Core i7 Integrated Memory Controller ERROR Registers 2";
			case 0x80863cb7: return "Xeon E5/Core i7 Integrated Memory Controller ERROR Registers 3";
			case 0x80863cb8: return "Xeon E5/Core i7 DDRIO";
			case 0x80863cc0: return "Xeon E5/Core i7 Power Control Unit 0";
			case 0x80863cc1: return "Xeon E5/Core i7 Power Control Unit 1";
			case 0x80863cc2: return "Xeon E5/Core i7 Power Control Unit 2";
			case 0x80863cd0: return "Xeon E5/Core i7 Power Control Unit 3";
			case 0x80863ce0: return "Xeon E5/Core i7 Interrupt Control Registers";
			case 0x80863ce3: return "Xeon E5/Core i7 Semaphore and Scratchpad Configuration Registers";
			case 0x80863ce4: return "Xeon E5/Core i7 R2PCIe";
			case 0x80863ce6: return "Xeon E5/Core i7 QuickPath Interconnect Agent Ring Registers";
			case 0x80863ce8: return "Xeon E5/Core i7 Unicast Register 0";
			case 0x80863ce9: return "Xeon E5/Core i7 Unicast Register 5";
			case 0x80863cea: return "Xeon E5/Core i7 Unicast Register 1";
			case 0x80863ceb: return "Xeon E5/Core i7 Unicast Register 6";
			case 0x80863cec: return "Xeon E5/Core i7 Unicast Register 3";
			case 0x80863ced: return "Xeon E5/Core i7 Unicast Register 7";
			case 0x80863cee: return "Xeon E5/Core i7 Unicast Register 4";
			case 0x80863cef: return "Xeon E5/Core i7 Unicast Register 8";
			case 0x80863cf4: return "Xeon E5/Core i7 Integrated Memory Controller System Address Decoder 0";
			case 0x80863cf5: return "Xeon E5/Core i7 Integrated Memory Controller System Address Decoder 1";
			case 0x80863cf6: return "Xeon E5/Core i7 System Address Decoder";
			case 0x80863e10: return "8th Gen Core 4-core Processor Host Bridge/DRAM Registers [Coffee Lake H]";
			case 0x80863e18: return "8th Gen Core 4-core Workstation Processor Host Bridge/DRAM Registers [Coffee Lake S]";
			case 0x80863e1f: return "8th Gen Core 4-core Desktop Processor Host Bridge/DRAM Registers [Coffee Lake S]";
			case 0x80863e30: return "8th/9th Gen Core 8-core Desktop Processor Host Bridge/DRAM Registers [Coffee Lake S]";
			case 0x80863e33: return "8th/9th Gen Core Processor Host Bridge/DRAM Registers [Coffee Lake]";
			case 0x80863e34: return "Coffee Lake HOST and DRAM Controller";
			case 0x80863e35: return "Coffee Lake Host Bridge/DRAM Registers";
			case 0x80863e81: return "8th Gen Core Processor PCIe Controller (x16)";
			case 0x80863e85: return "8th Gen Core Processor PCIe Controller (x8)";
			case 0x80863e89: return "8th Gen Core Processor PCIe Controller (x4)";
			case 0x80863e90: return "CoffeeLake-S GT1 [UHD Graphics 610]";
			case 0x80863e91: return "CoffeeLake-S GT2 [UHD Graphics 630]";
			case 0x80863e92: return "CometLake-S GT2 [UHD Graphics 630]";
			case 0x80863e93: return "CoffeeLake-S GT1 [UHD Graphics 610]";
			case 0x80863e96: return "CoffeeLake-S GT2 [UHD Graphics P630]";
			case 0x80863e98: return "CoffeeLake-S GT2 [UHD Graphics 630]";
			case 0x80863e9b: return "CoffeeLake-H GT2 [UHD Graphics 630]";
			case 0x80863ea0: return "WhiskeyLake-U GT2 [UHD Graphics 620]";
			case 0x80863ea5: return "CoffeeLake-U GT3e [Iris Plus Graphics 655]";
			case 0x80863ec2: return "8th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80863ec4: return "8th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80863ec6: return "8th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80863eca: return "8th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80863ed0: return "8th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80864000: return "5400 Chipset Memory Controller Hub";
			case 0x80864001: return "5400 Chipset Memory Controller Hub";
			case 0x80864003: return "5400 Chipset Memory Controller Hub";
			case 0x80864021: return "5400 Chipset PCI Express Port 1";
			case 0x80864022: return "5400 Chipset PCI Express Port 2";
			case 0x80864023: return "5400 Chipset PCI Express Port 3";
			case 0x80864024: return "5400 Chipset PCI Express Port 4";
			case 0x80864025: return "5400 Chipset PCI Express Port 5";
			case 0x80864026: return "5400 Chipset PCI Express Port 6";
			case 0x80864027: return "5400 Chipset PCI Express Port 7";
			case 0x80864028: return "5400 Chipset PCI Express Port 8";
			case 0x80864029: return "5400 Chipset PCI Express Port 9";
			case 0x8086402d: return "5400 Chipset IBIST Registers";
			case 0x8086402e: return "5400 Chipset IBIST Registers";
			case 0x8086402f: return "5400 Chipset QuickData Technology Device";
			case 0x80864030: return "5400 Chipset FSB Registers";
			case 0x80864031: return "5400 Chipset CE/SF Registers";
			case 0x80864032: return "5400 Chipset IOxAPIC";
			case 0x80864035: return "5400 Chipset FBD Registers";
			case 0x80864036: return "5400 Chipset FBD Registers";
			case 0x80864041: return "NVMe Datacenter SSD [Optane]";
			case 0x80864100: return "Moorestown Graphics and Video";
			case 0x80864108: return "Atom Processor E6xx Integrated Graphics Controller";
			case 0x80864109: return "Atom Processor E6xx Integrated Graphics Controller";
			case 0x8086410a: return "Atom Processor E6xx Integrated Graphics Controller";
			case 0x8086410b: return "Atom Processor E6xx Integrated Graphics Controller";
			case 0x8086410c: return "Atom Processor E6xx Integrated Graphics Controller";
			case 0x8086410d: return "Atom Processor E6xx Integrated Graphics Controller";
			case 0x8086410e: return "Atom Processor E6xx Integrated Graphics Controller";
			case 0x8086410f: return "Atom Processor E6xx Integrated Graphics Controller";
			case 0x80864114: return "Atom Processor E6xx PCI Host Bridge #1";
			case 0x80864115: return "Atom Processor E6xx PCI Host Bridge #2";
			case 0x80864116: return "Atom Processor E6xx PCI Host Bridge #3";
			case 0x80864117: return "Atom Processor E6xx PCI Host Bridge #4";
			case 0x80864140: return "NVMe Datacenter SSD [Optane]";
			case 0x80864220: return "PRO/Wireless 2200BG [Calexico2] Network Connection";
			case 0x80864222: return "PRO/Wireless 3945ABG [Golan] Network Connection";
			case 0x80864223: return "PRO/Wireless 2915ABG [Calexico2] Network Connection";
			case 0x80864224: return "PRO/Wireless 2915ABG [Calexico2] Network Connection";
			case 0x80864227: return "PRO/Wireless 3945ABG [Golan] Network Connection";
			case 0x80864229: return "PRO/Wireless 4965 AG or AGN [Kedron] Network Connection";
			case 0x8086422b: return "Centrino Ultimate-N 6300";
			case 0x8086422c: return "Centrino Advanced-N 6200";
			case 0x80864230: return "PRO/Wireless 4965 AG or AGN [Kedron] Network Connection";
			case 0x80864232: return "WiFi Link 5100";
			case 0x80864235: return "Ultimate N WiFi Link 5300";
			case 0x80864236: return "Ultimate N WiFi Link 5300";
			case 0x80864237: return "PRO/Wireless 5100 AGN [Shiloh] Network Connection";
			case 0x80864238: return "Centrino Ultimate-N 6300";
			case 0x80864239: return "Centrino Advanced-N 6200";
			case 0x8086423a: return "PRO/Wireless 5350 AGN [Echo Peak] Network Connection";
			case 0x8086423b: return "PRO/Wireless 5350 AGN [Echo Peak] Network Connection";
			case 0x8086423c: return "WiMAX/WiFi Link 5150";
			case 0x8086423d: return "WiMAX/WiFi Link 5150";
			case 0x8086438b: return "Tiger Lake-H LPC/eSPI Controller";
			case 0x808643a3: return "Tiger Lake-H SMBus Controller";
			case 0x808643a4: return "Tiger Lake-H SPI Controller";
			case 0x808643b0: return "Tiger Lake-H PCI Express Root Port #9";
			case 0x808643bc: return "Tiger Lake-H PCI Express Root Port #5";
			case 0x808643c8: return "Tiger Lake-H HD Audio Controller";
			case 0x808643e0: return "Tiger Lake-H Management Engine Interface";
			case 0x808643e8: return "Tiger Lake-H Serial IO I2C Controller #0";
			case 0x808643ed: return "Tiger Lake-H USB 3.2 Gen 2x1 xHCI Host Controller";
			case 0x808643ef: return "Tiger Lake-H Shared SRAM";
			case 0x808643f0: return "Tiger Lake PCH CNVi WiFi";
			case 0x8086444e: return "Turbo Memory Controller";
			case 0x8086461e: return "Alder Lake-P Thunderbolt 4 USB Controller";
			case 0x8086461f: return "Alder Lake-P Thunderbolt 4 PCI Express Root Port #3";
			case 0x8086462f: return "Alder Lake-P Thunderbolt 4 PCI Express Root Port #2";
			case 0x8086463e: return "Alder Lake-P Thunderbolt 4 NHI #0";
			case 0x8086463f: return "Alder Lake-P Thunderbolt 4 PCI Express Root Port #1";
			case 0x8086466d: return "Alder Lake-P Thunderbolt 4 NHI #1";
			case 0x8086466e: return "Alder Lake-P Thunderbolt 4 PCI Express Root Port #0";
			case 0x8086467f: return "Volume Management Device NVMe RAID Controller";
			case 0x80864680: return "AlderLake-S GT1";
			case 0x808646a0: return "AlderLake-P GT2";
			case 0x808646c0: return "AlderLake-M GT1";
			case 0x80864905: return "DG1 [Iris Xe MAX Graphics]";
			case 0x80864906: return "DG1 [Iris Xe Pod]";
			case 0x80864907: return "SG1 [Server GPU SG-18M]";
			case 0x80864908: return "DG1 [Iris Xe Graphics]";
			case 0x80864c3d: return "Volume Management Device NVMe RAID Controller";
			case 0x80864c8a: return "RocketLake-S GT1 [UHD Graphics 750]";
			case 0x80864c8b: return "RocketLake-S GT1 [UHD Graphics 730]";
			case 0x80864c90: return "RocketLake-S GT1 [UHD Graphics P750]";
			case 0x80864c9a: return "RocketLake-S [UHD Graphics]";
			case 0x80864da3: return "JaserLake SMBus";
			case 0x80864da4: return "JaserLake SPI (flash) Controller";
			case 0x80864de0: return "Management Engine Interface";
			case 0x80864de8: return "Serial IO I2C Host Controller";
			case 0x80864de9: return "Serial IO I2C Host Controller";
			case 0x80864df0: return "Wi-Fi 6 AX201 160MHz";
			case 0x80864e03: return "Dynamic Tuning service";
			case 0x80864e19: return "JasperLake IPU";
			case 0x80864e55: return "JasperLake [UHD Graphics]";
			case 0x80864e61: return "JasperLake [UHD Graphics]";
			case 0x80864e71: return "JasperLake [UHD Graphics]";
			case 0x80864f80: return "DG2";
			case 0x80864f81: return "DG2";
			case 0x80864f82: return "DG2";
			case 0x80865001: return "LE80578";
			case 0x80865002: return "LE80578 Graphics Processor Unit";
			case 0x80865009: return "LE80578 Video Display Controller";
			case 0x8086500d: return "LE80578 Expansion Bus";
			case 0x8086500e: return "LE80578 UART Controller";
			case 0x8086500f: return "LE80578 General Purpose IO";
			case 0x80865010: return "LE80578 I2C Controller";
			case 0x80865012: return "LE80578 Serial Peripheral Interface Bus";
			case 0x80865020: return "EP80579 Memory Controller Hub";
			case 0x80865021: return "EP80579 DRAM Error Reporting Registers";
			case 0x80865023: return "EP80579 EDMA Controller";
			case 0x80865024: return "EP80579 PCI Express Port PEA0";
			case 0x80865025: return "EP80579 PCI Express Port PEA1";
			case 0x80865028: return "EP80579 S-ATA IDE";
			case 0x80865029: return "EP80579 S-ATA AHCI";
			case 0x8086502a: return "EP80579 S-ATA Reserved";
			case 0x8086502b: return "EP80579 S-ATA Reserved";
			case 0x8086502c: return "EP80579 Integrated Processor ASU";
			case 0x8086502d: return "EP80579 Integrated Processor with QuickAssist ASU";
			case 0x8086502e: return "EP80579 Reserved";
			case 0x8086502f: return "EP80579 Reserved";
			case 0x80865030: return "EP80579 Reserved";
			case 0x80865031: return "EP80579 LPC Bus";
			case 0x80865032: return "EP80579 SMBus Controller";
			case 0x80865033: return "EP80579 USB 1.1 Controller";
			case 0x80865035: return "EP80579 USB 2.0 Controller";
			case 0x80865037: return "EP80579 PCI-PCI Bridge (transparent mode)";
			case 0x80865039: return "EP80579 Controller Area Network (CAN) interface #1";
			case 0x8086503a: return "EP80579 Controller Area Network (CAN) interface #2";
			case 0x8086503b: return "EP80579 Synchronous Serial Port (SPP)";
			case 0x8086503c: return "EP80579 IEEE 1588 Hardware Assist";
			case 0x8086503d: return "EP80579 Local Expansion Bus";
			case 0x8086503e: return "EP80579 Global Control Unit (GCU)";
			case 0x8086503f: return "EP80579 Reserved";
			case 0x80865040: return "EP80579 Integrated Processor Gigabit Ethernet MAC";
			case 0x80865041: return "EP80579 Integrated Processor with QuickAssist Gigabit Ethernet MAC";
			case 0x80865042: return "EP80579 Reserved";
			case 0x80865043: return "EP80579 Reserved";
			case 0x80865044: return "EP80579 Integrated Processor Gigabit Ethernet MAC";
			case 0x80865045: return "EP80579 Integrated Processor with QuickAssist Gigabit Ethernet MAC";
			case 0x80865046: return "EP80579 Reserved";
			case 0x80865047: return "EP80579 Reserved";
			case 0x80865048: return "EP80579 Integrated Processor Gigabit Ethernet MAC";
			case 0x80865049: return "EP80579 Integrated Processor with QuickAssist Gigabit Ethernet MAC";
			case 0x8086504a: return "EP80579 Reserved";
			case 0x8086504b: return "EP80579 Reserved";
			case 0x8086504c: return "EP80579 Integrated Processor with QuickAssist TDM";
			case 0x80865200: return "EtherExpress PRO/100 Intelligent Server PCI Bridge";
			case 0x80865201: return "EtherExpress PRO/100 Intelligent Server Fast Ethernet Controller";
			case 0x8086530d: return "80310 (IOP) IO Processor";
			case 0x80865502: return "Ethernet Controller (2) I225-LMvP";
			case 0x80865504: return "Ethernet Controller I226-K";
			case 0x80865845: return "QEMU NVM Express Controller";
			case 0x80865900: return "Xeon E3-1200 v6/7th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80865901: return "Xeon E3-1200 v6/7th Gen Core Processor PCIe Controller (x16)";
			case 0x80865902: return "HD Graphics 610";
			case 0x80865904: return "Xeon E3-1200 v6/7th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80865905: return "Xeon E3-1200 v6/7th Gen Core Processor PCIe Controller (x8)";
			case 0x80865909: return "Xeon E3-1200 v6/7th Gen Core Processor PCIe Controller (x4)";
			case 0x8086590c: return "Xeon E3-1200 v6/7th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x8086590f: return "Xeon E3-1200 v6/7th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80865910: return "Xeon E3-1200 v6/7th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80865911: return "Xeon E3-1200 v6/7th Gen Core Processor Gaussian Mixture Model";
			case 0x80865912: return "HD Graphics 630";
			case 0x80865914: return "Xeon E3-1200 v6/7th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80865916: return "HD Graphics 620";
			case 0x80865917: return "UHD Graphics 620";
			case 0x80865918: return "Xeon E3-1200 v6/7th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x8086591b: return "HD Graphics 630";
			case 0x8086591c: return "UHD Graphics 615";
			case 0x8086591d: return "HD Graphics P630";
			case 0x8086591e: return "HD Graphics 615";
			case 0x8086591f: return "Xeon E3-1200 v6/7th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80865923: return "HD Graphics 635";
			case 0x80865926: return "Iris Plus Graphics 640";
			case 0x80865927: return "Iris Plus Graphics 650";
			case 0x80865a84: return "Celeron N3350/Pentium N4200/Atom E3900 Series Integrated Graphics Controller";
			case 0x80865a85: return "HD Graphics 500";
			case 0x80865a88: return "Celeron N3350/Pentium N4200/Atom E3900 Series Imaging Unit";
			case 0x80865a98: return "Celeron N3350/Pentium N4200/Atom E3900 Series Audio Cluster";
			case 0x80865a9a: return "Celeron N3350/Pentium N4200/Atom E3900 Series Trusted Execution Engine";
			case 0x80865aa2: return "Celeron N3350/Pentium N4200/Atom E3900 Series Integrated Sensor Hub";
			case 0x80865aa8: return "Celeron N3350/Pentium N4200/Atom E3900 Series USB xHCI";
			case 0x80865aac: return "Celeron N3350/Pentium N4200/Atom E3900 Series I2C Controller #1";
			case 0x80865aae: return "Celeron N3350/Pentium N4200/Atom E3900 Series I2C Controller #2";
			case 0x80865ab0: return "Celeron N3350/Pentium N4200/Atom E3900 Series I2C Controller #3";
			case 0x80865ab2: return "Celeron N3350/Pentium N4200/Atom E3900 Series I2C Controller #4";
			case 0x80865ab4: return "Celeron N3350/Pentium N4200/Atom E3900 Series I2C Controller #5";
			case 0x80865ab6: return "Celeron N3350/Pentium N4200/Atom E3900 Series I2C Controller #6";
			case 0x80865ab8: return "Celeron N3350/Pentium N4200/Atom E3900 Series I2C Controller #7";
			case 0x80865aba: return "Celeron N3350/Pentium N4200/Atom E3900 Series I2C Controller #8";
			case 0x80865abc: return "Celeron N3350/Pentium N4200/Atom E3900 Series HSUART Controller #1";
			case 0x80865abe: return "Celeron N3350/Pentium N4200/Atom E3900 Series HSUART Controller #2";
			case 0x80865ac0: return "Celeron N3350/Pentium N4200/Atom E3900 Series HSUART Controller #3";
			case 0x80865ac2: return "Celeron N3350/Pentium N4200/Atom E3900 Series SPI Controller #1";
			case 0x80865ac4: return "Celeron N3350/Pentium N4200/Atom E3900 Series SPI Controller #2";
			case 0x80865ac6: return "Celeron N3350/Pentium N4200/Atom E3900 Series SPI Controller #3";
			case 0x80865ac8: return "Celeron N3350/Pentium N4200/Atom E3900 Series PWM Pin Controller";
			case 0x80865aca: return "Celeron N3350/Pentium N4200/Atom E3900 Series SDXC/MMC Host Controller";
			case 0x80865acc: return "Celeron N3350/Pentium N4200/Atom E3900 Series eMMC Controller";
			case 0x80865ad0: return "Celeron N3350/Pentium N4200/Atom E3900 Series SDIO Controller";
			case 0x80865ad4: return "Celeron N3350/Pentium N4200/Atom E3900 Series SMBus Controller";
			case 0x80865ad6: return "Celeron N3350/Pentium N4200/Atom E3900 Series PCI Express Port B #1";
			case 0x80865ad7: return "Celeron N3350/Pentium N4200/Atom E3900 Series PCI Express Port B #2";
			case 0x80865ad8: return "Celeron N3350/Pentium N4200/Atom E3900 Series PCI Express Port A #1";
			case 0x80865ad9: return "Celeron N3350/Pentium N4200/Atom E3900 Series PCI Express Port A #2";
			case 0x80865ada: return "Celeron N3350/Pentium N4200/Atom E3900 Series PCI Express Port A #3";
			case 0x80865adb: return "Celeron N3350/Pentium N4200/Atom E3900 Series PCI Express Port A #4";
			case 0x80865ae3: return "Celeron N3350/Pentium N4200/Atom E3900 Series SATA AHCI Controller";
			case 0x80865ae8: return "Celeron N3350/Pentium N4200/Atom E3900 Series Low Pin Count Interface";
			case 0x80865aee: return "Celeron N3350/Pentium N4200/Atom E3900 Series HSUART Controller #4";
			case 0x80865af0: return "Celeron N3350/Pentium N4200/Atom E3900 Series Host Bridge";
			case 0x808665c0: return "5100 Chipset Memory Controller Hub";
			case 0x808665e2: return "5100 Chipset PCI Express x4 Port 2";
			case 0x808665e3: return "5100 Chipset PCI Express x4 Port 3";
			case 0x808665e4: return "5100 Chipset PCI Express x4 Port 4";
			case 0x808665e5: return "5100 Chipset PCI Express x4 Port 5";
			case 0x808665e6: return "5100 Chipset PCI Express x4 Port 6";
			case 0x808665e7: return "5100 Chipset PCI Express x4 Port 7";
			case 0x808665f0: return "5100 Chipset FSB Registers";
			case 0x808665f1: return "5100 Chipset Reserved Registers";
			case 0x808665f3: return "5100 Chipset Reserved Registers";
			case 0x808665f5: return "5100 Chipset DDR Channel 0 Registers";
			case 0x808665f6: return "5100 Chipset DDR Channel 1 Registers";
			case 0x808665f7: return "5100 Chipset PCI Express x8 Port 2-3";
			case 0x808665f8: return "5100 Chipset PCI Express x8 Port 4-5";
			case 0x808665f9: return "5100 Chipset PCI Express x8 Port 6-7";
			case 0x808665fa: return "5100 Chipset PCI Express x16 Port 4-7";
			case 0x808665ff: return "5100 Chipset DMA Engine";
			case 0x80866f00: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D DMI2";
			case 0x80866f01: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D PCI Express Root Port 0";
			case 0x80866f02: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D PCI Express Root Port 1";
			case 0x80866f03: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D PCI Express Root Port 1";
			case 0x80866f04: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D PCI Express Root Port 2";
			case 0x80866f05: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D PCI Express Root Port 2";
			case 0x80866f06: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D PCI Express Root Port 2";
			case 0x80866f07: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D PCI Express Root Port 2";
			case 0x80866f08: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D PCI Express Root Port 3";
			case 0x80866f09: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D PCI Express Root Port 3";
			case 0x80866f0a: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D PCI Express Root Port 3";
			case 0x80866f0b: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D PCI Express Root Port 3";
			case 0x80866f10: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO Debug";
			case 0x80866f11: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO Debug";
			case 0x80866f12: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO Debug";
			case 0x80866f13: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO Debug";
			case 0x80866f14: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO Debug";
			case 0x80866f15: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO Debug";
			case 0x80866f16: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO Debug";
			case 0x80866f17: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO Debug";
			case 0x80866f18: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO Debug";
			case 0x80866f19: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO Debug";
			case 0x80866f1a: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO Debug";
			case 0x80866f1b: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO Debug";
			case 0x80866f1c: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO Debug";
			case 0x80866f1d: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D R2PCIe Agent";
			case 0x80866f1e: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Ubox";
			case 0x80866f1f: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Ubox";
			case 0x80866f20: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Crystal Beach DMA Channel 0";
			case 0x80866f21: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Crystal Beach DMA Channel 1";
			case 0x80866f22: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Crystal Beach DMA Channel 2";
			case 0x80866f23: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Crystal Beach DMA Channel 3";
			case 0x80866f24: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Crystal Beach DMA Channel 4";
			case 0x80866f25: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Crystal Beach DMA Channel 5";
			case 0x80866f26: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Crystal Beach DMA Channel 6";
			case 0x80866f27: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Crystal Beach DMA Channel 7";
			case 0x80866f28: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Map/VTd_Misc/System Management";
			case 0x80866f29: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO Hot Plug";
			case 0x80866f2a: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IIO RAS/Control Status/Global Errors";
			case 0x80866f2c: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D I/O APIC";
			case 0x80866f30: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Home Agent 0";
			case 0x80866f32: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 0";
			case 0x80866f33: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 1";
			case 0x80866f34: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D R2PCIe Agent";
			case 0x80866f36: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D R3 QPI Link 0/1";
			case 0x80866f37: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D R3 QPI Link 0/1";
			case 0x80866f38: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Home Agent 1";
			case 0x80866f39: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D IO Performance Monitoring";
			case 0x80866f3a: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 2";
			case 0x80866f3e: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D R3 QPI Link 2";
			case 0x80866f3f: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D R3 QPI Link 2";
			case 0x80866f40: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 2";
			case 0x80866f41: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D R3 QPI Link 2";
			case 0x80866f43: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 2";
			case 0x80866f45: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 2 Debug";
			case 0x80866f46: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 2 Debug";
			case 0x80866f47: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 2 Debug";
			case 0x80866f50: return "Xeon Processor D Family QuickData Technology Register DMA Channel 0";
			case 0x80866f51: return "Xeon Processor D Family QuickData Technology Register DMA Channel 1";
			case 0x80866f52: return "Xeon Processor D Family QuickData Technology Register DMA Channel 2";
			case 0x80866f53: return "Xeon Processor D Family QuickData Technology Register DMA Channel 3";
			case 0x80866f54: return "Xeon Processor D Family QuickAssist Technology";
			case 0x80866f55: return "Xeon Processor D Family QuickAssist Technology Virtual Fuction";
			case 0x80866f60: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Home Agent 1";
			case 0x80866f68: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Target Address/Thermal/RAS";
			case 0x80866f6a: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Channel Target Address Decoder";
			case 0x80866f6b: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Channel Target Address Decoder";
			case 0x80866f6c: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Channel Target Address Decoder";
			case 0x80866f6d: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Channel Target Address Decoder";
			case 0x80866f6e: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D DDRIO Channel 2/3 Broadcast";
			case 0x80866f6f: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D DDRIO Global Broadcast";
			case 0x80866f70: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Home Agent 0 Debug";
			case 0x80866f71: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 0 - Target Address/Thermal/RAS";
			case 0x80866f76: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D R3 QPI Link Debug";
			case 0x80866f78: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Home Agent 1 Debug";
			case 0x80866f79: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Target Address/Thermal/RAS";
			case 0x80866f7d: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Ubox";
			case 0x80866f7e: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D R3 QPI Link Debug";
			case 0x80866f80: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 0";
			case 0x80866f81: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D R3 QPI Link 0/1";
			case 0x80866f83: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 0";
			case 0x80866f85: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 0 Debug";
			case 0x80866f86: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 0 Debug";
			case 0x80866f87: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 0 Debug";
			case 0x80866f88: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866f8a: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866f90: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 1";
			case 0x80866f93: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 1";
			case 0x80866f95: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 1 Debug";
			case 0x80866f96: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D QPI Link 1 Debug";
			case 0x80866f98: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866f99: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866f9a: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866f9c: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fa0: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Home Agent 0";
			case 0x80866fa8: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 0 - Target Address/Thermal/RAS";
			case 0x80866faa: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 0 - Channel Target Address Decoder";
			case 0x80866fab: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 0 - Channel Target Address Decoder";
			case 0x80866fac: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 0 - Channel Target Address Decoder";
			case 0x80866fad: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 0 - Channel Target Address Decoder";
			case 0x80866fae: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D DDRIO Channel 0/1 Broadcast";
			case 0x80866faf: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D DDRIO Global Broadcast";
			case 0x80866fb0: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 0 - Channel 0 Thermal Control";
			case 0x80866fb1: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 0 - Channel 1 Thermal Control";
			case 0x80866fb2: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 0 - Channel 0 Error";
			case 0x80866fb3: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 0 - Channel 1 Error";
			case 0x80866fb4: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 0 - Channel 2 Thermal Control";
			case 0x80866fb5: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 0 - Channel 3 Thermal Control";
			case 0x80866fb6: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 0 - Channel 2 Error";
			case 0x80866fb7: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 0 - Channel 3 Error";
			case 0x80866fb8: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D DDRIO Channel 2/3 Interface";
			case 0x80866fb9: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D DDRIO Channel 2/3 Interface";
			case 0x80866fba: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D DDRIO Channel 2/3 Interface";
			case 0x80866fbb: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D DDRIO Channel 2/3 Interface";
			case 0x80866fbc: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D DDRIO Channel 0/1 Interface";
			case 0x80866fbd: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D DDRIO Channel 0/1 Interface";
			case 0x80866fbe: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D DDRIO Channel 0/1 Interface";
			case 0x80866fbf: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D DDRIO Channel 0/1 Interface";
			case 0x80866fc0: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fc1: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fc2: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fc3: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fc4: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fc5: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fc6: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fc7: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fc8: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fc9: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fca: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fcb: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fcc: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fcd: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fce: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fcf: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Power Control Unit";
			case 0x80866fd0: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 1 - Channel 0 Thermal Control";
			case 0x80866fd1: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 1 - Channel 1 Thermal Control";
			case 0x80866fd2: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 1 - Channel 0 Error";
			case 0x80866fd3: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 1 - Channel 1 Error";
			case 0x80866fd4: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 1 - Channel 2 Thermal Control";
			case 0x80866fd5: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 1 - Channel 3 Thermal Control";
			case 0x80866fd6: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 1 - Channel 2 Error";
			case 0x80866fd7: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Memory Controller 1 - Channel 3 Error";
			case 0x80866fe0: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866fe1: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866fe2: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866fe3: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866fe4: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866fe5: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866fe6: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866fe7: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866fe8: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866fe9: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866fea: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866feb: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866fec: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866fed: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866fee: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866fef: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866ff0: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866ff1: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866ff8: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866ff9: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866ffa: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866ffb: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866ffc: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866ffd: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80866ffe: return "Xeon E7 v4/Xeon E5 v4/Xeon E3 v4/Xeon D Caching Agent";
			case 0x80867000: return "82371SB PIIX3 ISA [Natoma/Triton II]";
			case 0x80867010: return "82371SB PIIX3 IDE [Natoma/Triton II]";
			case 0x80867020: return "82371SB PIIX3 USB [Natoma/Triton II]";
			case 0x80867030: return "430VX - 82437VX TVX [Triton VX]";
			case 0x80867050: return "Intercast Video Capture Card";
			case 0x80867051: return "PB 642365-003 (Business Video Conferencing Card)";
			case 0x80867100: return "430TX - 82439TX MTXC";
			case 0x80867110: return "82371AB/EB/MB PIIX4 ISA";
			case 0x80867111: return "82371AB/EB/MB PIIX4 IDE";
			case 0x80867112: return "82371AB/EB/MB PIIX4 USB";
			case 0x80867113: return "82371AB/EB/MB PIIX4 ACPI";
			case 0x80867120: return "82810 GMCH (Graphics Memory Controller Hub)";
			case 0x80867121: return "82810 (CGC) Chipset Graphics Controller";
			case 0x80867122: return "82810 DC-100 (GMCH) Graphics Memory Controller Hub";
			case 0x80867123: return "82810 DC-100 (CGC) Chipset Graphics Controller";
			case 0x80867124: return "82810E DC-133 (GMCH) Graphics Memory Controller Hub";
			case 0x80867125: return "82810E DC-133 (CGC) Chipset Graphics Controller";
			case 0x80867126: return "82810 DC-133 System and Graphics Controller";
			case 0x80867128: return "82810-M DC-100 System and Graphics Controller";
			case 0x8086712a: return "82810-M DC-133 System and Graphics Controller";
			case 0x80867180: return "440LX/EX - 82443LX/EX Host bridge";
			case 0x80867181: return "440LX/EX - 82443LX/EX AGP bridge";
			case 0x80867190: return "440BX/ZX/DX - 82443BX/ZX/DX Host bridge";
			case 0x80867191: return "440BX/ZX/DX - 82443BX/ZX/DX AGP bridge";
			case 0x80867192: return "440BX/ZX/DX - 82443BX/ZX/DX Host bridge (AGP disabled)";
			case 0x80867194: return "82440MX Host Bridge";
			case 0x80867195: return "82440MX AC'97 Audio Controller";
			case 0x80867196: return "82440MX AC'97 Modem Controller";
			case 0x80867198: return "82440MX ISA Bridge";
			case 0x80867199: return "82440MX EIDE Controller";
			case 0x8086719a: return "82440MX USB Universal Host Controller";
			case 0x8086719b: return "82440MX Power Management Controller";
			case 0x808671a0: return "440GX - 82443GX Host bridge";
			case 0x808671a1: return "440GX - 82443GX AGP bridge";
			case 0x808671a2: return "440GX - 82443GX Host bridge (AGP disabled)";
			case 0x80867360: return "XMM7360 LTE Advanced Modem";
			case 0x80867600: return "82372FB PIIX5 ISA";
			case 0x80867601: return "82372FB PIIX5 IDE";
			case 0x80867602: return "82372FB PIIX5 USB";
			case 0x80867603: return "82372FB PIIX5 SMBus";
			case 0x80867800: return "82740 (i740) AGP Graphics Accelerator";
			case 0x80868002: return "Trusted Execution Technology Registers";
			case 0x80868003: return "Trusted Execution Technology Registers";
			case 0x80868100: return "US15W/US15X SCH [Poulsbo] Host Bridge";
			case 0x80868101: return "US15L/UL11L SCH [Poulsbo] Host Bridge";
			case 0x80868108: return "US15W/US15X SCH [Poulsbo] Graphics Controller";
			case 0x80868109: return "US15L/UL11L SCH [Poulsbo] Graphics Controller";
			case 0x80868110: return "US15W/US15X/US15L/UL11L SCH [Poulsbo] PCI Express Port 1";
			case 0x80868112: return "US15W/US15X/US15L/UL11L SCH [Poulsbo] PCI Express Port 2";
			case 0x80868114: return "US15W/US15X/US15L/UL11L SCH [Poulsbo] USB UHCI Controller #1";
			case 0x80868115: return "US15W/US15X/US15L/UL11L SCH [Poulsbo] USB UHCI Controller #2";
			case 0x80868116: return "US15W/US15X/US15L/UL11L SCH [Poulsbo] USB UHCI Controller #3";
			case 0x80868117: return "US15W/US15X/US15L/UL11L SCH [Poulsbo] USB EHCI Controller";
			case 0x80868118: return "US15W/US15X/US15L/UL11L SCH [Poulsbo] USB Client Controller";
			case 0x80868119: return "US15W/US15X/US15L/UL11L SCH [Poulsbo] LPC Bridge";
			case 0x8086811a: return "US15W/US15X/US15L/UL11L SCH [Poulsbo] IDE Controller";
			case 0x8086811b: return "US15W/US15X/US15L/UL11L SCH [Poulsbo] HD Audio Controller";
			case 0x8086811c: return "US15W/US15X/US15L/UL11L SCH [Poulsbo] SDIO/MMC Controller #1";
			case 0x8086811d: return "US15W/US15X/US15L/UL11L SCH [Poulsbo] SDIO/MMC Controller #2";
			case 0x8086811e: return "US15W/US15X/US15L/UL11L SCH [Poulsbo] SDIO/MMC Controller #3";
			case 0x80868180: return "Atom Processor E6xx PCI Express Port 3";
			case 0x80868181: return "Atom Processor E6xx PCI Express Port 4";
			case 0x80868182: return "Atom Processor E6xx Integrated Graphics Controller";
			case 0x80868183: return "Atom Processor E6xx Configuration Unit";
			case 0x80868184: return "Atom Processor E6xx PCI Express Port 1";
			case 0x80868185: return "Atom Processor E6xx PCI Express Port 2";
			case 0x80868186: return "Atom Processor E6xx LPC Bridge";
			case 0x808684c4: return "450KX/GX [Orion] - 82454KX/GX PCI bridge";
			case 0x808684c5: return "450KX/GX [Orion] - 82453KX/GX Memory controller";
			case 0x808684ca: return "450NX - 82451NX Memory & I/O Controller";
			case 0x808684cb: return "450NX - 82454NX/84460GX PCI Expander Bridge";
			case 0x808684e0: return "460GX - 84460GX System Address Controller (SAC)";
			case 0x808684e1: return "460GX - 84460GX System Data Controller (SDC)";
			case 0x808684e2: return "460GX - 84460GX AGP Bridge (GXB function 2)";
			case 0x808684e3: return "460GX - 84460GX Memory Address Controller (MAC)";
			case 0x808684e4: return "460GX - 84460GX Memory Data Controller (MDC)";
			case 0x808684e6: return "460GX - 82466GX Wide and fast PCI eXpander Bridge (WXB)";
			case 0x808684ea: return "460GX - 84460GX AGP Bridge (GXB function 1)";
			case 0x80868500: return "IXP4XX Network Processor (IXP420/421/422/425/IXC1100)";
			case 0x80868603: return "Ice Lake-LP Dynamic Tuning Processor Participant";
			case 0x808687c0: return "UHD Graphics 617";
			case 0x80868800: return "Platform Controller Hub EG20T PCI Express Port";
			case 0x80868801: return "Platform Controller Hub EG20T Packet Hub";
			case 0x80868802: return "Platform Controller Hub EG20T Gigabit Ethernet Controller";
			case 0x80868803: return "Platform Controller Hub EG20T General Purpose IO Controller";
			case 0x80868804: return "Platform Controller Hub EG20T USB OHCI Controller #4";
			case 0x80868805: return "Platform Controller Hub EG20T USB OHCI Controller #5";
			case 0x80868806: return "Platform Controller Hub EG20T USB OHCI Controller #6";
			case 0x80868807: return "Platform Controller Hub EG20T USB2 EHCI Controller #2";
			case 0x80868808: return "Platform Controller Hub EG20T USB Client Controller";
			case 0x80868809: return "Platform Controller Hub EG20T SDIO Controller #1";
			case 0x8086880a: return "Platform Controller Hub EG20T SDIO Controller #2";
			case 0x8086880b: return "Platform Controller Hub EG20T SATA AHCI Controller";
			case 0x8086880c: return "Platform Controller Hub EG20T USB OHCI Controller #1";
			case 0x8086880d: return "Platform Controller Hub EG20T USB OHCI Controller #2";
			case 0x8086880e: return "Platform Controller Hub EG20T USB OHCI Controller #3";
			case 0x8086880f: return "Platform Controller Hub EG20T USB2 EHCI Controller #1";
			case 0x80868810: return "Platform Controller Hub EG20T DMA Controller #1";
			case 0x80868811: return "Platform Controller Hub EG20T UART Controller 0";
			case 0x80868812: return "Platform Controller Hub EG20T UART Controller 1";
			case 0x80868813: return "Platform Controller Hub EG20T UART Controller 2";
			case 0x80868814: return "Platform Controller Hub EG20T UART Controller 3";
			case 0x80868815: return "Platform Controller Hub EG20T DMA Controller #2";
			case 0x80868816: return "Platform Controller Hub EG20T Serial Peripheral Interface Bus";
			case 0x80868817: return "Platform Controller Hub EG20T I2C Controller";
			case 0x80868818: return "Platform Controller Hub EG20T Controller Area Network (CAN) Controller";
			case 0x80868819: return "Platform Controller Hub EG20T IEEE 1588 Hardware Assist";
			case 0x80868a0d: return "Ice Lake Thunderbolt 3 NHI #1";
			case 0x80868a12: return "Ice Lake-LP Processor Host Bridge/DRAM Registers";
			case 0x80868a13: return "Ice Lake Thunderbolt 3 USB Controller";
			case 0x80868a17: return "Ice Lake Thunderbolt 3 NHI #0";
			case 0x80868a19: return "Image Signal Processor";
			case 0x80868a1d: return "Ice Lake Thunderbolt 3 PCI Express Root Port #0";
			case 0x80868a1f: return "Ice Lake Thunderbolt 3 PCI Express Root Port #1";
			case 0x80868a21: return "Ice Lake Thunderbolt 3 PCI Express Root Port #2";
			case 0x80868a23: return "Ice Lake Thunderbolt 3 PCI Express Root Port #3";
			case 0x80868a51: return "Iris Plus Graphics G7 (Ice Lake)";
			case 0x80868a52: return "Iris Plus Graphics G7";
			case 0x80868a56: return "Iris Plus Graphics G1 (Ice Lake)";
			case 0x80868a5a: return "Iris Plus Graphics G4 (Ice Lake)";
			case 0x80868a5c: return "Iris Plus Graphics G4 (Ice Lake)";
			case 0x80868c00: return "8 Series/C220 Series Chipset Family 4-port SATA Controller 1 [IDE mode]";
			case 0x80868c01: return "8 Series Chipset Family 4-port SATA Controller 1 [IDE mode] - Mobile";
			case 0x80868c02: return "8 Series/C220 Series Chipset Family 6-port SATA Controller 1 [AHCI mode]";
			case 0x80868c03: return "8 Series/C220 Series Chipset Family 6-port SATA Controller 1 [AHCI mode]";
			case 0x80868c04: return "8 Series/C220 Series Chipset Family SATA Controller 1 [RAID mode]";
			case 0x80868c05: return "8 Series/C220 Series Chipset Family SATA Controller 1 [RAID mode]";
			case 0x80868c06: return "8 Series/C220 Series Chipset Family SATA Controller 1 [RAID mode]";
			case 0x80868c07: return "8 Series/C220 Series Chipset Family SATA Controller 1 [RAID mode]";
			case 0x80868c08: return "8 Series/C220 Series Chipset Family 2-port SATA Controller 2 [IDE mode]";
			case 0x80868c09: return "8 Series/C220 Series Chipset Family 2-port SATA Controller 2 [IDE mode]";
			case 0x80868c0e: return "8 Series/C220 Series Chipset Family SATA Controller 1 [RAID mode]";
			case 0x80868c0f: return "8 Series/C220 Series Chipset Family SATA Controller 1 [RAID mode]";
			case 0x80868c10: return "8 Series/C220 Series Chipset Family PCI Express Root Port #1";
			case 0x80868c11: return "8 Series/C220 Series Chipset Family PCI Express Root Port #1";
			case 0x80868c12: return "8 Series/C220 Series Chipset Family PCI Express Root Port #2";
			case 0x80868c13: return "8 Series/C220 Series Chipset Family PCI Express Root Port #2";
			case 0x80868c14: return "8 Series/C220 Series Chipset Family PCI Express Root Port #3";
			case 0x80868c15: return "8 Series/C220 Series Chipset Family PCI Express Root Port #3";
			case 0x80868c16: return "8 Series/C220 Series Chipset Family PCI Express Root Port #4";
			case 0x80868c17: return "8 Series/C220 Series Chipset Family PCI Express Root Port #4";
			case 0x80868c18: return "8 Series/C220 Series Chipset Family PCI Express Root Port #5";
			case 0x80868c19: return "8 Series/C220 Series Chipset Family PCI Express Root Port #5";
			case 0x80868c1a: return "8 Series/C220 Series Chipset Family PCI Express Root Port #6";
			case 0x80868c1b: return "8 Series/C220 Series Chipset Family PCI Express Root Port #6";
			case 0x80868c1c: return "8 Series/C220 Series Chipset Family PCI Express Root Port #7";
			case 0x80868c1d: return "8 Series/C220 Series Chipset Family PCI Express Root Port #7";
			case 0x80868c1e: return "8 Series/C220 Series Chipset Family PCI Express Root Port #8";
			case 0x80868c1f: return "8 Series/C220 Series Chipset Family PCI Express Root Port #8";
			case 0x80868c20: return "8 Series/C220 Series Chipset High Definition Audio Controller";
			case 0x80868c21: return "8 Series/C220 Series Chipset High Definition Audio Controller";
			case 0x80868c22: return "8 Series/C220 Series Chipset Family SMBus Controller";
			case 0x80868c23: return "8 Series Chipset Family CHAP Counters";
			case 0x80868c24: return "8 Series Chipset Family Thermal Management Controller";
			case 0x80868c26: return "8 Series/C220 Series Chipset Family USB EHCI #1";
			case 0x80868c2d: return "8 Series/C220 Series Chipset Family USB EHCI #2";
			case 0x80868c31: return "8 Series/C220 Series Chipset Family USB xHCI";
			case 0x80868c33: return "8 Series/C220 Series Chipset Family LAN Controller";
			case 0x80868c34: return "8 Series/C220 Series Chipset Family NAND Controller";
			case 0x80868c3a: return "8 Series/C220 Series Chipset Family MEI Controller #1";
			case 0x80868c3b: return "8 Series/C220 Series Chipset Family MEI Controller #2";
			case 0x80868c3c: return "8 Series/C220 Series Chipset Family IDE-r Controller";
			case 0x80868c3d: return "8 Series/C220 Series Chipset Family KT Controller";
			case 0x80868c40: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c41: return "8 Series Chipset Family Mobile Super SKU LPC Controller";
			case 0x80868c42: return "8 Series/C220 Series Chipset Family Desktop Super SKU LPC Controller";
			case 0x80868c43: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c44: return "Z87 Express LPC Controller";
			case 0x80868c45: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c46: return "Z85 Express LPC Controller";
			case 0x80868c47: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c48: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c49: return "HM86 Express LPC Controller";
			case 0x80868c4a: return "H87 Express LPC Controller";
			case 0x80868c4b: return "HM87 Express LPC Controller";
			case 0x80868c4c: return "Q85 Express LPC Controller";
			case 0x80868c4d: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c4e: return "Q87 Express LPC Controller";
			case 0x80868c4f: return "QM87 Express LPC Controller";
			case 0x80868c50: return "B85 Express LPC Controller";
			case 0x80868c51: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c52: return "C222 Series Chipset Family Server Essential SKU LPC Controller";
			case 0x80868c53: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c54: return "C224 Series Chipset Family Server Standard SKU LPC Controller";
			case 0x80868c55: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c56: return "C226 Series Chipset Family Server Advanced SKU LPC Controller";
			case 0x80868c57: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c58: return "8 Series/C220 Series Chipset Family WS SKU LPC Controller";
			case 0x80868c59: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c5a: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c5b: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c5c: return "H81 Express LPC Controller";
			case 0x80868c5d: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c5e: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c5f: return "8 Series/C220 Series Chipset Family LPC Controller";
			case 0x80868c80: return "9 Series Chipset Family SATA Controller [IDE Mode]";
			case 0x80868c81: return "9 Series Chipset Family SATA Controller [IDE Mode]";
			case 0x80868c82: return "9 Series Chipset Family SATA Controller [AHCI Mode]";
			case 0x80868c83: return "9 Series Chipset Family SATA Controller [AHCI Mode]";
			case 0x80868c84: return "9 Series Chipset Family SATA Controller [RAID Mode]";
			case 0x80868c85: return "9 Series Chipset Family SATA Controller [RAID Mode]";
			case 0x80868c86: return "9 Series Chipset Family SATA Controller [RAID Mode]";
			case 0x80868c87: return "9 Series Chipset Family SATA Controller [RAID Mode]";
			case 0x80868c88: return "9 Series Chipset Family SATA Controller [IDE Mode]";
			case 0x80868c89: return "9 Series Chipset Family SATA Controller [IDE Mode]";
			case 0x80868c8e: return "9 Series Chipset Family SATA Controller [RAID Mode]";
			case 0x80868c8f: return "9 Series Chipset Family SATA Controller [RAID Mode]";
			case 0x80868c90: return "9 Series Chipset Family PCI Express Root Port 1";
			case 0x80868c92: return "9 Series Chipset Family PCI Express Root Port 2";
			case 0x80868c94: return "9 Series Chipset Family PCI Express Root Port 3";
			case 0x80868c96: return "9 Series Chipset Family PCI Express Root Port 4";
			case 0x80868c98: return "9 Series Chipset Family PCI Express Root Port 5";
			case 0x80868c9a: return "9 Series Chipset Family PCI Express Root Port 6";
			case 0x80868c9c: return "9 Series Chipset Family PCI Express Root Port 7";
			case 0x80868c9e: return "9 Series Chipset Family PCI Express Root Port 8";
			case 0x80868ca0: return "9 Series Chipset Family HD Audio Controller";
			case 0x80868ca2: return "9 Series Chipset Family SMBus Controller";
			case 0x80868ca4: return "9 Series Chipset Family Thermal Controller";
			case 0x80868ca6: return "9 Series Chipset Family USB EHCI Controller #1";
			case 0x80868cad: return "9 Series Chipset Family USB EHCI Controller #2";
			case 0x80868cb1: return "9 Series Chipset Family USB xHCI Controller";
			case 0x80868cb3: return "9 Series Chipset Family LAN Controller";
			case 0x80868cba: return "9 Series Chipset Family ME Interface #1";
			case 0x80868cbb: return "9 Series Chipset Family ME Interface #2";
			case 0x80868cbc: return "9 Series Chipset Family IDE-R Controller";
			case 0x80868cbd: return "9 Series Chipset Family KT Controller";
			case 0x80868cc1: return "9 Series Chipset Family LPC Controller";
			case 0x80868cc2: return "9 Series Chipset Family LPC Controller";
			case 0x80868cc3: return "HM97 Chipset LPC Controller";
			case 0x80868cc4: return "Z97 Chipset LPC Controller";
			case 0x80868cc5: return "QM97 Chipset LPC Controller";
			case 0x80868cc6: return "H97 Chipset LPC Controller";
			case 0x80868d00: return "C610/X99 series chipset 4-port SATA Controller [IDE mode]";
			case 0x80868d02: return "C610/X99 series chipset 6-Port SATA Controller [AHCI mode]";
			case 0x80868d04: return "C610/X99 series chipset SATA Controller [RAID mode]";
			case 0x80868d06: return "C610/X99 series chipset SATA Controller [RAID mode]";
			case 0x80868d08: return "C610/X99 series chipset 2-port SATA Controller [IDE mode]";
			case 0x80868d0e: return "C610/X99 series chipset SATA Controller [RAID mode]";
			case 0x80868d10: return "C610/X99 series chipset PCI Express Root Port #1";
			case 0x80868d11: return "C610/X99 series chipset PCI Express Root Port #1";
			case 0x80868d12: return "C610/X99 series chipset PCI Express Root Port #2";
			case 0x80868d13: return "C610/X99 series chipset PCI Express Root Port #2";
			case 0x80868d14: return "C610/X99 series chipset PCI Express Root Port #3";
			case 0x80868d15: return "C610/X99 series chipset PCI Express Root Port #3";
			case 0x80868d16: return "C610/X99 series chipset PCI Express Root Port #4";
			case 0x80868d17: return "C610/X99 series chipset PCI Express Root Port #4";
			case 0x80868d18: return "C610/X99 series chipset PCI Express Root Port #5";
			case 0x80868d19: return "C610/X99 series chipset PCI Express Root Port #5";
			case 0x80868d1a: return "C610/X99 series chipset PCI Express Root Port #6";
			case 0x80868d1b: return "C610/X99 series chipset PCI Express Root Port #6";
			case 0x80868d1c: return "C610/X99 series chipset PCI Express Root Port #7";
			case 0x80868d1d: return "C610/X99 series chipset PCI Express Root Port #7";
			case 0x80868d1e: return "C610/X99 series chipset PCI Express Root Port #8";
			case 0x80868d1f: return "C610/X99 series chipset PCI Express Root Port #8";
			case 0x80868d20: return "C610/X99 series chipset HD Audio Controller";
			case 0x80868d21: return "C610/X99 series chipset HD Audio Controller";
			case 0x80868d22: return "C610/X99 series chipset SMBus Controller";
			case 0x80868d24: return "C610/X99 series chipset Thermal Subsystem";
			case 0x80868d26: return "C610/X99 series chipset USB Enhanced Host Controller #1";
			case 0x80868d2d: return "C610/X99 series chipset USB Enhanced Host Controller #2";
			case 0x80868d31: return "C610/X99 series chipset USB xHCI Host Controller";
			case 0x80868d33: return "C610/X99 series chipset LAN Controller";
			case 0x80868d34: return "C610/X99 series chipset NAND Controller";
			case 0x80868d3a: return "C610/X99 series chipset MEI Controller #1";
			case 0x80868d3b: return "C610/X99 series chipset MEI Controller #2";
			case 0x80868d3c: return "C610/X99 series chipset IDE-r Controller";
			case 0x80868d3d: return "C610/X99 series chipset KT Controller";
			case 0x80868d40: return "C610/X99 series chipset LPC Controller";
			case 0x80868d41: return "C610/X99 series chipset LPC Controller";
			case 0x80868d42: return "C610/X99 series chipset LPC Controller";
			case 0x80868d43: return "C610/X99 series chipset LPC Controller";
			case 0x80868d44: return "C610/X99 series chipset LPC Controller";
			case 0x80868d45: return "C610/X99 series chipset LPC Controller";
			case 0x80868d46: return "C610/X99 series chipset LPC Controller";
			case 0x80868d47: return "C610/X99 series chipset LPC Controller";
			case 0x80868d48: return "C610/X99 series chipset LPC Controller";
			case 0x80868d49: return "C610/X99 series chipset LPC Controller";
			case 0x80868d4a: return "C610/X99 series chipset LPC Controller";
			case 0x80868d4b: return "C610/X99 series chipset LPC Controller";
			case 0x80868d4c: return "C610/X99 series chipset LPC Controller";
			case 0x80868d4d: return "C610/X99 series chipset LPC Controller";
			case 0x80868d4e: return "C610/X99 series chipset LPC Controller";
			case 0x80868d4f: return "C610/X99 series chipset LPC Controller";
			case 0x80868d60: return "C610/X99 series chipset sSATA Controller [IDE mode]";
			case 0x80868d62: return "C610/X99 series chipset sSATA Controller [AHCI mode]";
			case 0x80868d64: return "C610/X99 series chipset sSATA Controller [RAID mode]";
			case 0x80868d66: return "C610/X99 series chipset sSATA Controller [RAID mode]";
			case 0x80868d68: return "C610/X99 series chipset sSATA Controller [IDE mode]";
			case 0x80868d6e: return "C610/X99 series chipset sSATA Controller [RAID mode]";
			case 0x80868d7c: return "C610/X99 series chipset SPSR";
			case 0x80868d7d: return "C610/X99 series chipset MS SMBus 0";
			case 0x80868d7e: return "C610/X99 series chipset MS SMBus 1";
			case 0x80868d7f: return "C610/X99 series chipset MS SMBus 2";
			case 0x80869000: return "IXP2000 Family Network Processor";
			case 0x80869001: return "IXP2400 Network Processor";
			case 0x80869002: return "IXP2300 Network Processor";
			case 0x80869004: return "IXP2800 Network Processor";
			case 0x80869621: return "Integrated RAID";
			case 0x80869622: return "Integrated RAID";
			case 0x80869641: return "Integrated RAID";
			case 0x808696a1: return "Integrated RAID";
			case 0x80869a01: return "11th Gen Core Processor PCIe Controller #1";
			case 0x80869a03: return "TigerLake-LP Dynamic Tuning Processor Participant";
			case 0x80869a09: return "11th Gen Core Processor PCIe Controller";
			case 0x80869a0b: return "Volume Management Device NVMe RAID Controller";
			case 0x80869a0d: return "Tigerlake Telemetry Aggregator Driver";
			case 0x80869a0f: return "11th Gen Core Processor PCIe Controller #0";
			case 0x80869a11: return "GNA Scoring Accelerator module";
			case 0x80869a13: return "Tiger Lake-LP Thunderbolt 4 USB Controller";
			case 0x80869a14: return "11th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80869a17: return "Tiger Lake-H Thunderbolt 4 USB Controller";
			case 0x80869a1b: return "Tiger Lake-LP Thunderbolt 4 NHI #0";
			case 0x80869a1d: return "Tiger Lake-LP Thunderbolt 4 NHI #1";
			case 0x80869a1f: return "Tiger Lake-H Thunderbolt 4 NHI #0";
			case 0x80869a21: return "Tiger Lake-H Thunderbolt 4 NHI #1";
			case 0x80869a23: return "Tiger Lake-LP Thunderbolt 4 PCI Express Root Port #0";
			case 0x80869a25: return "Tiger Lake-LP Thunderbolt 4 PCI Express Root Port #1";
			case 0x80869a26: return "11th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80869a27: return "Tiger Lake-LP Thunderbolt 4 PCI Express Root Port #2";
			case 0x80869a29: return "Tiger Lake-LP Thunderbolt 4 PCI Express Root Port #3";
			case 0x80869a2b: return "Tiger Lake-H Thunderbolt 4 PCI Express Root Port #0";
			case 0x80869a2d: return "Tiger Lake-H Thunderbolt 4 PCI Express Root Port #1";
			case 0x80869a2f: return "Tiger Lake-H Thunderbolt 4 PCI Express Root Port #2";
			case 0x80869a31: return "Tiger Lake-H Thunderbolt 4 PCI Express Root Port #3";
			case 0x80869a33: return "Tiger Lake Trace Hub";
			case 0x80869a36: return "11th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80869a49: return "TigerLake-LP GT2 [Iris Xe Graphics]";
			case 0x80869a60: return "TigerLake-H GT1 [UHD Graphics]";
			case 0x80869a68: return "TigerLake-H GT1 [UHD Graphics]";
			case 0x80869b41: return "CometLake-U GT2 [UHD Graphics]";
			case 0x80869b44: return "10th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80869b53: return "Comet Lake-S 6c Host Bridge/DRAM Controller";
			case 0x80869b54: return "10th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80869b61: return "Comet Lake-U v1 4c Host Bridge/DRAM Controller";
			case 0x80869b63: return "10th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80869b64: return "10th Gen Core Processor Host Bridge/DRAM Registers";
			case 0x80869bc4: return "CometLake-H GT2 [UHD Graphics]";
			case 0x80869bc5: return "CometLake-S GT2 [UHD Graphics 630]";
			case 0x80869bc8: return "CometLake-S GT2 [UHD Graphics 630]";
			case 0x80869bca: return "Comet Lake UHD Graphics";
			case 0x80869c00: return "8 Series SATA Controller 1 [IDE mode]";
			case 0x80869c01: return "8 Series SATA Controller 1 [IDE mode]";
			case 0x80869c02: return "8 Series SATA Controller 1 [AHCI mode]";
			case 0x80869c03: return "8 Series SATA Controller 1 [AHCI mode]";
			case 0x80869c04: return "8 Series SATA Controller 1 [RAID mode]";
			case 0x80869c05: return "8 Series SATA Controller 1 [RAID mode]";
			case 0x80869c06: return "8 Series SATA Controller 1 [RAID mode]";
			case 0x80869c07: return "8 Series SATA Controller 1 [RAID mode]";
			case 0x80869c08: return "8 Series SATA Controller 2 [IDE mode]";
			case 0x80869c09: return "8 Series SATA Controller 2 [IDE mode]";
			case 0x80869c0a: return "8 Series SATA Controller [Reserved]";
			case 0x80869c0b: return "8 Series SATA Controller [Reserved]";
			case 0x80869c0c: return "8 Series SATA Controller [Reserved]";
			case 0x80869c0d: return "8 Series SATA Controller [Reserved]";
			case 0x80869c0e: return "8 Series SATA Controller 1 [RAID mode]";
			case 0x80869c0f: return "8 Series SATA Controller 1 [RAID mode]";
			case 0x80869c10: return "8 Series PCI Express Root Port 1";
			case 0x80869c11: return "8 Series PCI Express Root Port 1";
			case 0x80869c12: return "8 Series PCI Express Root Port 2";
			case 0x80869c13: return "8 Series PCI Express Root Port 2";
			case 0x80869c14: return "8 Series PCI Express Root Port 3";
			case 0x80869c15: return "8 Series PCI Express Root Port 3";
			case 0x80869c16: return "8 Series PCI Express Root Port 4";
			case 0x80869c17: return "8 Series PCI Express Root Port 4";
			case 0x80869c18: return "8 Series PCI Express Root Port 5";
			case 0x80869c19: return "8 Series PCI Express Root Port 5";
			case 0x80869c1a: return "8 Series PCI Express Root Port 6";
			case 0x80869c1b: return "8 Series PCI Express Root Port 6";
			case 0x80869c1c: return "8 Series PCI Express Root Port 7";
			case 0x80869c1d: return "8 Series PCI Express Root Port 7";
			case 0x80869c1e: return "8 Series PCI Express Root Port 8";
			case 0x80869c1f: return "8 Series PCI Express Root Port 8";
			case 0x80869c20: return "8 Series HD Audio Controller";
			case 0x80869c21: return "8 Series HD Audio Controller";
			case 0x80869c22: return "8 Series SMBus Controller";
			case 0x80869c23: return "8 Series CHAP Counters";
			case 0x80869c24: return "8 Series Thermal";
			case 0x80869c26: return "8 Series USB EHCI #1";
			case 0x80869c2d: return "8 Series USB EHCI #2";
			case 0x80869c31: return "8 Series USB xHCI HC";
			case 0x80869c35: return "8 Series SDIO Controller";
			case 0x80869c36: return "8 Series Audio DSP Controller";
			case 0x80869c3a: return "8 Series HECI #0";
			case 0x80869c3b: return "8 Series HECI #1";
			case 0x80869c3c: return "8 Series HECI IDER";
			case 0x80869c3d: return "8 Series HECI KT";
			case 0x80869c40: return "8 Series LPC Controller";
			case 0x80869c41: return "8 Series LPC Controller";
			case 0x80869c42: return "8 Series LPC Controller";
			case 0x80869c43: return "8 Series LPC Controller";
			case 0x80869c44: return "8 Series LPC Controller";
			case 0x80869c45: return "8 Series LPC Controller";
			case 0x80869c46: return "8 Series LPC Controller";
			case 0x80869c47: return "8 Series LPC Controller";
			case 0x80869c60: return "8 Series Low Power Sub-System DMA";
			case 0x80869c61: return "8 Series I2C Controller #0";
			case 0x80869c62: return "8 Series I2C Controller #1";
			case 0x80869c63: return "8 Series UART Controller #0";
			case 0x80869c64: return "8 Series UART Controller #1";
			case 0x80869c65: return "8 Series SPI Controller #0";
			case 0x80869c66: return "8 Series SPI Controller #1";
			case 0x80869c83: return "Wildcat Point-LP SATA Controller [AHCI Mode]";
			case 0x80869c85: return "Wildcat Point-LP SATA Controller [RAID Mode]";
			case 0x80869c87: return "Wildcat Point-LP SATA Controller [RAID Mode]";
			case 0x80869c8f: return "Wildcat Point-LP SATA Controller [RAID Mode]";
			case 0x80869c90: return "Wildcat Point-LP PCI Express Root Port #1";
			case 0x80869c92: return "Wildcat Point-LP PCI Express Root Port #2";
			case 0x80869c94: return "Wildcat Point-LP PCI Express Root Port #3";
			case 0x80869c96: return "Wildcat Point-LP PCI Express Root Port #4";
			case 0x80869c98: return "Wildcat Point-LP PCI Express Root Port #5";
			case 0x80869c9a: return "Wildcat Point-LP PCI Express Root Port #6";
			case 0x80869ca0: return "Wildcat Point-LP High Definition Audio Controller";
			case 0x80869ca2: return "Wildcat Point-LP SMBus Controller";
			case 0x80869ca4: return "Wildcat Point-LP Thermal Management Controller";
			case 0x80869ca6: return "Wildcat Point-LP USB EHCI Controller";
			case 0x80869cb1: return "Wildcat Point-LP USB xHCI Controller";
			case 0x80869cb5: return "Wildcat Point-LP Secure Digital IO Controller";
			case 0x80869cb6: return "Wildcat Point-LP Smart Sound Technology Controller";
			case 0x80869cba: return "Wildcat Point-LP MEI Controller #1";
			case 0x80869cbb: return "Wildcat Point-LP MEI Controller #2";
			case 0x80869cbc: return "Wildcat Point-LP IDE-r Controller";
			case 0x80869cbd: return "Wildcat Point-LP KT Controller";
			case 0x80869cc1: return "Wildcat Point-LP LPC Controller";
			case 0x80869cc2: return "Wildcat Point-LP LPC Controller";
			case 0x80869cc3: return "Wildcat Point-LP LPC Controller";
			case 0x80869cc5: return "Wildcat Point-LP LPC Controller";
			case 0x80869cc6: return "Wildcat Point-LP LPC Controller";
			case 0x80869cc7: return "Wildcat Point-LP LPC Controller";
			case 0x80869cc9: return "Wildcat Point-LP LPC Controller";
			case 0x80869ce0: return "Wildcat Point-LP Serial IO DMA Controller";
			case 0x80869ce1: return "Wildcat Point-LP Serial IO I2C Controller #0";
			case 0x80869ce2: return "Wildcat Point-LP Serial IO I2C Controller #1";
			case 0x80869ce3: return "Wildcat Point-LP Serial IO UART Controller #0";
			case 0x80869ce4: return "Wildcat Point-LP Serial IO UART Controller #1";
			case 0x80869ce5: return "Wildcat Point-LP Serial IO GSPI Controller #0";
			case 0x80869ce6: return "Wildcat Point-LP Serial IO GSPI Controller #1";
			case 0x80869d03: return "Sunrise Point-LP SATA Controller [AHCI mode]";
			case 0x80869d10: return "Sunrise Point-LP PCI Express Root Port #1";
			case 0x80869d11: return "Sunrise Point-LP PCI Express Root Port #2";
			case 0x80869d12: return "Sunrise Point-LP PCI Express Root Port #3";
			case 0x80869d13: return "Sunrise Point-LP PCI Express Root Port #4";
			case 0x80869d14: return "Sunrise Point-LP PCI Express Root Port #5";
			case 0x80869d15: return "Sunrise Point-LP PCI Express Root Port #6";
			case 0x80869d16: return "Sunrise Point-LP PCI Express Root Port #7";
			case 0x80869d17: return "Sunrise Point-LP PCI Express Root Port #8";
			case 0x80869d18: return "Sunrise Point-LP PCI Express Root Port #9";
			case 0x80869d19: return "Sunrise Point-LP PCI Express Root Port #10";
			case 0x80869d1a: return "Sunrise Point-LP PCI Express Root Port #11";
			case 0x80869d21: return "Sunrise Point-LP PMC";
			case 0x80869d23: return "Sunrise Point-LP SMBus";
			case 0x80869d27: return "Sunrise Point-LP Serial IO UART Controller #0";
			case 0x80869d28: return "Sunrise Point-LP Serial IO UART Controller #1";
			case 0x80869d29: return "Sunrise Point-LP Serial IO SPI Controller #0";
			case 0x80869d2a: return "Sunrise Point-LP Serial IO SPI Controller #1";
			case 0x80869d2d: return "Sunrise Point-LP Secure Digital IO Controller";
			case 0x80869d2f: return "Sunrise Point-LP USB 3.0 xHCI Controller";
			case 0x80869d31: return "Sunrise Point-LP Thermal subsystem";
			case 0x80869d32: return "CSI-2 Host Controller";
			case 0x80869d35: return "Sunrise Point-LP Integrated Sensor Hub";
			case 0x80869d3a: return "Sunrise Point-LP CSME HECI #1";
			case 0x80869d3d: return "Sunrise Point-LP Active Management Technology - SOL";
			case 0x80869d43: return "Sunrise Point-LP LPC Controller";
			case 0x80869d46: return "LPC/eSPI Controller";
			case 0x80869d48: return "Sunrise Point-LP LPC Controller";
			case 0x80869d4e: return "Sunrise Point LPC Controller/eSPI Controller";
			case 0x80869d50: return "Sunrise Point LPC Controller";
			case 0x80869d56: return "Sunrise Point-LP LPC Controller";
			case 0x80869d58: return "Sunrise Point-LP LPC Controller";
			case 0x80869d60: return "Sunrise Point-LP Serial IO I2C Controller #0";
			case 0x80869d61: return "Sunrise Point-LP Serial IO I2C Controller #1";
			case 0x80869d62: return "Sunrise Point-LP Serial IO I2C Controller #2";
			case 0x80869d63: return "Sunrise Point-LP Serial IO I2C Controller #3";
			case 0x80869d64: return "Sunrise Point-LP Serial IO I2C Controller #4";
			case 0x80869d65: return "Sunrise Point-LP Serial IO I2C Controller #5";
			case 0x80869d66: return "Sunrise Point-LP Serial IO UART Controller #2";
			case 0x80869d70: return "Sunrise Point-LP HD Audio";
			case 0x80869d71: return "Sunrise Point-LP HD Audio";
			case 0x80869d84: return "Cannon Point-LP LPC Controller";
			case 0x80869da3: return "Cannon Point-LP SMBus Controller";
			case 0x80869da4: return "Cannon Point-LP SPI Controller";
			case 0x80869da8: return "Cannon Point-LP Serial IO UART Controller #2";
			case 0x80869daa: return "Cannon Point-LP Serial IO SPI Controller";
			case 0x80869db0: return "Cannon Point-LP PCI Express Root Port #9";
			case 0x80869db1: return "Cannon Point-LP PCI Express Root Port #10";
			case 0x80869db2: return "Cannon Point-LP PCI Express Root Port #1";
			case 0x80869db4: return "Cannon Point-LP PCI Express Root Port #13";
			case 0x80869db6: return "Cannon Point-LP PCI Express Root Port #15";
			case 0x80869db8: return "Cannon Point-LP PCI Express Root Port #1";
			case 0x80869dbc: return "Cannon Point-LP PCI Express Root Port #5";
			case 0x80869dbe: return "Cannon Point-LP PCI Express Root Port #7";
			case 0x80869dbf: return "Cannon Point PCI Express Root Port #8";
			case 0x80869dc5: return "Cannon Point-LP Serial IO I2C Host Controller";
			case 0x80869dc8: return "Cannon Point-LP High Definition Audio Controller";
			case 0x80869dd3: return "Cannon Point-LP SATA Controller [AHCI Mode]";
			case 0x80869de0: return "Cannon Point-LP MEI Controller #1";
			case 0x80869de3: return "Cannon Point-LP Keyboard and Text (KT) Redirection";
			case 0x80869de8: return "Cannon Point-LP Serial IO I2C Controller #0";
			case 0x80869de9: return "Cannon Point-LP Serial IO I2C Controller #1";
			case 0x80869ded: return "Cannon Point-LP USB 3.1 xHCI Controller";
			case 0x80869def: return "Cannon Point-LP Shared SRAM";
			case 0x80869df0: return "Cannon Point-LP CNVi [Wireless-AC]";
			case 0x80869df5: return "BayHubTech Integrated SD controller";
			case 0x80869df9: return "Cannon Point-LP Thermal Controller";
			case 0x80869dfc: return "Cannon Point-LP Integrated Sensor Hub";
			case 0x8086a000: return "Atom Processor D4xx/D5xx/N4xx/N5xx DMI Bridge";
			case 0x8086a001: return "Atom Processor D4xx/D5xx/N4xx/N5xx Integrated Graphics Controller";
			case 0x8086a002: return "Atom Processor D4xx/D5xx/N4xx/N5xx Integrated Graphics Controller";
			case 0x8086a003: return "Atom Processor D4xx/D5xx/N4xx/N5xx CHAPS counter";
			case 0x8086a010: return "Atom Processor D4xx/D5xx/N4xx/N5xx DMI Bridge";
			case 0x8086a011: return "Atom Processor D4xx/D5xx/N4xx/N5xx Integrated Graphics Controller";
			case 0x8086a012: return "Atom Processor D4xx/D5xx/N4xx/N5xx Integrated Graphics Controller";
			case 0x8086a013: return "Atom Processor D4xx/D5xx/N4xx/N5xx CHAPS counter";
			case 0x8086a082: return "Tiger Lake-LP LPC Controller";
			case 0x8086a0a3: return "Tiger Lake-LP SMBus Controller";
			case 0x8086a0a4: return "Tiger Lake-LP SPI Controller";
			case 0x8086a0a6: return "Tiger Lake-LP Trace Hub";
			case 0x8086a0a8: return "Tiger Lake-LP Serial IO UART Controller #0";
			case 0x8086a0a9: return "Tiger Lake-LP Serial IO UART Controller #1";
			case 0x8086a0ab: return "Tiger Lake-LP Serial IO SPI Controller #1";
			case 0x8086a0b0: return "Tiger Lake-LP PCI Express Root Port #9";
			case 0x8086a0bd: return "Tigerlake PCH-LP PCI Express Root Port #6";
			case 0x8086a0bf: return "Tiger Lake-LP PCI Express Root Port #8";
			case 0x8086a0c5: return "Tiger Lake-LP Serial IO I2C Controller #4";
			case 0x8086a0c6: return "Tiger Lake-LP Serial IO I2C Controller #5";
			case 0x8086a0c8: return "Tiger Lake-LP Smart Sound Technology Audio Controller";
			case 0x8086a0e0: return "Tiger Lake-LP Management Engine Interface";
			case 0x8086a0e3: return "Tiger Lake-LP Active Management Technology - SOL";
			case 0x8086a0e8: return "Tiger Lake-LP Serial IO I2C Controller #0";
			case 0x8086a0e9: return "Tiger Lake-LP Serial IO I2C Controller #1";
			case 0x8086a0ea: return "Tiger Lake-LP Serial IO I2C Controller #2";
			case 0x8086a0eb: return "Tiger Lake-LP Serial IO I2C Controller #3";
			case 0x8086a0ed: return "Tiger Lake-LP USB 3.2 Gen 2x1 xHCI Host Controller";
			case 0x8086a0ef: return "Tiger Lake-LP Shared SRAM";
			case 0x8086a0f0: return "Wi-Fi 6 AX201";
			case 0x8086a0fc: return "Tiger Lake-LP Integrated Sensor Hub";
			case 0x8086a102: return "Q170/Q150/B150/H170/H110/Z170/CM236 Chipset SATA Controller [AHCI Mode]";
			case 0x8086a103: return "HM170/QM170 Chipset SATA Controller [AHCI Mode]";
			case 0x8086a105: return "Sunrise Point-H SATA Controller [RAID mode]";
			case 0x8086a106: return "Q170/H170/Z170/CM236 Chipset SATA Controller [RAID Mode]";
			case 0x8086a107: return "HM170/QM170 Chipset SATA Controller [RAID Mode]";
			case 0x8086a10f: return "Sunrise Point-H SATA Controller [RAID mode]";
			case 0x8086a110: return "100 Series/C230 Series Chipset Family PCI Express Root Port #1";
			case 0x8086a111: return "100 Series/C230 Series Chipset Family PCI Express Root Port #2";
			case 0x8086a112: return "100 Series/C230 Series Chipset Family PCI Express Root Port #3";
			case 0x8086a113: return "100 Series/C230 Series Chipset Family PCI Express Root Port #4";
			case 0x8086a114: return "100 Series/C230 Series Chipset Family PCI Express Root Port #5";
			case 0x8086a115: return "100 Series/C230 Series Chipset Family PCI Express Root Port #6";
			case 0x8086a116: return "100 Series/C230 Series Chipset Family PCI Express Root Port #7";
			case 0x8086a117: return "100 Series/C230 Series Chipset Family PCI Express Root Port #8";
			case 0x8086a118: return "100 Series/C230 Series Chipset Family PCI Express Root Port #9";
			case 0x8086a119: return "100 Series/C230 Series Chipset Family PCI Express Root Port #10";
			case 0x8086a11a: return "100 Series/C230 Series Chipset Family PCI Express Root Port #11";
			case 0x8086a11b: return "100 Series/C230 Series Chipset Family PCI Express Root Port #12";
			case 0x8086a11c: return "100 Series/C230 Series Chipset Family PCI Express Root Port #13";
			case 0x8086a11d: return "100 Series/C230 Series Chipset Family PCI Express Root Port #14";
			case 0x8086a11e: return "100 Series/C230 Series Chipset Family PCI Express Root Port #15";
			case 0x8086a11f: return "100 Series/C230 Series Chipset Family PCI Express Root Port #16";
			case 0x8086a120: return "100 Series/C230 Series Chipset Family P2SB";
			case 0x8086a121: return "100 Series/C230 Series Chipset Family Power Management Controller";
			case 0x8086a122: return "Sunrise Point-H cAVS";
			case 0x8086a123: return "100 Series/C230 Series Chipset Family SMBus";
			case 0x8086a124: return "100 Series/C230 Series Chipset Family SPI Controller";
			case 0x8086a125: return "100 Series/C230 Series Chipset Family Gigabit Ethernet Controller";
			case 0x8086a126: return "100 Series/C230 Series Chipset Family Trace Hub";
			case 0x8086a127: return "100 Series/C230 Series Chipset Family Serial IO UART #0";
			case 0x8086a128: return "100 Series/C230 Series Chipset Family Serial IO UART #1";
			case 0x8086a129: return "100 Series/C230 Series Chipset Family Serial IO GSPI #0";
			case 0x8086a12a: return "100 Series/C230 Series Chipset Family Serial IO GSPI #1";
			case 0x8086a12f: return "100 Series/C230 Series Chipset Family USB 3.0 xHCI Controller";
			case 0x8086a130: return "100 Series/C230 Series Chipset Family USB Device Controller (OTG)";
			case 0x8086a131: return "100 Series/C230 Series Chipset Family Thermal Subsystem";
			case 0x8086a133: return "Sunrise Point-H Northpeak ACPI Function";
			case 0x8086a135: return "100 Series/C230 Series Chipset Family Integrated Sensor Hub";
			case 0x8086a13a: return "100 Series/C230 Series Chipset Family MEI Controller #1";
			case 0x8086a13b: return "100 Series/C230 Series Chipset Family MEI Controller #2";
			case 0x8086a13c: return "100 Series/C230 Series Chipset Family IDE Redirection";
			case 0x8086a13d: return "100 Series/C230 Series Chipset Family KT Redirection";
			case 0x8086a13e: return "100 Series/C230 Series Chipset Family MEI Controller #3";
			case 0x8086a140: return "Sunrise Point-H LPC Controller";
			case 0x8086a141: return "Sunrise Point-H LPC Controller";
			case 0x8086a142: return "Sunrise Point-H LPC Controller";
			case 0x8086a143: return "H110 Chipset LPC/eSPI Controller";
			case 0x8086a144: return "H170 Chipset LPC/eSPI Controller";
			case 0x8086a145: return "Z170 Chipset LPC/eSPI Controller";
			case 0x8086a146: return "Q170 Chipset LPC/eSPI Controller";
			case 0x8086a147: return "Q150 Chipset LPC/eSPI Controller";
			case 0x8086a148: return "B150 Chipset LPC/eSPI Controller";
			case 0x8086a149: return "C236 Chipset LPC/eSPI Controller";
			case 0x8086a14a: return "C232 Chipset LPC/eSPI Controller";
			case 0x8086a14b: return "Sunrise Point-H LPC Controller";
			case 0x8086a14c: return "Sunrise Point-H LPC Controller";
			case 0x8086a14d: return "QM170 Chipset LPC/eSPI Controller";
			case 0x8086a14e: return "HM170 Chipset LPC/eSPI Controller";
			case 0x8086a14f: return "Sunrise Point-H LPC Controller";
			case 0x8086a150: return "CM236 Chipset LPC/eSPI Controller";
			case 0x8086a151: return "Sunrise Point-H LPC Controller";
			case 0x8086a152: return "HM175 Chipset LPC/eSPI Controller";
			case 0x8086a153: return "QM175 Chipset LPC/eSPI Controller";
			case 0x8086a154: return "CM238 Chipset LPC/eSPI Controller";
			case 0x8086a155: return "Sunrise Point-H LPC Controller";
			case 0x8086a156: return "Sunrise Point-H LPC Controller";
			case 0x8086a157: return "Sunrise Point-H LPC Controller";
			case 0x8086a158: return "Sunrise Point-H LPC Controller";
			case 0x8086a159: return "Sunrise Point-H LPC Controller";
			case 0x8086a15a: return "Sunrise Point-H LPC Controller";
			case 0x8086a15b: return "Sunrise Point-H LPC Controller";
			case 0x8086a15c: return "Sunrise Point-H LPC Controller";
			case 0x8086a15d: return "Sunrise Point-H LPC Controller";
			case 0x8086a15e: return "Sunrise Point-H LPC Controller";
			case 0x8086a15f: return "Sunrise Point-H LPC Controller";
			case 0x8086a160: return "100 Series/C230 Series Chipset Family Serial IO I2C Controller #0";
			case 0x8086a161: return "100 Series/C230 Series Chipset Family Serial IO I2C Controller #1";
			case 0x8086a162: return "100 Series/C230 Series Chipset Family Serial IO I2C Controller #2";
			case 0x8086a163: return "100 Series/C230 Series Chipset Family Serial IO I2C Controller #3";
			case 0x8086a166: return "100 Series/C230 Series Chipset Family Serial IO UART Controller #2";
			case 0x8086a167: return "100 Series/C230 Series Chipset Family PCI Express Root Port #17";
			case 0x8086a168: return "100 Series/C230 Series Chipset Family PCI Express Root Port #18";
			case 0x8086a169: return "100 Series/C230 Series Chipset Family PCI Express Root Port #19";
			case 0x8086a16a: return "100 Series/C230 Series Chipset Family PCI Express Root Port #20";
			case 0x8086a170: return "100 Series/C230 Series Chipset Family HD Audio Controller";
			case 0x8086a171: return "CM238 HD Audio Controller";
			case 0x8086a182: return "C620 Series Chipset Family SATA Controller [AHCI mode]";
			case 0x8086a186: return "C620 Series Chipset Family SATA Controller [RAID mode]";
			case 0x8086a190: return "C620 Series Chipset Family PCI Express Root Port #1";
			case 0x8086a191: return "C620 Series Chipset Family PCI Express Root Port #2";
			case 0x8086a192: return "C620 Series Chipset Family PCI Express Root Port #3";
			case 0x8086a193: return "C620 Series Chipset Family PCI Express Root Port #4";
			case 0x8086a194: return "C620 Series Chipset Family PCI Express Root Port #5";
			case 0x8086a195: return "C620 Series Chipset Family PCI Express Root Port #6";
			case 0x8086a196: return "C620 Series Chipset Family PCI Express Root Port #7";
			case 0x8086a197: return "C620 Series Chipset Family PCI Express Root Port #8";
			case 0x8086a198: return "C620 Series Chipset Family PCI Express Root Port #9";
			case 0x8086a199: return "C620 Series Chipset Family PCI Express Root Port #10";
			case 0x8086a19a: return "C620 Series Chipset Family PCI Express Root Port #11";
			case 0x8086a19b: return "C620 Series Chipset Family PCI Express Root Port #12";
			case 0x8086a19c: return "C620 Series Chipset Family PCI Express Root Port #13";
			case 0x8086a19d: return "C620 Series Chipset Family PCI Express Root Port #14";
			case 0x8086a19e: return "C620 Series Chipset Family PCI Express Root Port #15";
			case 0x8086a19f: return "C620 Series Chipset Family PCI Express Root Port #16";
			case 0x8086a1a0: return "C620 Series Chipset Family P2SB";
			case 0x8086a1a1: return "C620 Series Chipset Family Power Management Controller";
			case 0x8086a1a2: return "C620 Series Chipset Family cAVS";
			case 0x8086a1a3: return "C620 Series Chipset Family SMBus";
			case 0x8086a1a4: return "C620 Series Chipset Family SPI Controller";
			case 0x8086a1a6: return "C620 Series Chipset Family Trace Hub";
			case 0x8086a1af: return "C620 Series Chipset Family USB 3.0 xHCI Controller";
			case 0x8086a1b1: return "C620 Series Chipset Family Thermal Subsystem";
			case 0x8086a1ba: return "C620 Series Chipset Family MEI Controller #1";
			case 0x8086a1bb: return "C620 Series Chipset Family MEI Controller #2";
			case 0x8086a1bc: return "C620 Series Chipset Family IDE Redirection";
			case 0x8086a1bd: return "C620 Series Chipset Family KT Redirection";
			case 0x8086a1be: return "C620 Series Chipset Family MEI Controller #3";
			case 0x8086a1c1: return "C621 Series Chipset LPC/eSPI Controller";
			case 0x8086a1c2: return "C622 Series Chipset LPC/eSPI Controller";
			case 0x8086a1c3: return "C624 Series Chipset LPC/eSPI Controller";
			case 0x8086a1c4: return "C625 Series Chipset LPC/eSPI Controller";
			case 0x8086a1c5: return "C626 Series Chipset LPC/eSPI Controller";
			case 0x8086a1c6: return "C627 Series Chipset LPC/eSPI Controller";
			case 0x8086a1c7: return "C628 Series Chipset LPC/eSPI Controller";
			case 0x8086a1d2: return "C620 Series Chipset Family SSATA Controller [AHCI mode]";
			case 0x8086a1d6: return "C620 Series Chipset Family SSATA Controller [RAID mode]";
			case 0x8086a1e7: return "C620 Series Chipset Family PCI Express Root Port #17";
			case 0x8086a1e8: return "C620 Series Chipset Family PCI Express Root Port #18";
			case 0x8086a1e9: return "C620 Series Chipset Family PCI Express Root Port #19";
			case 0x8086a1ea: return "C620 Series Chipset Family PCI Express Root Port #20";
			case 0x8086a1ec: return "C620 Series Chipset Family MROM 0";
			case 0x8086a1ed: return "C620 Series Chipset Family MROM 1";
			case 0x8086a1f8: return "Lewisburg IE: HECI #1";
			case 0x8086a1f9: return "Lewisburg IE: HECI #2";
			case 0x8086a1fa: return "Lewisburg IE: IDE-r";
			case 0x8086a1fb: return "Lewisburg IE: KT Controller";
			case 0x8086a1fc: return "Lewisburg IE: HECI #3";
			case 0x8086a202: return "Lewisburg SATA Controller [AHCI mode]";
			case 0x8086a206: return "Lewisburg SATA Controller [RAID mode]";
			case 0x8086a223: return "Lewisburg SMBus";
			case 0x8086a224: return "Lewisburg SPI Controller";
			case 0x8086a242: return "Lewisburg LPC or eSPI Controller";
			case 0x8086a243: return "Lewisburg LPC or eSPI Controller";
			case 0x8086a252: return "Lewisburg SSATA Controller [AHCI mode]";
			case 0x8086a256: return "Lewisburg SSATA Controller [RAID mode]";
			case 0x8086a282: return "200 Series PCH SATA controller [AHCI mode]";
			case 0x8086a286: return "200 Series PCH SATA controller [RAID mode]";
			case 0x8086a290: return "200 Series PCH PCI Express Root Port #1";
			case 0x8086a291: return "200 Series PCH PCI Express Root Port #2";
			case 0x8086a292: return "200 Series PCH PCI Express Root Port #3";
			case 0x8086a293: return "200 Series PCH PCI Express Root Port #4";
			case 0x8086a294: return "200 Series PCH PCI Express Root Port #5";
			case 0x8086a295: return "200 Series PCH PCI Express Root Port #6";
			case 0x8086a296: return "200 Series PCH PCI Express Root Port #7";
			case 0x8086a297: return "200 Series PCH PCI Express Root Port #8";
			case 0x8086a298: return "200 Series PCH PCI Express Root Port #9";
			case 0x8086a299: return "200 Series PCH PCI Express Root Port #10";
			case 0x8086a29a: return "200 Series PCH PCI Express Root Port #11";
			case 0x8086a29b: return "200 Series PCH PCI Express Root Port #12";
			case 0x8086a29c: return "200 Series PCH PCI Express Root Port #13";
			case 0x8086a29d: return "200 Series PCH PCI Express Root Port #14";
			case 0x8086a29e: return "200 Series PCH PCI Express Root Port #15";
			case 0x8086a29f: return "200 Series PCH PCI Express Root Port #16";
			case 0x8086a2a0: return "200 Series/Z370 Chipset Family P2SB";
			case 0x8086a2a1: return "200 Series/Z370 Chipset Family Power Management Controller";
			case 0x8086a2a3: return "200 Series/Z370 Chipset Family SMBus Controller";
			case 0x8086a2a4: return "200 Series/Z370 Chipset Family SPI Controller";
			case 0x8086a2a5: return "200 Series/Z370 Chipset Family Gigabit Ethernet Controller";
			case 0x8086a2a6: return "200 Series/Z370 Chipset Family Trace Hub";
			case 0x8086a2a7: return "200 Series/Z370 Chipset Family Serial IO UART Controller #0";
			case 0x8086a2a8: return "200 Series/Z370 Chipset Family Serial IO UART Controller #1";
			case 0x8086a2a9: return "200 Series/Z370 Chipset Family Serial IO SPI Controller #0";
			case 0x8086a2aa: return "200 Series/Z370 Chipset Family Serial IO SPI Controller #1";
			case 0x8086a2af: return "200 Series/Z370 Chipset Family USB 3.0 xHCI Controller";
			case 0x8086a2b1: return "200 Series PCH Thermal Subsystem";
			case 0x8086a2ba: return "200 Series PCH CSME HECI #1";
			case 0x8086a2bb: return "200 Series PCH CSME HECI #2";
			case 0x8086a2c4: return "200 Series PCH LPC Controller (H270)";
			case 0x8086a2c5: return "200 Series PCH LPC Controller (Z270)";
			case 0x8086a2c6: return "200 Series PCH LPC Controller (Q270)";
			case 0x8086a2c7: return "200 Series PCH LPC Controller (Q250)";
			case 0x8086a2c8: return "200 Series PCH LPC Controller (B250)";
			case 0x8086a2c9: return "Z370 Chipset LPC/eSPI Controller";
			case 0x8086a2d2: return "X299 Chipset LPC/eSPI Controller";
			case 0x8086a2d3: return "C422 Chipset LPC/eSPI Controller";
			case 0x8086a2e0: return "200 Series PCH Serial IO I2C Controller #0";
			case 0x8086a2e1: return "200 Series PCH Serial IO I2C Controller #1";
			case 0x8086a2e2: return "200 Series PCH Serial IO I2C Controller #2";
			case 0x8086a2e3: return "200 Series PCH Serial IO I2C Controller #3";
			case 0x8086a2e6: return "200 Series PCH Serial IO UART Controller #2";
			case 0x8086a2e7: return "200 Series PCH PCI Express Root Port #17";
			case 0x8086a2e8: return "200 Series PCH PCI Express Root Port #18";
			case 0x8086a2e9: return "200 Series PCH PCI Express Root Port #19";
			case 0x8086a2ea: return "200 Series PCH PCI Express Root Port #20";
			case 0x8086a2eb: return "200 Series PCH PCI Express Root Port #21";
			case 0x8086a2ec: return "200 Series PCH PCI Express Root Port #22";
			case 0x8086a2ed: return "200 Series PCH PCI Express Root Port #23";
			case 0x8086a2ee: return "200 Series PCH PCI Express Root Port #24";
			case 0x8086a2f0: return "200 Series PCH HD Audio";
			case 0x8086a304: return "H370 Chipset LPC/eSPI Controller";
			case 0x8086a305: return "Z390 Chipset LPC/eSPI Controller";
			case 0x8086a306: return "Q370 Chipset LPC/eSPI Controller";
			case 0x8086a309: return "Cannon Point-LP LPC Controller";
			case 0x8086a30c: return "QM370 Chipset LPC/eSPI Controller";
			case 0x8086a30d: return "HM470 Chipset LPC/eSPI Controller";
			case 0x8086a30e: return "Cannon Lake LPC Controller";
			case 0x8086a323: return "Cannon Lake PCH SMBus Controller";
			case 0x8086a324: return "Cannon Lake PCH SPI Controller";
			case 0x8086a328: return "Cannon Lake PCH Serial IO UART Host Controller";
			case 0x8086a32b: return "Cannon Lake PCH SPI Host Controller";
			case 0x8086a32c: return "Cannon Lake PCH PCI Express Root Port #21";
			case 0x8086a32d: return "Cannon Lake PCH PCI Express Root Port #22";
			case 0x8086a32e: return "Cannon Lake PCH PCI Express Root Port #23";
			case 0x8086a32f: return "Cannon Lake PCH PCI Express Root Port #24";
			case 0x8086a330: return "Cannon Lake PCH PCI Express Root Port #9";
			case 0x8086a331: return "Cannon Lake PCH PCI Express Root Port #10";
			case 0x8086a332: return "Cannon Lake PCH PCI Express Root Port #11";
			case 0x8086a333: return "Cannon Lake PCH PCI Express Root Port #12";
			case 0x8086a334: return "Cannon Lake PCH PCI Express Root Port #13";
			case 0x8086a335: return "Cannon Lake PCH PCI Express Root Port #14";
			case 0x8086a336: return "Cannon Lake PCH PCI Express Root Port #15";
			case 0x8086a337: return "Cannon Lake PCH PCI Express Root Port #16";
			case 0x8086a338: return "Cannon Lake PCH PCI Express Root Port #1";
			case 0x8086a339: return "Cannon Lake PCH PCI Express Root Port #2";
			case 0x8086a33a: return "Cannon Lake PCH PCI Express Root Port #3";
			case 0x8086a33b: return "Cannon Lake PCH PCI Express Root Port #4";
			case 0x8086a33c: return "Cannon Lake PCH PCI Express Root Port #5";
			case 0x8086a33d: return "Cannon Lake PCH PCI Express Root Port #6";
			case 0x8086a33e: return "Cannon Lake PCH PCI Express Root Port #7";
			case 0x8086a33f: return "Cannon Lake PCH PCI Express Root Port #8";
			case 0x8086a340: return "Cannon Lake PCH PCI Express Root Port #17";
			case 0x8086a341: return "Cannon Lake PCH PCI Express Root Port #18";
			case 0x8086a342: return "Cannon Lake PCH PCI Express Root Port #19";
			case 0x8086a343: return "Cannon Lake PCH PCI Express Root Port #20";
			case 0x8086a348: return "Cannon Lake PCH cAVS";
			case 0x8086a352: return "Cannon Lake PCH SATA AHCI Controller";
			case 0x8086a353: return "Cannon Lake Mobile PCH SATA AHCI Controller";
			case 0x8086a360: return "Cannon Lake PCH HECI Controller";
			case 0x8086a363: return "Cannon Lake PCH Active Management Technology - SOL";
			case 0x8086a364: return "Cannon Lake PCH HECI Controller #2";
			case 0x8086a368: return "Cannon Lake PCH Serial IO I2C Controller #0";
			case 0x8086a369: return "Cannon Lake PCH Serial IO I2C Controller #1";
			case 0x8086a36a: return "Cannon Lake PCH Serial IO I2C Controller #2";
			case 0x8086a36b: return "Cannon Lake PCH Serial IO I2C Controller #3";
			case 0x8086a36d: return "Cannon Lake PCH USB 3.1 xHCI Host Controller";
			case 0x8086a36f: return "Cannon Lake PCH Shared SRAM";
			case 0x8086a370: return "Cannon Lake PCH CNVi WiFi";
			case 0x8086a379: return "Cannon Lake PCH Thermal Controller";
			case 0x8086a382: return "400 Series Chipset Family SATA AHCI Controller";
			case 0x8086a3a1: return "Memory controller";
			case 0x8086a3a3: return "Comet Lake PCH-V SMBus Host Controller";
			case 0x8086a3af: return "Comet Lake PCH-V USB Controller";
			case 0x8086a3b1: return "Comet Lake PCH-V Thermal Subsystem";
			case 0x8086a620: return "6400/6402 Advanced Memory Buffer (AMB)";
			case 0x8086abc0: return "Omni-Path Fabric Switch Silicon 100 Series";
			case 0x8086b152: return "21152 PCI-to-PCI Bridge";
			case 0x8086b154: return "21154 PCI-to-PCI Bridge";
			case 0x8086b555: return "21555 Non transparent PCI-to-PCI Bridge";
			case 0x8086d130: return "Core Processor DMI";
			case 0x8086d131: return "Core Processor DMI";
			case 0x8086d132: return "Core Processor DMI";
			case 0x8086d133: return "Core Processor DMI";
			case 0x8086d134: return "Core Processor DMI";
			case 0x8086d135: return "Core Processor DMI";
			case 0x8086d136: return "Core Processor DMI";
			case 0x8086d137: return "Core Processor DMI";
			case 0x8086d138: return "Core Processor PCI Express Root Port 1";
			case 0x8086d139: return "Core Processor PCI Express Root Port 2";
			case 0x8086d13a: return "Core Processor PCI Express Root Port 3";
			case 0x8086d13b: return "Core Processor PCI Express Root Port 4";
			case 0x8086d150: return "Core Processor QPI Link";
			case 0x8086d151: return "Core Processor QPI Routing and Protocol Registers";
			case 0x8086d155: return "Core Processor System Management Registers";
			case 0x8086d156: return "Core Processor Semaphore and Scratchpad Registers";
			case 0x8086d157: return "Core Processor System Control and Status Registers";
			case 0x8086d158: return "Core Processor Miscellaneous Registers";
			case 0x8086f1a5: return "SSD 600P Series";
			case 0x8086f1a6: return "SSD Pro 7600p/760p/E 6100p Series";
			case 0x8086f1a8: return "SSD 660P Series";
			case 0x80880101: return "WX1860A2 Gigabit Ethernet Controller";
			case 0x80880102: return "WX1860A2S Gigabit Ethernet Controller";
			case 0x80880103: return "WX1860A4 Gigabit Ethernet Controller";
			case 0x80880104: return "WX1860A4S Gigabit Ethernet Controller";
			case 0x80880105: return "WX1860AL2 Gigabit Ethernet Controller";
			case 0x80880106: return "WX1860AL2S Gigabit Ethernet Controller";
			case 0x80880107: return "WX1860AL4 Gigabit Ethernet Controller";
			case 0x80880108: return "WX1860AL4S Gigabit Ethernet Controller";
			case 0x80880109: return "WX1860-LC Gigabit Ethernet Controller";
			case 0x8088010a: return "WX1860A1 Gigabit Ethernet Controller";
			case 0x8088010b: return "WX1860AL1 Gigabit Ethernet Controller";
			case 0x80880111: return "WX1860A2 Ethernet Controller Virtual Function";
			case 0x80880113: return "WX1860A4 Ethernet Controller Virtual Function";
			case 0x80880115: return "WX1860AL2 Ethernet Controller Virtual Function";
			case 0x80880117: return "WX1860AL4 Ethernet Controller Virtual Function";
			case 0x80880119: return "WX1860-LC Gigabit Ethernet Controller Virtual Function";
			case 0x8088011a: return "WX1860A1 Gigabit Ethernet Controller Virtual Function";
			case 0x8088011b: return "WX1860AL1 Gigabit Ethernet Controller Virtual Function";
			case 0x80881000: return "Ethernet Controller RP1000 Virtual Function for 10GbE SFP+";
			case 0x80881001: return "Ethernet Controller RP1000 for 10GbE SFP+";
			case 0x80882000: return "Ethernet Controller RP2000 Virtual Function for 10GbE SFP+";
			case 0x80882001: return "Ethernet Controller RP2000 for 10GbE SFP+";
			case 0x80eebeef: return "VirtualBox Graphics Adapter";
			case 0x80eecafe: return "VirtualBox Guest Service";
			case 0x86861010: return "vSMP Foundation controller [vSMP CTL]";
			case 0x86861011: return "vSMP Foundation MEX/FLX controller [vSMP CTL]";
			case 0x88002008: return "Video assistant component";
			case 0x88202724: return "Mako Front Side Motor Controller [cPCI]";
			case 0x8c4a1980: return "W89C940 misprogrammed [ne2k]";
			case 0x8e2e3000: return "ET32P2";
			case 0x90040078: return "AHA-2940U_CN";
			case 0x90041078: return "AIC-7810";
			case 0x90041160: return "AIC-1160 [Family Fibre Channel Adapter]";
			case 0x90042178: return "AIC-7821";
			case 0x90043860: return "AHA-2930CU";
			case 0x90043b78: return "AHA-4844W/4844UW";
			case 0x90045075: return "AIC-755x";
			case 0x90045078: return "AIC-7850T/7856T [AVA-2902/4/6 / AHA-2910]";
			case 0x90045175: return "AIC-755x";
			case 0x90045178: return "AIC-7851";
			case 0x90045275: return "AIC-755x";
			case 0x90045278: return "AIC-7852";
			case 0x90045375: return "AIC-755x";
			case 0x90045378: return "AIC-7850";
			case 0x90045475: return "AIC-755x";
			case 0x90045478: return "AIC-7850";
			case 0x90045575: return "AVA-2930";
			case 0x90045578: return "AIC-7855";
			case 0x90045647: return "ANA-7711 TCP Offload Engine";
			case 0x90045675: return "AIC-755x";
			case 0x90045678: return "AIC-7856";
			case 0x90045775: return "AIC-755x";
			case 0x90045778: return "AIC-7850";
			case 0x90045800: return "AIC-5800";
			case 0x90045900: return "ANA-5910/5930/5940 ATM155 & 25 LAN Adapter";
			case 0x90045905: return "ANA-5910A/5930A/5940A ATM Adapter";
			case 0x90046038: return "AIC-3860";
			case 0x90046075: return "AIC-1480 / APA-1480";
			case 0x90046078: return "AIC-7860";
			case 0x90046178: return "AIC-7861";
			case 0x90046278: return "AIC-7860";
			case 0x90046378: return "AIC-7860";
			case 0x90046478: return "AIC-786x";
			case 0x90046578: return "AIC-786x";
			case 0x90046678: return "AIC-786x";
			case 0x90046778: return "AIC-786x";
			case 0x90046915: return "ANA620xx/ANA69011A";
			case 0x90047078: return "AHA-294x / AIC-7870";
			case 0x90047178: return "AIC-7870P/7871 [AHA-2940/W/S76]";
			case 0x90047278: return "AHA-3940/3940W / AIC-7872";
			case 0x90047378: return "AHA-3985 / AIC-7873";
			case 0x90047478: return "AHA-2944/2944W / AIC-7874";
			case 0x90047578: return "AHA-3944/3944W / AIC-7875";
			case 0x90047678: return "AHA-4944W/UW / AIC-7876";
			case 0x90047710: return "ANA-7711F Network Accelerator Card (NAC) - Optical";
			case 0x90047711: return "ANA-7711C Network Accelerator Card (NAC) - Copper";
			case 0x90047778: return "AIC-787x";
			case 0x90047810: return "AIC-7810";
			case 0x90047815: return "AIC-7815 RAID+Memory Controller IC";
			case 0x90047850: return "AIC-7850";
			case 0x90047855: return "AHA-2930";
			case 0x90047860: return "AIC-7860";
			case 0x90047870: return "AIC-7870";
			case 0x90047871: return "AHA-2940";
			case 0x90047872: return "AHA-3940";
			case 0x90047873: return "AHA-3980";
			case 0x90047874: return "AHA-2944";
			case 0x90047880: return "AIC-7880P";
			case 0x90047890: return "AIC-7890";
			case 0x90047891: return "AIC-789x";
			case 0x90047892: return "AIC-789x";
			case 0x90047893: return "AIC-789x";
			case 0x90047894: return "AIC-789x";
			case 0x90047895: return "AHA-2940U/UW / AHA-39xx / AIC-7895";
			case 0x90047896: return "AIC-789x";
			case 0x90047897: return "AIC-789x";
			case 0x90048078: return "AIC-7880U";
			case 0x90048178: return "AIC-7870P/7881U [AHA-2940U/UW/D/S76]";
			case 0x90048278: return "AHA-3940U/UW/UWD / AIC-7882U";
			case 0x90048378: return "AHA-3940U/UW / AIC-7883U";
			case 0x90048478: return "AHA-2944UW / AIC-7884U";
			case 0x90048578: return "AHA-3944U/UWD / AIC-7885";
			case 0x90048678: return "AHA-4944UW / AIC-7886";
			case 0x90048778: return "AHA-2940UW Pro / AIC-788x";
			case 0x90048878: return "AHA-2930UW / AIC-7888";
			case 0x90048b78: return "ABA-1030";
			case 0x9004ec78: return "AHA-4944W/UW";
			case 0x90050010: return "AHA-2940U2/U2W";
			case 0x90050011: return "AHA-2930U2";
			case 0x90050013: return "78902";
			case 0x9005001f: return "AHA-2940U2/U2W / 7890/7891";
			case 0x90050020: return "AIC-7890";
			case 0x9005002f: return "AIC-7890";
			case 0x90050030: return "AIC-7890";
			case 0x9005003f: return "AIC-7890";
			case 0x90050050: return "AHA-3940U2x/395U2x";
			case 0x90050051: return "AHA-3950U2D";
			case 0x90050053: return "AIC-7896 SCSI Controller";
			case 0x9005005f: return "AIC-7896U2/7897U2";
			case 0x90050080: return "AIC-7892A U160/m";
			case 0x90050081: return "AIC-7892B U160/m";
			case 0x90050083: return "AIC-7892D U160/m";
			case 0x9005008f: return "AIC-7892P U160/m";
			case 0x90050092: return "AVC-2010 [VideoH!]";
			case 0x90050093: return "AVC-2410 [VideoH!]";
			case 0x900500c0: return "AHA-3960D / AIC-7899A U160/m";
			case 0x900500c1: return "AIC-7899B U160/m";
			case 0x900500c3: return "AIC-7899D U160/m";
			case 0x900500c5: return "RAID subsystem HBA";
			case 0x900500cf: return "AIC-7899P U160/m";
			case 0x90050241: return "Serial ATA II RAID 1420SA";
			case 0x90050242: return "Serial ATA II RAID 1220SA";
			case 0x90050243: return "Serial ATA II RAID 1430SA";
			case 0x90050244: return "eSATA II RAID 1225SA";
			case 0x90050250: return "ServeRAID Controller";
			case 0x90050279: return "ServeRAID 6M";
			case 0x90050283: return "AAC-RAID";
			case 0x90050284: return "AAC-RAID";
			case 0x90050285: return "AAC-RAID";
			case 0x90050286: return "AAC-RAID (Rocket)";
			case 0x9005028b: return "Series 6 - 6G SAS/PCIe 2";
			case 0x9005028c: return "Series 7 6G SAS/PCIe 3";
			case 0x9005028d: return "Series 8 12G SAS/PCIe 3";
			case 0x9005028f: return "Smart Storage PQI SAS";
			case 0x90050410: return "AIC-9410W SAS (Razor HBA RAID)";
			case 0x90050412: return "AIC-9410W SAS (Razor HBA non-RAID)";
			case 0x90050415: return "ASC-58300 SAS (Razor-External HBA RAID)";
			case 0x90050416: return "ASC-58300 SAS (Razor-External HBA non-RAID)";
			case 0x9005041e: return "AIC-9410W SAS (Razor ASIC non-RAID)";
			case 0x9005041f: return "AIC-9410W SAS (Razor ASIC RAID)";
			case 0x9005042f: return "VSC7250/7251 SAS (Aurora ASIC non-RAID)";
			case 0x90050430: return "AIC-9405W SAS (Razor-Lite HBA RAID)";
			case 0x90050432: return "AIC-9405W SAS (Razor-Lite HBA non-RAID)";
			case 0x9005043e: return "AIC-9405W SAS (Razor-Lite ASIC non-RAID)";
			case 0x9005043f: return "AIC-9405W SAS (Razor-Lite ASIC RAID)";
			case 0x90050450: return "ASC-1405 Unified Serial HBA";
			case 0x90050500: return "Obsidian chipset SCSI controller";
			case 0x90050503: return "Scamp chipset SCSI controller";
			case 0x90050910: return "AUA-3100B";
			case 0x9005091e: return "AUA-3100B";
			case 0x90058000: return "ASC-29320A U320";
			case 0x9005800f: return "AIC-7901 U320";
			case 0x90058010: return "ASC-39320 U320";
			case 0x90058011: return "ASC-39320D";
			case 0x90058012: return "ASC-29320 U320";
			case 0x90058013: return "ASC-29320B U320";
			case 0x90058014: return "ASC-29320LP U320";
			case 0x90058015: return "ASC-39320B U320";
			case 0x90058016: return "ASC-39320A U320";
			case 0x90058017: return "ASC-29320ALP U320";
			case 0x9005801c: return "ASC-39320D U320";
			case 0x9005801d: return "AIC-7902B U320";
			case 0x9005801e: return "AIC-7901A U320";
			case 0x9005801f: return "AIC-7902 U320";
			case 0x90058080: return "ASC-29320A U320 w/HostRAID";
			case 0x90058081: return "PMC-Sierra PM8001 SAS HBA [Series 6H]";
			case 0x90058088: return "PMC-Sierra PM8018 SAS HBA [Series 7H]";
			case 0x90058089: return "PMC-Sierra PM8019 SAS encryption HBA [Series 7He]";
			case 0x9005808f: return "AIC-7901 U320 w/HostRAID";
			case 0x90058090: return "ASC-39320 U320 w/HostRAID";
			case 0x90058091: return "ASC-39320D U320 w/HostRAID";
			case 0x90058092: return "ASC-29320 U320 w/HostRAID";
			case 0x90058093: return "ASC-29320B U320 w/HostRAID";
			case 0x90058094: return "ASC-29320LP U320 w/HostRAID";
			case 0x90058095: return "ASC-39320(B) U320 w/HostRAID";
			case 0x90058096: return "ASC-39320A U320 w/HostRAID";
			case 0x90058097: return "ASC-29320ALP U320 w/HostRAID";
			case 0x9005809c: return "ASC-39320D(B) U320 w/HostRAID";
			case 0x9005809d: return "AIC-7902(B) U320 w/HostRAID";
			case 0x9005809e: return "AIC-7901A U320 w/HostRAID";
			case 0x9005809f: return "AIC-7902 U320 w/HostRAID";
			case 0x907f2015: return "IDE-2015PL";
			case 0x94126565: return "6565";
			case 0x94136010: return "SOLO6010 MPEG-4 Video encoder/decoder";
			case 0x94136110: return "SOLO6110 H.264 Video encoder/decoder";
			case 0x96180001: return "JusonTech Gigabit Ethernet Controller";
			case 0x96996565: return "6565";
			case 0x97109250: return "PCI-to-PCI bridge [MCS9250]";
			case 0x97109805: return "PCI 1 port parallel adapter";
			case 0x97109815: return "PCI 9815 Multi-I/O Controller";
			case 0x97109820: return "PCI 9820 Multi-I/O Controller";
			case 0x97109835: return "PCI 9835 Multi-I/O Controller";
			case 0x97109845: return "PCI 9845 Multi-I/O Controller";
			case 0x97109855: return "PCI 9855 Multi-I/O Controller";
			case 0x97109865: return "PCI 9865 Multi-I/O Controller";
			case 0x97109900: return "MCS9900 Multi-I/O Controller";
			case 0x97109901: return "PCIe 9901 Multi-I/O Controller";
			case 0x97109904: return "4-Port PCIe Serial Adapter";
			case 0x97109912: return "PCIe 9912 Multi-I/O Controller";
			case 0x97109922: return "MCS9922 PCIe Multi-I/O Controller";
			case 0x97109990: return "MCS9990 PCIe to 4‐Port USB 2.0 Host Controller";
			case 0x99020001: return "SG2010 PCI over Starfabric Bridge";
			case 0x99020002: return "SG2010 PCI to Starfabric Gateway";
			case 0x99020003: return "SG1010 Starfabric Switch and PCI Bridge";
			case 0x9d320000: return "STAR1000 PCIe NVMe SSD Controller";
			case 0x9d321001: return "STAR1000P PCIe NVMe SSD Controller";
			case 0x9d321201: return "STAR1200C NVMe SSD";
			case 0x9d321202: return "STAR1200I NVMe SSD";
			case 0x9d321203: return "STAR1200L NVMe SSD";
			case 0x9d321204: return "STAR1200E NVMe SSD";
			case 0xa7270013: return "3CRPAG175 Wireless PC Card";
			case 0xa7276803: return "3CRDAG675B Wireless 11a/b/g Adapter";
			case 0xaaaa0001: return "H1 PCIe over fiber optic host controller";
			case 0xaaaa0002: return "R1BP1 PCIe over fiber optic expansion chassis";
			case 0xaecb6250: return "VITC/LTC Timecode Reader card [PCI-VLTC/RDR]";
			case 0xaffe01e1: return "PCI1E1 1-port ISDN E1 interface";
			case 0xaffe02e1: return "PCI2E1 2-port ISDN E1 interface";
			case 0xaffe450e: return "PCI4S0EC 4-port ISDN S0 interface";
			case 0xaffedead: return "Sirrix.PCI4S0 4-port ISDN S0 interface";
			case 0xbdbda106: return "Multibridge Extreme";
			case 0xbdbda117: return "Intensity Pro";
			case 0xbdbda11a: return "DeckLink HD Extreme 2";
			case 0xbdbda11b: return "DeckLink SDI/Duo/Quad";
			case 0xbdbda11c: return "DeckLink HD Extreme 3";
			case 0xbdbda11d: return "DeckLink Studio";
			case 0xbdbda11e: return "DeckLink Optical Fibre";
			case 0xbdbda120: return "Decklink Studio 2";
			case 0xbdbda121: return "DeckLink HD Extreme 3D/3D+";
			case 0xbdbda124: return "Intensity Extreme";
			case 0xbdbda126: return "Intensity Shuttle";
			case 0xbdbda127: return "UltraStudio Express";
			case 0xbdbda129: return "UltraStudio Mini Recorder";
			case 0xbdbda12a: return "UltraStudio Mini Monitor";
			case 0xbdbda12d: return "UltraStudio 4K";
			case 0xbdbda12e: return "DeckLink 4K Extreme";
			case 0xbdbda12f: return "DeckLink Mini Monitor";
			case 0xbdbda130: return "DeckLink Mini Recorder";
			case 0xbdbda132: return "UltraStudio 4K";
			case 0xbdbda136: return "DeckLink 4K Extreme 12G";
			case 0xbdbda137: return "DeckLink Studio 4K";
			case 0xbdbda138: return "Decklink SDI 4K";
			case 0xbdbda139: return "Intensity Pro 4K";
			case 0xbdbda13b: return "DeckLink Micro Recorder";
			case 0xbdbda13d: return "DeckLink 4K Pro";
			case 0xbdbda13e: return "UltraStudio 4K Extreme";
			case 0xbdbda13f: return "DeckLink Quad 2";
			case 0xbdbda140: return "DeckLink Duo 2";
			case 0xbdbda141: return "UltraStudio 4K Extreme 3";
			case 0xbdbda142: return "UltraStudio HD Mini";
			case 0xbdbda143: return "DeckLink Mini Recorder 4K";
			case 0xbdbda144: return "DeckLink Mini Monitor 4K";
			case 0xbdbda148: return "DeckLink SDI Micro";
			case 0xbdbda14b: return "DeckLink 8K Pro";
			case 0xbdbda14e: return "DeckLink Quad HDMI Recorder";
			case 0xbdbda1ff: return "eGPU RX580";
			case 0xc0a92263: return "P1 NVMe PCIe SSD";
			case 0xc0a9540a: return "P2 NVMe PCIe SSD";
			case 0xcace0001: return "TurboCap Port A";
			case 0xcace0002: return "TurboCap Port B";
			case 0xcace0023: return "AirPcap N";
			case 0xcafe0003: return "Luna K3 Hardware Security Module";
			case 0xcafe0006: return "Luna PCI-e 3000 Hardware Security Module";
			case 0xcafe0007: return "Luna K6 Hardware Security Module";
			case 0xcafe0008: return "Luna K7 Hardware Security Module";
			case 0xcddd0101: return "DeepSea 1 High Speed Stereo Vision Frame Grabber";
			case 0xcddd0200: return "DeepSea 2 High Speed Stereo Vision Frame Grabber";
			case 0xd1610120: return "Wildcard TE120P single-span T1/E1/J1 card";
			case 0xd1610205: return "Wildcard TE205P/TE207P dual-span T1/E1/J1 card 5.0V";
			case 0xd1610210: return "Wildcard TE210P/TE212P dual-span T1/E1/J1 card 3.3V";
			case 0xd1610220: return "Wildcard TE220 dual-span T1/E1/J1 card 3.3V (PCI-Express)";
			case 0xd1610405: return "Wildcard TE405P/TE407P quad-span T1/E1/J1 card 5.0V";
			case 0xd1610410: return "Wildcard TE410P/TE412P quad-span T1/E1/J1 card 3.3V";
			case 0xd1610420: return "Wildcard TE420P quad-span T1/E1/J1 card 3.3V (PCI-Express)";
			case 0xd1610800: return "Wildcard TDM800P 8-port analog card";
			case 0xd1611205: return "Wildcard TE205P/TE207P dual-span T1/E1/J1 card 5.0V (u1)";
			case 0xd1611220: return "Wildcard TE220 dual-span T1/E1/J1 card 3.3V (PCI-Express) (5th gen)";
			case 0xd1611405: return "Wildcard TE405P/TE407P quad-span T1/E1/J1 card 5.0V (u1)";
			case 0xd1611410: return "Wildcard TE410P quad-span T1/E1/J1 card 3.3V (5th Gen)";
			case 0xd1611420: return "Wildcard TE420 quad-span T1/E1/J1 card 3.3V (PCI-Express) (5th gen)";
			case 0xd1611820: return "Wildcard TE820 octal-span T1/E1/J1 card 3.3V (PCI-Express)";
			case 0xd1612400: return "Wildcard TDM2400P 24-port analog card";
			case 0xd1613400: return "Wildcard TC400P transcoder base card";
			case 0xd1618000: return "Wildcard TE121 single-span T1/E1/J1 card (PCI-Express)";
			case 0xd1618001: return "Wildcard TE122 single-span T1/E1/J1 card";
			case 0xd1618002: return "Wildcard AEX800 8-port analog card (PCI-Express)";
			case 0xd1618003: return "Wildcard AEX2400 24-port analog card (PCI-Express)";
			case 0xd1618004: return "Wildcard TCE400P transcoder base card";
			case 0xd1618005: return "Wildcard TDM410 4-port analog card";
			case 0xd1618006: return "Wildcard AEX410 4-port analog card (PCI-Express)";
			case 0xd1618007: return "Hx8 Series 8-port Base Card";
			case 0xd1618008: return "Hx8 Series 8-port Base Card (PCI-Express)";
			case 0xd161800a: return "Wildcard TE133 single-span T1/E1/J1 card (PCI Express)";
			case 0xd161800b: return "Wildcard TE134 single-span T1/E1/J1 card";
			case 0xd161800c: return "Wildcard A8A 8-port analog card";
			case 0xd161800d: return "Wildcard A8B 8-port analog card (PCI-Express)";
			case 0xd161800e: return "Wildcard TE235/TE435 quad-span T1/E1/J1 card (PCI-Express)";
			case 0xd161800f: return "Wildcard A4A 4-port analog card";
			case 0xd1618010: return "Wildcard A4B 4-port analog card (PCI-Express)";
			case 0xd1618013: return "Wildcard TE236/TE436 quad-span T1/E1/J1 card";
			case 0xd161b410: return "Wildcard B410 quad-BRI card";
			case 0xd2091500: return "PAC Drive";
			case 0xd20915a2: return "SpinTrak";
			case 0xd2091601: return "AimTrak";
			case 0xd4d40601: return "PCI Mezzanine Card";
			case 0xdada0133: return "VisionRGB-X2";
			case 0xdada0139: return "VisionRGB-E1";
			case 0xdada0144: return "VisionSD8";
			case 0xdada0150: return "VisionRGB-E2";
			case 0xdada0151: return "VisionSD4+1";
			case 0xdada0159: return "VisionAV";
			case 0xdada0161: return "DGC161";
			case 0xdada0165: return "DGC165";
			case 0xdada0167: return "DGC167";
			case 0xdada0168: return "DGC168";
			case 0xdada1139: return "VisionRGB-E1S";
			case 0xdada1150: return "VisionRGB-E2S";
			case 0xdada1151: return "VisionSD4+1S";
			case 0xdada1153: return "VisionDVI-DL";
			case 0xdada1154: return "VisionSDI2";
			case 0xdcba0046: return "PCIe Altera Cyclone IV";
			case 0xdcba0047: return "VPX-RCB";
			case 0xdcba0048: return "PMC-Biserial-III-BAE9";
			case 0xdcba004e: return "PC104p-Biserial-III-NVY5";
			case 0xdcba004f: return "PC104p-Biserial-III-NVY6";
			case 0xdcba0052: return "PCIeBiSerialDb37 BA22 LVDS IO";
			case 0xdcba0066: return "PMC-OctalUART-232";
			case 0xdd010003: return "Octopus DVB Adapter";
			case 0xdd010006: return "Cine V7";
			case 0xdd010007: return "Max";
			case 0xdd010011: return "Octopus CI DVB Adapter";
			case 0xdd010201: return "Resi DVB-C Modulator";
			case 0xdeaf9050: return "PC Weasel Virtual VGA";
			case 0xdeaf9051: return "PC Weasel Serial Port";
			case 0xdeaf9052: return "PC Weasel Watchdog Timer";
			case 0xdeda4001: return "CB or MX camera";
			case 0xdeda4021: return "MT camera";
			case 0xe000e000: return "W89C940";
			case 0xe1590001: return "Tiger3XX Modem/ISDN interface";
			case 0xe1590002: return "Tiger100APC ISDN chipset";
			case 0xe4bf0ccd: return "CCD-CALYPSO";
			case 0xe4bf0cd1: return "CD1-OPERA";
			case 0xe4bf0cd2: return "CD2-BEBOP";
			case 0xe4bf0cd3: return "CD3-JIVE";
			case 0xe4bf50c1: return "PC1-GROOVE";
			case 0xe4bf50c2: return "PC2-LIMBO";
			case 0xe4bf53c1: return "SC1-ALLEGRO";
			case 0xe4bfcc47: return "CCG-RUMBA";
			case 0xe4bfcc4d: return "CCM-BOOGIE";
			case 0xea01000a: return "PCI-773 Temperature Card";
			case 0xea010032: return "PCI-730 & PC104P-30 Card";
			case 0xea01003e: return "PCI-762 Opto-Isolator Card";
			case 0xea010041: return "PCI-763 Reed Relay Card";
			case 0xea010043: return "PCI-769 Opto-Isolator Reed Relay Combo Card";
			case 0xea010046: return "PCI-766 Analog Output Card";
			case 0xea010052: return "PCI-703 Analog I/O Card";
			case 0xea010800: return "PCI-800 Digital I/O Card";
			case 0xea609896: return "Digi32";
			case 0xea609897: return "Digi32 Pro";
			case 0xea609898: return "Digi32/8";
			case 0xeace3100: return "DAG 3.10 OC-3/OC-12";
			case 0xeace3200: return "DAG 3.2x OC-3/OC-12";
			case 0xeace320e: return "DAG 3.2E Fast Ethernet";
			case 0xeace340e: return "DAG 3.4E Fast Ethernet";
			case 0xeace341e: return "DAG 3.41E Fast Ethernet";
			case 0xeace3500: return "DAG 3.5 OC-3/OC-12";
			case 0xeace351c: return "DAG 3.5ECM Fast Ethernet";
			case 0xeace360d: return "DAG 3.6D DS3";
			case 0xeace360e: return "DAG 3.6E Fast Ethernet";
			case 0xeace368e: return "DAG 3.6E Gig Ethernet";
			case 0xeace3707: return "DAG 3.7T T1/E1/J1";
			case 0xeace370d: return "DAG 3.7D DS3/E3";
			case 0xeace378e: return "DAG 3.7G Gig Ethernet";
			case 0xeace3800: return "DAG 3.8S OC-3/OC-12";
			case 0xeace4100: return "DAG 4.10 OC-48";
			case 0xeace4110: return "DAG 4.11 OC-48";
			case 0xeace4220: return "DAG 4.2 OC-48";
			case 0xeace422e: return "DAG 4.2GE Gig Ethernet";
			case 0xeace4230: return "DAG 4.2S OC-48";
			case 0xeace423e: return "DAG 4.2GE Gig Ethernet";
			case 0xeace4300: return "DAG 4.3S OC-48";
			case 0xeace430e: return "DAG 4.3GE Gig Ethernet";
			case 0xeace452e: return "DAG 4.5G2 Gig Ethernet";
			case 0xeace454e: return "DAG 4.5G4 Gig Ethernet";
			case 0xeace45b8: return "DAG 4.5Z8 Gig Ethernet";
			case 0xeace45be: return "DAG 4.5Z2 Gig Ethernet";
			case 0xeace520e: return "DAG 5.2X 10G Ethernet";
			case 0xeace521a: return "DAG 5.2SXA 10G Ethernet/OC-192";
			case 0xeace5400: return "DAG 5.4S-12 OC-3/OC-12";
			case 0xeace5401: return "DAG 5.4SG-48 Gig Ethernet/OC-3/OC-12/OC-48";
			case 0xeace540a: return "DAG 5.4GA Gig Ethernet";
			case 0xeace541a: return "DAG 5.4SA-12 OC-3/OC-12";
			case 0xeace542a: return "DAG 5.4SGA-48 Gig Ethernet/OC-3/OC-12/OC-48";
			case 0xeace6000: return "DAG 6.0SE 10G Ethernet/OC-192";
			case 0xeace6100: return "DAG 6.1SE 10G Ethernet/OC-192";
			case 0xeace6200: return "DAG 6.2SE 10G Ethernet/OC-192";
			case 0xeace7100: return "DAG 7.1S OC-3/OC-12";
			case 0xeace7400: return "DAG 7.4S OC-3/OC-12";
			case 0xeace7401: return "DAG 7.4S48 OC-48";
			case 0xeace752e: return "DAG 7.5G2 Gig Ethernet";
			case 0xeace754e: return "DAG 7.5G4 Gig Ethernet";
			case 0xeace8100: return "DAG 8.1X 10G Ethernet";
			case 0xeace8101: return "DAG 8.1SX 10G Ethernet/OC-192";
			case 0xeace8102: return "DAG 8.1X 10G Ethernet";
			case 0xeace820e: return "DAG 8.2X 10G Ethernet";
			case 0xeace820f: return "DAG 8.2X 10G Ethernet (2nd bus)";
			case 0xeace8400: return "DAG 8.4I Infiniband x4 SDR";
			case 0xeace8500: return "DAG 8.5I Infiniband x4 DDR";
			case 0xeace9200: return "DAG 9.2SX2 10G Ethernet";
			case 0xeace920e: return "DAG 9.2X2 10G Ethernet";
			case 0xeace9540: return "DAG 9.5G4 Gig Ethernet";
			case 0xeace954f: return "DAG 9.5G4F Gig Ethernet";
			case 0xeacea120: return "DAG 10X2-P 10G Ethernet";
			case 0xeacea12e: return "DAG 10X2-S 10G Ethernet";
			case 0xeacea140: return "DAG 10X4-P 10/40G Ethernet";
			case 0xeacea14e: return "DAG 10X4-S 10/40G Ethernet";
			case 0xeaceeace: return "vDAG virtual device";
			case 0xec80ec00: return "F5D6000";
			case 0xedd8a091: return "1000PV [Stingray]";
			case 0xedd8a099: return "2000PV [Stingray]";
			case 0xedd8a0a1: return "2000MT";
			case 0xedd8a0a9: return "2000MI";
			case 0xf15e0000: return "FU740-C000 RISC-V SoC PCI Express x8 to AXI4 Bridge";
			case 0xf1d0c0fe: return "Xena HS/HD-R";
			case 0xf1d0c0ff: return "Kona/Xena 2";
			case 0xf1d0cafe: return "Kona SD";
			case 0xf1d0cfee: return "Xena LS/SD-22-DA/SD-DA";
			case 0xf1d0dafe: return "Corvid 1";
			case 0xf1d0daff: return "KONA LHi";
			case 0xf1d0db00: return "IoExpress";
			case 0xf1d0db01: return "Corvid22";
			case 0xf1d0db02: return "Kona 3G";
			case 0xf1d0db03: return "Corvid 3G";
			case 0xf1d0db04: return "Kona 3G QUAD";
			case 0xf1d0db05: return "Kona LHe+";
			case 0xf1d0db06: return "IoXT";
			case 0xf1d0db07: return "Kona 3G P2P";
			case 0xf1d0db08: return "Kona 3G QUAD P2P";
			case 0xf1d0db09: return "Corvid 24";
			case 0xf1d0db11: return "T-Tap";
			case 0xf1d0dcaf: return "Kona HD";
			case 0xf1d0dfee: return "Xena HD-DA";
			case 0xf1d0eb07: return "Io4K";
			case 0xf1d0eb0a: return "Io4K UFC";
			case 0xf1d0eb0b: return "Kona 4";
			case 0xf1d0eb0c: return "Kona 4 UFC";
			case 0xf1d0eb0d: return "Corvid 88";
			case 0xf1d0eb0e: return "Corvid 44";
			case 0xf1d0eb16: return "Corvid HEVC";
			case 0xf1d0eb18: return "Corvid HB-R";
			case 0xf1d0eb1a: return "Kona IP 1SFP";
			case 0xf1d0eb1c: return "Kona IP 2SFP";
			case 0xf1d0eb1d: return "Io4KPlus";
			case 0xf1d0eb1e: return "IoIP";
			case 0xf1d0eb1f: return "Kona 5";
			case 0xf1d0eb23: return "Kona 1";
			case 0xf1d0eb24: return "Kona HDMI";
			case 0xf1d0eb25: return "Corvid 44 12g";
			case 0xf1d0eb26: return "T-Tap Pro";
			case 0xf1d0efac: return "Xena SD-MM/SD-22-MM";
			case 0xf1d0facd: return "Xena HD-MM";
			case 0xfa570001: return "PMC [Pattern Matching Chip]";
			case 0xfedaa0fa: return "BCM4210 iLine10 HomePNA 2.0";
			case 0xfedaa10e: return "BCM4230 iLine10 HomePNA 2.0";
			case 0xfede0003: return "TABIC PCI v3";
			case 0xfffd0101: return "PCI Event Channel Controller";
			case 0xfffe0710: return "Virtual SVGA";
			default:
				return to_hstring(deviceID);
		}
	}

	const char* GetClassName(uint8_t classCode) {
		if (classCode == 0x40)
			return "Co-Processor";
		if (classCode == 0xFF)
			return "Unassigned Class";
		return DeviceClasses[classCode];
	}

	const char* MassStorageControllerSubclassName(uint8_t subclassCode) {
		switch (subclassCode){
			case 0x00:
				return "SCSI Bus Controller";
			case 0x01:
				return "IDE Controller";
			case 0x02:
				return "Floppy Disk Controller";
			case 0x03:
				return "IPI Bus Controller";
			case 0x04:
				return "RAID Controller";
			case 0x05:
				return "ATA Controller";
			case 0x06:
				return "Serial ATA";
			case 0x07:
				return "Serial Attached SCSI";
			case 0x08:
				return "Non-Volatile Memory Controller";
			case 0x80:
				return "Other";
			default:
				return to_hstring(subclassCode);
		}
	}

	const char* SerialBusControllerSubclassName(uint8_t subclassCode){
		switch (subclassCode){
			case 0x00:
				return "FireWire (IEEE 1394) Controller";
			case 0x01:
				return "ACCESS Bus";
			case 0x02:
				return "SSA";
			case 0x03:
				return "USB Controller";
			case 0x04:
				return "Fibre Channel";
			case 0x05:
				return "SMBus";
			case 0x06:
				return "Infiniband";
			case 0x07:
				return "IPMI Interface";
			case 0x08:
				return "SERCOS Interface (IEC 61491)";
			case 0x09:
				return "CANbus";
			case 0x80:
				return "SerialBusController - Other";
			default:
				return to_hstring(subclassCode);
		}
	}

	const char* BridgeDeviceSubclassName(uint8_t subclassCode){
		switch (subclassCode){
			case 0x00:
				return "Host Bridge";
			case 0x01:
				return "ISA Bridge";
			case 0x02:
				return "EISA Bridge";
			case 0x03:
				return "MCA Bridge";
			case 0x04:
				return "PCI-to-PCI Bridge";
			case 0x05:
				return "PCMCIA Bridge";
			case 0x06:
				return "NuBus Bridge";
			case 0x07:
				return "CardBus Bridge";
			case 0x08:
				return "RACEway Bridge";
			case 0x09:
				return "PCI-to-PCI Bridge";
			case 0x0a:
				return "InfiniBand-to-PCI Host Bridge";
			case 0x80:
				return "Other";
			default:
				return to_hstring(subclassCode);
		}
	}

	const char* GetSubclassName(uint8_t classCode, uint8_t subclassCode) {
		switch (classCode) {
			case 0x01: // mass storage controller
				return MassStorageControllerSubclassName(subclassCode);
			case 0x03:
				switch (subclassCode){
					case 0x00:
						return "VGA Compatible Controller";
					default:
						return to_hstring(subclassCode);
				}
			case 0x06:
				return BridgeDeviceSubclassName(subclassCode);
			case 0x0C:
				return SerialBusControllerSubclassName(subclassCode);
			default:
				return to_hstring(subclassCode);
		}
	}
	const char* GetProgIFName(uint8_t classCode, uint8_t subclassCode, uint8_t progIF) {
		uint32_t IF = (((classCode << 8) | subclassCode) << 8) | progIF;
		switch (IF) {
			case 0x010600:
				return "Vendor Specific Interface";
			case 0x010601:
				return "AHCI 1.0";
			case 0x010602:
				return "Serial Storage Bus";
			case 0x030000:
				return "VGA Controller";
			case 0x030001:
				return "8514-Compatible Controller";
			case 0x0C0300:
				return "UHCI Controller";
			case 0x0C0310:
				return "OHCI Controller";
			case 0x0C0320:
				return "EHCI (USB2) Controller";
			case 0x0C0330:
				return "XHCI (USB3) Controller";
			case 0x0C0380:
				return "Unspecified";
			case 0x0C03FE:
				return "USB Device (Not a Host Controller)";
			default:
				return to_hstring(progIF);
		}
	}
}